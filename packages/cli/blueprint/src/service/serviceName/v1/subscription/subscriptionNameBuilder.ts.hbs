import { {{camelCase service.name}}ServiceBuilder } from '../../{{camelCase service.name}}ServiceBuilder'
import { 
  {{camelCase service.name}}V{{service.version}}{{properCase subscriptionName}}InputParameterSchema,
  {{camelCase service.name}}V{{service.version}}{{properCase subscriptionName}}InputPayloadSchema,
  {{camelCase service.name}}V{{service.version}}{{properCase subscriptionName}}OutputPayloadSchema
} from './schema'

export const {{camelCase subscriptionName}}SubscriptionBuilder = {{camelCase service.name}}ServiceBuilder.getSubscriptionBuilder(
  '{{camelCase subscriptionName}}',
  '{{subscriptionDescription}}',
){{#if (isSet subscriptionEventName)}}
  .subscribeToEvent('{{subscriptionEventName}}')
{{/if}}
  .addInputSchema({{camelCase service.name}}V{{service.version}}{{properCase subscriptionName}}InputPayloadSchema)
  .addParameterSchema({{camelCase service.name}}V{{service.version}}{{properCase subscriptionName}}InputParameterSchema)
  .addOutputSchema({{camelCase service.name}}V{{service.version}}{{properCase subscriptionName}}OutputPayloadSchema)
  .setSubscriptionFunction(async function (_context, _payload, _parameter) {
    // add your business logic here
  })
