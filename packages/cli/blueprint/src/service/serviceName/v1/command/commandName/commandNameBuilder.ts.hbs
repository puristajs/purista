import { {{camelCase service.name}}ServiceBuilder } from '../../{{camelCase service.name}}ServiceBuilder'
import { 
  {{camelCase service.name}}V{{service.version}}{{properCase commandName}}InputParameterSchema,
  {{camelCase service.name}}V{{service.version}}{{properCase commandName}}InputPayloadSchema,
  {{camelCase service.name}}V{{service.version}}{{properCase commandName}}OutputPayloadSchema
} from './schema'

export const {{properCase commandName}}CommandBuilder = {{camelCase service.name}}ServiceBuilder.getCommandBuilder(
  '{{camelCase commandName}}',
  '{{commandDescription}}',
){{#if (isSet commandEventName)}}
  .setSuccessEventName('{{commandEventName}}')
{{/if}}
  .addInputSchema({{camelCase service.name}}V{{service.version}}{{properCase commandName}}InputPayloadSchema)
  .addParameterSchema({{camelCase service.name}}V{{service.version}}{{properCase commandName}}InputParameterSchema)
  .addOutputSchema({{camelCase service.name}}V{{service.version}}{{properCase commandName}}OutputPayloadSchema)

  .setFunction(async function (_context, _payload, _parameter) {
    // add your business logic here
  })
