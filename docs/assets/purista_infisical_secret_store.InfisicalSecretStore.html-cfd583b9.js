import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o as i,c,b as e,e as s,w as n,d as t,a as l}from"./app-9aedf0b4.js";const h={},f=e("h1",{id:"class-infisicalsecretstore",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-infisicalsecretstore","aria-hidden":"true"},"#"),t(" Class: InfisicalSecretStore")],-1),p={href:"https://infisical.com/",target:"_blank",rel:"noopener noreferrer"},g=l(`<p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
  url<span class="token operator">:</span> <span class="token string">&#39;redis://alice:foobared@awesome.redis.server:6380&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InfisicalSecretStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span> config <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">setSecret</span><span class="token punctuation">(</span><span class="token string">&#39;mySecret&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getSecret</span><span class="token punctuation">(</span><span class="token string">&#39;mySecret&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment">// outputs: { mySecret: &#39;value&#39; }</span>

<span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">removeSecret</span><span class="token punctuation">(</span><span class="token string">&#39;mySecret&#39;</span><span class="token punctuation">)</span>

value <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getSecret</span><span class="token punctuation">(</span><span class="token string">&#39;mySecret&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment">// outputs: undefined</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hierarchy" tabindex="-1"><a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a> Hierarchy</h2>`,3),u=e("code",null,"SecretStoreBaseClass",-1),m=e("code",null,"InfisicalSecretConfig",-1),y=e("p",null,[t("↳ "),e("strong",null,[e("code",null,"InfisicalSecretStore")])],-1),b=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),x=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),_=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),S=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),v=l('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new InfisicalSecretStore</strong>(<code>config</code>)</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>config</code></td><td style="text-align:left;"><code>Object</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>config.baseUrl</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the base url to be used <strong><code>Example</code></strong> <code>typescript const config = { baseUrl: &#39;http://localhost/api` } // each request will be below http://localhost/api // get(&#39;v1/orders&#39;) will call http://localhost/api/v1/orders </code></td></tr><tr><td style="text-align:left;"><code>config.basicAuth?</code></td><td style="text-align:left;"><code>Object</code></td><td style="text-align:left;">Basic-Auth information</td></tr><tr><td style="text-align:left;"><code>config.basicAuth.password</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Basic-Auth password</td></tr><tr><td style="text-align:left;"><code>config.basicAuth.username</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Basic-Auth username</td></tr><tr><td style="text-align:left;"><code>config.bearerToken</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Auth-Bearer token</td></tr><tr><td style="text-align:left;"><code>config.defaultHeaders?</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</td><td style="text-align:left;">Add your default headers here These headers will be part of every request. They can be overwritten per request option</td></tr><tr><td style="text-align:left;"><code>config.defaultTimeout?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">set global timeout for requests in ms <strong><code>Default</code></strong> <code>ts 30000 </code></td></tr><tr><td style="text-align:left;"><code>config.enableGet?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Enable generally get method</td></tr><tr><td style="text-align:left;"><code>config.enableOpentelemetry?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">enable Opentelemetry tracing. The client will be handled as own ressource.</td></tr><tr><td style="text-align:left;"><code>config.enableRemove?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Enable generally remove method</td></tr><tr><td style="text-align:left;"><code>config.enableSet?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Enable generally set method</td></tr><tr><td style="text-align:left;"><code>config.isKeepAlive?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">If set to false, the HTTP client will not reuse the same connection for multiple requests. Default is true.</td></tr><tr><td style="text-align:left;"><code>config.logLevel?</code></td><td style="text-align:left;"><code>LogLevelName</code></td><td style="text-align:left;">A log level for new logger if logger is not set</td></tr><tr><td style="text-align:left;"><code>config.logger?</code></td><td style="text-align:left;"><code>Logger</code></td><td style="text-align:left;">A logger instance</td></tr><tr><td style="text-align:left;"><code>config.name?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Name of the client</td></tr><tr><td style="text-align:left;"><code>config.spanProcessor?</code></td><td style="text-align:left;"><code>SpanProcessor</code></td><td style="text-align:left;">Opentelemetry span processor</td></tr></tbody></table><h4 id="overrides" tabindex="-1"><a class="header-anchor" href="#overrides" aria-hidden="true">#</a> Overrides</h4><p>SecretStoreBaseClass&lt;InfisicalSecretConfig&amp;gt;.constructor</p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',8),k={href:"https://github.com/sebastianwessel/purista/blob/master/packages/infisical-secret-store/src/InfisicalSecretStore.impl.ts#L31",target:"_blank",rel:"noopener noreferrer"},w=e("h2",{id:"properties-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties-1","aria-hidden":"true"},"#"),t(" Properties")],-1),I=e("h3",{id:"client",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#client","aria-hidden":"true"},"#"),t(" client")],-1),A=e("strong",null,"client",-1),B=e("code",null,"InfisicalClient",-1),T=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),C={href:"https://github.com/sebastianwessel/purista/blob/master/packages/infisical-secret-store/src/InfisicalSecretStore.impl.ts#L29",target:"_blank",rel:"noopener noreferrer"},P=l('<hr><h3 id="config" tabindex="-1"><a class="header-anchor" href="#config" aria-hidden="true">#</a> config</h3><p>• <strong>config</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>baseUrl</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the base url to be used <strong><code>Example</code></strong> <code>typescript const config = { baseUrl: &#39;http://localhost/api` } // each request will be below http://localhost/api // get(&#39;v1/orders&#39;) will call http://localhost/api/v1/orders </code></td></tr><tr><td style="text-align:left;"><code>basicAuth?</code></td><td style="text-align:left;">{ <code>password</code>: <code>string</code> ; <code>username</code>: <code>string</code> }</td><td style="text-align:left;">Basic-Auth information</td></tr><tr><td style="text-align:left;"><code>basicAuth.password</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Basic-Auth password</td></tr><tr><td style="text-align:left;"><code>basicAuth.username</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Basic-Auth username</td></tr><tr><td style="text-align:left;"><code>bearerToken</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Auth-Bearer token</td></tr><tr><td style="text-align:left;"><code>defaultHeaders?</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</td><td style="text-align:left;">Add your default headers here These headers will be part of every request. They can be overwritten per request option</td></tr><tr><td style="text-align:left;"><code>defaultTimeout?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">set global timeout for requests in ms <strong><code>Default</code></strong> <code>ts 30000 </code></td></tr><tr><td style="text-align:left;"><code>enableGet?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Enable generally get method</td></tr><tr><td style="text-align:left;"><code>enableOpentelemetry?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">enable Opentelemetry tracing. The client will be handled as own ressource.</td></tr><tr><td style="text-align:left;"><code>enableRemove?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Enable generally remove method</td></tr><tr><td style="text-align:left;"><code>enableSet?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Enable generally set method</td></tr><tr><td style="text-align:left;"><code>isKeepAlive?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">If set to false, the HTTP client will not reuse the same connection for multiple requests. Default is true.</td></tr><tr><td style="text-align:left;"><code>logLevel?</code></td><td style="text-align:left;"><code>LogLevelName</code></td><td style="text-align:left;">A log level for new logger if logger is not set</td></tr><tr><td style="text-align:left;"><code>logger?</code></td><td style="text-align:left;"><code>Logger</code></td><td style="text-align:left;">A logger instance</td></tr><tr><td style="text-align:left;"><code>name?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Name of the client</td></tr><tr><td style="text-align:left;"><code>spanProcessor?</code></td><td style="text-align:left;"><code>SpanProcessor</code></td><td style="text-align:left;">Opentelemetry span processor</td></tr></tbody></table><h4 id="inherited-from" tabindex="-1"><a class="header-anchor" href="#inherited-from" aria-hidden="true">#</a> Inherited from</h4><p>SecretStoreBaseClass.config</p><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/SecretStore/SecretStoreBaseClass.impl.d.ts:10</p><hr><h3 id="logger" tabindex="-1"><a class="header-anchor" href="#logger" aria-hidden="true">#</a> logger</h3><p>• <strong>logger</strong>: <code>Logger</code></p><h4 id="inherited-from-1" tabindex="-1"><a class="header-anchor" href="#inherited-from-1" aria-hidden="true">#</a> Inherited from</h4><p>SecretStoreBaseClass.logger</p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/SecretStore/SecretStoreBaseClass.impl.d.ts:9</p><hr><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> name</h3><p>• <strong>name</strong>: <code>string</code></p><h4 id="inherited-from-2" tabindex="-1"><a class="header-anchor" href="#inherited-from-2" aria-hidden="true">#</a> Inherited from</h4><p>SecretStoreBaseClass.name</p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/SecretStore/SecretStoreBaseClass.impl.d.ts:11</p><h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="destroy" tabindex="-1"><a class="header-anchor" href="#destroy" aria-hidden="true">#</a> destroy</h3><p>▸ <strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="inherited-from-3" tabindex="-1"><a class="header-anchor" href="#inherited-from-3" aria-hidden="true">#</a> Inherited from</h4><p>SecretStoreBaseClass.destroy</p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/SecretStore/SecretStoreBaseClass.impl.d.ts:16</p><hr><h3 id="getsecret" tabindex="-1"><a class="header-anchor" href="#getsecret" aria-hidden="true">#</a> getSecret</h3><p>▸ <strong>getSecret</strong>(<code>...secretNames</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>undefined</code> | <code>string</code>&gt;&gt;</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...secretNames</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>undefined</code> | <code>string</code>&gt;&gt;</p><h4 id="overrides-1" tabindex="-1"><a class="header-anchor" href="#overrides-1" aria-hidden="true">#</a> Overrides</h4><p>SecretStoreBaseClass.getSecret</p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4>',42),N={href:"https://github.com/sebastianwessel/purista/blob/master/packages/infisical-secret-store/src/InfisicalSecretStore.impl.ts#L41",target:"_blank",rel:"noopener noreferrer"},L=l('<hr><h3 id="removesecret" tabindex="-1"><a class="header-anchor" href="#removesecret" aria-hidden="true">#</a> removeSecret</h3><p>▸ <strong>removeSecret</strong>(<code>secretName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="overrides-2" tabindex="-1"><a class="header-anchor" href="#overrides-2" aria-hidden="true">#</a> Overrides</h4><p>SecretStoreBaseClass.removeSecret</p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>',10),D={href:"https://github.com/sebastianwessel/purista/blob/master/packages/infisical-secret-store/src/InfisicalSecretStore.impl.ts#L59",target:"_blank",rel:"noopener noreferrer"},O=l('<hr><h3 id="setsecret" tabindex="-1"><a class="header-anchor" href="#setsecret" aria-hidden="true">#</a> setSecret</h3><p>▸ <strong>setSecret</strong>(<code>secretName</code>, <code>configValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>configValue</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="overrides-3" tabindex="-1"><a class="header-anchor" href="#overrides-3" aria-hidden="true">#</a> Overrides</h4><p>SecretStoreBaseClass.setSecret</p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4>',10),R={href:"https://github.com/sebastianwessel/purista/blob/master/packages/infisical-secret-store/src/InfisicalSecretStore.impl.ts#L73",target:"_blank",rel:"noopener noreferrer"};function E(q,V){const a=d("RouterLink"),r=d("ExternalLinkIcon");return i(),c("div",null,[e("p",null,[s(a,{to:"/api/"},{default:n(()=>[t("PURISTA API")]),_:1}),t(" / "),s(a,{to:"/api/modules.html"},{default:n(()=>[t("Modules")]),_:1}),t(" / "),s(a,{to:"/api/modules/purista_infisical_secret_store.html"},{default:n(()=>[t("@purista/infisical-secret-store")]),_:1}),t(" / InfisicalSecretStore")]),f,e("p",null,[s(a,{to:"/api/modules/purista_infisical_secret_store.html"},{default:n(()=>[t("@purista/infisical-secret-store")]),_:1}),t(".InfisicalSecretStore")]),e("p",null,[t("A secret store for using "),e("a",p,[t("Infisical"),s(r)]),t(" as storage.")]),g,e("ul",null,[e("li",null,[e("p",null,[u,t("<"),s(a,{to:"/api/modules/purista_infisical_secret_store.html#infisicalsecretconfig"},{default:n(()=>[m]),_:1}),t(">")]),y])]),b,x,e("ul",null,[e("li",null,[s(a,{to:"/api/classes/purista_infisical_secret_store.InfisicalSecretStore.html#constructor"},{default:n(()=>[t("constructor")]),_:1})])]),_,e("ul",null,[e("li",null,[s(a,{to:"/api/classes/purista_infisical_secret_store.InfisicalSecretStore.html#client"},{default:n(()=>[t("client")]),_:1})]),e("li",null,[s(a,{to:"/api/classes/purista_infisical_secret_store.InfisicalSecretStore.html#config"},{default:n(()=>[t("config")]),_:1})]),e("li",null,[s(a,{to:"/api/classes/purista_infisical_secret_store.InfisicalSecretStore.html#logger"},{default:n(()=>[t("logger")]),_:1})]),e("li",null,[s(a,{to:"/api/classes/purista_infisical_secret_store.InfisicalSecretStore.html#name"},{default:n(()=>[t("name")]),_:1})])]),S,e("ul",null,[e("li",null,[s(a,{to:"/api/classes/purista_infisical_secret_store.InfisicalSecretStore.html#destroy"},{default:n(()=>[t("destroy")]),_:1})]),e("li",null,[s(a,{to:"/api/classes/purista_infisical_secret_store.InfisicalSecretStore.html#getsecret"},{default:n(()=>[t("getSecret")]),_:1})]),e("li",null,[s(a,{to:"/api/classes/purista_infisical_secret_store.InfisicalSecretStore.html#removesecret"},{default:n(()=>[t("removeSecret")]),_:1})]),e("li",null,[s(a,{to:"/api/classes/purista_infisical_secret_store.InfisicalSecretStore.html#setsecret"},{default:n(()=>[t("setSecret")]),_:1})])]),v,e("p",null,[e("a",k,[t("infisical-secret-store/src/InfisicalSecretStore.impl.ts:31"),s(r)])]),w,I,e("p",null,[t("• "),A,t(": "),s(a,{to:"/api/classes/purista_infisical_secret_store.InfisicalClient.html"},{default:n(()=>[B]),_:1})]),T,e("p",null,[e("a",C,[t("infisical-secret-store/src/InfisicalSecretStore.impl.ts:29"),s(r)])]),P,e("p",null,[e("a",N,[t("infisical-secret-store/src/InfisicalSecretStore.impl.ts:41"),s(r)])]),L,e("p",null,[e("a",D,[t("infisical-secret-store/src/InfisicalSecretStore.impl.ts:59"),s(r)])]),O,e("p",null,[e("a",R,[t("infisical-secret-store/src/InfisicalSecretStore.impl.ts:73"),s(r)])])])}const j=o(h,[["render",E],["__file","purista_infisical_secret_store.InfisicalSecretStore.html.vue"]]);export{j as default};
