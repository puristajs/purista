import{_ as e,c as t,o,V as a}from"./chunks/framework.ITQiifkM.js";const u=JSON.parse('{"title":"Module: @purista/base-http-bridge","description":"","frontmatter":{},"headers":[],"relativePath":"api/modules/purista_base_http_bridge.md","filePath":"api/modules/purista_base_http_bridge.md","lastUpdated":1708505616000}'),d={name:"api/modules/purista_base_http_bridge.md"},r=a('<p><a href="./../README.html">PURISTA API</a> / <a href="./../modules.html">Modules</a> / @purista/base-http-bridge</p><h1 id="module-purista-base-http-bridge" tabindex="-1">Module: @purista/base-http-bridge <a class="header-anchor" href="#module-purista-base-http-bridge" aria-label="Permalink to &quot;Module: @purista/base-http-bridge&quot;">​</a></h1><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes&quot;">​</a></h3><ul><li><a href="./../classes/purista_base_http_bridge.HttpEventBridge.html">HttpEventBridge</a></li></ul><h3 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h3><ul><li><a href="./../interfaces/purista_base_http_bridge.HttpEventBridgeClient.html">HttpEventBridgeClient</a></li></ul><h3 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h3><ul><li><a href="./purista_base_http_bridge.html#httpeventbridgeconfig">HttpEventBridgeConfig</a></li><li><a href="./purista_base_http_bridge.html#routerfunction">RouterFunction</a></li></ul><h3 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-label="Permalink to &quot;Variables&quot;">​</a></h3><ul><li><a href="./purista_base_http_bridge.html#puristaversion">puristaVersion</a></li></ul><h3 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h3><ul><li><a href="./purista_base_http_bridge.html#getdefaulthttpeventbridgeconfig">getDefaultHttpEventBridgeConfig</a></li></ul><h2 id="type-aliases-1" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases-1" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><h3 id="httpeventbridgeconfig" tabindex="-1">HttpEventBridgeConfig <a class="header-anchor" href="#httpeventbridgeconfig" aria-label="Permalink to &quot;HttpEventBridgeConfig&quot;">​</a></h3><p>Ƭ <strong>HttpEventBridgeConfig</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>apiPrefix?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the prefix to be used if the command is configured as REST api endpoint according to the OpenAPI defintion needs to <code>enableRestApiExpose</code> set to <code>true</code> <strong><code>Default</code></strong> <code>ts /api </code></td></tr><tr><td style="text-align:left;"><code>commandPayloadAsCloudEvent?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">command invocations are wrapped in CloudEvent <strong><code>Link</code></strong> <a href="https://github.com/cloudevents/spec/tree/v1.0" target="_blank" rel="noreferrer">https://github.com/cloudevents/spec/tree/v1.0</a> <strong><code>Default</code></strong> <code>ts false </code></td></tr><tr><td style="text-align:left;"><code>enableHttpCompression?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">enable HTTP compression in web server <strong><code>Default</code></strong> <code>ts true </code></td></tr><tr><td style="text-align:left;"><code>enableRestApiExpose?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">expose commands as regular REST endpoints when they are configured as endpoints <strong><code>Default</code></strong> <code>ts true </code></td></tr><tr><td style="text-align:left;"><code>name?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">name of the bridge <strong><code>Default</code></strong> <code>ts HttpEventBridge </code></td></tr><tr><td style="text-align:left;"><code>pathPrefix?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the prefix to be used for exposing commands as endpoints expecting a event bus message <strong><code>Default</code></strong> <code>ts purista </code></td></tr><tr><td style="text-align:left;"><code>serve</code></td><td style="text-align:left;">(<code>options</code>: { <code>fetch</code>: (<code>request</code>: <code>Request</code>) =&gt; <code>Promise</code>&lt;<code>unknown</code>&gt; | <code>unknown</code> ; <code>hostname?</code>: <code>string</code> ; <code>port?</code>: <code>number</code> }) =&gt; <code>Server</code> | <code>Http2Server</code> | <code>Http2SecureServer</code></td><td style="text-align:left;">The serve function is depending on the runtime. - Bun: <code>Bun.serve</code> - Node.js: <code>serve</code> function from additional package <code>@hono/hono-node-server</code> - Deno: <code>serve</code> function from package <code>https://deno.land/std/http/server.ts</code> <strong><code>See</code></strong> <a href="https://hono.dev" target="_blank" rel="noreferrer">https://hono.dev</a></td></tr><tr><td style="text-align:left;"><code>serverHost?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Host of the server. <strong><code>Default</code></strong> <code>ts 127.0.0.1 </code></td></tr><tr><td style="text-align:left;"><code>serverPort?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Port of the server. <strong><code>Default</code></strong> <code>ts 8080 </code></td></tr><tr><td style="text-align:left;"><code>subscriptionPayloadAsCloudEvent?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">subscription invocations are wrapped in CloudEvent <strong><code>Link</code></strong> <a href="https://github.com/cloudevents/spec/tree/v1.0" target="_blank" rel="noreferrer">https://github.com/cloudevents/spec/tree/v1.0</a> <strong><code>Default</code></strong> <code>ts false </code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/base-http-bridge/src/HttpEventBridge/types/HttpEventBridgeConfig.ts#L4" target="_blank" rel="noreferrer">base-http-bridge/src/HttpEventBridge/types/HttpEventBridgeConfig.ts:4</a></p><hr><h3 id="routerfunction" tabindex="-1">RouterFunction <a class="header-anchor" href="#routerfunction" aria-label="Permalink to &quot;RouterFunction&quot;">​</a></h3><p>Ƭ <strong>RouterFunction</strong>&lt;<code>T</code>&gt;: (<code>this</code>: <code>T</code>, <code>c</code>: <code>Context</code>) =&gt; <code>Promise</code>&lt;<code>Response</code>&gt;</p><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <a href="./../classes/purista_base_http_bridge.HttpEventBridge.html"><code>HttpEventBridge</code></a>&lt;<a href="./purista_base_http_bridge.html#httpeventbridgeconfig"><code>HttpEventBridgeConfig</code></a>&gt; = <a href="./../classes/purista_base_http_bridge.HttpEventBridge.html"><code>HttpEventBridge</code></a>&lt;<a href="./purista_base_http_bridge.html#httpeventbridgeconfig"><code>HttpEventBridgeConfig</code></a>&gt;</td></tr></tbody></table><h4 id="type-declaration-1" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-1" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (<code>this</code>, <code>c</code>): <code>Promise</code>&lt;<code>Response</code>&gt;</p><h5 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>this</code></td><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>c</code></td><td style="text-align:left;"><code>Context</code></td></tr></tbody></table><h5 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>Promise</code>&lt;<code>Response</code>&gt;</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/base-http-bridge/src/HttpEventBridge/types/RouterFunction.ts#L6" target="_blank" rel="noreferrer">base-http-bridge/src/HttpEventBridge/types/RouterFunction.ts:6</a></p><h2 id="variables-1" tabindex="-1">Variables <a class="header-anchor" href="#variables-1" aria-label="Permalink to &quot;Variables&quot;">​</a></h2><h3 id="puristaversion" tabindex="-1">puristaVersion <a class="header-anchor" href="#puristaversion" aria-label="Permalink to &quot;puristaVersion&quot;">​</a></h3><p>• <code>Const</code> <strong>puristaVersion</strong>: <code>&quot;1.10.8&quot;</code></p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/base-http-bridge/src/version.ts#L1" target="_blank" rel="noreferrer">base-http-bridge/src/version.ts:1</a></p><h2 id="functions-1" tabindex="-1">Functions <a class="header-anchor" href="#functions-1" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="getdefaulthttpeventbridgeconfig" tabindex="-1">getDefaultHttpEventBridgeConfig <a class="header-anchor" href="#getdefaulthttpeventbridgeconfig" aria-label="Permalink to &quot;getDefaultHttpEventBridgeConfig&quot;">​</a></h3><p>▸ <strong>getDefaultHttpEventBridgeConfig</strong>(): <code>Object</code></p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>apiPrefix?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the prefix to be used if the command is configured as REST api endpoint according to the OpenAPI defintion needs to <code>enableRestApiExpose</code> set to <code>true</code> <strong><code>Default</code></strong> <code>ts /api </code></td></tr><tr><td style="text-align:left;"><code>commandPayloadAsCloudEvent?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">command invocations are wrapped in CloudEvent <strong><code>Link</code></strong> <a href="https://github.com/cloudevents/spec/tree/v1.0" target="_blank" rel="noreferrer">https://github.com/cloudevents/spec/tree/v1.0</a> <strong><code>Default</code></strong> <code>ts false </code></td></tr><tr><td style="text-align:left;"><code>defaultCommandTimeout?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Overwrite the hardcoded default timeout of command invocations</td></tr><tr><td style="text-align:left;"><code>enableHttpCompression?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">enable HTTP compression in web server <strong><code>Default</code></strong> <code>ts true </code></td></tr><tr><td style="text-align:left;"><code>enableRestApiExpose?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">expose commands as regular REST endpoints when they are configured as endpoints <strong><code>Default</code></strong> <code>ts true </code></td></tr><tr><td style="text-align:left;"><code>instanceId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The instance id of the event bridge. If not set, a id will generated each time a instance is created. Use this if there is a need to always have the same instance id.</td></tr><tr><td style="text-align:left;"><code>logLevel?</code></td><td style="text-align:left;"><a href="./purista_core.html#loglevelname"><code>LogLevelName</code></a></td><td style="text-align:left;">If no logger instance is given, use this log level</td></tr><tr><td style="text-align:left;"><code>logger?</code></td><td style="text-align:left;"><a href="./../classes/purista_core.Logger.html"><code>Logger</code></a></td><td style="text-align:left;">A logger instance</td></tr><tr><td style="text-align:left;"><code>name?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">name of the bridge <strong><code>Default</code></strong> <code>ts HttpEventBridge </code></td></tr><tr><td style="text-align:left;"><code>pathPrefix?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the prefix to be used for exposing commands as endpoints expecting a event bus message <strong><code>Default</code></strong> <code>ts purista </code></td></tr><tr><td style="text-align:left;"><code>serverHost?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Host of the server. <strong><code>Default</code></strong> <code>ts 127.0.0.1 </code></td></tr><tr><td style="text-align:left;"><code>serverPort?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Port of the server. <strong><code>Default</code></strong> <code>ts 8080 </code></td></tr><tr><td style="text-align:left;"><code>spanProcessor?</code></td><td style="text-align:left;"><code>SpanProcessor</code></td><td style="text-align:left;">A OpenTelemetry span processor</td></tr><tr><td style="text-align:left;"><code>subscriptionPayloadAsCloudEvent?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">subscription invocations are wrapped in CloudEvent <strong><code>Link</code></strong> <a href="https://github.com/cloudevents/spec/tree/v1.0" target="_blank" rel="noreferrer">https://github.com/cloudevents/spec/tree/v1.0</a> <strong><code>Default</code></strong> <code>ts false </code></td></tr></tbody></table><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/base-http-bridge/src/HttpEventBridge/getDefaultHttpEventBridgeConfig.impl.ts#L5" target="_blank" rel="noreferrer">base-http-bridge/src/HttpEventBridge/getDefaultHttpEventBridgeConfig.impl.ts:5</a></p>',46),s=[r];function n(l,i,c,g,h,p){return o(),t("div",null,s)}const b=e(d,[["render",n]]);export{u as __pageData,b as default};
