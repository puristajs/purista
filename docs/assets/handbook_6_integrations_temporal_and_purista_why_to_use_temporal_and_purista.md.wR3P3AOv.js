import{_ as t,c as o,o as i,ag as a}from"./chunks/framework.U_AETC1W.js";const d=JSON.parse('{"title":"Motivation","description":"Motivation and benefits to combine PURISTA application with Temporal.","frontmatter":{"title":"Motivation","description":"Motivation and benefits to combine PURISTA application with Temporal.","order":601001},"headers":[],"relativePath":"handbook/6_integrations/temporal_and_purista/why_to_use_temporal_and_purista.md","filePath":"handbook/6_integrations/temporal_and_purista/why_to_use_temporal_and_purista.md","lastUpdated":1708679045000}'),n={name:"handbook/6_integrations/temporal_and_purista/why_to_use_temporal_and_purista.md"};function r(s,e,l,p,c,_){return i(),o("div",null,e[0]||(e[0]=[a('<h1 id="motivation" tabindex="-1">Motivation <a class="header-anchor" href="#motivation" aria-label="Permalink to &quot;Motivation&quot;">â€‹</a></h1><p>Applications built with PURISTA are highly flexible.<br> With PURISTA, it&#39;s easy to create complex processes.</p><p>However, there&#39;s a limitation: it&#39;s only suitable for building processes where an action immediately triggers a reaction.</p><p>If your business logic involves processes that depend on time or need to wait for specific conditions, you&#39;ll require a third-party solution. Depending on your specific needs, using something like Redis or <a href="https://bullmq.io" target="_blank" rel="noreferrer">BullMQ</a> might suffice.</p><p>Another option is <a href="https://temporal.io" target="_blank" rel="noreferrer">Temporal</a>, which is an excellent product. It allows you to define complex processes known as workflows. These workflows consist of activities, which are essentially individual steps within the process. For example, a workflow can execute one activity, then wait for a certain period before proceeding to the next activity, or it can wait for a signal before continuing.</p><p>The activity represents the actual implementation of a single step within the workflow, while the workflow defines the overall process flow. If an activity can be transformed into a PURISTA command, you can orchestrate PURISTA commands within workflows.</p><p>This opens up a whole new range of possibilities.</p>',7)]))}const m=t(n,[["render",r]]);export{d as __pageData,m as default};
