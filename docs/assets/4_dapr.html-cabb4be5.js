import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as r,c as i,b as e,d as n,e as a,a as p}from"./app-ccf1f840.js";const l="/graphic/dapr.svg",c={},d=e("h2",{id:"dapr-core-concept",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#dapr-core-concept","aria-hidden":"true"},"#"),n(" Dapr core concept")],-1),u=e("p",null,[n("Deployments to Dapr as similar to Kubernetes deployments."),e("br"),n(" Your single services are deployed as container (pod) on a Kubernetes cluster."),e("br"),n(" On plain Kubernetes deployments, the event bridge of a service is directly connected to the message broker."),e("br"),n(" If you are on a Dapr infrastructure, Dapr will automatically add a sidecar container to your service instance."),e("br"),n(" The whole communication from and to your service is passed through this sidecar container.")],-1),m=e("p",null,"Dapr also provides some abstraction and adapters for config, state and secret stores.",-1),v={href:"https://dapr.io/",target:"_blank",rel:"noopener noreferrer"},k=e("p",null,[e("img",{src:l,alt:"single instance"})],-1),h=e("h2",{id:"prepare-your-code",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prepare-your-code","aria-hidden":"true"},"#"),n(" Prepare your code")],-1),b=e("p",null,[n("Similar to Kubernetes deployments, a http server must be provided by your service instance."),e("br"),n(" The "),e("code",null,"@purista/dapr-sdk"),n(" package provides an event bridge which working as HTTP server. In addition, adapters for config, state and secrets stores are available.")],-1),y={href:"https://github.com/sebastianwessel/purista/tree/master/examples/dapr-example",target:"_blank",rel:"noopener noreferrer"},f=e("br",null,null,-1),_=p(`<h3 id="kubernetes-deployment-file" tabindex="-1"><a class="header-anchor" href="#kubernetes-deployment-file" aria-hidden="true">#</a> Kubernetes deployment file</h3><p>The deployment of an application or service follows teh regular Kubernetes deployment.<br> The only difference here is, to provide the information, required by Dapr to work properly.</p><p>Dapr requires to have a unique app-ID for a service defined in the deployment.<br> This id match the pattern <code>[prefix-][convertToKebabCase(service-name)]-v[convertToKebabCase(service version)]</code>.<br> If the app-ID does not follow this pattern, PURISTA services might be not able to invoke commands or subscribe to events correctly</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># file order-service-deployment.yaml</span>
<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> purista<span class="token punctuation">-</span>order<span class="token punctuation">-</span>service<span class="token punctuation">-</span>deployment
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">3</span>
  <span class="token key atrule">selector</span><span class="token punctuation">:</span>
    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>
      <span class="token key atrule">app</span><span class="token punctuation">:</span> purista<span class="token punctuation">-</span>order<span class="token punctuation">-</span>service
  <span class="token key atrule">template</span><span class="token punctuation">:</span>
    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>
      <span class="token comment"># We add the annotations below to let Dapr recognize</span>
      <span class="token comment"># and deploy the sidecar together with our service in the pod.</span>
      <span class="token key atrule">annotations</span><span class="token punctuation">:</span>
        <span class="token key atrule">dapr.io/enabled</span><span class="token punctuation">:</span> <span class="token string">&quot;true&quot;</span>
        <span class="token comment"># The client service will use this name to locate</span>
        <span class="token comment"># the Order service through the Dapr sidecar.</span>
        <span class="token key atrule">dapr.io/app-id</span><span class="token punctuation">:</span> <span class="token string">&quot;purista-order-v1&quot;</span>
        <span class="token comment"># The port that your application is listening on</span>
        <span class="token key atrule">dapr.io/app-port</span><span class="token punctuation">:</span> <span class="token string">&quot;3000&quot;</span>
      <span class="token key atrule">labels</span><span class="token punctuation">:</span>
        <span class="token key atrule">app</span><span class="token punctuation">:</span> purista<span class="token punctuation">-</span>order<span class="token punctuation">-</span>service
    <span class="token key atrule">spec</span><span class="token punctuation">:</span>
      <span class="token key atrule">containers</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> purista<span class="token punctuation">-</span>order<span class="token punctuation">-</span>service
          <span class="token key atrule">image</span><span class="token punctuation">:</span> example/dapr<span class="token punctuation">-</span>example<span class="token punctuation">-</span>purista<span class="token punctuation">-</span>order<span class="token punctuation">-</span>service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="limitations" tabindex="-1"><a class="header-anchor" href="#limitations" aria-hidden="true">#</a> Limitations</h3><p>Dapr provides some additional functionality, like the concept of actors or bulk messageing. Currently these functionalities are not supported by the <code>@purista/dapr-sdk</code></p><p>It is also not possible to deploy multiple services or service versions in one container (pod). Each service/service-version must be deployed independently.</p>`,7),g={href:"https://twitter.com/purista_js",target:"_blank",rel:"noopener noreferrer"},x={href:"https://discord.gg/9feaUm3H2v",target:"_blank",rel:"noopener noreferrer"};function T(D,w){const s=o("ExternalLinkIcon");return r(),i("div",null,[d,u,m,e("p",null,[n("To learn more about Dapr, visit the official site "),e("strong",null,[e("a",v,[n("dapr.io"),a(s)])]),n(".")]),k,h,b,e("p",null,[n("You can find an example in the "),e("a",y,[n("PURISTA repository"),a(s)]),n("."),f,n(" This example also contains the usage of the Dapr config store, secret store and state store.")]),_,e("p",null,[e("strong",null,[n("You can follow updated on Twitter "),e("a",g,[n("@purista_js"),a(s)]),n(" or join the "),e("a",x,[n("Discord server"),a(s)]),n(" to get in touch with PURISTA maintainers and other developers.")])])])}const K=t(c,[["render",T],["__file","4_dapr.html.vue"]]);export{K as default};
