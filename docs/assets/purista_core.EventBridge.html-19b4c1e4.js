import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as l,c,b as e,e as s,w as o,d as t,a as i}from"./app-9aedf0b4.js";const h={},_=e("h1",{id:"interface-eventbridge",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#interface-eventbridge","aria-hidden":"true"},"#"),t(" Interface: EventBridge")],-1),u=e("p",null,"Event bridge interface The event bridge must implement this interface.",-1),g=e("h2",{id:"implemented-by",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implemented-by","aria-hidden":"true"},"#"),t(" Implemented by")],-1),p=e("code",null,"DefaultEventBridge",-1),m=e("code",null,"DefaultEventBridge",-1),f=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),b=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),y=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),v=i('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="defaultcommandtimeout" tabindex="-1"><a class="header-anchor" href="#defaultcommandtimeout" aria-hidden="true">#</a> defaultCommandTimeout</h3><p>• <code>Readonly</code> <strong>defaultCommandTimeout</strong>: <code>number</code></p><p>The default time until when a command invocation automatically returns a time out error</p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',5),x={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L26",target:"_blank",rel:"noopener noreferrer"},E=e("hr",null,null,-1),B=e("h3",{id:"instanceid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#instanceid","aria-hidden":"true"},"#"),t(" instanceId")],-1),k=e("p",null,[t("• "),e("code",null,"Readonly"),t(),e("strong",null,"instanceId"),t(": "),e("code",null,"string")],-1),T=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),I={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L22",target:"_blank",rel:"noopener noreferrer"},P=e("hr",null,null,-1),w=e("h3",{id:"name",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#name","aria-hidden":"true"},"#"),t(" name")],-1),R=e("p",null,[t("• "),e("code",null,"Readonly"),t(),e("strong",null,"name"),t(": "),e("code",null,"string")],-1),D=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),C={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L20",target:"_blank",rel:"noopener noreferrer"},M=i('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="destroy" tabindex="-1"><a class="header-anchor" href="#destroy" aria-hidden="true">#</a> destroy</h3><p>▸ <strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Shut down event bridge as gracefully as possible</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4>',7),N={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L99",target:"_blank",rel:"noopener noreferrer"},L=e("hr",null,null,-1),S=e("h3",{id:"emitmessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#emitmessage","aria-hidden":"true"},"#"),t(" emitMessage")],-1),V=e("strong",null,"emitMessage",-1),A=e("code",null,"message",-1),O=e("code",null,"Promise",-1),H=e("code",null,"Readonly",-1),U=e("code",null,"EBMessage",-1),j=e("p",null,"Emit a message to the eventbridge without awaiting a result",-1),q=e("h4",{id:"parameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters","aria-hidden":"true"},"#"),t(" Parameters")],-1),z=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),F=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),G={style:{"text-align":"left"}},J=e("code",null,"Omit",-1),K=e("code",null,"EBMessage",-1),Q=e("code",null,'"id"',-1),W=e("code",null,'"correlationId"',-1),X=e("code",null,'"timestamp"',-1),Y=e("td",{style:{"text-align":"left"}},"the message",-1),Z=e("h4",{id:"returns-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-1","aria-hidden":"true"},"#"),t(" Returns")],-1),$=e("code",null,"Promise",-1),ee=e("code",null,"Readonly",-1),te=e("code",null,"EBMessage",-1),se=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),ne={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L37",target:"_blank",rel:"noopener noreferrer"},oe=i('<hr><h3 id="invoke" tabindex="-1"><a class="header-anchor" href="#invoke" aria-hidden="true">#</a> invoke</h3><p>▸ <strong>invoke</strong>&lt;<code>T</code>&gt;(<code>input</code>, <code>ttl?</code>): <code>Promise</code>&lt;<code>T</code>&gt;</p><p>Call a command of a service and return the result of this command</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4>',7),de=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),ie=e("td",{style:{"text-align":"left"}},[e("code",null,"input")],-1),re={style:{"text-align":"left"}},ae=e("code",null,"Omit",-1),le=e("code",null,"contentEncoding",-1),ce=e("code",null,"string",-1),he=e("code",null,"contentType",-1),_e=e("code",null,"string",-1),ue=e("code",null,"correlationId",-1),ge=e("code",null,"string",-1),pe=e("code",null,"eventName?",-1),me=e("code",null,"string",-1),fe=e("code",null,"id",-1),be=e("code",null,"string",-1),ye=e("code",null,"messageType",-1),ve=e("code",null,"Command",-1),xe=e("code",null,"otp?",-1),Ee=e("code",null,"string",-1),Be=e("code",null,"payload",-1),ke=e("code",null,"parameter",-1),Te=e("code",null,"unknown",-1),Ie=e("code",null,"payload",-1),Pe=e("code",null,"unknown",-1),we=e("code",null,"principalId?",-1),Re=e("code",null,"string",-1),De=e("code",null,"receiver",-1),Ce=e("code",null,"EBMessageAddress",-1),Me=e("code",null,"sender",-1),Ne=e("code",null,"timestamp",-1),Le=e("code",null,"number",-1),Se=e("code",null,"traceId?",-1),Ve=e("code",null,"string",-1),Ae=e("code",null,'"id"',-1),Oe=e("code",null,'"messageType"',-1),He=e("code",null,'"correlationId"',-1),Ue=e("code",null,'"timestamp"',-1),je=e("td",{style:{"text-align":"left"}},"a partial command message",-1),qe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"ttl?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"the time to live (timeout) of the invocation")],-1),ze=e("h4",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),t(" Returns")],-1),Fe=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"T"),t(">")],-1),Ge=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),Je={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L46",target:"_blank",rel:"noopener noreferrer"},Ke=i('<hr><h3 id="ishealthy" tabindex="-1"><a class="header-anchor" href="#ishealthy" aria-hidden="true">#</a> isHealthy</h3><p>▸ <strong>isHealthy</strong>(): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>Indicates if the eventbridge is running and works correctly</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4>',7),Qe={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L94",target:"_blank",rel:"noopener noreferrer"},We=i('<hr><h3 id="isready" tabindex="-1"><a class="header-anchor" href="#isready" aria-hidden="true">#</a> isReady</h3><p>▸ <strong>isReady</strong>(): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>Indicates if the eventbridge has been started and is connected to underlaying message broker</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>',7),Xe={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L89",target:"_blank",rel:"noopener noreferrer"},Ye=i('<hr><h3 id="registercommand" tabindex="-1"><a class="header-anchor" href="#registercommand" aria-hidden="true">#</a> registerCommand</h3><p>▸ <strong>registerCommand</strong>(<code>address</code>, <code>cb</code>, <code>metadata</code>, <code>eventBridgeConfig</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4>',4),Ze=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),$e=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),et={style:{"text-align":"left"}},tt=e("code",null,"EBMessageAddress",-1),st=e("td",{style:{"text-align":"left"}},"the address of the service command (service name, version and command name)",-1),nt=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),ot={style:{"text-align":"left"}},dt=e("code",null,"message",-1),it=e("code",null,"contentEncoding",-1),rt=e("code",null,"string",-1),at=e("code",null,"contentType",-1),lt=e("code",null,"string",-1),ct=e("code",null,"correlationId",-1),ht=e("code",null,"string",-1),_t=e("code",null,"eventName?",-1),ut=e("code",null,"string",-1),gt=e("code",null,"id",-1),pt=e("code",null,"string",-1),mt=e("code",null,"messageType",-1),ft=e("code",null,"Command",-1),bt=e("code",null,"otp?",-1),yt=e("code",null,"string",-1),vt=e("code",null,"payload",-1),xt=e("code",null,"parameter",-1),Et=e("code",null,"unknown",-1),Bt=e("code",null,"payload",-1),kt=e("code",null,"unknown",-1),Tt=e("code",null,"principalId?",-1),It=e("code",null,"string",-1),Pt=e("code",null,"receiver",-1),wt=e("code",null,"EBMessageAddress",-1),Rt=e("code",null,"sender",-1),Dt=e("code",null,"timestamp",-1),Ct=e("code",null,"number",-1),Mt=e("code",null,"traceId?",-1),Nt=e("code",null,"string",-1),Lt=e("code",null,"Promise",-1),St=e("code",null,"Readonly",-1),Vt=e("code",null,"Omit",-1),At=e("code",null,"contentEncoding",-1),Ot=e("code",null,'"utf-8"',-1),Ht=e("code",null,"contentType",-1),Ut=e("code",null,'"application/json"',-1),jt=e("code",null,"correlationId",-1),qt=e("code",null,"string",-1),zt=e("code",null,"eventName?",-1),Ft=e("code",null,"string",-1),Gt=e("code",null,"id",-1),Jt=e("code",null,"string",-1),Kt=e("code",null,"isHandledError",-1),Qt=e("code",null,"boolean",-1),Wt=e("code",null,"messageType",-1),Xt=e("code",null,"CommandErrorResponse",-1),Yt=e("code",null,"otp?",-1),Zt=e("code",null,"string",-1),$t=e("code",null,"payload",-1),es=e("code",null,"data?",-1),ts=e("code",null,"unknown",-1),ss=e("code",null,"message",-1),ns=e("code",null,"string",-1),os=e("code",null,"status",-1),ds=e("code",null,"StatusCode",-1),is=e("code",null,"principalId?",-1),rs=e("code",null,"string",-1),as=e("code",null,"receiver",-1),ls=e("code",null,"sender",-1),cs=e("code",null,"timestamp",-1),hs=e("code",null,"number",-1),_s=e("code",null,"traceId?",-1),us=e("code",null,"string",-1),gs=e("code",null,'"instanceId"',-1),ps=e("code",null,"Readonly",-1),ms=e("code",null,"Omit",-1),fs=e("code",null,"contentEncoding",-1),bs=e("code",null,"string",-1),ys=e("code",null,"contentType",-1),vs=e("code",null,"string",-1),xs=e("code",null,"correlationId",-1),Es=e("code",null,"string",-1),Bs=e("code",null,"eventName?",-1),ks=e("code",null,"string",-1),Ts=e("code",null,"id",-1),Is=e("code",null,"string",-1),Ps=e("code",null,"messageType",-1),ws=e("code",null,"CommandSuccessResponse",-1),Rs=e("code",null,"otp?",-1),Ds=e("code",null,"string",-1),Cs=e("code",null,"payload",-1),Ms=e("code",null,"unknown",-1),Ns=e("code",null,"principalId?",-1),Ls=e("code",null,"string",-1),Ss=e("code",null,"receiver",-1),Vs=e("code",null,"sender",-1),As=e("code",null,"timestamp",-1),Os=e("code",null,"number",-1),Hs=e("code",null,"traceId?",-1),Us=e("code",null,"string",-1),js=e("code",null,'"instanceId"',-1),qs=e("td",{style:{"text-align":"left"}},"the function to be called if a matching command arrives",-1),zs=e("td",{style:{"text-align":"left"}},[e("code",null,"metadata")],-1),Fs={style:{"text-align":"left"}},Gs=e("code",null,"CommandDefinitionMetadataBase",-1),Js=e("td",{style:{"text-align":"left"}},"-",-1),Ks=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),Qs={style:{"text-align":"left"}},Ws=e("code",null,"DefinitionEventBridgeConfig",-1),Xs=e("td",{style:{"text-align":"left"}},"-",-1),Ys=e("h4",{id:"returns-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-5","aria-hidden":"true"},"#"),t(" Returns")],-1),Zs=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"string"),t(">")],-1),$s=e("h4",{id:"defined-in-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-8","aria-hidden":"true"},"#"),t(" Defined in")],-1),en={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L53",target:"_blank",rel:"noopener noreferrer"},tn=i('<hr><h3 id="registersubscription" tabindex="-1"><a class="header-anchor" href="#registersubscription" aria-hidden="true">#</a> registerSubscription</h3><p>▸ <strong>registerSubscription</strong>(<code>subscription</code>, <code>cb</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p><p>Register a new subscription</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4>',5),sn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),nn=e("td",{style:{"text-align":"left"}},[e("code",null,"subscription")],-1),on={style:{"text-align":"left"}},dn=e("code",null,"Subscription",-1),rn=e("td",{style:{"text-align":"left"}},"the subscription definition",-1),an=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),ln={style:{"text-align":"left"}},cn=e("code",null,"message",-1),hn=e("code",null,"EBMessage",-1),_n=e("code",null,"Promise",-1),un=e("code",null,"undefined",-1),gn=e("code",null,"Omit",-1),pn=e("code",null,"contentEncoding",-1),mn=e("code",null,"string",-1),fn=e("code",null,"contentType",-1),bn=e("code",null,"string",-1),yn=e("code",null,"correlationId?",-1),vn=e("code",null,"string",-1),xn=e("code",null,"eventName",-1),En=e("code",null,"string",-1),Bn=e("code",null,"id",-1),kn=e("code",null,"string",-1),Tn=e("code",null,"messageType",-1),In=e("code",null,"CustomMessage",-1),Pn=e("code",null,"otp?",-1),wn=e("code",null,"string",-1),Rn=e("code",null,"payload?",-1),Dn=e("code",null,"unknown",-1),Cn=e("code",null,"principalId?",-1),Mn=e("code",null,"string",-1),Nn=e("code",null,"receiver?",-1),Ln=e("code",null,"EBMessageAddress",-1),Sn=e("code",null,"sender",-1),Vn=e("code",null,"timestamp",-1),An=e("code",null,"number",-1),On=e("code",null,"traceId?",-1),Hn=e("code",null,"string",-1),Un=e("code",null,'"id"',-1),jn=e("code",null,'"timestamp"',-1),qn=e("td",{style:{"text-align":"left"}},"the function to be called if a matching message arrives",-1),zn=e("h4",{id:"returns-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-6","aria-hidden":"true"},"#"),t(" Returns")],-1),Fn=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"string"),t(">")],-1),Gn=e("h4",{id:"defined-in-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-9","aria-hidden":"true"},"#"),t(" Defined in")],-1),Jn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L75",target:"_blank",rel:"noopener noreferrer"},Kn=i('<hr><h3 id="start" tabindex="-1"><a class="header-anchor" href="#start" aria-hidden="true">#</a> start</h3><p>▸ <strong>start</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Start the eventbridge and connect to the underlaying message broker</p><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-10" tabindex="-1"><a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a> Defined in</h4>',7),Qn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L31",target:"_blank",rel:"noopener noreferrer"},Wn=i('<hr><h3 id="unregistercommand" tabindex="-1"><a class="header-anchor" href="#unregistercommand" aria-hidden="true">#</a> unregisterCommand</h3><p>▸ <strong>unregisterCommand</strong>(<code>address</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Unregister a service command</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4>',5),Xn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Yn=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),Zn={style:{"text-align":"left"}},$n=e("code",null,"EBMessageAddress",-1),eo=e("td",{style:{"text-align":"left"}},"The address (service name, version and command name) of the command to be de-registered",-1),to=e("h4",{id:"returns-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-8","aria-hidden":"true"},"#"),t(" Returns")],-1),so=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),no=e("h4",{id:"defined-in-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-11","aria-hidden":"true"},"#"),t(" Defined in")],-1),oo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L68",target:"_blank",rel:"noopener noreferrer"},io=i('<hr><h3 id="unregistersubscription" tabindex="-1"><a class="header-anchor" href="#unregistersubscription" aria-hidden="true">#</a> unregisterSubscription</h3><p>▸ <strong>unregisterSubscription</strong>(<code>address</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4>',4),ro=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ao=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),lo={style:{"text-align":"left"}},co=e("code",null,"EBMessageAddress",-1),ho=e("h4",{id:"returns-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-9","aria-hidden":"true"},"#"),t(" Returns")],-1),_o=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),uo=e("h4",{id:"defined-in-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-12","aria-hidden":"true"},"#"),t(" Defined in")],-1),go={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L84",target:"_blank",rel:"noopener noreferrer"};function po(mo,fo){const n=r("RouterLink"),d=r("ExternalLinkIcon");return l(),c("div",null,[e("p",null,[s(n,{to:"/api/"},{default:o(()=>[t("PURISTA API")]),_:1}),t(" / "),s(n,{to:"/api/modules.html"},{default:o(()=>[t("Modules")]),_:1}),t(" / "),s(n,{to:"/api/modules/purista_core.html"},{default:o(()=>[t("@purista/core")]),_:1}),t(" / EventBridge")]),_,e("p",null,[s(n,{to:"/api/modules/purista_core.html"},{default:o(()=>[t("@purista/core")]),_:1}),t(".EventBridge")]),u,g,e("ul",null,[e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html"},{default:o(()=>[p]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html"},{default:o(()=>[m]),_:1})])]),f,b,e("ul",null,[e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#defaultcommandtimeout"},{default:o(()=>[t("defaultCommandTimeout")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#instanceid"},{default:o(()=>[t("instanceId")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#name"},{default:o(()=>[t("name")]),_:1})])]),y,e("ul",null,[e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#destroy"},{default:o(()=>[t("destroy")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#emitmessage"},{default:o(()=>[t("emitMessage")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#invoke"},{default:o(()=>[t("invoke")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#ishealthy"},{default:o(()=>[t("isHealthy")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#isready"},{default:o(()=>[t("isReady")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#registercommand"},{default:o(()=>[t("registerCommand")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#registersubscription"},{default:o(()=>[t("registerSubscription")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#start"},{default:o(()=>[t("start")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#unregistercommand"},{default:o(()=>[t("unregisterCommand")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#unregistersubscription"},{default:o(()=>[t("unregisterSubscription")]),_:1})])]),v,e("p",null,[e("a",x,[t("core/EventBridge/types/EventBridge.ts:26"),s(d)])]),E,B,k,T,e("p",null,[e("a",I,[t("core/EventBridge/types/EventBridge.ts:22"),s(d)])]),P,w,R,D,e("p",null,[e("a",C,[t("core/EventBridge/types/EventBridge.ts:20"),s(d)])]),M,e("p",null,[e("a",N,[t("core/EventBridge/types/EventBridge.ts:99"),s(d)])]),L,S,e("p",null,[t("▸ "),V,t("("),A,t("): "),O,t("<"),H,t("<"),s(n,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[U]),_:1}),t(">>")]),j,q,e("table",null,[z,e("tbody",null,[e("tr",null,[F,e("td",G,[J,t("<"),s(n,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[K]),_:1}),t(", "),Q,t(" | "),W,t(" | "),X,t(">")]),Y])])]),Z,e("p",null,[$,t("<"),ee,t("<"),s(n,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[te]),_:1}),t(">>")]),se,e("p",null,[e("a",ne,[t("core/EventBridge/types/EventBridge.ts:37"),s(d)])]),oe,e("table",null,[de,e("tbody",null,[e("tr",null,[ie,e("td",re,[ae,t("<{ "),le,t(": "),ce,t(" ; "),he,t(": "),_e,t(" ; "),ue,t(": "),ge,t(" ; "),pe,t(": "),me,t(" ; "),fe,t(": "),be,t(" ; "),ye,t(": "),s(n,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:o(()=>[ve]),_:1}),t(" ; "),xe,t(": "),Ee,t(" ; "),Be,t(": { "),ke,t(": "),Te,t(" ; "),Ie,t(": "),Pe,t(" } ; "),we,t(": "),Re,t(" ; "),De,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Ce]),_:1}),t(" ; "),Me,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Ne,t(": "),Le,t(" ; "),Se,t(": "),Ve,t(" }, "),Ae,t(" | "),Oe,t(" | "),He,t(" | "),Ue,t(">")]),je]),qe])]),ze,Fe,Ge,e("p",null,[e("a",Je,[t("core/EventBridge/types/EventBridge.ts:46"),s(d)])]),Ke,e("p",null,[e("a",Qe,[t("core/EventBridge/types/EventBridge.ts:94"),s(d)])]),We,e("p",null,[e("a",Xe,[t("core/EventBridge/types/EventBridge.ts:89"),s(d)])]),Ye,e("table",null,[Ze,e("tbody",null,[e("tr",null,[$e,e("td",et,[s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[tt]),_:1})]),st]),e("tr",null,[nt,e("td",ot,[t("("),dt,t(": { "),it,t(": "),rt,t(" ; "),at,t(": "),lt,t(" ; "),ct,t(": "),ht,t(" ; "),_t,t(": "),ut,t(" ; "),gt,t(": "),pt,t(" ; "),mt,t(": "),s(n,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:o(()=>[ft]),_:1}),t(" ; "),bt,t(": "),yt,t(" ; "),vt,t(": { "),xt,t(": "),Et,t(" ; "),Bt,t(": "),kt,t(" } ; "),Tt,t(": "),It,t(" ; "),Pt,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[wt]),_:1}),t(" ; "),Rt,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Dt,t(": "),Ct,t(" ; "),Mt,t(": "),Nt,t(" }) => "),Lt,t("<"),St,t("<"),Vt,t("<{ "),At,t(": "),Ot,t(" ; "),Ht,t(": "),Ut,t(" ; "),jt,t(": "),qt,t(" ; "),zt,t(": "),Ft,t(" ; "),Gt,t(": "),Jt,t(" ; "),Kt,t(": "),Qt,t(" ; "),Wt,t(": "),s(n,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:o(()=>[Xt]),_:1}),t(" ; "),Yt,t(": "),Zt,t(" ; "),$t,t(": { "),es,t(": "),ts,t(" ; "),ss,t(": "),ns,t(" ; "),os,t(": "),s(n,{to:"/api/enums/purista_core.StatusCode.html"},{default:o(()=>[ds]),_:1}),t(" } ; "),is,t(": "),rs,t(" ; "),as,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),ls,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),cs,t(": "),hs,t(" ; "),_s,t(": "),us,t(" }, "),gs,t(">> | "),ps,t("<"),ms,t("<{ "),fs,t(": "),bs,t(" ; "),ys,t(": "),vs,t(" ; "),xs,t(": "),Es,t(" ; "),Bs,t(": "),ks,t(" ; "),Ts,t(": "),Is,t(" ; "),Ps,t(": "),s(n,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:o(()=>[ws]),_:1}),t(" ; "),Rs,t(": "),Ds,t(" ; "),Cs,t(": "),Ms,t(" ; "),Ns,t(": "),Ls,t(" ; "),Ss,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Vs,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),As,t(": "),Os,t(" ; "),Hs,t(": "),Us,t(" }, "),js,t(">>>")]),qs]),e("tr",null,[zs,e("td",Fs,[s(n,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:o(()=>[Gs]),_:1})]),Js]),e("tr",null,[Ks,e("td",Qs,[s(n,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:o(()=>[Ws]),_:1})]),Xs])])]),Ys,Zs,$s,e("p",null,[e("a",en,[t("core/EventBridge/types/EventBridge.ts:53"),s(d)])]),tn,e("table",null,[sn,e("tbody",null,[e("tr",null,[nn,e("td",on,[s(n,{to:"/api/modules/purista_core.html#subscription"},{default:o(()=>[dn]),_:1})]),rn]),e("tr",null,[an,e("td",ln,[t("("),cn,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[hn]),_:1}),t(") => "),_n,t("<"),un,t(" | "),gn,t("<{ "),pn,t(": "),mn,t(" ; "),fn,t(": "),bn,t(" ; "),yn,t(": "),vn,t(" ; "),xn,t(": "),En,t(" ; "),Bn,t(": "),kn,t(" ; "),Tn,t(": "),s(n,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:o(()=>[In]),_:1}),t(" ; "),Pn,t(": "),wn,t(" ; "),Rn,t(": "),Dn,t(" ; "),Cn,t(": "),Mn,t(" ; "),Nn,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Ln]),_:1}),t(" ; "),Sn,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Vn,t(": "),An,t(" ; "),On,t(": "),Hn,t(" }, "),Un,t(" | "),jn,t(">>")]),qn])])]),zn,Fn,Gn,e("p",null,[e("a",Jn,[t("core/EventBridge/types/EventBridge.ts:75"),s(d)])]),Kn,e("p",null,[e("a",Qn,[t("core/EventBridge/types/EventBridge.ts:31"),s(d)])]),Wn,e("table",null,[Xn,e("tbody",null,[e("tr",null,[Yn,e("td",Zn,[s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[$n]),_:1})]),eo])])]),to,so,no,e("p",null,[e("a",oo,[t("core/EventBridge/types/EventBridge.ts:68"),s(d)])]),io,e("table",null,[ro,e("tbody",null,[e("tr",null,[ao,e("td",lo,[s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[co]),_:1})])])])]),ho,_o,uo,e("p",null,[e("a",go,[t("core/EventBridge/types/EventBridge.ts:84"),s(d)])])])}const vo=a(h,[["render",po],["__file","purista_core.EventBridge.html.vue"]]);export{vo as default};
