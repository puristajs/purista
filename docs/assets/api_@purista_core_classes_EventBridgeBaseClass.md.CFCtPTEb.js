import{_ as a,c as r,o as t,ag as o}from"./chunks/framework.U_AETC1W.js";const m=JSON.parse('{"title":"Class: EventBridgeBaseClass<ConfigType>","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/core/classes/EventBridgeBaseClass.md","filePath":"api/@purista/core/classes/EventBridgeBaseClass.md","lastUpdated":1740066608000}'),n={name:"api/@purista/core/classes/EventBridgeBaseClass.md"};function s(c,e,i,d,l,h){return t(),r("div",null,e[0]||(e[0]=[o('<p><a href="./../README.html"><strong>@purista/core v2.0.5</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/core</a> / EventBridgeBaseClass</p><h1 id="class-eventbridgebaseclass-configtype" tabindex="-1">Class: EventBridgeBaseClass&lt;ConfigType&gt; <a class="header-anchor" href="#class-eventbridgebaseclass-configtype" aria-label="Permalink to &quot;Class: EventBridgeBaseClass\\&lt;ConfigType\\&gt;&quot;">​</a></h1><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L19" target="_blank" rel="noreferrer">packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:19</a></p><p>The base class to be extended by event bridge implementations</p><h2 id="extends" tabindex="-1">Extends <a class="header-anchor" href="#extends" aria-label="Permalink to &quot;Extends&quot;">​</a></h2><ul><li><a href="./GenericEventEmitter.html"><code>GenericEventEmitter</code></a>&lt;<a href="./../type-aliases/EventBridgeEvents.html"><code>EventBridgeEvents</code></a>&gt;</li></ul><h2 id="extended-by" tabindex="-1">Extended by <a class="header-anchor" href="#extended-by" aria-label="Permalink to &quot;Extended by&quot;">​</a></h2><ul><li><a href="./DefaultEventBridge.html"><code>DefaultEventBridge</code></a></li><li><a href="./../../amqpbridge/classes/AmqpBridge.html"><code>AmqpBridge</code></a></li><li><a href="./../../base-http-bridge/classes/HttpEventBridge.html"><code>HttpEventBridge</code></a></li><li><a href="./../../mqttbridge/classes/MqttBridge.html"><code>MqttBridge</code></a></li><li><a href="./../../natsbridge/classes/NatsBridge.html"><code>NatsBridge</code></a></li></ul><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>ConfigType</strong></p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="new-eventbridgebaseclass" tabindex="-1">new EventBridgeBaseClass() <a class="header-anchor" href="#new-eventbridgebaseclass" aria-label="Permalink to &quot;new EventBridgeBaseClass()&quot;">​</a></h3><blockquote><p><strong>new EventBridgeBaseClass</strong>&lt;<code>ConfigType</code>&gt;(<code>name</code>, <code>config</code>): <a href="./EventBridgeBaseClass.html"><code>EventBridgeBaseClass</code></a>&lt;<code>ConfigType</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L30" target="_blank" rel="noreferrer">packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:30</a></p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h5><p><code>string</code></p><h5 id="config" tabindex="-1">config <a class="header-anchor" href="#config" aria-label="Permalink to &quot;config&quot;">​</a></h5><p>{ [K in string | number | symbol]: ({ defaultCommandTimeout?: number; instanceId?: string; logger?: Logger; logLevel?: LogLevelName; spanProcessor?: SpanProcessor } &amp; ConfigType)[K] }</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./EventBridgeBaseClass.html"><code>EventBridgeBaseClass</code></a>&lt;<code>ConfigType</code>&gt;</p><h4 id="overrides" tabindex="-1">Overrides <a class="header-anchor" href="#overrides" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./GenericEventEmitter.html"><code>GenericEventEmitter</code></a>.<a href="./GenericEventEmitter.html#constructors"><code>constructor</code></a></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="config-1" tabindex="-1">config <a class="header-anchor" href="#config-1" aria-label="Permalink to &quot;config&quot;">​</a></h3><blockquote><p><strong>config</strong>: <a href="./../type-aliases/Complete.html"><code>Complete</code></a>&lt;{ [K in string | number | symbol]: ({ defaultCommandTimeout?: number; instanceId?: string; logger?: Logger; logLevel?: LogLevelName; spanProcessor?: SpanProcessor } &amp; ConfigType)[K] }&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L23" target="_blank" rel="noreferrer">packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:23</a></p><hr><h3 id="defaultcommandtimeout" tabindex="-1">defaultCommandTimeout <a class="header-anchor" href="#defaultcommandtimeout" aria-label="Permalink to &quot;defaultCommandTimeout&quot;">​</a></h3><blockquote><p><strong>defaultCommandTimeout</strong>: <code>number</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L29" target="_blank" rel="noreferrer">packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:29</a></p><hr><h3 id="instanceid" tabindex="-1">instanceId <a class="header-anchor" href="#instanceid" aria-label="Permalink to &quot;instanceId&quot;">​</a></h3><blockquote><p><strong>instanceId</strong>: <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L27" target="_blank" rel="noreferrer">packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:27</a></p><hr><h3 id="logger" tabindex="-1">logger <a class="header-anchor" href="#logger" aria-label="Permalink to &quot;logger&quot;">​</a></h3><blockquote><p><strong>logger</strong>: <a href="./Logger.html"><code>Logger</code></a></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L20" target="_blank" rel="noreferrer">packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:20</a></p><hr><h3 id="name-1" tabindex="-1">name <a class="header-anchor" href="#name-1" aria-label="Permalink to &quot;name&quot;">​</a></h3><blockquote><p><strong>name</strong>: <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L25" target="_blank" rel="noreferrer">packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:25</a></p><hr><h3 id="traceprovider" tabindex="-1">traceProvider <a class="header-anchor" href="#traceprovider" aria-label="Permalink to &quot;traceProvider&quot;">​</a></h3><blockquote><p><strong>traceProvider</strong>: <code>NodeTracerProvider</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L21" target="_blank" rel="noreferrer">packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:21</a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="destroy" tabindex="-1">destroy() <a class="header-anchor" href="#destroy" aria-label="Permalink to &quot;destroy()&quot;">​</a></h3><blockquote><p><strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L155" target="_blank" rel="noreferrer">packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:155</a></p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="emit" tabindex="-1">emit() <a class="header-anchor" href="#emit" aria-label="Permalink to &quot;emit()&quot;">​</a></h3><blockquote><p><strong>emit</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>parameter</code>?): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L24" target="_blank" rel="noreferrer">packages/core/src/core/types/GenericEventEmitter.ts:24</a></p><h4 id="type-parameters-1" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p>• <strong>K</strong> <em>extends</em> <a href="./../type-aliases/EventKey.html"><code>EventKey</code></a>&lt;{ <code>[key: </code>custom-${string}<code>]</code>: <code>unknown</code>; <code>[key: </code>adapter-${string}<code>]</code>: <code>unknown</code>; <code>eventbridge-connected</code>: <code>never</code>; <code>eventbridge-connection-error</code>: <code>unknown</code>; <code>eventbridge-disconnected</code>: <code>never</code>; <code>eventbridge-error</code>: <code>unknown</code>; <code>eventbridge-reconnecting</code>: <code>never</code>; }&gt;</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="eventname" tabindex="-1">eventName <a class="header-anchor" href="#eventname" aria-label="Permalink to &quot;eventName&quot;">​</a></h5><p><code>K</code></p><h5 id="parameter" tabindex="-1">parameter? <a class="header-anchor" href="#parameter" aria-label="Permalink to &quot;parameter?&quot;">​</a></h5><p><code>object</code>[<code>K</code>]</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./GenericEventEmitter.html"><code>GenericEventEmitter</code></a>.<a href="./GenericEventEmitter.html#emit"><code>emit</code></a></p><hr><h3 id="gettracer" tabindex="-1">getTracer() <a class="header-anchor" href="#gettracer" aria-label="Permalink to &quot;getTracer()&quot;">​</a></h3><blockquote><p><strong>getTracer</strong>(): <code>Tracer</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L70" target="_blank" rel="noreferrer">packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:70</a></p><p>Returns open telemetry tracer of this service</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Tracer</code></p><p>Tracer</p><hr><h3 id="off" tabindex="-1">off() <a class="header-anchor" href="#off" aria-label="Permalink to &quot;off()&quot;">​</a></h3><blockquote><p><strong>off</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L20" target="_blank" rel="noreferrer">packages/core/src/core/types/GenericEventEmitter.ts:20</a></p><h4 id="type-parameters-2" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-2" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p>• <strong>K</strong> <em>extends</em> <a href="./../type-aliases/EventKey.html"><code>EventKey</code></a>&lt;{ <code>[key: </code>custom-${string}<code>]</code>: <code>unknown</code>; <code>[key: </code>adapter-${string}<code>]</code>: <code>unknown</code>; <code>eventbridge-connected</code>: <code>never</code>; <code>eventbridge-connection-error</code>: <code>unknown</code>; <code>eventbridge-disconnected</code>: <code>never</code>; <code>eventbridge-error</code>: <code>unknown</code>; <code>eventbridge-reconnecting</code>: <code>never</code>; }&gt;</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="eventname-1" tabindex="-1">eventName <a class="header-anchor" href="#eventname-1" aria-label="Permalink to &quot;eventName&quot;">​</a></h5><p><code>K</code></p><h5 id="fn" tabindex="-1">fn <a class="header-anchor" href="#fn" aria-label="Permalink to &quot;fn&quot;">​</a></h5><p><code>EventReceiver</code>&lt;<code>object</code>[<code>K</code>]&gt;</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-1" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-1" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./GenericEventEmitter.html"><code>GenericEventEmitter</code></a>.<a href="./GenericEventEmitter.html#off"><code>off</code></a></p><hr><h3 id="on" tabindex="-1">on() <a class="header-anchor" href="#on" aria-label="Permalink to &quot;on()&quot;">​</a></h3><blockquote><p><strong>on</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L16" target="_blank" rel="noreferrer">packages/core/src/core/types/GenericEventEmitter.ts:16</a></p><h4 id="type-parameters-3" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-3" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p>• <strong>K</strong> <em>extends</em> <a href="./../type-aliases/EventKey.html"><code>EventKey</code></a>&lt;{ <code>[key: </code>custom-${string}<code>]</code>: <code>unknown</code>; <code>[key: </code>adapter-${string}<code>]</code>: <code>unknown</code>; <code>eventbridge-connected</code>: <code>never</code>; <code>eventbridge-connection-error</code>: <code>unknown</code>; <code>eventbridge-disconnected</code>: <code>never</code>; <code>eventbridge-error</code>: <code>unknown</code>; <code>eventbridge-reconnecting</code>: <code>never</code>; }&gt;</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="eventname-2" tabindex="-1">eventName <a class="header-anchor" href="#eventname-2" aria-label="Permalink to &quot;eventName&quot;">​</a></h5><p><code>K</code></p><h5 id="fn-1" tabindex="-1">fn <a class="header-anchor" href="#fn-1" aria-label="Permalink to &quot;fn&quot;">​</a></h5><p><code>EventReceiver</code>&lt;<code>object</code>[<code>K</code>]&gt;</p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-2" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-2" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./GenericEventEmitter.html"><code>GenericEventEmitter</code></a>.<a href="./GenericEventEmitter.html#on"><code>on</code></a></p><hr><h3 id="removealllisteners" tabindex="-1">removeAllListeners() <a class="header-anchor" href="#removealllisteners" aria-label="Permalink to &quot;removeAllListeners()&quot;">​</a></h3><blockquote><p><strong>removeAllListeners</strong>(): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L28" target="_blank" rel="noreferrer">packages/core/src/core/types/GenericEventEmitter.ts:28</a></p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-3" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-3" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./GenericEventEmitter.html"><code>GenericEventEmitter</code></a>.<a href="./GenericEventEmitter.html#removealllisteners"><code>removeAllListeners</code></a></p><hr><h3 id="start" tabindex="-1">start() <a class="header-anchor" href="#start" aria-label="Permalink to &quot;start()&quot;">​</a></h3><blockquote><p><strong>start</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L156" target="_blank" rel="noreferrer">packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:156</a></p><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="startactivespan" tabindex="-1">startActiveSpan() <a class="header-anchor" href="#startactivespan" aria-label="Permalink to &quot;startActiveSpan()&quot;">​</a></h3><blockquote><p><strong>startActiveSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>context</code>, <code>fn</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L82" target="_blank" rel="noreferrer">packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:82</a></p><p>Start a child span for opentelemetry tracking</p><h4 id="type-parameters-4" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-4" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p>• <strong>F</strong></p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="name-2" tabindex="-1">name <a class="header-anchor" href="#name-2" aria-label="Permalink to &quot;name&quot;">​</a></h5><p><code>string</code></p><p>name of span</p><h5 id="opts" tabindex="-1">opts <a class="header-anchor" href="#opts" aria-label="Permalink to &quot;opts&quot;">​</a></h5><p><code>SpanOptions</code></p><p>span options</p><h5 id="context" tabindex="-1">context <a class="header-anchor" href="#context" aria-label="Permalink to &quot;context&quot;">​</a></h5><p>optional context</p><p><code>undefined</code> | <code>Context</code></p><h5 id="fn-2" tabindex="-1">fn <a class="header-anchor" href="#fn-2" aria-label="Permalink to &quot;fn&quot;">​</a></h5><p>(<code>span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</p><p>function to be executed within the span</p><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><p>return value of fn</p><hr><h3 id="wrapinspan" tabindex="-1">wrapInSpan() <a class="header-anchor" href="#wrapinspan" aria-label="Permalink to &quot;wrapInSpan()&quot;">​</a></h3><blockquote><p><strong>wrapInSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>fn</code>, <code>context</code>?): <code>Promise</code>&lt;<code>F</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L132" target="_blank" rel="noreferrer">packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:132</a></p><p>Start span for opentelemetry tracking on same level. The created span will not become the &quot;active&quot; span within opentelemetry!</p><p>This means during logging and similar the spanId of parent span is logged.</p><p>Use wrapInSpan for marking points in flow of one bigger function, but not to trace the program flow itself</p><h4 id="type-parameters-5" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-5" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p>• <strong>F</strong></p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="name-3" tabindex="-1">name <a class="header-anchor" href="#name-3" aria-label="Permalink to &quot;name&quot;">​</a></h5><p><code>string</code></p><p>name of span</p><h5 id="opts-1" tabindex="-1">opts <a class="header-anchor" href="#opts-1" aria-label="Permalink to &quot;opts&quot;">​</a></h5><p><code>SpanOptions</code></p><p>span options</p><h5 id="fn-3" tabindex="-1">fn <a class="header-anchor" href="#fn-3" aria-label="Permalink to &quot;fn&quot;">​</a></h5><p>(<code>span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</p><p>function te be executed in the span</p><h5 id="context-1" tabindex="-1">context? <a class="header-anchor" href="#context-1" aria-label="Permalink to &quot;context?&quot;">​</a></h5><p><code>Context</code></p><p>span context</p><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><p>return value of fn</p>',170)]))}const g=a(n,[["render",s]]);export{m as __pageData,g as default};
