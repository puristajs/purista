import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as p,c as r,f as c,b as n,d as e,e as a,a as t}from"./app-2c9217f0.js";const l={},d=t("<p>PURISTA version 1.6.0 comes with a set of new event bridges.<br> Starting from version 1.6.0, the new MQTT event bridge supports the MQTT protocol.<br> This is a huge step forward if you&#39;re developing solutions for IoT and Edge.</p><p>On the other side, Dapr support is now added for cloud environments.<br> This not only includes simple deployments and usage of the core event functionality.<br> The new Dapr-SDK provides also the integration of state, config, and secret stores via Dapr.</p><p><strong>PURISTA now requires Node version &gt;= 18.15</strong>.<br> Also, the provided PURISTA packages no longer contain source map files, resulting in a much smaller size.</p><p>A very common task is, to build an HTTP adapter and call external REST APIs.<br> For such a task, the new base class <code>HttpClient</code> is available, which is based on the native fetch function.<br> Error handling, JSON decoding, timeout handling, and OpenTelemetry support are built in.</p><p>In addition, there are a bunch of improvements regarding types, and configurations, and some bugs have been fixed.</p>",5),u=t(`<h2 id="mqtt-event-bridge" tabindex="-1"><a class="header-anchor" href="#mqtt-event-bridge" aria-hidden="true">#</a> MQTT event bridge</h2><p>By providing the MQTT event bridge, PURISTA is making a huge step into the IoT and edge device area.<br> The MQTT bridge is based on the MQTT 5 protocol, which makes it possible to provide nearly the same functionality as on other event bridges.</p><h2 id="dapr-sdk" tabindex="-1"><a class="header-anchor" href="#dapr-sdk" aria-hidden="true">#</a> Dapr SDK</h2><p>The SDK for Dapr includes an event bridge and adapters for config, secret and state stores.<br> This allows an easy integration into the Dapr infrastructure without touching the business logic.</p><h2 id="http-client" tabindex="-1"><a class="header-anchor" href="#http-client" aria-hidden="true">#</a> Http client</h2><p>The core package has some new nice helpers.<br> With the <code>HttpClient</code> class, it is possible to build HTTP-based clients quickly &amp; easily.</p><p>The <code>HttpClient</code> is based on Node.js native <code>fetch</code>.</p><p>Example:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> HttpClient <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@purista/core&#39;</span>

<span class="token keyword">type</span> <span class="token class-name">LoginResponse</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  token<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">main</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    baseUrl<span class="token operator">:</span> <span class="token string">&#39;http://example.com&#39;</span><span class="token punctuation">,</span>
    defaultHeaders<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json; charset=utf-8&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> loginCredentials <span class="token operator">=</span> <span class="token punctuation">{</span>
    username<span class="token operator">:</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span>
    password<span class="token operator">:</span> <span class="token string">&#39;secret_thing&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// to a POST request to receive a bearer token</span>
  <span class="token keyword">const</span> loginResponse <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">post</span><span class="token generic class-name"><span class="token operator">&lt;</span>LoginResponse<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span> loginCredentials<span class="token punctuation">)</span>

  <span class="token comment">// set the bearer token for all following requests</span>
  client<span class="token punctuation">.</span><span class="token function">setBearerToken</span><span class="token punctuation">(</span>loginResponse<span class="token punctuation">.</span>token<span class="token punctuation">)</span>

  <span class="token comment">// make a GET request with bearer token set in header</span>
  <span class="token keyword">const</span> restrictedResponse <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/restricted/path&#39;</span><span class="token punctuation">)</span>

  <span class="token comment">// log the response from a protected route</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>restrictedResponse<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="improvements" tabindex="-1"><a class="header-anchor" href="#improvements" aria-hidden="true">#</a> Improvements</h2><p>This release contains a lot of improvements.<br> By default, HTTP compression is enabled in the Dapr event bridge and the Kubernetes webserver.<br> Configurations are now more flat to avoid too much nested parameters.</p><p>Dependencies have been updated to the most recent versions. Because of this, the plugin <code>@anatine/zod-openapi</code> is replaced by a own version.<br> A lot of unit and integration tests have been added to the project.</p><h2 id="shout-out" tabindex="-1"><a class="header-anchor" href="#shout-out" aria-hidden="true">#</a> Shout out</h2><p>A special &quot;Thank You!&quot; to the contributors and developers of:</p>`,14),k={href:"https://hono.dev",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.emqx.io",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/tgreyuk/typedoc-plugin-markdown",target:"_blank",rel:"noopener noreferrer"},m={href:"https://snappify.com/",target:"_blank",rel:"noopener noreferrer"},b=n("p",null,"Thanks for your cool stuff and your help - I appreciate it!",-1);function g(f,T){const s=i("ExternalLinkIcon");return p(),r("div",null,[d,c(" more "),u,n("ul",null,[n("li",null,[n("a",k,[e("Hono"),a(s)])]),n("li",null,[n("a",h,[e("EMQ"),a(s)])]),n("li",null,[n("a",v,[e("typedoc-plugin-markdown"),a(s)])]),n("li",null,[n("a",m,[e("Snappify"),a(s)])])]),b])}const _=o(l,[["render",g],["__file","2023-20-05-purista-version-1-6-0.html.vue"]]);export{_ as default};
