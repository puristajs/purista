import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";import{o as r,c,b as e,e as n,w as s,d as t,a as o,r as a}from"./app.5b57730e.js";const h={},_=t("PURISTA API - v1.3.1"),u=t(" / @purista/amqpbridge"),p=o('<h1 id="module-purista-amqpbridge" tabindex="-1"><a class="header-anchor" href="#module-purista-amqpbridge" aria-hidden="true">#</a> Module: @purista/amqpbridge</h1><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="namespaces" tabindex="-1"><a class="header-anchor" href="#namespaces" aria-hidden="true">#</a> Namespaces</h3>',3),f=t("internal"),g=e("h3",{id:"classes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#classes","aria-hidden":"true"},"#"),t(" Classes")],-1),b=t("RabbitMQEventBridge"),m=e("h3",{id:"type-aliases",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),t(" Type Aliases")],-1),y=t("Encoder"),x=t("EncryptFunctions"),q=t("Encrypter"),E=t("RabbitMQEventBridgeConfig"),v=e("h3",{id:"functions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#functions","aria-hidden":"true"},"#"),t(" Functions")],-1),k=t("getDefaultConfig"),C=e("h2",{id:"type-aliases-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-aliases-1","aria-hidden":"true"},"#"),t(" Type Aliases")],-1),B=e("h3",{id:"encoder",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#encoder","aria-hidden":"true"},"#"),t(" Encoder")],-1),R=t("\u01AC "),M=e("strong",null,"Encoder",-1),D=t(": "),Q=e("code",null,"Record",-1),T=t("<"),F=e("code",null,"string",-1),L=t(", "),N=e("code",null,"EncoderFunctions",-1),w=t(">"),O=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),A={href:"https://github.com/sebastianwessel/purista/blob/81fe9e5/packages/amqpbridge/src/types/Encoder.ts#L3",target:"_blank",rel:"noopener noreferrer"},I=t("amqpbridge/src/types/Encoder.ts:3"),P=o('<hr><h3 id="encryptfunctions" tabindex="-1"><a class="header-anchor" href="#encryptfunctions" aria-hidden="true">#</a> EncryptFunctions</h3><p>\u01AC <strong>EncryptFunctions</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>decrypt</code></td><td style="text-align:left;">(<code>input</code>: <code>Buffer</code>) =&gt; <code>Promise</code>&lt;<code>Buffer</code>&gt;</td></tr><tr><td style="text-align:left;"><code>encrypt</code></td><td style="text-align:left;">(<code>input</code>: <code>Buffer</code>) =&gt; <code>Promise</code>&lt;<code>Buffer</code>&gt;</td></tr></tbody></table><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4>',6),V={href:"https://github.com/sebastianwessel/purista/blob/81fe9e5/packages/amqpbridge/src/types/EncryptFunctions.ts#L1",target:"_blank",rel:"noopener noreferrer"},j=t("amqpbridge/src/types/EncryptFunctions.ts:1"),S=e("hr",null,null,-1),U=e("h3",{id:"encrypter",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#encrypter","aria-hidden":"true"},"#"),t(" Encrypter")],-1),z=t("\u01AC "),G=e("strong",null,"Encrypter",-1),H=t(": "),J=e("code",null,"Record",-1),K=t("<"),W=e("code",null,"string",-1),X=t(", "),Y=e("code",null,"EncryptFunctions",-1),Z=t(">"),$=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),ee={href:"https://github.com/sebastianwessel/purista/blob/81fe9e5/packages/amqpbridge/src/types/Encrypter.ts#L3",target:"_blank",rel:"noopener noreferrer"},te=t("amqpbridge/src/types/Encrypter.ts:3"),ne=e("hr",null,null,-1),ie=e("h3",{id:"rabbitmqeventbridgeconfig",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#rabbitmqeventbridgeconfig","aria-hidden":"true"},"#"),t(" RabbitMQEventBridgeConfig")],-1),se=e("p",null,[t("\u01AC "),e("strong",null,"RabbitMQEventBridgeConfig"),t(": "),e("code",null,"Object")],-1),de=e("p",null,"RabbitMQ bridge config",-1),ae=e("h4",{id:"type-declaration-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-1","aria-hidden":"true"},"#"),t(" Type declaration")],-1),oe=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),le=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"defaultCommandTimeout")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")])],-1),re=e("td",{style:{"text-align":"left"}},[e("code",null,"encoder?")],-1),ce={style:{"text-align":"left"}},he=e("code",null,"Encoder",-1),_e=e("td",{style:{"text-align":"left"}},[e("code",null,"encrypter?")],-1),ue={style:{"text-align":"left"}},pe=e("code",null,"Encrypter",-1),fe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"exchangeName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),ge=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"exchangeOptions?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Options.AssertExchange")])],-1),be=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),me=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"namePrefix?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),ye=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"socketOptions?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"any")])],-1),xe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"url")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string"),t(" | "),e("code",null,"Options.Connect")])],-1),qe=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ee={href:"https://github.com/sebastianwessel/purista/blob/81fe9e5/packages/amqpbridge/src/types/RabbitMQEventBridgeConfig.ts#L9",target:"_blank",rel:"noopener noreferrer"},ve=t("amqpbridge/src/types/RabbitMQEventBridgeConfig.ts:9"),ke=e("h2",{id:"functions-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#functions-1","aria-hidden":"true"},"#"),t(" Functions")],-1),Ce=e("h3",{id:"getdefaultconfig",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getdefaultconfig","aria-hidden":"true"},"#"),t(" getDefaultConfig")],-1),Be=t("\u25B8 "),Re=e("strong",null,"getDefaultConfig",-1),Me=t("(): "),De=e("code",null,"RabbitMQEventBridgeConfig",-1),Qe=e("h4",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns","aria-hidden":"true"},"#"),t(" Returns")],-1),Te=e("code",null,"RabbitMQEventBridgeConfig",-1),Fe=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),Le={href:"https://github.com/sebastianwessel/purista/blob/81fe9e5/packages/amqpbridge/src/getDefaultConfig.impl.ts#L5",target:"_blank",rel:"noopener noreferrer"},Ne=t("amqpbridge/src/getDefaultConfig.impl.ts:5");function we(Oe,Ae){const i=a("RouterLink"),d=a("ExternalLinkIcon");return r(),c("div",null,[e("p",null,[n(i,{to:"/api/"},{default:s(()=>[_]),_:1}),u]),p,e("ul",null,[e("li",null,[n(i,{to:"/api/modules/purista_amqpbridge.internal.html"},{default:s(()=>[f]),_:1})])]),g,e("ul",null,[e("li",null,[n(i,{to:"/api/classes/purista_amqpbridge.RabbitMQEventBridge.html"},{default:s(()=>[b]),_:1})])]),m,e("ul",null,[e("li",null,[n(i,{to:"/api/modules/purista_amqpbridge.html#encoder"},{default:s(()=>[y]),_:1})]),e("li",null,[n(i,{to:"/api/modules/purista_amqpbridge.html#encryptfunctions"},{default:s(()=>[x]),_:1})]),e("li",null,[n(i,{to:"/api/modules/purista_amqpbridge.html#encrypter"},{default:s(()=>[q]),_:1})]),e("li",null,[n(i,{to:"/api/modules/purista_amqpbridge.html#rabbitmqeventbridgeconfig"},{default:s(()=>[E]),_:1})])]),v,e("ul",null,[e("li",null,[n(i,{to:"/api/modules/purista_amqpbridge.html#getdefaultconfig"},{default:s(()=>[k]),_:1})])]),C,B,e("p",null,[R,M,D,Q,T,F,L,n(i,{to:"/api/modules/purista_amqpbridge.internal.html#encoderfunctions"},{default:s(()=>[N]),_:1}),w]),O,e("p",null,[e("a",A,[I,n(d)])]),P,e("p",null,[e("a",V,[j,n(d)])]),S,U,e("p",null,[z,G,H,J,K,W,X,n(i,{to:"/api/modules/purista_amqpbridge.html#encryptfunctions"},{default:s(()=>[Y]),_:1}),Z]),$,e("p",null,[e("a",ee,[te,n(d)])]),ne,ie,se,de,ae,e("table",null,[oe,e("tbody",null,[le,e("tr",null,[re,e("td",ce,[n(i,{to:"/api/modules/purista_amqpbridge.html#encoder"},{default:s(()=>[he]),_:1})])]),e("tr",null,[_e,e("td",ue,[n(i,{to:"/api/modules/purista_amqpbridge.html#encrypter"},{default:s(()=>[pe]),_:1})])]),fe,ge,be,me,ye,xe])]),qe,e("p",null,[e("a",Ee,[ve,n(d)])]),ke,Ce,e("p",null,[Be,Re,Me,n(i,{to:"/api/modules/purista_amqpbridge.html#rabbitmqeventbridgeconfig"},{default:s(()=>[De]),_:1})]),Qe,e("p",null,[n(i,{to:"/api/modules/purista_amqpbridge.html#rabbitmqeventbridgeconfig"},{default:s(()=>[Te]),_:1})]),Fe,e("p",null,[e("a",Le,[Ne,n(d)])])])}var Ve=l(h,[["render",we],["__file","purista_amqpbridge.html.vue"]]);export{Ve as default};
