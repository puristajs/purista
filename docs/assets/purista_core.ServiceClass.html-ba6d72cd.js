import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o as c,c as l,b as e,e as a,w as s,d as t,a as i}from"./app-9aedf0b4.js";const h={},p=e("h1",{id:"interface-serviceclass-configtype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#interface-serviceclass-configtype","aria-hidden":"true"},"#"),t(" Interface: ServiceClass<ConfigType>")],-1),f=i('<p>The ServiceClass interface</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h2><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;"><code>unknown</code> | <code>undefined</code></td></tr></tbody></table><h2 id="implemented-by" tabindex="-1"><a class="header-anchor" href="#implemented-by" aria-hidden="true">#</a> Implemented by</h2>',4),u=e("code",null,"Service",-1),g=e("code",null,"Service",-1),_=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),m=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),b=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),y=i('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="config" tabindex="-1"><a class="header-anchor" href="#config" aria-hidden="true">#</a> config</h3><p>• <strong>config</strong>: <code>ConfigType</code></p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',4),x={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L12",target:"_blank",rel:"noopener noreferrer"},v=i('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="destroy" tabindex="-1"><a class="header-anchor" href="#destroy" aria-hidden="true">#</a> destroy</h3><p>▸ <strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Stop and destroy the current service</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4>',7),S={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L17",target:"_blank",rel:"noopener noreferrer"},C=i('<hr><h3 id="gettracer" tabindex="-1"><a class="header-anchor" href="#gettracer" aria-hidden="true">#</a> getTracer</h3><p>▸ <strong>getTracer</strong>(): <code>Tracer</code></p><p>get the opentelemetry tracer of the service</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>Tracer</code></p><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4>',7),w={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L54",target:"_blank",rel:"noopener noreferrer"},k=i('<hr><h3 id="registercommand" tabindex="-1"><a class="header-anchor" href="#registercommand" aria-hidden="true">#</a> registerCommand</h3><p>▸ <strong>registerCommand</strong>(<code>commandDefinition</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Registers a new command for the service</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4>',5),P=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),T=e("td",{style:{"text-align":"left"}},[e("code",null,"commandDefinition")],-1),D={style:{"text-align":"left"}},L=e("code",null,"CommandDefinition",-1),R=e("td",{style:{"text-align":"left"}},"the service command definition",-1),N=e("h4",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),t(" Returns")],-1),F=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),I=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),A={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L60",target:"_blank",rel:"noopener noreferrer"},V=i('<hr><h3 id="registersubscription" tabindex="-1"><a class="header-anchor" href="#registersubscription" aria-hidden="true">#</a> registerSubscription</h3><p>▸ <strong>registerSubscription</strong>(<code>subscriptionDefinition</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Registers a new subscription for the service</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4>',5),B=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),E=e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionDefinition")],-1),M={style:{"text-align":"left"}},O=e("code",null,"SubscriptionDefinition",-1),U=e("td",{style:{"text-align":"left"}},"the subscription definition",-1),W=e("h4",{id:"returns-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-3","aria-hidden":"true"},"#"),t(" Returns")],-1),j=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),q=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),z={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L66",target:"_blank",rel:"noopener noreferrer"},G=i('<hr><h3 id="start" tabindex="-1"><a class="header-anchor" href="#start" aria-hidden="true">#</a> start</h3><p>▸ <strong>start</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Start the service</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4>',7),H={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L22",target:"_blank",rel:"noopener noreferrer"},J=i('<hr><h3 id="startactivespan" tabindex="-1"><a class="header-anchor" href="#startactivespan" aria-hidden="true">#</a> startActiveSpan</h3><p>▸ <strong>startActiveSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>context</code>, <code>fn</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p><p>Start a new active opentelemetry span with given options. A active span will be below the current span in hierarchy</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the name of the span</td></tr><tr><td style="text-align:left;"><code>opts</code></td><td style="text-align:left;"><code>SpanOptions</code></td><td style="text-align:left;">the additional span options</td></tr><tr><td style="text-align:left;"><code>context</code></td><td style="text-align:left;"><code>undefined</code> | <code>Context</code></td><td style="text-align:left;">the span context</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(<code>span</code>: <code>Span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</td><td style="text-align:left;">the function to be wrapped into the span</td></tr></tbody></table><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4>',11),K={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L44",target:"_blank",rel:"noopener noreferrer"},Q=i('<hr><h3 id="wrapinspan" tabindex="-1"><a class="header-anchor" href="#wrapinspan" aria-hidden="true">#</a> wrapInSpan</h3><p>▸ <strong>wrapInSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>fn</code>, <code>context?</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p><p>Wrap the given function in a opententelemetry span. The span will be on same hierarchy level as the current span.</p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the name of the span</td></tr><tr><td style="text-align:left;"><code>opts</code></td><td style="text-align:left;"><code>SpanOptions</code></td><td style="text-align:left;">the additional span options</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(<code>span</code>: <code>Span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</td><td style="text-align:left;">the function to be wrapped in span</td></tr><tr><td style="text-align:left;"><code>context?</code></td><td style="text-align:left;"><code>Context</code></td><td style="text-align:left;">the span context</td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>',11),X={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L33",target:"_blank",rel:"noopener noreferrer"};function Y(Z,$){const r=d("RouterLink"),n=d("ExternalLinkIcon");return c(),l("div",null,[e("p",null,[a(r,{to:"/api/"},{default:s(()=>[t("PURISTA API")]),_:1}),t(" / "),a(r,{to:"/api/modules.html"},{default:s(()=>[t("Modules")]),_:1}),t(" / "),a(r,{to:"/api/modules/purista_core.html"},{default:s(()=>[t("@purista/core")]),_:1}),t(" / ServiceClass")]),p,e("p",null,[a(r,{to:"/api/modules/purista_core.html"},{default:s(()=>[t("@purista/core")]),_:1}),t(".ServiceClass")]),f,e("ul",null,[e("li",null,[a(r,{to:"/api/classes/purista_core.Service.html"},{default:s(()=>[u]),_:1})]),e("li",null,[a(r,{to:"/api/classes/purista_core.Service.html"},{default:s(()=>[g]),_:1})])]),_,m,e("ul",null,[e("li",null,[a(r,{to:"/api/interfaces/purista_core.ServiceClass.html#config"},{default:s(()=>[t("config")]),_:1})])]),b,e("ul",null,[e("li",null,[a(r,{to:"/api/interfaces/purista_core.ServiceClass.html#destroy"},{default:s(()=>[t("destroy")]),_:1})]),e("li",null,[a(r,{to:"/api/interfaces/purista_core.ServiceClass.html#gettracer"},{default:s(()=>[t("getTracer")]),_:1})]),e("li",null,[a(r,{to:"/api/interfaces/purista_core.ServiceClass.html#registercommand"},{default:s(()=>[t("registerCommand")]),_:1})]),e("li",null,[a(r,{to:"/api/interfaces/purista_core.ServiceClass.html#registersubscription"},{default:s(()=>[t("registerSubscription")]),_:1})]),e("li",null,[a(r,{to:"/api/interfaces/purista_core.ServiceClass.html#start"},{default:s(()=>[t("start")]),_:1})]),e("li",null,[a(r,{to:"/api/interfaces/purista_core.ServiceClass.html#startactivespan"},{default:s(()=>[t("startActiveSpan")]),_:1})]),e("li",null,[a(r,{to:"/api/interfaces/purista_core.ServiceClass.html#wrapinspan"},{default:s(()=>[t("wrapInSpan")]),_:1})])]),y,e("p",null,[e("a",x,[t("core/types/ServiceClass.ts:12"),a(n)])]),v,e("p",null,[e("a",S,[t("core/types/ServiceClass.ts:17"),a(n)])]),C,e("p",null,[e("a",w,[t("core/types/ServiceClass.ts:54"),a(n)])]),k,e("table",null,[P,e("tbody",null,[e("tr",null,[T,e("td",D,[a(r,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[L]),_:1})]),R])])]),N,F,I,e("p",null,[e("a",A,[t("core/types/ServiceClass.ts:60"),a(n)])]),V,e("table",null,[B,e("tbody",null,[e("tr",null,[E,e("td",M,[a(r,{to:"/api/modules/purista_core.html#subscriptiondefinition"},{default:s(()=>[O]),_:1})]),U])])]),W,j,q,e("p",null,[e("a",z,[t("core/types/ServiceClass.ts:66"),a(n)])]),G,e("p",null,[e("a",H,[t("core/types/ServiceClass.ts:22"),a(n)])]),J,e("p",null,[e("a",K,[t("core/types/ServiceClass.ts:44"),a(n)])]),Q,e("p",null,[e("a",X,[t("core/types/ServiceClass.ts:33"),a(n)])])])}const ae=o(h,[["render",Y],["__file","purista_core.ServiceClass.html.vue"]]);export{ae as default};
