import{_ as p,C as o,c as r,o as l,ag as t,j as a,a as i,G as n}from"./chunks/framework.U_AETC1W.js";const d="/graphic/zipkin_screenshot.png",y=JSON.parse('{"title":"Zipkin","description":"Use Opentelemetry with Zipkin to trace PURISTA based typescript applications","frontmatter":{"title":"Zipkin","description":"Use Opentelemetry with Zipkin to trace PURISTA based typescript applications","order":409000},"headers":[],"relativePath":"handbook/4_open_telemetry/zipkin.md","filePath":"handbook/4_open_telemetry/zipkin.md","lastUpdated":1710090869000}'),h={name:"handbook/4_open_telemetry/zipkin.md"};function k(c,e,_,g,u,m){const s=o("ExternalLink");return l(),r("div",null,[e[4]||(e[4]=t("",5)),a("p",null,[e[0]||(e[0]=i("Open the Zipkin in your browser: ")),n(s,{href:"http://localhost:9411"}),e[1]||(e[1]=i("."))]),e[5]||(e[5]=t("",2)),a("p",null,[e[2]||(e[2]=i("To generate some traces, go to the OpenAPI UI at ")),n(s,{href:"http://localhost:8080"}),e[3]||(e[3]=i(" and call some commands. To stop and cleanup and stop all docker containers:"))]),e[6]||(e[6]=t("",1))])}const F=p(h,[["render",k]]);export{y as __pageData,F as default};
