import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as l,c,b as e,e as s,w as n,d as t,a as o}from"./app-9aedf0b4.js";const h={},u=e("h1",{id:"module-purista-natsbridge",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#module-purista-natsbridge","aria-hidden":"true"},"#"),t(" Module: @purista/natsbridge")],-1),p={href:"https://nats.io/",target:"_blank",rel:"noopener noreferrer"},g=e("br",null,null,-1),f=o(`<p>If JetStream is enabled, subscriptions which are marked as durable are persisted by using JetStream.<br> If JetStream is not available, subscription fall back to live-subscriptions without any persistence.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NatsBridge <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@purista/natsbridge&#39;</span>

<span class="token comment">// create and init our eventbridge</span>
  <span class="token keyword">const</span> eventBridge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NatsBridge</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> eventBridge<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li></li></ul><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="classes" tabindex="-1"><a class="header-anchor" href="#classes" aria-hidden="true">#</a> Classes</h3>`,6),b=e("h3",{id:"type-aliases",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),t(" Type Aliases")],-1),_=e("h3",{id:"variables",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#variables","aria-hidden":"true"},"#"),t(" Variables")],-1),m=e("h3",{id:"functions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#functions","aria-hidden":"true"},"#"),t(" Functions")],-1),x=e("h2",{id:"type-aliases-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-aliases-1","aria-hidden":"true"},"#"),t(" Type Aliases")],-1),y=e("h3",{id:"incomingmessagefunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#incomingmessagefunction","aria-hidden":"true"},"#"),t(" IncomingMessageFunction")],-1),v=e("strong",null,"IncomingMessageFunction",-1),k=e("code",null,"this",-1),N=e("code",null,"NatsBridge",-1),T=e("code",null,"error",-1),w=e("code",null,"NatsError",-1),B=e("code",null,"null",-1),S=e("code",null,"msg",-1),q=e("code",null,"Msg",-1),C=e("code",null,"Promise",-1),D=e("code",null,"void",-1),I=o('<h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>error</code>, <code>msg</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h5 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h5>',3),P=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),M=e("td",{style:{"text-align":"left"}},[e("code",null,"this")],-1),E={style:{"text-align":"left"}},A=e("code",null,"NatsBridge",-1),L=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"NatsError"),t(" | "),e("code",null,"null")])],-1),R=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"msg")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Msg")])],-1),V=e("h5",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns","aria-hidden":"true"},"#"),t(" Returns")],-1),F=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),O=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),G={href:"https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/types/IncomingMessageFunction.ts#L5",target:"_blank",rel:"noopener noreferrer"},Q=o('<hr><h3 id="natsbridgeconfig" tabindex="-1"><a class="header-anchor" href="#natsbridgeconfig" aria-hidden="true">#</a> NatsBridgeConfig</h3><p>Ƭ <strong>NatsBridgeConfig</strong>: <code>Prettify</code>&lt;{ <code>commandResponsePublishTwice</code>: <code>&quot;always&quot;</code> | <code>&quot;eventOnly&quot;</code> | <code>&quot;eventAndError&quot;</code> | <code>&quot;never&quot;</code> ; <code>defaultMessageExpiryInterval</code>: <code>number</code> ; <code>emptyTopicPartString</code>: <code>string</code> ; <code>maxMessages</code>: <code>number</code> ; <code>topicPrefix</code>: <code>string</code> } &amp; <code>ConnectionOptions</code>&gt;</p><p>the configuration for the NATS event bridge</p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4>',5),J={href:"https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/types/NatsBridgeConfig.ts#L6",target:"_blank",rel:"noopener noreferrer"},j=o('<h2 id="variables-1" tabindex="-1"><a class="header-anchor" href="#variables-1" aria-hidden="true">#</a> Variables</h2><h3 id="puristaversion" tabindex="-1"><a class="header-anchor" href="#puristaversion" aria-hidden="true">#</a> puristaVersion</h3><p>• <code>Const</code> <strong>puristaVersion</strong>: <code>&quot;1.7.0&quot;</code></p><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4>',4),U={href:"https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/version.ts#L1",target:"_blank",rel:"noopener noreferrer"},z=o('<h2 id="functions-1" tabindex="-1"><a class="header-anchor" href="#functions-1" aria-hidden="true">#</a> Functions</h2><h3 id="getcommandsubscriptiontopic" tabindex="-1"><a class="header-anchor" href="#getcommandsubscriptiontopic" aria-hidden="true">#</a> getCommandSubscriptionTopic</h3><p>▸ <strong>getCommandSubscriptionTopic</strong>(<code>this</code>, <code>address</code>): <code>string</code></p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4>',4),H=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),K=e("td",{style:{"text-align":"left"}},[e("code",null,"this")],-1),W={style:{"text-align":"left"}},X=e("code",null,"NatsBridge",-1),Y=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"address")]),e("td",{style:{"text-align":"left"}},[e("code",null,"EBMessageAddress")])],-1),Z=e("h4",{id:"returns-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-1","aria-hidden":"true"},"#"),t(" Returns")],-1),$=e("p",null,[e("code",null,"string")],-1),ee=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),te={href:"https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/topic/getCommandSubscriptionTopic.impl.ts#L5",target:"_blank",rel:"noopener noreferrer"},se=o('<hr><h3 id="getdefaultnatsbridgeconfig" tabindex="-1"><a class="header-anchor" href="#getdefaultnatsbridgeconfig" aria-hidden="true">#</a> getDefaultNatsBridgeConfig</h3><p>▸ <strong>getDefaultNatsBridgeConfig</strong>(): <code>Object</code></p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>commandResponsePublishTwice</code></td><td style="text-align:left;"><code>&quot;always&quot;</code> | <code>&quot;never&quot;</code> | <code>&quot;eventOnly&quot;</code> | <code>&quot;eventAndError&quot;</code></td><td style="text-align:left;">Indicates if a command response should be published a second time. If the command response gets published, it will be published to the regular topic pattern. If set to <code>never</code>, subscription might not get messages they are expecting because of the timing. If set to <code>always</code>, every command response is published. Because there might not be a consumer for every message, the broker will store the messages until the <code>defaultMessageExpiryInterval</code> is reached. This might result in a high ressource consumption of the broker. If set to <code>eventOnly</code>, only success responses which have a event name set, are published twice. There, we expect, that an event has at least one consumer subscription and the broker does not unnecessarily stores messages for a long time. <strong><code>Default</code></strong> <code>ts eventOnly </code></td></tr><tr><td style="text-align:left;"><code>defaultMessageExpiryInterval</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">the message expiry interval in seconds <strong><code>Default</code></strong> <code>ts 30 days in seconds </code></td></tr><tr><td style="text-align:left;"><code>emptyTopicPartString</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The string which should be used in topics for parts, which are undefined <strong><code>Default</code></strong> <code>ts __none__ </code></td></tr><tr><td style="text-align:left;"><code>maxMessages</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">maximum messages to run in parallel per subscription 10 means, each subscription can handle 10 calls at the same time <strong><code>Default</code></strong> <code>ts 10 </code></td></tr><tr><td style="text-align:left;"><code>topicPrefix</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the prefix for topic to prevent name collisions <strong><code>Default</code></strong> <code>ts purista </code></td></tr></tbody></table><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4>',7),ae={href:"https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/getDefaultNatsBridgeConfig.ts#L4",target:"_blank",rel:"noopener noreferrer"},ne=o('<hr><h3 id="getqueuegroupname" tabindex="-1"><a class="header-anchor" href="#getqueuegroupname" aria-hidden="true">#</a> getQueueGroupName</h3><p>▸ <strong>getQueueGroupName</strong>(<code>prefix</code>, <code>address</code>): <code>string</code></p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>prefix</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>address</code></td><td style="text-align:left;"><code>EBMessageAddress</code></td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4>',8),ie={href:"https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/getQueueGroupName.impl.ts#L3",target:"_blank",rel:"noopener noreferrer"},oe=o('<hr><h3 id="getsubscriptiontopic" tabindex="-1"><a class="header-anchor" href="#getsubscriptiontopic" aria-hidden="true">#</a> getSubscriptionTopic</h3><p>▸ <strong>getSubscriptionTopic</strong>(<code>this</code>, <code>subscription</code>): <code>string</code></p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4>',4),re=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),de=e("td",{style:{"text-align":"left"}},[e("code",null,"this")],-1),le={style:{"text-align":"left"}},ce=e("code",null,"NatsBridge",-1),he=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"subscription")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Subscription")])],-1),ue=e("h4",{id:"returns-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-4","aria-hidden":"true"},"#"),t(" Returns")],-1),pe=e("p",null,[e("code",null,"string")],-1),ge=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),fe={href:"https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/topic/getSubscriptionTopic.impl.ts#L5",target:"_blank",rel:"noopener noreferrer"},be=o('<hr><h3 id="gettopicname" tabindex="-1"><a class="header-anchor" href="#gettopicname" aria-hidden="true">#</a> getTopicName</h3><p>▸ <strong>getTopicName</strong>(<code>this</code>, <code>message</code>): <code>string</code></p><p>Calculates the NATS topic name for a message which should be sent. Something like: purista/message_type/instance_id/sender_name/sender_version/sender_target/eventname/receiver_name/receiver_version/receiver_target</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4>',5),_e=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),me=e("td",{style:{"text-align":"left"}},[e("code",null,"this")],-1),xe={style:{"text-align":"left"}},ye=e("code",null,"NatsBridge",-1),ve=e("td",{style:{"text-align":"left"}},"-",-1),ke=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"message")]),e("td",{style:{"text-align":"left"}},[e("code",null,"EBMessage")]),e("td",{style:{"text-align":"left"}},"the message to send")],-1),Ne=e("h4",{id:"returns-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-5","aria-hidden":"true"},"#"),t(" Returns")],-1),Te=e("p",null,[e("code",null,"string")],-1),we=e("p",null,"the NATS topic",-1),Be=e("h4",{id:"defined-in-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-7","aria-hidden":"true"},"#"),t(" Defined in")],-1),Se={href:"https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/topic/getTopicName.impl.ts#L5",target:"_blank",rel:"noopener noreferrer"};function qe(Ce,De){const a=r("RouterLink"),i=r("ExternalLinkIcon");return l(),c("div",null,[e("p",null,[s(a,{to:"/api/"},{default:n(()=>[t("PURISTA API")]),_:1}),t(" / "),s(a,{to:"/api/modules.html"},{default:n(()=>[t("Modules")]),_:1}),t(" / @purista/natsbridge")]),u,e("p",null,[t("Package for using a "),e("a",p,[t("NATS"),s(i)]),t(" broker as event bridge."),g,t(" The event bridge supports brokers with and without JetStream enabled.")]),f,e("ul",null,[e("li",null,[s(a,{to:"/api/classes/purista_natsbridge.NatsBridge.html"},{default:n(()=>[t("NatsBridge")]),_:1})])]),b,e("ul",null,[e("li",null,[s(a,{to:"/api/modules/purista_natsbridge.html#incomingmessagefunction"},{default:n(()=>[t("IncomingMessageFunction")]),_:1})]),e("li",null,[s(a,{to:"/api/modules/purista_natsbridge.html#natsbridgeconfig"},{default:n(()=>[t("NatsBridgeConfig")]),_:1})])]),_,e("ul",null,[e("li",null,[s(a,{to:"/api/modules/purista_natsbridge.html#puristaversion"},{default:n(()=>[t("puristaVersion")]),_:1})])]),m,e("ul",null,[e("li",null,[s(a,{to:"/api/modules/purista_natsbridge.html#getcommandsubscriptiontopic"},{default:n(()=>[t("getCommandSubscriptionTopic")]),_:1})]),e("li",null,[s(a,{to:"/api/modules/purista_natsbridge.html#getdefaultnatsbridgeconfig"},{default:n(()=>[t("getDefaultNatsBridgeConfig")]),_:1})]),e("li",null,[s(a,{to:"/api/modules/purista_natsbridge.html#getqueuegroupname"},{default:n(()=>[t("getQueueGroupName")]),_:1})]),e("li",null,[s(a,{to:"/api/modules/purista_natsbridge.html#getsubscriptiontopic"},{default:n(()=>[t("getSubscriptionTopic")]),_:1})]),e("li",null,[s(a,{to:"/api/modules/purista_natsbridge.html#gettopicname"},{default:n(()=>[t("getTopicName")]),_:1})])]),x,y,e("p",null,[t("Ƭ "),v,t(": ("),k,t(": "),s(a,{to:"/api/classes/purista_natsbridge.NatsBridge.html"},{default:n(()=>[N]),_:1}),t(", "),T,t(": "),w,t(" | "),B,t(", "),S,t(": "),q,t(") => "),C,t("<"),D,t(">")]),I,e("table",null,[P,e("tbody",null,[e("tr",null,[M,e("td",E,[s(a,{to:"/api/classes/purista_natsbridge.NatsBridge.html"},{default:n(()=>[A]),_:1})])]),L,R])]),V,F,O,e("p",null,[e("a",G,[t("natsbridge/src/types/IncomingMessageFunction.ts:5"),s(i)])]),Q,e("p",null,[e("a",J,[t("natsbridge/src/types/NatsBridgeConfig.ts:6"),s(i)])]),j,e("p",null,[e("a",U,[t("natsbridge/src/version.ts:1"),s(i)])]),z,e("table",null,[H,e("tbody",null,[e("tr",null,[K,e("td",W,[s(a,{to:"/api/classes/purista_natsbridge.NatsBridge.html"},{default:n(()=>[X]),_:1})])]),Y])]),Z,$,ee,e("p",null,[e("a",te,[t("natsbridge/src/topic/getCommandSubscriptionTopic.impl.ts:5"),s(i)])]),se,e("p",null,[e("a",ae,[t("natsbridge/src/getDefaultNatsBridgeConfig.ts:4"),s(i)])]),ne,e("p",null,[e("a",ie,[t("natsbridge/src/getQueueGroupName.impl.ts:3"),s(i)])]),oe,e("table",null,[re,e("tbody",null,[e("tr",null,[de,e("td",le,[s(a,{to:"/api/classes/purista_natsbridge.NatsBridge.html"},{default:n(()=>[ce]),_:1})])]),he])]),ue,pe,ge,e("p",null,[e("a",fe,[t("natsbridge/src/topic/getSubscriptionTopic.impl.ts:5"),s(i)])]),be,e("table",null,[_e,e("tbody",null,[e("tr",null,[me,e("td",xe,[s(a,{to:"/api/classes/purista_natsbridge.NatsBridge.html"},{default:n(()=>[ye]),_:1})]),ve]),ke])]),Ne,Te,we,Be,e("p",null,[e("a",Se,[t("natsbridge/src/topic/getTopicName.impl.ts:5"),s(i)])])])}const Me=d(h,[["render",qe],["__file","purista_natsbridge.html.vue"]]);export{Me as default};
