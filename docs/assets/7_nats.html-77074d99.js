import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as r,c as l,b as n,d as s,e as a,w as p,a as i}from"./app-9aedf0b4.js";const u="/graphic/nats_event_bridge_header.png",d={},k=n("p",null,[n("img",{src:u,alt:"NATS event bridge"})],-1),m=n("h2",{id:"general",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#general","aria-hidden":"true"},"#"),s(" General")],-1),h={href:"https://nats.io/",target:"_blank",rel:"noopener noreferrer"},v=i('<p>PURISTA provides the <code>@purista/natsbridge</code></p><div class="hint-container tip"><p class="hint-container-title">Pros</p><ul><li>allows scaling</li><li>fault tollerant</li><li>can be used with NATS State store (<code>@purista/nats-state-store</code>)</li><li>can be used with NATS Config store (<code>@purista/nats-config-store</code>)</li></ul></div><div class="hint-container danger"><p class="hint-container-title">Cons</p><ul><li>needs managing of an NATS broker</li><li>no persistance of messages available</li><li>hard to handle dead letters</li></ul></div><h2 id="config" tabindex="-1"><a class="header-anchor" href="#config" aria-hidden="true">#</a> Config</h2><p>The NATS event bridge uses the unified configuration schema as all event bridges.</p>',5),g={class:"hint-container info"},b=n("p",{class:"hint-container-title"},"API documentation",-1),f=i(`<h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NatsBridge <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@purista/natsbridge&#39;</span>

<span class="token keyword">const</span> eventBridge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NatsBridge</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> eventBridge<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="topic-names" tabindex="-1"><a class="header-anchor" href="#topic-names" aria-hidden="true">#</a> Topic names</h2><p>The NATS protocol relays on topics for message publishing/subscribe.</p><p>PURISTA is using the following schema for topics:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> topicPrefix <span class="token operator">=</span> config<span class="token punctuation">.</span>topicPrefix
<span class="token keyword">const</span> empty <span class="token operator">=</span> config<span class="token punctuation">.</span>emptyTopicPartString

<span class="token keyword">const</span> path <span class="token function">join</span><span class="token punctuation">(</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>topicPrefix<span class="token punctuation">,</span>
  <span class="token function">convertToSnakeCase</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>messageType<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">convertToSnakeCase</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>principalId <span class="token operator">||</span> empty<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">convertToSnakeCase</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>sender<span class="token punctuation">.</span>instanceId <span class="token operator">||</span> empty<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">convertToSnakeCase</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>sender<span class="token punctuation">.</span>serviceName<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">convertToSnakeCase</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>sender<span class="token punctuation">.</span>serviceVersion<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">convertToSnakeCase</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>sender<span class="token punctuation">.</span>serviceTarget<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">convertToSnakeCase</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>eventName <span class="token operator">||</span> empty<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">convertToSnakeCase</span><span class="token punctuation">(</span><span class="token punctuation">(</span>message <span class="token keyword">as</span> Command<span class="token punctuation">)</span><span class="token punctuation">.</span>receiver<span class="token operator">?.</span>instanceId <span class="token operator">||</span> empty<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">convertToSnakeCase</span><span class="token punctuation">(</span><span class="token punctuation">(</span>message <span class="token keyword">as</span> Command<span class="token punctuation">)</span><span class="token punctuation">.</span>receiver<span class="token operator">?.</span>serviceName <span class="token operator">||</span> empty<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">convertToSnakeCase</span><span class="token punctuation">(</span><span class="token punctuation">(</span>message <span class="token keyword">as</span> Command<span class="token punctuation">)</span><span class="token punctuation">.</span>receiver<span class="token operator">?.</span>serviceVersion <span class="token operator">||</span> empty<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">convertToSnakeCase</span><span class="token punctuation">(</span><span class="token punctuation">(</span>message <span class="token keyword">as</span> Command<span class="token punctuation">)</span><span class="token punctuation">.</span>receiver<span class="token operator">?.</span>serviceTarget <span class="token operator">||</span> empty<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This allows to have subscriptions for very specific messages.<br> The NATS event bridge does not use the available request-response pattern of NATS to be able to use the unified topic schema.<br> Otherwise, there would be the need to duplicate command response to be available for subscriptions.</p><h2 id="hints" tabindex="-1"><a class="header-anchor" href="#hints" aria-hidden="true">#</a> Hints</h2><div class="hint-container warning"><p class="hint-container-title">Ensure settings across instances</p><p>Remember to ensure, prefixes, and so on are the same on every event bridge instance.<br> Otherwise, you might get some unexpected behaviors.</p></div>`,9),_={class:"hint-container tip"},T=n("p",{class:"hint-container-title"},"OpenTelemetry",-1),y=n("br",null,null,-1),w={href:"https://w3c.github.io/trace-context-mqtt/",target:"_blank",rel:"noopener noreferrer"},S={href:"https://twitter.com/purista_js",target:"_blank",rel:"noopener noreferrer"},x={href:"https://discord.gg/9feaUm3H2v",target:"_blank",rel:"noopener noreferrer"};function C(N,A){const e=o("ExternalLinkIcon"),t=o("RouterLink");return r(),l("div",null,[k,m,n("p",null,[s("The "),n("a",h,[s("NATS message broker"),a(e)]),s(" is a fast and scalable message broker.")]),v,n("div",g,[b,n("ul",null,[n("li",null,[a(t,{to:"/api/modules/purista_core.html#eventbridgeconfig"},{default:p(()=>[s("General event bridge config")]),_:1})]),n("li",null,[a(t,{to:"/api/modules/purista_natsbridge.html#natsbridgeconfig"},{default:p(()=>[s("NATS bridge config")]),_:1})])])]),f,n("div",_,[T,n("p",null,[s("PURISTA is using the NATS header feature to add the OpenTelemetry information to each message, as recommended:"),y,n("a",w,[s("https://w3c.github.io/trace-context-mqtt/"),a(e)]),s(".")])]),n("p",null,[n("strong",null,[s("You can follow updated on Twitter "),n("a",S,[s("@purista_js"),a(e)]),s(" or join the "),n("a",x,[s("Discord server"),a(e)]),s(" to get in touch with PURISTA maintainers and other developers.")])])])}const B=c(d,[["render",C],["__file","7_nats.html.vue"]]);export{B as default};
