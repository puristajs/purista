import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as a,c,b as e,e as s,w as n,d as t,a as i}from"./app-2c9217f0.js";const h={},_=e("h1",{id:"interface-eventbridge",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#interface-eventbridge","aria-hidden":"true"},"#"),t(" Interface: EventBridge")],-1),u=e("p",null,"Event bridge interface The event bridge must implement this interface.",-1),g=e("h2",{id:"implemented-by",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implemented-by","aria-hidden":"true"},"#"),t(" Implemented by")],-1),p=e("code",null,"DefaultEventBridge",-1),m=e("code",null,"DefaultEventBridge",-1),f=e("code",null,"HttpEventBridge",-1),b=e("code",null,"HttpEventBridge",-1),y=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),v=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),E=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),x=i('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="defaultcommandtimeout" tabindex="-1"><a class="header-anchor" href="#defaultcommandtimeout" aria-hidden="true">#</a> defaultCommandTimeout</h3><p>• <code>Readonly</code> <strong>defaultCommandTimeout</strong>: <code>number</code></p><p>The default time until when a command invocation automatically returns a time out error</p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',5),B={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L24",target:"_blank",rel:"noopener noreferrer"},k=e("hr",null,null,-1),T=e("h3",{id:"name",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#name","aria-hidden":"true"},"#"),t(" name")],-1),I=e("p",null,[t("• "),e("code",null,"Readonly"),t(),e("strong",null,"name"),t(": "),e("code",null,"string")],-1),P=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),M={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L20",target:"_blank",rel:"noopener noreferrer"},w=i('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="destroy" tabindex="-1"><a class="header-anchor" href="#destroy" aria-hidden="true">#</a> destroy</h3><p>▸ <strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Shut down event bridge as gracefully as possible</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4>',7),R={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L102",target:"_blank",rel:"noopener noreferrer"},C=e("hr",null,null,-1),D=e("h3",{id:"emitmessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#emitmessage","aria-hidden":"true"},"#"),t(" emitMessage")],-1),L=e("strong",null,"emitMessage",-1),N=e("code",null,"message",-1),A=e("code",null,"Promise",-1),S=e("code",null,"Readonly",-1),H=e("code",null,"EBMessage",-1),O=e("p",null,"Emit a message to the eventbridge without awaiting a result",-1),V=e("h4",{id:"parameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters","aria-hidden":"true"},"#"),t(" Parameters")],-1),U=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),j=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),q={style:{"text-align":"left"}},z=e("code",null,"Omit",-1),F=e("code",null,"EBMessage",-1),G=e("code",null,'"id"',-1),J=e("code",null,'"instanceId"',-1),K=e("code",null,'"correlationId"',-1),Q=e("code",null,'"timestamp"',-1),W=e("td",{style:{"text-align":"left"}},"the message",-1),X=e("h4",{id:"returns-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-1","aria-hidden":"true"},"#"),t(" Returns")],-1),Y=e("code",null,"Promise",-1),Z=e("code",null,"Readonly",-1),$=e("code",null,"EBMessage",-1),ee=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),te={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L35",target:"_blank",rel:"noopener noreferrer"},se=i('<hr><h3 id="invoke" tabindex="-1"><a class="header-anchor" href="#invoke" aria-hidden="true">#</a> invoke</h3><p>▸ <strong>invoke</strong>&lt;<code>T</code>&gt;(<code>input</code>, <code>ttl?</code>): <code>Promise</code>&lt;<code>T</code>&gt;</p><p>Call a command of a service and return the result of this command</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4>',7),oe=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),ne=e("td",{style:{"text-align":"left"}},[e("code",null,"input")],-1),de={style:{"text-align":"left"}},ie=e("code",null,"Omit",-1),le=e("code",null,"contentEncoding",-1),re=e("code",null,"string",-1),ae=e("code",null,"contentType",-1),ce=e("code",null,"string",-1),he=e("code",null,"correlationId",-1),_e=e("code",null,"string",-1),ue=e("code",null,"eventName?",-1),ge=e("code",null,"string",-1),pe=e("code",null,"id",-1),me=e("code",null,"string",-1),fe=e("code",null,"instanceId",-1),be=e("code",null,"string",-1),ye=e("code",null,"messageType",-1),ve=e("code",null,"Command",-1),Ee=e("code",null,"otp?",-1),xe=e("code",null,"string",-1),Be=e("code",null,"payload",-1),ke=e("code",null,"parameter",-1),Te=e("code",null,"unknown",-1),Ie=e("code",null,"payload",-1),Pe=e("code",null,"unknown",-1),Me=e("code",null,"principalId?",-1),we=e("code",null,"string",-1),Re=e("code",null,"receiver",-1),Ce=e("code",null,"EBMessageAddress",-1),De=e("code",null,"sender",-1),Le=e("code",null,"EBMessageAddress",-1),Ne=e("code",null,"timestamp",-1),Ae=e("code",null,"number",-1),Se=e("code",null,"traceId?",-1),He=e("code",null,"string",-1),Oe=e("code",null,'"id"',-1),Ve=e("code",null,'"messageType"',-1),Ue=e("code",null,'"instanceId"',-1),je=e("code",null,'"correlationId"',-1),qe=e("code",null,'"timestamp"',-1),ze=e("td",{style:{"text-align":"left"}},"a partial command message",-1),Fe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"ttl?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"the time to live (timeout) of the invocation")],-1),Ge=e("h4",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),t(" Returns")],-1),Je=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"T"),t(">")],-1),Ke=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),Qe={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L46",target:"_blank",rel:"noopener noreferrer"},We=i('<hr><h3 id="ishealthy" tabindex="-1"><a class="header-anchor" href="#ishealthy" aria-hidden="true">#</a> isHealthy</h3><p>▸ <strong>isHealthy</strong>(): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>Indicates if the eventbridge is running and works correctly</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4>',7),Xe={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L97",target:"_blank",rel:"noopener noreferrer"},Ye=i('<hr><h3 id="isready" tabindex="-1"><a class="header-anchor" href="#isready" aria-hidden="true">#</a> isReady</h3><p>▸ <strong>isReady</strong>(): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>Indicates if the eventbridge has been started and is connected to underlaying message broker</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4>',7),Ze={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L92",target:"_blank",rel:"noopener noreferrer"},$e=i('<hr><h3 id="registercommand" tabindex="-1"><a class="header-anchor" href="#registercommand" aria-hidden="true">#</a> registerCommand</h3><p>▸ <strong>registerCommand</strong>(<code>address</code>, <code>cb</code>, <code>metadata</code>, <code>eventBridgeConfig</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4>',4),et=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),tt=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),st={style:{"text-align":"left"}},ot=e("code",null,"EBMessageAddress",-1),nt=e("td",{style:{"text-align":"left"}},"the address of the service command (service name, version and command name)",-1),dt=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),it={style:{"text-align":"left"}},lt=e("code",null,"message",-1),rt=e("code",null,"contentEncoding",-1),at=e("code",null,"string",-1),ct=e("code",null,"contentType",-1),ht=e("code",null,"string",-1),_t=e("code",null,"correlationId",-1),ut=e("code",null,"string",-1),gt=e("code",null,"eventName?",-1),pt=e("code",null,"string",-1),mt=e("code",null,"id",-1),ft=e("code",null,"string",-1),bt=e("code",null,"instanceId",-1),yt=e("code",null,"string",-1),vt=e("code",null,"messageType",-1),Et=e("code",null,"Command",-1),xt=e("code",null,"otp?",-1),Bt=e("code",null,"string",-1),kt=e("code",null,"payload",-1),Tt=e("code",null,"parameter",-1),It=e("code",null,"unknown",-1),Pt=e("code",null,"payload",-1),Mt=e("code",null,"unknown",-1),wt=e("code",null,"principalId?",-1),Rt=e("code",null,"string",-1),Ct=e("code",null,"receiver",-1),Dt=e("code",null,"EBMessageAddress",-1),Lt=e("code",null,"sender",-1),Nt=e("code",null,"EBMessageAddress",-1),At=e("code",null,"timestamp",-1),St=e("code",null,"number",-1),Ht=e("code",null,"traceId?",-1),Ot=e("code",null,"string",-1),Vt=e("code",null,"Promise",-1),Ut=e("code",null,"Readonly",-1),jt=e("code",null,"Omit",-1),qt=e("code",null,"contentEncoding",-1),zt=e("code",null,'"utf-8"',-1),Ft=e("code",null,"contentType",-1),Gt=e("code",null,'"application/json"',-1),Jt=e("code",null,"correlationId",-1),Kt=e("code",null,"string",-1),Qt=e("code",null,"eventName?",-1),Wt=e("code",null,"string",-1),Xt=e("code",null,"id",-1),Yt=e("code",null,"string",-1),Zt=e("code",null,"instanceId",-1),$t=e("code",null,"string",-1),es=e("code",null,"isHandledError",-1),ts=e("code",null,"boolean",-1),ss=e("code",null,"messageType",-1),os=e("code",null,"CommandErrorResponse",-1),ns=e("code",null,"otp?",-1),ds=e("code",null,"string",-1),is=e("code",null,"payload",-1),ls=e("code",null,"data?",-1),rs=e("code",null,"unknown",-1),as=e("code",null,"message",-1),cs=e("code",null,"string",-1),hs=e("code",null,"status",-1),_s=e("code",null,"StatusCode",-1),us=e("code",null,"principalId?",-1),gs=e("code",null,"string",-1),ps=e("code",null,"receiver",-1),ms=e("code",null,"EBMessageAddress",-1),fs=e("code",null,"sender",-1),bs=e("code",null,"EBMessageAddress",-1),ys=e("code",null,"timestamp",-1),vs=e("code",null,"number",-1),Es=e("code",null,"traceId?",-1),xs=e("code",null,"string",-1),Bs=e("code",null,'"instanceId"',-1),ks=e("code",null,"Readonly",-1),Ts=e("code",null,"Omit",-1),Is=e("code",null,"contentEncoding",-1),Ps=e("code",null,"string",-1),Ms=e("code",null,"contentType",-1),ws=e("code",null,"string",-1),Rs=e("code",null,"correlationId",-1),Cs=e("code",null,"string",-1),Ds=e("code",null,"eventName?",-1),Ls=e("code",null,"string",-1),Ns=e("code",null,"id",-1),As=e("code",null,"string",-1),Ss=e("code",null,"instanceId",-1),Hs=e("code",null,"string",-1),Os=e("code",null,"messageType",-1),Vs=e("code",null,"CommandSuccessResponse",-1),Us=e("code",null,"otp?",-1),js=e("code",null,"string",-1),qs=e("code",null,"payload",-1),zs=e("code",null,"unknown",-1),Fs=e("code",null,"principalId?",-1),Gs=e("code",null,"string",-1),Js=e("code",null,"receiver",-1),Ks=e("code",null,"EBMessageAddress",-1),Qs=e("code",null,"sender",-1),Ws=e("code",null,"EBMessageAddress",-1),Xs=e("code",null,"timestamp",-1),Ys=e("code",null,"number",-1),Zs=e("code",null,"traceId?",-1),$s=e("code",null,"string",-1),eo=e("code",null,'"instanceId"',-1),to=e("td",{style:{"text-align":"left"}},"the function to be called if a matching command arrives",-1),so=e("td",{style:{"text-align":"left"}},[e("code",null,"metadata")],-1),oo={style:{"text-align":"left"}},no=e("code",null,"CommandDefinitionMetadataBase",-1),io=e("td",{style:{"text-align":"left"}},"-",-1),lo=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),ro={style:{"text-align":"left"}},ao=e("code",null,"DefinitionEventBridgeConfig",-1),co=e("td",{style:{"text-align":"left"}},"-",-1),ho=e("h4",{id:"returns-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-5","aria-hidden":"true"},"#"),t(" Returns")],-1),_o=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"string"),t(">")],-1),uo=e("h4",{id:"defined-in-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-7","aria-hidden":"true"},"#"),t(" Defined in")],-1),go={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L56",target:"_blank",rel:"noopener noreferrer"},po=i('<hr><h3 id="registersubscription" tabindex="-1"><a class="header-anchor" href="#registersubscription" aria-hidden="true">#</a> registerSubscription</h3><p>▸ <strong>registerSubscription</strong>(<code>subscription</code>, <code>cb</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p><p>Register a new subscription</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4>',5),mo=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),fo=e("td",{style:{"text-align":"left"}},[e("code",null,"subscription")],-1),bo={style:{"text-align":"left"}},yo=e("code",null,"Subscription",-1),vo=e("td",{style:{"text-align":"left"}},"the subscription definition",-1),Eo=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),xo={style:{"text-align":"left"}},Bo=e("code",null,"message",-1),ko=e("code",null,"EBMessage",-1),To=e("code",null,"Promise",-1),Io=e("code",null,"undefined",-1),Po=e("code",null,"Omit",-1),Mo=e("code",null,"contentEncoding",-1),wo=e("code",null,"string",-1),Ro=e("code",null,"contentType",-1),Co=e("code",null,"string",-1),Do=e("code",null,"correlationId?",-1),Lo=e("code",null,"string",-1),No=e("code",null,"eventName",-1),Ao=e("code",null,"string",-1),So=e("code",null,"id",-1),Ho=e("code",null,"string",-1),Oo=e("code",null,"instanceId",-1),Vo=e("code",null,"string",-1),Uo=e("code",null,"messageType",-1),jo=e("code",null,"CustomMessage",-1),qo=e("code",null,"otp?",-1),zo=e("code",null,"string",-1),Fo=e("code",null,"payload?",-1),Go=e("code",null,"unknown",-1),Jo=e("code",null,"principalId?",-1),Ko=e("code",null,"string",-1),Qo=e("code",null,"receiver?",-1),Wo=e("code",null,"EBMessageAddress",-1),Xo=e("code",null,"sender",-1),Yo=e("code",null,"EBMessageAddress",-1),Zo=e("code",null,"timestamp",-1),$o=e("code",null,"number",-1),en=e("code",null,"traceId?",-1),tn=e("code",null,"string",-1),sn=e("code",null,'"id"',-1),on=e("code",null,'"instanceId"',-1),nn=e("code",null,'"timestamp"',-1),dn=e("td",{style:{"text-align":"left"}},"the function to be called if a matching message arrives",-1),ln=e("h4",{id:"returns-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-6","aria-hidden":"true"},"#"),t(" Returns")],-1),rn=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"string"),t(">")],-1),an=e("h4",{id:"defined-in-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-8","aria-hidden":"true"},"#"),t(" Defined in")],-1),cn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L78",target:"_blank",rel:"noopener noreferrer"},hn=i('<hr><h3 id="start" tabindex="-1"><a class="header-anchor" href="#start" aria-hidden="true">#</a> start</h3><p>▸ <strong>start</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Start the eventbridge and connect to the underlaying message broker</p><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4>',7),_n={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L29",target:"_blank",rel:"noopener noreferrer"},un=i('<hr><h3 id="unregistercommand" tabindex="-1"><a class="header-anchor" href="#unregistercommand" aria-hidden="true">#</a> unregisterCommand</h3><p>▸ <strong>unregisterCommand</strong>(<code>address</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Unregister a service command</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4>',5),gn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),pn=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),mn={style:{"text-align":"left"}},fn=e("code",null,"EBMessageAddress",-1),bn=e("td",{style:{"text-align":"left"}},"The address (service name, version and command name) of the command to be de-registered",-1),yn=e("h4",{id:"returns-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-8","aria-hidden":"true"},"#"),t(" Returns")],-1),vn=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),En=e("h4",{id:"defined-in-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-10","aria-hidden":"true"},"#"),t(" Defined in")],-1),xn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L71",target:"_blank",rel:"noopener noreferrer"},Bn=i('<hr><h3 id="unregistersubscription" tabindex="-1"><a class="header-anchor" href="#unregistersubscription" aria-hidden="true">#</a> unregisterSubscription</h3><p>▸ <strong>unregisterSubscription</strong>(<code>address</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4>',4),kn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Tn=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),In={style:{"text-align":"left"}},Pn=e("code",null,"EBMessageAddress",-1),Mn=e("h4",{id:"returns-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-9","aria-hidden":"true"},"#"),t(" Returns")],-1),wn=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),Rn=e("h4",{id:"defined-in-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-11","aria-hidden":"true"},"#"),t(" Defined in")],-1),Cn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L87",target:"_blank",rel:"noopener noreferrer"};function Dn(Ln,Nn){const o=l("RouterLink"),d=l("ExternalLinkIcon");return a(),c("div",null,[e("p",null,[s(o,{to:"/api/"},{default:n(()=>[t("PURISTA API")]),_:1}),t(" / "),s(o,{to:"/api/modules.html"},{default:n(()=>[t("Modules")]),_:1}),t(" / "),s(o,{to:"/api/modules/purista_core.html"},{default:n(()=>[t("@purista/core")]),_:1}),t(" / EventBridge")]),_,e("p",null,[s(o,{to:"/api/modules/purista_core.html"},{default:n(()=>[t("@purista/core")]),_:1}),t(".EventBridge")]),u,g,e("ul",null,[e("li",null,[s(o,{to:"/api/classes/purista_core.DefaultEventBridge.html"},{default:n(()=>[p]),_:1})]),e("li",null,[s(o,{to:"/api/classes/purista_core.DefaultEventBridge.html"},{default:n(()=>[m]),_:1})]),e("li",null,[s(o,{to:"/api/classes/purista_core.HttpEventBridge.html"},{default:n(()=>[f]),_:1})]),e("li",null,[s(o,{to:"/api/classes/purista_core.HttpEventBridge.html"},{default:n(()=>[b]),_:1})])]),y,v,e("ul",null,[e("li",null,[s(o,{to:"/api/interfaces/purista_core.EventBridge.html#defaultcommandtimeout"},{default:n(()=>[t("defaultCommandTimeout")]),_:1})]),e("li",null,[s(o,{to:"/api/interfaces/purista_core.EventBridge.html#name"},{default:n(()=>[t("name")]),_:1})])]),E,e("ul",null,[e("li",null,[s(o,{to:"/api/interfaces/purista_core.EventBridge.html#destroy"},{default:n(()=>[t("destroy")]),_:1})]),e("li",null,[s(o,{to:"/api/interfaces/purista_core.EventBridge.html#emitmessage"},{default:n(()=>[t("emitMessage")]),_:1})]),e("li",null,[s(o,{to:"/api/interfaces/purista_core.EventBridge.html#invoke"},{default:n(()=>[t("invoke")]),_:1})]),e("li",null,[s(o,{to:"/api/interfaces/purista_core.EventBridge.html#ishealthy"},{default:n(()=>[t("isHealthy")]),_:1})]),e("li",null,[s(o,{to:"/api/interfaces/purista_core.EventBridge.html#isready"},{default:n(()=>[t("isReady")]),_:1})]),e("li",null,[s(o,{to:"/api/interfaces/purista_core.EventBridge.html#registercommand"},{default:n(()=>[t("registerCommand")]),_:1})]),e("li",null,[s(o,{to:"/api/interfaces/purista_core.EventBridge.html#registersubscription"},{default:n(()=>[t("registerSubscription")]),_:1})]),e("li",null,[s(o,{to:"/api/interfaces/purista_core.EventBridge.html#start"},{default:n(()=>[t("start")]),_:1})]),e("li",null,[s(o,{to:"/api/interfaces/purista_core.EventBridge.html#unregistercommand"},{default:n(()=>[t("unregisterCommand")]),_:1})]),e("li",null,[s(o,{to:"/api/interfaces/purista_core.EventBridge.html#unregistersubscription"},{default:n(()=>[t("unregisterSubscription")]),_:1})])]),x,e("p",null,[e("a",B,[t("core/EventBridge/types/EventBridge.ts:24"),s(d)])]),k,T,I,P,e("p",null,[e("a",M,[t("core/EventBridge/types/EventBridge.ts:20"),s(d)])]),w,e("p",null,[e("a",R,[t("core/EventBridge/types/EventBridge.ts:102"),s(d)])]),C,D,e("p",null,[t("▸ "),L,t("("),N,t("): "),A,t("<"),S,t("<"),s(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:n(()=>[H]),_:1}),t(">>")]),O,V,e("table",null,[U,e("tbody",null,[e("tr",null,[j,e("td",q,[z,t("<"),s(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:n(()=>[F]),_:1}),t(", "),G,t(" | "),J,t(" | "),K,t(" | "),Q,t(">")]),W])])]),X,e("p",null,[Y,t("<"),Z,t("<"),s(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:n(()=>[$]),_:1}),t(">>")]),ee,e("p",null,[e("a",te,[t("core/EventBridge/types/EventBridge.ts:35"),s(d)])]),se,e("table",null,[oe,e("tbody",null,[e("tr",null,[ne,e("td",de,[ie,t("<{ "),le,t(": "),re,t(" ; "),ae,t(": "),ce,t(" ; "),he,t(": "),_e,t(" ; "),ue,t(": "),ge,t(" ; "),pe,t(": "),me,t(" ; "),fe,t(": "),be,t(" ; "),ye,t(": "),s(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:n(()=>[ve]),_:1}),t(" ; "),Ee,t(": "),xe,t(" ; "),Be,t(": { "),ke,t(": "),Te,t(" ; "),Ie,t(": "),Pe,t(" } ; "),Me,t(": "),we,t(" ; "),Re,t(": "),s(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:n(()=>[Ce]),_:1}),t(" ; "),De,t(": "),s(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:n(()=>[Le]),_:1}),t(" ; "),Ne,t(": "),Ae,t(" ; "),Se,t(": "),He,t(" }, "),Oe,t(" | "),Ve,t(" | "),Ue,t(" | "),je,t(" | "),qe,t(">")]),ze]),Fe])]),Ge,Je,Ke,e("p",null,[e("a",Qe,[t("core/EventBridge/types/EventBridge.ts:46"),s(d)])]),We,e("p",null,[e("a",Xe,[t("core/EventBridge/types/EventBridge.ts:97"),s(d)])]),Ye,e("p",null,[e("a",Ze,[t("core/EventBridge/types/EventBridge.ts:92"),s(d)])]),$e,e("table",null,[et,e("tbody",null,[e("tr",null,[tt,e("td",st,[s(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:n(()=>[ot]),_:1})]),nt]),e("tr",null,[dt,e("td",it,[t("("),lt,t(": { "),rt,t(": "),at,t(" ; "),ct,t(": "),ht,t(" ; "),_t,t(": "),ut,t(" ; "),gt,t(": "),pt,t(" ; "),mt,t(": "),ft,t(" ; "),bt,t(": "),yt,t(" ; "),vt,t(": "),s(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:n(()=>[Et]),_:1}),t(" ; "),xt,t(": "),Bt,t(" ; "),kt,t(": { "),Tt,t(": "),It,t(" ; "),Pt,t(": "),Mt,t(" } ; "),wt,t(": "),Rt,t(" ; "),Ct,t(": "),s(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:n(()=>[Dt]),_:1}),t(" ; "),Lt,t(": "),s(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:n(()=>[Nt]),_:1}),t(" ; "),At,t(": "),St,t(" ; "),Ht,t(": "),Ot,t(" }) => "),Vt,t("<"),Ut,t("<"),jt,t("<{ "),qt,t(": "),zt,t(" ; "),Ft,t(": "),Gt,t(" ; "),Jt,t(": "),Kt,t(" ; "),Qt,t(": "),Wt,t(" ; "),Xt,t(": "),Yt,t(" ; "),Zt,t(": "),$t,t(" ; "),es,t(": "),ts,t(" ; "),ss,t(": "),s(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:n(()=>[os]),_:1}),t(" ; "),ns,t(": "),ds,t(" ; "),is,t(": { "),ls,t(": "),rs,t(" ; "),as,t(": "),cs,t(" ; "),hs,t(": "),s(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:n(()=>[_s]),_:1}),t(" } ; "),us,t(": "),gs,t(" ; "),ps,t(": "),s(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:n(()=>[ms]),_:1}),t(" ; "),fs,t(": "),s(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:n(()=>[bs]),_:1}),t(" ; "),ys,t(": "),vs,t(" ; "),Es,t(": "),xs,t(" }, "),Bs,t(">> | "),ks,t("<"),Ts,t("<{ "),Is,t(": "),Ps,t(" ; "),Ms,t(": "),ws,t(" ; "),Rs,t(": "),Cs,t(" ; "),Ds,t(": "),Ls,t(" ; "),Ns,t(": "),As,t(" ; "),Ss,t(": "),Hs,t(" ; "),Os,t(": "),s(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:n(()=>[Vs]),_:1}),t(" ; "),Us,t(": "),js,t(" ; "),qs,t(": "),zs,t(" ; "),Fs,t(": "),Gs,t(" ; "),Js,t(": "),s(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:n(()=>[Ks]),_:1}),t(" ; "),Qs,t(": "),s(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:n(()=>[Ws]),_:1}),t(" ; "),Xs,t(": "),Ys,t(" ; "),Zs,t(": "),$s,t(" }, "),eo,t(">>>")]),to]),e("tr",null,[so,e("td",oo,[s(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:n(()=>[no]),_:1})]),io]),e("tr",null,[lo,e("td",ro,[s(o,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:n(()=>[ao]),_:1})]),co])])]),ho,_o,uo,e("p",null,[e("a",go,[t("core/EventBridge/types/EventBridge.ts:56"),s(d)])]),po,e("table",null,[mo,e("tbody",null,[e("tr",null,[fo,e("td",bo,[s(o,{to:"/api/modules/purista_core.html#subscription"},{default:n(()=>[yo]),_:1})]),vo]),e("tr",null,[Eo,e("td",xo,[t("("),Bo,t(": "),s(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:n(()=>[ko]),_:1}),t(") => "),To,t("<"),Io,t(" | "),Po,t("<{ "),Mo,t(": "),wo,t(" ; "),Ro,t(": "),Co,t(" ; "),Do,t(": "),Lo,t(" ; "),No,t(": "),Ao,t(" ; "),So,t(": "),Ho,t(" ; "),Oo,t(": "),Vo,t(" ; "),Uo,t(": "),s(o,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:n(()=>[jo]),_:1}),t(" ; "),qo,t(": "),zo,t(" ; "),Fo,t(": "),Go,t(" ; "),Jo,t(": "),Ko,t(" ; "),Qo,t(": "),s(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:n(()=>[Wo]),_:1}),t(" ; "),Xo,t(": "),s(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:n(()=>[Yo]),_:1}),t(" ; "),Zo,t(": "),$o,t(" ; "),en,t(": "),tn,t(" }, "),sn,t(" | "),on,t(" | "),nn,t(">>")]),dn])])]),ln,rn,an,e("p",null,[e("a",cn,[t("core/EventBridge/types/EventBridge.ts:78"),s(d)])]),hn,e("p",null,[e("a",_n,[t("core/EventBridge/types/EventBridge.ts:29"),s(d)])]),un,e("table",null,[gn,e("tbody",null,[e("tr",null,[pn,e("td",mn,[s(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:n(()=>[fn]),_:1})]),bn])])]),yn,vn,En,e("p",null,[e("a",xn,[t("core/EventBridge/types/EventBridge.ts:71"),s(d)])]),Bn,e("table",null,[kn,e("tbody",null,[e("tr",null,[Tn,e("td",In,[s(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:n(()=>[Pn]),_:1})])])])]),Mn,wn,Rn,e("p",null,[e("a",Cn,[t("core/EventBridge/types/EventBridge.ts:87"),s(d)])])])}const Hn=r(h,[["render",Dn],["__file","purista_core.EventBridge.html.vue"]]);export{Hn as default};
