import{_ as a,c as t,o,ag as s}from"./chunks/framework.U_AETC1W.js";const u=JSON.parse('{"title":"Type Alias: HttpEventBridgeConfig","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/base-http-bridge/type-aliases/HttpEventBridgeConfig.md","filePath":"api/@purista/base-http-bridge/type-aliases/HttpEventBridgeConfig.md","lastUpdated":1739900666000}'),i={name:"api/@purista/base-http-bridge/type-aliases/HttpEventBridgeConfig.md"};function n(r,e,l,d,p,c){return o(),t("div",null,e[0]||(e[0]=[s('<p><a href="./../README.html"><strong>@purista/base-http-bridge v2.0.0</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/base-http-bridge</a> / HttpEventBridgeConfig</p><h1 id="type-alias-httpeventbridgeconfig" tabindex="-1">Type Alias: HttpEventBridgeConfig <a class="header-anchor" href="#type-alias-httpeventbridgeconfig" aria-label="Permalink to &quot;Type Alias: HttpEventBridgeConfig&quot;">​</a></h1><blockquote><p><strong>HttpEventBridgeConfig</strong>: <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/base-http-bridge/src/HttpEventBridge/types/HttpEventBridgeConfig.ts#L4" target="_blank" rel="noreferrer">base-http-bridge/src/HttpEventBridge/types/HttpEventBridgeConfig.ts:4</a></p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="apiprefix" tabindex="-1">apiPrefix? <a class="header-anchor" href="#apiprefix" aria-label="Permalink to &quot;apiPrefix?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>apiPrefix</strong>: <code>string</code></p></blockquote><p>the prefix to be used if the command is configured as REST api endpoint according to the OpenAPI defintion needs to <code>enableRestApiExpose</code> set to <code>true</code></p><h4 id="default" tabindex="-1">Default <a class="header-anchor" href="#default" aria-label="Permalink to &quot;Default&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api</span></span></code></pre></div><h3 id="commandpayloadascloudevent" tabindex="-1">commandPayloadAsCloudEvent? <a class="header-anchor" href="#commandpayloadascloudevent" aria-label="Permalink to &quot;commandPayloadAsCloudEvent?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>commandPayloadAsCloudEvent</strong>: <code>boolean</code></p></blockquote><p>command invocations are wrapped in CloudEvent</p><h4 id="link" tabindex="-1">Link <a class="header-anchor" href="#link" aria-label="Permalink to &quot;Link&quot;">​</a></h4><p><a href="https://github.com/cloudevents/spec/tree/v1.0" target="_blank" rel="noreferrer">https://github.com/cloudevents/spec/tree/v1.0</a></p><h4 id="default-1" tabindex="-1">Default <a class="header-anchor" href="#default-1" aria-label="Permalink to &quot;Default&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div><h3 id="enablehttpcompression" tabindex="-1">enableHttpCompression? <a class="header-anchor" href="#enablehttpcompression" aria-label="Permalink to &quot;enableHttpCompression?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>enableHttpCompression</strong>: <code>boolean</code></p></blockquote><p>enable HTTP compression in web server</p><h4 id="default-2" tabindex="-1">Default <a class="header-anchor" href="#default-2" aria-label="Permalink to &quot;Default&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><h3 id="enablerestapiexpose" tabindex="-1">enableRestApiExpose? <a class="header-anchor" href="#enablerestapiexpose" aria-label="Permalink to &quot;enableRestApiExpose?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>enableRestApiExpose</strong>: <code>boolean</code></p></blockquote><p>expose commands as regular REST endpoints when they are configured as endpoints</p><h4 id="default-3" tabindex="-1">Default <a class="header-anchor" href="#default-3" aria-label="Permalink to &quot;Default&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><h3 id="name" tabindex="-1">name? <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>name</strong>: <code>string</code></p></blockquote><p>name of the bridge</p><h4 id="default-4" tabindex="-1">Default <a class="header-anchor" href="#default-4" aria-label="Permalink to &quot;Default&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HttpEventBridge</span></span></code></pre></div><h3 id="pathprefix" tabindex="-1">pathPrefix? <a class="header-anchor" href="#pathprefix" aria-label="Permalink to &quot;pathPrefix?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>pathPrefix</strong>: <code>string</code></p></blockquote><p>the prefix to be used for exposing commands as endpoints expecting a event bus message</p><h4 id="default-5" tabindex="-1">Default <a class="header-anchor" href="#default-5" aria-label="Permalink to &quot;Default&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">purista</span></span></code></pre></div><h3 id="serve" tabindex="-1">serve() <a class="header-anchor" href="#serve" aria-label="Permalink to &quot;serve()&quot;">​</a></h3><blockquote><p><strong>serve</strong>: (<code>options</code>) =&gt; <code>Server</code> | <code>Http2Server</code> | <code>Http2SecureServer</code></p></blockquote><p>The serve function is depending on the runtime.</p><ul><li>Bun: <code>Bun.serve</code></li><li>Node.js: <code>serve</code> function from additional package <code>@hono/hono-node-server</code></li><li>Deno: <code>serve</code> function from package <code>https://deno.land/std/http/server.ts</code></li></ul><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="options" tabindex="-1">options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options&quot;">​</a></h5><h6 id="fetch" tabindex="-1">fetch <a class="header-anchor" href="#fetch" aria-label="Permalink to &quot;fetch&quot;">​</a></h6><p>(<code>request</code>) =&gt; <code>Promise</code>&lt;<code>unknown</code>&gt; | <code>unknown</code></p><h6 id="hostname" tabindex="-1">hostname? <a class="header-anchor" href="#hostname" aria-label="Permalink to &quot;hostname?&quot;">​</a></h6><p><code>string</code></p><h6 id="port" tabindex="-1">port? <a class="header-anchor" href="#port" aria-label="Permalink to &quot;port?&quot;">​</a></h6><p><code>number</code></p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Server</code> | <code>Http2Server</code> | <code>Http2SecureServer</code></p><h4 id="see" tabindex="-1">See <a class="header-anchor" href="#see" aria-label="Permalink to &quot;See&quot;">​</a></h4><p><a href="https://hono.dev" target="_blank" rel="noreferrer">https://hono.dev</a></p><h3 id="serverhost" tabindex="-1">serverHost? <a class="header-anchor" href="#serverhost" aria-label="Permalink to &quot;serverHost?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>serverHost</strong>: <code>string</code></p></blockquote><p>Host of the server.</p><h4 id="default-6" tabindex="-1">Default <a class="header-anchor" href="#default-6" aria-label="Permalink to &quot;Default&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">127.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span></span></code></pre></div><h3 id="serverport" tabindex="-1">serverPort? <a class="header-anchor" href="#serverport" aria-label="Permalink to &quot;serverPort?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>serverPort</strong>: <code>number</code></p></blockquote><p>Port of the server.</p><h4 id="default-7" tabindex="-1">Default <a class="header-anchor" href="#default-7" aria-label="Permalink to &quot;Default&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span></span></code></pre></div><h3 id="subscriptionpayloadascloudevent" tabindex="-1">subscriptionPayloadAsCloudEvent? <a class="header-anchor" href="#subscriptionpayloadascloudevent" aria-label="Permalink to &quot;subscriptionPayloadAsCloudEvent?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>subscriptionPayloadAsCloudEvent</strong>: <code>boolean</code></p></blockquote><p>subscription invocations are wrapped in CloudEvent</p><h4 id="link-1" tabindex="-1">Link <a class="header-anchor" href="#link-1" aria-label="Permalink to &quot;Link&quot;">​</a></h4><p><a href="https://github.com/cloudevents/spec/tree/v1.0" target="_blank" rel="noreferrer">https://github.com/cloudevents/spec/tree/v1.0</a></p><h4 id="default-8" tabindex="-1">Default <a class="header-anchor" href="#default-8" aria-label="Permalink to &quot;Default&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div>',72)]))}const b=a(i,[["render",n]]);export{u as __pageData,b as default};
