import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as c,c as r,b as e,e as n,w as s,d as t,a as d}from"./app-ccf1f840.js";const _={},h=e("h1",{id:"interface-httpeventbridgeclient",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#interface-httpeventbridgeclient","aria-hidden":"true"},"#"),t(" Interface: HttpEventBridgeClient")],-1),u=e("p",null,"The HttpEventBridgeClient connects the HTTPEventBridge with the sidecar service. This client is responsible for the communication to the sidecar service.",-1),p=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),g=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),m=e("h2",{id:"properties-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties-1","aria-hidden":"true"},"#"),t(" Properties")],-1),f=e("h3",{id:"getapipathforcommand",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getapipathforcommand","aria-hidden":"true"},"#"),t(" getApiPathForCommand")],-1),y=e("strong",null,"getApiPathForCommand",-1),b=e("code",null,"addess",-1),x=e("code",null,"EBMessageAddress",-1),v=e("code",null,"metadata",-1),E=e("code",null,"expose",-1),B=e("code",null,"contentEncodingRequest?",-1),T=e("code",null,"string",-1),C=e("code",null,"contentEncodingResponse?",-1),P=e("code",null,"string",-1),H=e("code",null,"contentTypeRequest?",-1),k=e("code",null,"string",-1),S=e("code",null,"contentTypeResponse?",-1),R=e("code",null,"string",-1),I=e("code",null,"deprecated?",-1),A=e("code",null,"boolean",-1),w=e("code",null,"inputPayload?",-1),M=e("code",null,"SchemaObject",-1),O=e("code",null,"outputPayload?",-1),N=e("code",null,"SchemaObject",-1),L=e("code",null,"parameter?",-1),j=e("code",null,"SchemaObject",-1),q=e("code",null,"http",-1),D=e("code",null,"method",-1),F=e("code",null,'"DELETE"',-1),V=e("code",null,'"GET"',-1),G=e("code",null,'"POST"',-1),U=e("code",null,'"PATCH"',-1),Q=e("code",null,'"PUT"',-1),z=e("code",null,"openApi?",-1),J=e("code",null,"additionalStatusCodes?",-1),K=e("code",null,"StatusCode",-1),W=e("code",null,"description",-1),X=e("code",null,"string",-1),Y=e("code",null,"isSecure",-1),Z=e("code",null,"boolean",-1),$=e("code",null,"operationId?",-1),ee=e("code",null,"string",-1),te=e("code",null,"query?",-1),ne=e("code",null,"QueryParameter",-1),oe=e("code",null,"summary",-1),se=e("code",null,"string",-1),le=e("code",null,"tags?",-1),de=e("code",null,"string",-1),ie=e("code",null,"path",-1),ae=e("code",null,"string",-1),ce=e("code",null,"string",-1),re=d('<h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>addess</code>, <code>metadata</code>): <code>string</code></p><p>Generate the url path of the command based on the command builder <code>exposeAsHttpEndpoint</code> settings. This url is a POST endpoint and expects the payload and parameter as defined for exposing.</p><h5 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h5>',4),_e=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),he=e("td",{style:{"text-align":"left"}},[e("code",null,"addess")],-1),ue={style:{"text-align":"left"}},pe=e("code",null,"EBMessageAddress",-1),ge=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"metadata")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")])],-1),me=e("td",{style:{"text-align":"left"}},[e("code",null,"metadata.expose")],-1),fe={style:{"text-align":"left"}},ye=e("code",null,"contentEncodingRequest?",-1),be=e("code",null,"string",-1),xe=e("code",null,"contentEncodingResponse?",-1),ve=e("code",null,"string",-1),Ee=e("code",null,"contentTypeRequest?",-1),Be=e("code",null,"string",-1),Te=e("code",null,"contentTypeResponse?",-1),Ce=e("code",null,"string",-1),Pe=e("code",null,"deprecated?",-1),He=e("code",null,"boolean",-1),ke=e("code",null,"inputPayload?",-1),Se=e("code",null,"SchemaObject",-1),Re=e("code",null,"outputPayload?",-1),Ie=e("code",null,"SchemaObject",-1),Ae=e("code",null,"parameter?",-1),we=e("code",null,"SchemaObject",-1),Me=e("code",null,"http",-1),Oe=e("code",null,"method",-1),Ne=e("code",null,'"DELETE"',-1),Le=e("code",null,'"GET"',-1),je=e("code",null,'"POST"',-1),qe=e("code",null,'"PATCH"',-1),De=e("code",null,'"PUT"',-1),Fe=e("code",null,"openApi?",-1),Ve=e("code",null,"additionalStatusCodes?",-1),Ge=e("code",null,"StatusCode",-1),Ue=e("code",null,"description",-1),Qe=e("code",null,"string",-1),ze=e("code",null,"isSecure",-1),Je=e("code",null,"boolean",-1),Ke=e("code",null,"operationId?",-1),We=e("code",null,"string",-1),Xe=e("code",null,"query?",-1),Ye=e("code",null,"QueryParameter",-1),Ze=e("code",null,"summary",-1),$e=e("code",null,"string",-1),et=e("code",null,"tags?",-1),tt=e("code",null,"string",-1),nt=e("code",null,"path",-1),ot=e("code",null,"string",-1),st=e("h5",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns","aria-hidden":"true"},"#"),t(" Returns")],-1),lt=e("p",null,[e("code",null,"string")],-1),dt=e("p",null,"url path of endpoint",-1),it=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),at={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpEventBridge/types/HttpEventBridgeClient.ts#L22",target:"_blank",rel:"noopener noreferrer"},ct=e("hr",null,null,-1),rt=e("h3",{id:"getinternalpathforcommand",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getinternalpathforcommand","aria-hidden":"true"},"#"),t(" getInternalPathForCommand")],-1),_t=e("strong",null,"getInternalPathForCommand",-1),ht=e("code",null,"address",-1),ut=e("code",null,"EBMessageAddress",-1),pt=e("code",null,"string",-1),gt=e("h4",{id:"type-declaration-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-1","aria-hidden":"true"},"#"),t(" Type declaration")],-1),mt=e("p",null,[t("▸ ("),e("code",null,"address"),t("): "),e("code",null,"string")],-1),ft=e("p",null,"Generate the url path of the command. This url is a POST endpoint and expects a command message as payload",-1),yt=e("h5",{id:"parameters-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-1","aria-hidden":"true"},"#"),t(" Parameters")],-1),bt=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),xt=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),vt={style:{"text-align":"left"}},Et=e("code",null,"EBMessageAddress",-1),Bt=e("h5",{id:"returns-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-1","aria-hidden":"true"},"#"),t(" Returns")],-1),Tt=e("p",null,[e("code",null,"string")],-1),Ct=e("p",null,"url path of endpoint",-1),Pt=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ht={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpEventBridge/types/HttpEventBridgeClient.ts#L14",target:"_blank",rel:"noopener noreferrer"},kt=e("hr",null,null,-1),St=e("h3",{id:"getinternalpathforsubscription",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getinternalpathforsubscription","aria-hidden":"true"},"#"),t(" getInternalPathForSubscription")],-1),Rt=e("strong",null,"getInternalPathForSubscription",-1),It=e("code",null,"address",-1),At=e("code",null,"EBMessageAddress",-1),wt=e("code",null,"string",-1),Mt=e("h4",{id:"type-declaration-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-2","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Ot=e("p",null,[t("▸ ("),e("code",null,"address"),t("): "),e("code",null,"string")],-1),Nt=e("p",null,"Generate the url path of the subscription. This url is a POST endpoint. The expected payload is a EBMessage or an CloudEvent with an EBMessage as data depending on config settings",-1),Lt=e("h5",{id:"parameters-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-2","aria-hidden":"true"},"#"),t(" Parameters")],-1),jt=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),qt=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),Dt={style:{"text-align":"left"}},Ft=e("code",null,"EBMessageAddress",-1),Vt=e("h5",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),t(" Returns")],-1),Gt=e("p",null,[e("code",null,"string")],-1),Ut=e("p",null,"url path of endpoint",-1),Qt=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),zt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpEventBridge/types/HttpEventBridgeClient.ts#L31",target:"_blank",rel:"noopener noreferrer"},Jt=e("hr",null,null,-1),Kt=e("h3",{id:"invoke",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#invoke","aria-hidden":"true"},"#"),t(" invoke")],-1),Wt=e("strong",null,"invoke",-1),Xt=e("code",null,"command",-1),Yt=e("code",null,"contentEncoding",-1),Zt=e("code",null,"string",-1),$t=e("code",null,"contentType",-1),en=e("code",null,"string",-1),tn=e("code",null,"correlationId",-1),nn=e("code",null,"string",-1),on=e("code",null,"eventName?",-1),sn=e("code",null,"string",-1),ln=e("code",null,"id",-1),dn=e("code",null,"string",-1),an=e("code",null,"messageType",-1),cn=e("code",null,"Command",-1),rn=e("code",null,"otp?",-1),_n=e("code",null,"string",-1),hn=e("code",null,"payload",-1),un=e("code",null,"parameter",-1),pn=e("code",null,"unknown",-1),gn=e("code",null,"payload",-1),mn=e("code",null,"unknown",-1),fn=e("code",null,"principalId?",-1),yn=e("code",null,"string",-1),bn=e("code",null,"receiver",-1),xn=e("code",null,"EBMessageAddress",-1),vn=e("code",null,"sender",-1),En=e("code",null,"timestamp",-1),Bn=e("code",null,"number",-1),Tn=e("code",null,"traceId?",-1),Cn=e("code",null,"string",-1),Pn=e("code",null,"headers?",-1),Hn=e("code",null,"Record",-1),kn=e("code",null,"string",-1),Sn=e("code",null,"string",-1),Rn=e("code",null,"timeout?",-1),In=e("code",null,"number",-1),An=e("code",null,"Promise",-1),wn=e("code",null,"CommandResponse",-1),Mn=e("h4",{id:"type-declaration-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-3","aria-hidden":"true"},"#"),t(" Type declaration")],-1),On=e("code",null,"command",-1),Nn=e("code",null,"headers?",-1),Ln=e("code",null,"timeout?",-1),jn=e("code",null,"Promise",-1),qn=e("code",null,"CommandResponse",-1),Dn=e("p",null,"Invoke a command",-1),Fn=e("h5",{id:"parameters-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-3","aria-hidden":"true"},"#"),t(" Parameters")],-1),Vn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Gn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"command")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"Command")],-1),Un=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"command.contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content encoding of message payload")],-1),Qn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"command.contentType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content type of message payload")],-1),zn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"command.correlationId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"correlation id to know which command response referrs to which command")],-1),Jn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"command.eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name for this message")],-1),Kn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"command.id")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"global unique id of message")],-1),Wn=e("td",{style:{"text-align":"left"}},[e("code",null,"command.messageType")],-1),Xn={style:{"text-align":"left"}},Yn=e("code",null,"Command",-1),Zn=e("td",{style:{"text-align":"left"}},"-",-1),$n=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"command.otp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"stringified Opentelemetry parent trace id")],-1),eo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"command.payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),to=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"command.payload.parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),no=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"command.payload.payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),oo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"command.principalId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"principal id")],-1),so=e("td",{style:{"text-align":"left"}},[e("code",null,"command.receiver")],-1),lo={style:{"text-align":"left"}},io=e("code",null,"EBMessageAddress",-1),ao=e("td",{style:{"text-align":"left"}},"-",-1),co=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"command.sender")]),e("td",{style:{"text-align":"left"}},"{ serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; }"),e("td",{style:{"text-align":"left"}},"-")],-1),ro=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"command.timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"timestamp of message creation time")],-1),_o=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"command.traceId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"trace id of message")],-1),ho=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"headers?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"string"),t(">")]),e("td",{style:{"text-align":"left"}},"optional HTTP header")],-1),uo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"timeout?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"the command timeout")],-1),po=e("h5",{id:"returns-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-3","aria-hidden":"true"},"#"),t(" Returns")],-1),go=e("code",null,"Promise",-1),mo=e("code",null,"CommandResponse",-1),fo=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),yo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpEventBridge/types/HttpEventBridgeClient.ts#L40",target:"_blank",rel:"noopener noreferrer"},bo=d('<hr><h3 id="issidecaravailable" tabindex="-1"><a class="header-anchor" href="#issidecaravailable" aria-hidden="true">#</a> isSidecarAvailable</h3><p>• <strong>isSidecarAvailable</strong>: () =&gt; <code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="type-declaration-4" tabindex="-1"><a class="header-anchor" href="#type-declaration-4" aria-hidden="true">#</a> Type declaration</h4><p>▸ (): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>Checks if the sidecar container is available to be able to send events and invoke commands</p><h5 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>boolean</p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4>',10),xo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpEventBridge/types/HttpEventBridgeClient.ts#L54",target:"_blank",rel:"noopener noreferrer"},vo=e("hr",null,null,-1),Eo=e("h3",{id:"sendevent",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#sendevent","aria-hidden":"true"},"#"),t(" sendEvent")],-1),Bo=e("strong",null,"sendEvent",-1),To=e("code",null,"message",-1),Co=e("code",null,"EBMessage",-1),Po=e("code",null,"headers?",-1),Ho=e("code",null,"Record",-1),ko=e("code",null,"string",-1),So=e("code",null,"string",-1),Ro=e("code",null,"Promise",-1),Io=e("code",null,"void",-1),Ao=d('<h4 id="type-declaration-5" tabindex="-1"><a class="header-anchor" href="#type-declaration-5" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>message</code>, <code>headers?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Send a EBMessage as event to the underlaying message infrastructure.</p><h5 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h5>',4),wo=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Mo=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),Oo={style:{"text-align":"left"}},No=e("code",null,"EBMessage",-1),Lo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"headers?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"string"),t(">")])],-1),jo=e("h5",{id:"returns-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-5","aria-hidden":"true"},"#"),t(" Returns")],-1),qo=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),Do=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),Fo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpEventBridge/types/HttpEventBridgeClient.ts#L48",target:"_blank",rel:"noopener noreferrer"};function Vo(Go,Uo){const o=i("RouterLink"),l=i("ExternalLinkIcon");return c(),r("div",null,[e("p",null,[n(o,{to:"/api/"},{default:s(()=>[t("PURISTA API")]),_:1}),t(" / "),n(o,{to:"/api/modules.html"},{default:s(()=>[t("Modules")]),_:1}),t(" / "),n(o,{to:"/api/modules/purista_core.html"},{default:s(()=>[t("@purista/core")]),_:1}),t(" / HttpEventBridgeClient")]),h,e("p",null,[n(o,{to:"/api/modules/purista_core.html"},{default:s(()=>[t("@purista/core")]),_:1}),t(".HttpEventBridgeClient")]),u,p,g,e("ul",null,[e("li",null,[n(o,{to:"/api/interfaces/purista_core.HttpEventBridgeClient.html#getapipathforcommand"},{default:s(()=>[t("getApiPathForCommand")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.HttpEventBridgeClient.html#getinternalpathforcommand"},{default:s(()=>[t("getInternalPathForCommand")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.HttpEventBridgeClient.html#getinternalpathforsubscription"},{default:s(()=>[t("getInternalPathForSubscription")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.HttpEventBridgeClient.html#invoke"},{default:s(()=>[t("invoke")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.HttpEventBridgeClient.html#issidecaravailable"},{default:s(()=>[t("isSidecarAvailable")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.HttpEventBridgeClient.html#sendevent"},{default:s(()=>[t("sendEvent")]),_:1})])]),m,f,e("p",null,[t("• "),y,t(": ("),b,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[x]),_:1}),t(", "),v,t(": { "),E,t(": { "),B,t(": "),T,t(" ; "),C,t(": "),P,t(" ; "),H,t(": "),k,t(" ; "),S,t(": "),R,t(" ; "),I,t(": "),A,t(" ; "),w,t(": "),M,t(" ; "),O,t(": "),N,t(" ; "),L,t(": "),j,t(" } & { "),q,t(": { "),D,t(": "),F,t(" | "),V,t(" | "),G,t(" | "),U,t(" | "),Q,t(" ; "),z,t(": { "),J,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[K]),_:1}),t("[] ; "),W,t(": "),X,t(" ; "),Y,t(": "),Z,t(" ; "),$,t(": "),ee,t(" ; "),te,t(": "),n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[ne]),_:1}),t("<{}>[] ; "),oe,t(": "),se,t(" ; "),le,t(": "),de,t("[] } ; "),ie,t(": "),ae,t(" } } }) => "),ce]),re,e("table",null,[_e,e("tbody",null,[e("tr",null,[he,e("td",ue,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[pe]),_:1})])]),ge,e("tr",null,[me,e("td",fe,[t("{ "),ye,t(": "),be,t(" ; "),xe,t(": "),ve,t(" ; "),Ee,t(": "),Be,t(" ; "),Te,t(": "),Ce,t(" ; "),Pe,t(": "),He,t(" ; "),ke,t(": "),Se,t(" ; "),Re,t(": "),Ie,t(" ; "),Ae,t(": "),we,t(" } & { "),Me,t(": { "),Oe,t(": "),Ne,t(" | "),Le,t(" | "),je,t(" | "),qe,t(" | "),De,t(" ; "),Fe,t(": { "),Ve,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[Ge]),_:1}),t("[] ; "),Ue,t(": "),Qe,t(" ; "),ze,t(": "),Je,t(" ; "),Ke,t(": "),We,t(" ; "),Xe,t(": "),n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[Ye]),_:1}),t("<{}>[] ; "),Ze,t(": "),$e,t(" ; "),et,t(": "),tt,t("[] } ; "),nt,t(": "),ot,t(" } }")])])])]),st,lt,dt,it,e("p",null,[e("a",at,[t("HttpEventBridge/types/HttpEventBridgeClient.ts:22"),n(l)])]),ct,rt,e("p",null,[t("• "),_t,t(": ("),ht,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[ut]),_:1}),t(") => "),pt]),gt,mt,ft,yt,e("table",null,[bt,e("tbody",null,[e("tr",null,[xt,e("td",vt,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Et]),_:1})])])])]),Bt,Tt,Ct,Pt,e("p",null,[e("a",Ht,[t("HttpEventBridge/types/HttpEventBridgeClient.ts:14"),n(l)])]),kt,St,e("p",null,[t("• "),Rt,t(": ("),It,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[At]),_:1}),t(") => "),wt]),Mt,Ot,Nt,Lt,e("table",null,[jt,e("tbody",null,[e("tr",null,[qt,e("td",Dt,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Ft]),_:1})])])])]),Vt,Gt,Ut,Qt,e("p",null,[e("a",zt,[t("HttpEventBridge/types/HttpEventBridgeClient.ts:31"),n(l)])]),Jt,Kt,e("p",null,[t("• "),Wt,t(": ("),Xt,t(": { "),Yt,t(": "),Zt,t(" ; "),$t,t(": "),en,t(" ; "),tn,t(": "),nn,t(" ; "),on,t(": "),sn,t(" ; "),ln,t(": "),dn,t(" ; "),an,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[cn]),_:1}),t(" ; "),rn,t(": "),_n,t(" ; "),hn,t(": { "),un,t(": "),pn,t(" ; "),gn,t(": "),mn,t(" } ; "),fn,t(": "),yn,t(" ; "),bn,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[xn]),_:1}),t(" ; "),vn,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),En,t(": "),Bn,t(" ; "),Tn,t(": "),Cn,t(" }, "),Pn,t(": "),Hn,t("<"),kn,t(", "),Sn,t(">, "),Rn,t(": "),In,t(") => "),An,t("<"),n(o,{to:"/api/modules/purista_core.html#commandresponse"},{default:s(()=>[wn]),_:1}),t(">")]),Mn,e("p",null,[t("▸ ("),On,t(", "),Nn,t(", "),Ln,t("): "),jn,t("<"),n(o,{to:"/api/modules/purista_core.html#commandresponse"},{default:s(()=>[qn]),_:1}),t(">")]),Dn,Fn,e("table",null,[Vn,e("tbody",null,[Gn,Un,Qn,zn,Jn,Kn,e("tr",null,[Wn,e("td",Xn,[n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[Yn]),_:1})]),Zn]),$n,eo,to,no,oo,e("tr",null,[so,e("td",lo,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[io]),_:1})]),ao]),co,ro,_o,ho,uo])]),po,e("p",null,[go,t("<"),n(o,{to:"/api/modules/purista_core.html#commandresponse"},{default:s(()=>[mo]),_:1}),t(">")]),fo,e("p",null,[e("a",yo,[t("HttpEventBridge/types/HttpEventBridgeClient.ts:40"),n(l)])]),bo,e("p",null,[e("a",xo,[t("HttpEventBridge/types/HttpEventBridgeClient.ts:54"),n(l)])]),vo,Eo,e("p",null,[t("• "),Bo,t(": ("),To,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[Co]),_:1}),t(", "),Po,t(": "),Ho,t("<"),ko,t(", "),So,t(">) => "),Ro,t("<"),Io,t(">")]),Ao,e("table",null,[wo,e("tbody",null,[e("tr",null,[Mo,e("td",Oo,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[No]),_:1})])]),Lo])]),jo,qo,Do,e("p",null,[e("a",Fo,[t("HttpEventBridge/types/HttpEventBridgeClient.ts:48"),n(l)])])])}const Jo=a(_,[["render",Vo],["__file","purista_core.HttpEventBridgeClient.html.vue"]]);export{Jo as default};
