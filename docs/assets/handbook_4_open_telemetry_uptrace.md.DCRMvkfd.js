import{_ as n,C as r,c as o,o as l,ag as a,j as s,a as t,G as p}from"./chunks/framework.U_AETC1W.js";const d="/graphic/uptrace_screenshot.png",y=JSON.parse('{"title":"Uptrace","description":"Use Opentelemetry with Uptrace to trace PURISTA based typescript applications","frontmatter":{"title":"Uptrace","description":"Use Opentelemetry with Uptrace to trace PURISTA based typescript applications","order":408000},"headers":[],"relativePath":"handbook/4_open_telemetry/uptrace.md","filePath":"handbook/4_open_telemetry/uptrace.md","lastUpdated":1710090869000}'),h={name:"handbook/4_open_telemetry/uptrace.md"};function c(u,e,k,_,g,m){const i=r("ExternalLink");return l(),o("div",null,[e[6]||(e[6]=a('<h1 id="uptrace" tabindex="-1">Uptrace <a class="header-anchor" href="#uptrace" aria-label="Permalink to &quot;Uptrace&quot;">â€‹</a></h1><p><img src="'+d+'" alt="Uptrace"><strong>Official website: <a href="https://uptrace.io" target="_blank" rel="noreferrer">Uptrace</a></strong></p><p>See it in action and try out! You will need docker and docker-compose installed at your machine. At the <a href="https://github.com/puristajs/purista" target="_blank" rel="noreferrer">PURISTA repository</a> in <code>examples/fullexample</code> you will find a running example:</p><p>Start the required docker containers:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uptrace:up</span></span></code></pre></div>',5)),s("p",null,[e[0]||(e[0]=t("Open the Uptrace in your browser: ")),p(i,{href:"http://localhost:14318"}),e[1]||(e[1]=t(". In the top bar on, besides the Uptrace logo, select the ")),e[2]||(e[2]=s("em",null,"PURISTA",-1)),e[3]||(e[3]=t(" project."))]),e[7]||(e[7]=a('<p>Start the example:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uptrace:start</span></span></code></pre></div>',2)),s("p",null,[e[4]||(e[4]=t("To generate some traces, go to the OpenAPI UI at ")),p(i,{href:"http://localhost:8080"}),e[5]||(e[5]=t(" and call some commands. To stop and cleanup and stop all docker containers:"))]),e[8]||(e[8]=a('<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uptrace:down</span></span></code></pre></div>',1))])}const T=n(h,[["render",c]]);export{y as __pageData,T as default};
