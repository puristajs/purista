import{_ as a,c as r,o as t,ag as o}from"./chunks/framework.U_AETC1W.js";const u=JSON.parse('{"title":"Interface: ServiceClass<S>","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/core/interfaces/ServiceClass.md","filePath":"api/@purista/core/interfaces/ServiceClass.md","lastUpdated":1739900666000}'),s={name:"api/@purista/core/interfaces/ServiceClass.md"};function c(n,e,i,d,p,l){return t(),r("div",null,e[0]||(e[0]=[o('<p><a href="./../README.html"><strong>@purista/core v1.11.0</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/core</a> / ServiceClass</p><h1 id="interface-serviceclass-s" tabindex="-1">Interface: ServiceClass&lt;S&gt; <a class="header-anchor" href="#interface-serviceclass-s" aria-label="Permalink to &quot;Interface: ServiceClass\\&lt;S\\&gt;&quot;">​</a></h1><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L13" target="_blank" rel="noreferrer">packages/core/src/core/types/ServiceClass.ts:13</a></p><p>The ServiceClass interface</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>S</strong> <em>extends</em> <a href="./../type-aliases/ServiceClassTypes.html"><code>ServiceClassTypes</code></a> = <a href="./../type-aliases/ServiceClassTypes.html"><code>ServiceClassTypes</code></a></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="config" tabindex="-1">config <a class="header-anchor" href="#config" aria-label="Permalink to &quot;config&quot;">​</a></h3><blockquote><p><strong>config</strong>: <code>S</code>[<code>&quot;ConfigType&quot;</code>]</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L14" target="_blank" rel="noreferrer">packages/core/src/core/types/ServiceClass.ts:14</a></p><hr><h3 id="resources" tabindex="-1">resources <a class="header-anchor" href="#resources" aria-label="Permalink to &quot;resources&quot;">​</a></h3><blockquote><p><strong>resources</strong>: <code>S</code>[<code>&quot;Resources&quot;</code>]</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L15" target="_blank" rel="noreferrer">packages/core/src/core/types/ServiceClass.ts:15</a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="destroy" tabindex="-1">destroy() <a class="header-anchor" href="#destroy" aria-label="Permalink to &quot;destroy()&quot;">​</a></h3><blockquote><p><strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L20" target="_blank" rel="noreferrer">packages/core/src/core/types/ServiceClass.ts:20</a></p><p>Stop and destroy the current service</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="gettracer" tabindex="-1">getTracer() <a class="header-anchor" href="#gettracer" aria-label="Permalink to &quot;getTracer()&quot;">​</a></h3><blockquote><p><strong>getTracer</strong>(): <code>Tracer</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L57" target="_blank" rel="noreferrer">packages/core/src/core/types/ServiceClass.ts:57</a></p><p>get the opentelemetry tracer of the service</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Tracer</code></p><hr><h3 id="registercommand" tabindex="-1">registerCommand() <a class="header-anchor" href="#registercommand" aria-label="Permalink to &quot;registerCommand()&quot;">​</a></h3><blockquote><p><strong>registerCommand</strong>(<code>commandDefinition</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L63" target="_blank" rel="noreferrer">packages/core/src/core/types/ServiceClass.ts:63</a></p><p>Registers a new command for the service</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="commanddefinition" tabindex="-1">commandDefinition <a class="header-anchor" href="#commanddefinition" aria-label="Permalink to &quot;commandDefinition&quot;">​</a></h5><p><a href="./../type-aliases/CommandDefinition.html"><code>CommandDefinition</code></a>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>&gt;</p><p>the service command definition</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="registersubscription" tabindex="-1">registerSubscription() <a class="header-anchor" href="#registersubscription" aria-label="Permalink to &quot;registerSubscription()&quot;">​</a></h3><blockquote><p><strong>registerSubscription</strong>(<code>subscriptionDefinition</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L71" target="_blank" rel="noreferrer">packages/core/src/core/types/ServiceClass.ts:71</a></p><p>Registers a new subscription for the service</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="subscriptiondefinition" tabindex="-1">subscriptionDefinition <a class="header-anchor" href="#subscriptiondefinition" aria-label="Permalink to &quot;subscriptionDefinition&quot;">​</a></h5><p><a href="./../type-aliases/SubscriptionDefinition.html"><code>SubscriptionDefinition</code></a>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>&gt;</p><p>the subscription definition</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="start" tabindex="-1">start() <a class="header-anchor" href="#start" aria-label="Permalink to &quot;start()&quot;">​</a></h3><blockquote><p><strong>start</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L25" target="_blank" rel="noreferrer">packages/core/src/core/types/ServiceClass.ts:25</a></p><p>Start the service</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="startactivespan" tabindex="-1">startActiveSpan() <a class="header-anchor" href="#startactivespan" aria-label="Permalink to &quot;startActiveSpan()&quot;">​</a></h3><blockquote><p><strong>startActiveSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>context</code>, <code>fn</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L47" target="_blank" rel="noreferrer">packages/core/src/core/types/ServiceClass.ts:47</a></p><p>Start a new active opentelemetry span with given options. A active span will be below the current span in hierarchy</p><h4 id="type-parameters-1" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p>• <strong>F</strong></p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h5><p><code>string</code></p><p>the name of the span</p><h5 id="opts" tabindex="-1">opts <a class="header-anchor" href="#opts" aria-label="Permalink to &quot;opts&quot;">​</a></h5><p><code>SpanOptions</code></p><p>the additional span options</p><h5 id="context" tabindex="-1">context <a class="header-anchor" href="#context" aria-label="Permalink to &quot;context&quot;">​</a></h5><p>the span context</p><p><code>undefined</code> | <code>Context</code></p><h5 id="fn" tabindex="-1">fn <a class="header-anchor" href="#fn" aria-label="Permalink to &quot;fn&quot;">​</a></h5><p>(<code>span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</p><p>the function to be wrapped into the span</p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><hr><h3 id="wrapinspan" tabindex="-1">wrapInSpan() <a class="header-anchor" href="#wrapinspan" aria-label="Permalink to &quot;wrapInSpan()&quot;">​</a></h3><blockquote><p><strong>wrapInSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>fn</code>, <code>context</code>?): <code>Promise</code>&lt;<code>F</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L36" target="_blank" rel="noreferrer">packages/core/src/core/types/ServiceClass.ts:36</a></p><p>Wrap the given function in a opententelemetry span. The span will be on same hierarchy level as the current span.</p><h4 id="type-parameters-2" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-2" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p>• <strong>F</strong></p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="name-1" tabindex="-1">name <a class="header-anchor" href="#name-1" aria-label="Permalink to &quot;name&quot;">​</a></h5><p><code>string</code></p><p>the name of the span</p><h5 id="opts-1" tabindex="-1">opts <a class="header-anchor" href="#opts-1" aria-label="Permalink to &quot;opts&quot;">​</a></h5><p><code>SpanOptions</code></p><p>the additional span options</p><h5 id="fn-1" tabindex="-1">fn <a class="header-anchor" href="#fn-1" aria-label="Permalink to &quot;fn&quot;">​</a></h5><p>(<code>span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</p><p>the function to be wrapped in span</p><h5 id="context-1" tabindex="-1">context? <a class="header-anchor" href="#context-1" aria-label="Permalink to &quot;context?&quot;">​</a></h5><p><code>Context</code></p><p>the span context</p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p>',103)]))}const m=a(s,[["render",c]]);export{u as __pageData,m as default};
