import{_ as r,c as t,o as s,ag as e,j as a}from"./chunks/framework.U_AETC1W.js";const p=JSON.parse('{"title":"Class: abstract ConfigStoreBaseClass<ConfigStoreConfigType>","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/core/classes/ConfigStoreBaseClass.md","filePath":"api/@purista/core/classes/ConfigStoreBaseClass.md","lastUpdated":1740066608000}'),i={name:"api/@purista/core/classes/ConfigStoreBaseClass.md"};function n(c,o,l,g,d,h){return s(),t("div",null,o[0]||(o[0]=[e('<p><a href="./../README.html"><strong>@purista/core v2.0.5</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/core</a> / ConfigStoreBaseClass</p><h1 id="class-abstract-configstorebaseclass-configstoreconfigtype" tabindex="-1">Class: <code>abstract</code> ConfigStoreBaseClass&lt;ConfigStoreConfigType&gt; <a class="header-anchor" href="#class-abstract-configstorebaseclass-configstoreconfigtype" aria-label="Permalink to &quot;Class: `abstract` ConfigStoreBaseClass\\&lt;ConfigStoreConfigType\\&gt;&quot;">​</a></h1><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L20" target="_blank" rel="noreferrer">packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts:20</a></p><p>Base class for config store adapters. The actual store implementation must overwrite the protected methods:</p><ul><li><code>getConfigImpl</code></li><li><code>setConfigImpl</code></li><li><code>removeConfigImpl</code></li></ul><p><strong>DO NOT OVERWRITE</strong>: the regular methods getConfig, setConfig or removeConfig</p><h2 id="extended-by" tabindex="-1">Extended by <a class="header-anchor" href="#extended-by" aria-label="Permalink to &quot;Extended by&quot;">​</a></h2><ul><li><a href="./DefaultConfigStore.html"><code>DefaultConfigStore</code></a></li><li><a href="./../../aws-config-store/classes/AWSConfigStore.html"><code>AWSConfigStore</code></a></li><li><a href="./../../dapr-sdk/classes/DaprConfigStore.html"><code>DaprConfigStore</code></a></li><li><a href="./../../nats-config-store/classes/NatsConfigStore.html"><code>NatsConfigStore</code></a></li><li><a href="./../../redis-config-store/classes/RedisConfigStore.html"><code>RedisConfigStore</code></a></li></ul><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>ConfigStoreConfigType</strong> <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; = <a href="./../type-aliases/EmptyObject.html"><code>EmptyObject</code></a></p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="new-configstorebaseclass" tabindex="-1">new ConfigStoreBaseClass() <a class="header-anchor" href="#new-configstorebaseclass" aria-label="Permalink to &quot;new ConfigStoreBaseClass()&quot;">​</a></h3><blockquote><p><strong>new ConfigStoreBaseClass</strong>&lt;<code>ConfigStoreConfigType</code>&gt;(<code>name</code>, <code>config</code>): <a href="./ConfigStoreBaseClass.html"><code>ConfigStoreBaseClass</code></a>&lt;<code>ConfigStoreConfigType</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L28" target="_blank" rel="noreferrer">packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts:28</a></p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h5><p><code>string</code></p><h5 id="config" tabindex="-1">config <a class="header-anchor" href="#config" aria-label="Permalink to &quot;config&quot;">​</a></h5><p>{ [K in string | number | symbol]: ({ cacheTtl?: number; enableCache?: boolean; enableGet?: boolean; enableRemove?: boolean; enableSet?: boolean; logger?: Logger; logLevel?: LogLevelName } &amp; ConfigStoreConfigType)[K] }</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./ConfigStoreBaseClass.html"><code>ConfigStoreBaseClass</code></a>&lt;<code>ConfigStoreConfigType</code>&gt;</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="cache" tabindex="-1">cache <a class="header-anchor" href="#cache" aria-label="Permalink to &quot;cache&quot;">​</a></h3><blockquote><p><strong>cache</strong>: <a href="./../type-aliases/ConfigStoreCacheMap.html"><code>ConfigStoreCacheMap</code></a></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L26" target="_blank" rel="noreferrer">packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts:26</a></p><hr><h3 id="config-1" tabindex="-1">config <a class="header-anchor" href="#config-1" aria-label="Permalink to &quot;config&quot;">​</a></h3><blockquote><p><strong>config</strong>: { [K in string | number | symbol]: ({ cacheTtl?: number; enableCache?: boolean; enableGet?: boolean; enableRemove?: boolean; enableSet?: boolean; logger?: Logger; logLevel?: LogLevelName } &amp; ConfigStoreConfigType)[K] }</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L22" target="_blank" rel="noreferrer">packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts:22</a></p><hr><h3 id="logger" tabindex="-1">logger <a class="header-anchor" href="#logger" aria-label="Permalink to &quot;logger&quot;">​</a></h3><blockquote><p><strong>logger</strong>: <a href="./Logger.html"><code>Logger</code></a></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L21" target="_blank" rel="noreferrer">packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts:21</a></p><hr><h3 id="name-1" tabindex="-1">name <a class="header-anchor" href="#name-1" aria-label="Permalink to &quot;name&quot;">​</a></h3><blockquote><p><strong>name</strong>: <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L24" target="_blank" rel="noreferrer">packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts:24</a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="destroy" tabindex="-1">destroy() <a class="header-anchor" href="#destroy" aria-label="Permalink to &quot;destroy()&quot;">​</a></h3><blockquote><p><strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L126" target="_blank" rel="noreferrer">packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts:126</a></p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="getconfig" tabindex="-1">getConfig() <a class="header-anchor" href="#getconfig" aria-label="Permalink to &quot;getConfig()&quot;">​</a></h3><blockquote><p><strong>getConfig</strong>&lt;<code>ConfigNames</code>&gt;(...<code>configNames</code>): <code>Promise</code>&lt;<a href="./../type-aliases/ObjectWithKeysFromStringArray.html"><code>ObjectWithKeysFromStringArray</code></a>&lt;<code>ConfigNames</code>&gt;&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L62" target="_blank" rel="noreferrer">packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts:62</a></p><p>Returns the values for given config properties. This function <strong>SHOULD NOT</strong> be overwritten by store implementation. For implementation overwrite protected <code>getConfigImpl</code></p><h4 id="type-parameters-1" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p>• <strong>ConfigNames</strong> <em>extends</em> <code>string</code>[]</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="confignames" tabindex="-1">configNames <a class="header-anchor" href="#confignames" aria-label="Permalink to &quot;configNames&quot;">​</a></h5><p>...<code>ConfigNames</code></p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<a href="./../type-aliases/ObjectWithKeysFromStringArray.html"><code>ObjectWithKeysFromStringArray</code></a>&lt;<code>ConfigNames</code>&gt;&gt;</p>',57),a("p",{"[configName]:":"",value:"","|":"",undefined:""},"an object of",-1),e('<hr><h3 id="getconfigimpl" tabindex="-1">getConfigImpl() <a class="header-anchor" href="#getconfigimpl" aria-label="Permalink to &quot;getConfigImpl()&quot;">​</a></h3><blockquote><p><code>abstract</code> <code>protected</code> <strong>getConfigImpl</strong>&lt;<code>ConfigNames</code>&gt;(...<code>configNames</code>): <code>Promise</code>&lt;<a href="./../type-aliases/ObjectWithKeysFromStringArray.html"><code>ObjectWithKeysFromStringArray</code></a>&lt;<code>ConfigNames</code>&gt;&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L49" target="_blank" rel="noreferrer">packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts:49</a></p><p>This method must be overwritten by actual store implementation.</p><h4 id="type-parameters-2" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-2" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p>• <strong>ConfigNames</strong> <em>extends</em> <code>string</code>[]</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="confignames-1" tabindex="-1">configNames <a class="header-anchor" href="#confignames-1" aria-label="Permalink to &quot;configNames&quot;">​</a></h5><p>...<code>ConfigNames</code></p><p>list of config items</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<a href="./../type-aliases/ObjectWithKeysFromStringArray.html"><code>ObjectWithKeysFromStringArray</code></a>&lt;<code>ConfigNames</code>&gt;&gt;</p>',13),a("p",{"[configName]:":"",value:"","|":"",undefined:""},"an object of",-1),e('<hr><h3 id="removeconfig" tabindex="-1">removeConfig() <a class="header-anchor" href="#removeconfig" aria-label="Permalink to &quot;removeConfig()&quot;">​</a></h3><blockquote><p><strong>removeConfig</strong>(<code>configName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L89" target="_blank" rel="noreferrer">packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts:89</a></p><p>Removes the config item given by config name. This function <strong>SHOULD NOT</strong> be overwritten by store implementation. For implementation overwrite protected <code>removeConfigImpl</code></p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="configname" tabindex="-1">configName <a class="header-anchor" href="#configname" aria-label="Permalink to &quot;configName&quot;">​</a></h5><p><code>string</code></p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="removeconfigimpl" tabindex="-1">removeConfigImpl() <a class="header-anchor" href="#removeconfigimpl" aria-label="Permalink to &quot;removeConfigImpl()&quot;">​</a></h3><blockquote><p><code>abstract</code> <code>protected</code> <strong>removeConfigImpl</strong>(<code>configName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L79" target="_blank" rel="noreferrer">packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts:79</a></p><p>This method must be overwritten by actual store implementation.</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="configname-1" tabindex="-1">configName <a class="header-anchor" href="#configname-1" aria-label="Permalink to &quot;configName&quot;">​</a></h5><p><code>string</code></p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="setconfig" tabindex="-1">setConfig() <a class="header-anchor" href="#setconfig" aria-label="Permalink to &quot;setConfig()&quot;">​</a></h3><blockquote><p><strong>setConfig</strong>(<code>configName</code>, <code>configValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L116" target="_blank" rel="noreferrer">packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts:116</a></p><p>Sets a config value This function <strong>SHOULD NOT</strong> be overwritten by store implementation. For implementation overwrite protected <code>setConfigImpl</code></p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="configname-2" tabindex="-1">configName <a class="header-anchor" href="#configname-2" aria-label="Permalink to &quot;configName&quot;">​</a></h5><p><code>string</code></p><h5 id="configvalue" tabindex="-1">configValue <a class="header-anchor" href="#configvalue" aria-label="Permalink to &quot;configValue&quot;">​</a></h5><p><code>unknown</code></p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="setconfigimpl" tabindex="-1">setConfigImpl() <a class="header-anchor" href="#setconfigimpl" aria-label="Permalink to &quot;setConfigImpl()&quot;">​</a></h3><blockquote><p><code>abstract</code> <code>protected</code> <strong>setConfigImpl</strong>(<code>_configName</code>, <code>_configValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L105" target="_blank" rel="noreferrer">packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts:105</a></p><p>This method must be overwritten by actual store implementation.</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="configname-3" tabindex="-1">_configName <a class="header-anchor" href="#configname-3" aria-label="Permalink to &quot;\\_configName&quot;">​</a></h5><p><code>string</code></p><h5 id="configvalue-1" tabindex="-1">_configValue <a class="header-anchor" href="#configvalue-1" aria-label="Permalink to &quot;\\_configValue&quot;">​</a></h5><p><code>unknown</code></p><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p>',44)]))}const m=r(i,[["render",n]]);export{p as __pageData,m as default};
