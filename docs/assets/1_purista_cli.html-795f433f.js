import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as u,c as h,e as s,w as n,b as e,d as a,a as b}from"./app-2c9217f0.js";const m={},v=e("p",null,"The easiest and fastest way to start with PURISTA is the usage of the PURISTA CLI tool.",-1),g=e("p",null,[a("You can use the CLI tool to create a new PURISTA project or to add PURISTA to an existing project."),e("br"),a(" Open your terminal and go to your project folder where you like to install PURISTA.")],-1),y=e("p",null,"In the project folder, simply execute:",-1),f=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,`npx @purista/cli init
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),k=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,`bunx @purista/cli init
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),_=b(`<p>It might take a short time for <code>npx</code> to download the needed data to its temporary folder and start the CLI tool.<br> The CLI tool will guide you through all the necessary steps.<br> If you are installing in an existing project, no files will be overwritten, and it might be, that you need to do some manual steps.</p><h2 id="_1-confirm-installation" tabindex="-1"><a class="header-anchor" href="#_1-confirm-installation" aria-hidden="true">#</a> 1. Confirm installation</h2><p>Confirm that you like to install PURISTA in the current folder. Confirm by pressing enter or <code>y</code> key.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>? Initialize PURISTA <span class="token keyword">in</span> current folder Yes
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-global-vs-local" tabindex="-1"><a class="header-anchor" href="#_2-global-vs-local" aria-hidden="true">#</a> 2. Global vs local</h2><p>Decide how you like to install the CLI tool for further usage.</p><p>If you install PURISTA CLI globally or as local project develop-dependency.<br> Global installation is recommended, as you are able to simply execute the CLI tool with <code>purista</code> command.</p><p>You can choose your preferred option by using the arrow-up/down keys, and confirm by pressing the enter key.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>? Install PURISTA cli globally? <span class="token punctuation">(</span>Use arrow keys<span class="token punctuation">)</span>
‚ùØ <span class="token function">install</span> as global <span class="token function">npm</span> module 
  as <span class="token builtin class-name">local</span> module <span class="token keyword">in</span> this project only 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-choose-dev-tools" tabindex="-1"><a class="header-anchor" href="#_3-choose-dev-tools" aria-hidden="true">#</a> 3. Choose dev-tools</h2><p>Decide if you like to use linter &amp; prettier for better code style and jest &amp; sinon as test tools.</p><p>It is recommended to use such tools as they dramatically improve developers&#39; lives and, especially if you do not work on your own on a project, the code will stay consistent.<br> Because of this, code style and testing are pre-selected.</p><p>You can navigate with the arrow-up/down keys and (de-)select by pressing the space key. To confirm your selection, press the enter key.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>? Do you like to <span class="token function">install</span> eslint and prettier <span class="token keyword">for</span> better code formatting? <span class="token punctuation">(</span>Press <span class="token operator">&lt;</span>space<span class="token operator">&gt;</span> to select, <span class="token operator">&lt;</span>a<span class="token operator">&gt;</span> to toggle all, <span class="token operator">&lt;</span>i<span class="token operator">&gt;</span> 
to invert selection, and <span class="token operator">&lt;</span>enter<span class="token operator">&gt;</span> to proceed<span class="token punctuation">)</span>
‚ùØ‚óâ code style: eslint and prettier
 ‚óâ testing: jest and sinon
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-choose-event-bridge" tabindex="-1"><a class="header-anchor" href="#_4-choose-event-bridge" aria-hidden="true">#</a> 4. Choose event bridge</h2><p>Select the messaging system - event bridge - you like to use.</p><p>You can navigate to the preferred one with the arrow-up/down keys and confirm selection by pressing the enter key.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>? Which messaging system should be used <span class="token punctuation">(</span>Use arrow keys<span class="token punctuation">)</span>
‚ùØ <span class="token builtin class-name">local</span> internal default eventbridge 
  AMQP eventbridge <span class="token punctuation">(</span>RabbitMQ<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-optional-http-server" tabindex="-1"><a class="header-anchor" href="#_5-optional-http-server" aria-hidden="true">#</a> 5. Optional http server</h2><p>Decide if you like to install the PURISTA http-server package or not.</p><p>It is recommended to install this package, as because of this feature, you should be able to execute commands and trigger subscriptions very easily.</p><p>You can confirm the installation by pressing the enter or <code>y</code> key or decline by pressing the <code>n</code> key</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>? Should the @purista/httpserver package be installed, to automatically provide a REST api server? <span class="token punctuation">(</span>Y/n<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_6-http-server-static-plugin" tabindex="-1"><a class="header-anchor" href="#_6-http-server-static-plugin" aria-hidden="true">#</a> 6. Http server static plugin</h2><p>Decide if you like to install the http static plugin (only if http server installation is previously selected).</p><p>This package can be used to serve some static files from a folder. This might be very helpful during development and testing.<br> In production, you might choose some other option like CDN.</p><p>You can confirm the installation by pressing the enter or <code>y</code> key or decline by pressing the <code>n</code> key</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>? Should the http <span class="token function">service</span> be able to provide static files - files and assets like images <span class="token operator">&amp;</span> css? <span class="token punctuation">(</span>Y/n<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_7-nip-on-your-coffee" tabindex="-1"><a class="header-anchor" href="#_7-nip-on-your-coffee" aria-hidden="true">#</a> 7. Nip on your coffee</h2><p>Now the installation process starts and npm will download depending on modules and needed files will be created.</p><p>If everything is working as expected, you will see a success message.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>üéâ SUCCESS - PURISTA project ready üéâ
Enjoy building awesome applications with PURISTA üöÄ
Now it is <span class="token function">time</span> to <span class="token function">add</span> your first service<span class="token operator">!</span>

‚û°Ô∏è  purista <span class="token function">add</span> <span class="token function">service</span>

‚úî  -<span class="token operator">&gt;</span> üìñ Learn <span class="token function">more</span> about PURISTA at https://purista.dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-try-out" tabindex="-1"><a class="header-anchor" href="#_8-try-out" aria-hidden="true">#</a> 8. Try out</h2><p>If you&#39;ve installed the recommended PURISTA http-server, you can directly try out your installation.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,35),w={href:"http://localhost:9090/api",target:"_blank",rel:"noopener noreferrer"},x={href:"http://localhost:9090",target:"_blank",rel:"noopener noreferrer"},I=e("h2",{id:"_9-add-logic",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_9-add-logic","aria-hidden":"true"},"#"),a(" 9. Add Logic")],-1),S=e("p",null,"Now, it is time for you, to add some business logic.",-1);function T(C,A){const l=t("CodeTabs"),o=t("ExternalLinkIcon"),i=t("RouterLink");return u(),h("div",null,[v,g,y,s(l,{id:"9",data:[{title:"npm"},{title:"bun"}],active:0,"tab-id":"shell"},{tab0:n(({title:r,value:d,isActive:c})=>[f]),tab1:n(({title:r,value:d,isActive:c})=>[k]),_:1}),_,e("p",null,[a("And then open "),e("a",w,[a("http://localhost:9090/api"),s(o)]),a(" or if you also have installed the static plugin, simply "),e("a",x,[a("http://localhost:9090"),s(o)])]),e("p",null,[a("You can now read a bit more about recommended folder structure, which is also used by the CLI at "),s(i,{to:"/handbook/1._get-started/2_recommended_project_structure.html"},{default:n(()=>[a("Recommended structure")]),_:1}),a(".")]),I,S,e("p",null,[a("Start with "),s(i,{to:"/handbook/2._start-building/2.1_service/1_create-new-service.html"},{default:n(()=>[a("creating a new Service")]),_:1}),a(".")])])}const P=p(m,[["render",T],["__file","1_purista_cli.html.vue"]]);export{P as default};
