import{_ as t,c as a,o,ag as s}from"./chunks/framework.U_AETC1W.js";const u=JSON.parse('{"title":"Type Alias: HttpClientRequestOptions","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/core/type-aliases/HttpClientRequestOptions.md","filePath":"api/@purista/core/type-aliases/HttpClientRequestOptions.md","lastUpdated":1739900666000}'),r={name:"api/@purista/core/type-aliases/HttpClientRequestOptions.md"};function i(p,e,n,l,c,d){return o(),a("div",null,e[0]||(e[0]=[s('<p><a href="./../README.html"><strong>@purista/core v1.11.0</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/core</a> / HttpClientRequestOptions</p><h1 id="type-alias-httpclientrequestoptions" tabindex="-1">Type Alias: HttpClientRequestOptions <a class="header-anchor" href="#type-alias-httpclientrequestoptions" aria-label="Permalink to &quot;Type Alias: HttpClientRequestOptions&quot;">​</a></h1><blockquote><p><strong>HttpClientRequestOptions</strong>: <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/HttpClient/types/HttpClientRequestOptions.ts#L4" target="_blank" rel="noreferrer">packages/core/src/HttpClient/types/HttpClientRequestOptions.ts:4</a></p><p>Options for a single request</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="hash" tabindex="-1">hash? <a class="header-anchor" href="#hash" aria-label="Permalink to &quot;hash?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>hash</strong>: <code>string</code></p></blockquote><p>url hash @example: <a href="http://example.com/index.html#hash" target="_blank" rel="noreferrer">http://example.com/index.html#hash</a></p><h3 id="headers" tabindex="-1">headers? <a class="header-anchor" href="#headers" aria-label="Permalink to &quot;headers?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>headers</strong>: <code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</p></blockquote><p>additional headers</p><h3 id="query" tabindex="-1">query? <a class="header-anchor" href="#query" aria-label="Permalink to &quot;query?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>query</strong>: <code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</p></blockquote><p>query/search string parameter</p><h3 id="timeout" tabindex="-1">timeout? <a class="header-anchor" href="#timeout" aria-label="Permalink to &quot;timeout?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>timeout</strong>: <code>number</code></p></blockquote><p>Timeout for the request in ms</p><h4 id="default" tabindex="-1">Default <a class="header-anchor" href="#default" aria-label="Permalink to &quot;Default&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30000</span></span></code></pre></div>',22)]))}const q=t(r,[["render",i]]);export{u as __pageData,q as default};
