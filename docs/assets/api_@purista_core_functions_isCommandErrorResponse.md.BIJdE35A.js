import{_ as r,c as s,o as n,ag as t}from"./chunks/framework.U_AETC1W.js";const u=JSON.parse('{"title":"Function: isCommandErrorResponse()","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/core/functions/isCommandErrorResponse.md","filePath":"api/@purista/core/functions/isCommandErrorResponse.md","lastUpdated":1740066608000}'),a={name:"api/@purista/core/functions/isCommandErrorResponse.md"};function o(i,e,c,p,m,d){return n(),s("div",null,e[0]||(e[0]=[t('<p><a href="./../README.html"><strong>@purista/core v2.0.5</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/core</a> / isCommandErrorResponse</p><h1 id="function-iscommanderrorresponse" tabindex="-1">Function: isCommandErrorResponse() <a class="header-anchor" href="#function-iscommanderrorresponse" aria-label="Permalink to &quot;Function: isCommandErrorResponse()&quot;">​</a></h1><blockquote><p><strong>isCommandErrorResponse</strong>(<code>message</code>): <code>message is { contentEncoding: &quot;utf-8&quot;; contentType: &quot;application/json&quot;; correlationId: string; eventName?: string; id: string; isHandledError: boolean; messageType: CommandErrorResponse; otp?: string; payload: { data?: unknown; message: string; status: StatusCode }; principalId?: string; receiver: { instanceId: string; serviceName: string; serviceTarget: string; serviceVersion: string }; sender: { instanceId: string; serviceName: string; serviceTarget: string; serviceVersion: string }; tenantId?: string; timestamp: number; traceId?: string }</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/commandType/isCommandErrorResponse.impl.ts#L12" target="_blank" rel="noreferrer">packages/core/src/core/types/commandType/isCommandErrorResponse.impl.ts:12</a></p><p>Checks if given message is type of CommandErrorResponse</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="message" tabindex="-1">message <a class="header-anchor" href="#message" aria-label="Permalink to &quot;message&quot;">​</a></h3><p><code>unknown</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>message is { contentEncoding: &quot;utf-8&quot;; contentType: &quot;application/json&quot;; correlationId: string; eventName?: string; id: string; isHandledError: boolean; messageType: CommandErrorResponse; otp?: string; payload: { data?: unknown; message: string; status: StatusCode }; principalId?: string; receiver: { instanceId: string; serviceName: string; serviceTarget: string; serviceVersion: string }; sender: { instanceId: string; serviceName: string; serviceTarget: string; serviceVersion: string }; tenantId?: string; timestamp: number; traceId?: string }</code></p><p>boolean</p>',13)]))}const l=r(a,[["render",o]]);export{u as __pageData,l as default};
