import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as p,c as r,b as e,e as n,w as t,d as s,a as l}from"./app-9aedf0b4.js";const d={},u=l(`<h1 id="module-purista-redis-config-store" tabindex="-1"><a class="header-anchor" href="#module-purista-redis-config-store" aria-hidden="true">#</a> Module: @purista/redis-config-store</h1><p>A state store for using redis as storage. Config values are stored as stringified JSON.</p><p>Per default, setting/changing and removal of values are enabled.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
 enableGet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// optional, default is true</span>
 enableRemove<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// optional, default is true</span>
 enableSet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// optional, default is true</span>
 url<span class="token operator">:</span> <span class="token string">&#39;redis://alice:foobared@awesome.redis.server:6379&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedisConfigStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span> config <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">setConfig</span><span class="token punctuation">(</span><span class="token string">&#39;stateKey&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span> myConfig<span class="token operator">:</span> <span class="token string">&#39;value&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token string">&#39;stateKey&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment">// outputs: { myConfig: &#39;value&#39; }</span>

<span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">removeConfig</span><span class="token punctuation">(</span><span class="token string">&#39;stateKey&#39;</span><span class="token punctuation">)</span>

value <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token string">&#39;stateKey&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment">// outputs: undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>See documentation of underlaying redis lib package for detailed configuration options.</p><p><strong><code>See</code></strong></p>`,7),f={href:"https://redis.js.org",target:"_blank",rel:"noopener noreferrer"},k=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),s(" Table of contents")],-1),h=e("h3",{id:"classes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#classes","aria-hidden":"true"},"#"),s(" Classes")],-1),g=e("h3",{id:"type-aliases",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),s(" Type Aliases")],-1),m=l('<h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="redisstoreconfig" tabindex="-1"><a class="header-anchor" href="#redisstoreconfig" aria-hidden="true">#</a> RedisStoreConfig</h3><p>Æ¬ <strong>RedisStoreConfig</strong>&lt;<code>M</code>, <code>F</code>, <code>S</code>&gt;: <code>Object</code></p><p>The redis state store configuration. It will extend the StoreBaseConfig.</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>M</code></td><td style="text-align:left;">extends <code>RedisModules</code> = <code>RedisModules</code></td></tr><tr><td style="text-align:left;"><code>F</code></td><td style="text-align:left;">extends <code>RedisFunctions</code> = <code>RedisFunctions</code></td></tr><tr><td style="text-align:left;"><code>S</code></td><td style="text-align:left;">extends <code>RedisScripts</code> = <code>RedisScripts</code></td></tr></tbody></table><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>config?</code></td><td style="text-align:left;"><code>RedisClientOptions</code>&lt;<code>M</code>, <code>F</code>, <code>S</code>&gt;</td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',9),b={href:"https://github.com/sebastianwessel/purista/blob/master/packages/redis-config-store/src/types.ts#L7",target:"_blank",rel:"noopener noreferrer"};function v(y,_){const a=i("RouterLink"),o=i("ExternalLinkIcon");return p(),r("div",null,[e("p",null,[n(a,{to:"/api/"},{default:t(()=>[s("PURISTA API")]),_:1}),s(" / "),n(a,{to:"/api/modules.html"},{default:t(()=>[s("Modules")]),_:1}),s(" / @purista/redis-config-store")]),u,e("p",null,[e("a",f,[s("NODE-REDIS"),n(o)])]),k,h,e("ul",null,[e("li",null,[n(a,{to:"/api/classes/purista_redis_config_store.RedisConfigStore.html"},{default:t(()=>[s("RedisConfigStore")]),_:1})])]),g,e("ul",null,[e("li",null,[n(a,{to:"/api/modules/purista_redis_config_store.html#redisstoreconfig"},{default:t(()=>[s("RedisStoreConfig")]),_:1})])]),m,e("p",null,[e("a",b,[s("redis-config-store/src/types.ts:7"),n(o)])])])}const w=c(d,[["render",v],["__file","purista_redis_config_store.html.vue"]]);export{w as default};
