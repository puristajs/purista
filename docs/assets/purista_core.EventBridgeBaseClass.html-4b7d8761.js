import{_ as o,W as l,X as c,Z as e,a0 as a,a1 as s,$ as t,Y as d,D as i}from"./framework-d89ed822.js";const h={},u=e("h1",{id:"class-eventbridgebaseclass-configtype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-eventbridgebaseclass-configtype","aria-hidden":"true"},"#"),t(" Class: EventBridgeBaseClass<ConfigType>")],-1),p=d('<p>The base class to be extended by event bridge implementations</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h2><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h2 id="hierarchy" tabindex="-1"><a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a> Hierarchy</h2>',4),_=e("code",null,"GenericEventEmitter",-1),f=e("code",null,"EventBridgeEvents",-1),g=e("p",null,[t("↳ "),e("strong",null,[e("code",null,"EventBridgeBaseClass")])],-1),m=e("code",null,"DefaultEventBridge",-1),b=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),v=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),x=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),y=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),E=d('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new EventBridgeBaseClass</strong>&lt;<code>ConfigType</code>&gt;(<code>name</code>, <code>config</code>)</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4>',6),B=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),C=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"name")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),k=e("td",{style:{"text-align":"left"}},[e("code",null,"config")],-1),T={style:{"text-align":"left"}},w=e("code",null,"EventBridgeConfig",-1),L=e("code",null,"Complete",-1),G=e("code",null,"ConfigType",-1),N=e("h4",{id:"overrides",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides","aria-hidden":"true"},"#"),t(" Overrides")],-1),P=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),D={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L28",target:"_blank",rel:"noopener noreferrer"},I=e("h2",{id:"properties-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties-1","aria-hidden":"true"},"#"),t(" Properties")],-1),K=e("h3",{id:"config",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#config","aria-hidden":"true"},"#"),t(" config")],-1),R=e("strong",null,"config",-1),S=e("code",null,"Complete",-1),F=e("code",null,"EventBridgeConfig",-1),A=e("code",null,"Complete",-1),V=e("code",null,"ConfigType",-1),M=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),O={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L21",target:"_blank",rel:"noopener noreferrer"},q=e("hr",null,null,-1),U=e("h3",{id:"defaultcommandtimeout",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defaultcommandtimeout","aria-hidden":"true"},"#"),t(" defaultCommandTimeout")],-1),H=e("p",null,[t("• "),e("strong",null,"defaultCommandTimeout"),t(": "),e("code",null,"number")],-1),W=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),X={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L27",target:"_blank",rel:"noopener noreferrer"},Y=e("hr",null,null,-1),Z=e("h3",{id:"instanceid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#instanceid","aria-hidden":"true"},"#"),t(" instanceId")],-1),$=e("p",null,[t("• "),e("strong",null,"instanceId"),t(": "),e("code",null,"string")],-1),j=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),z={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L25",target:"_blank",rel:"noopener noreferrer"},J=e("hr",null,null,-1),Q=e("h3",{id:"logger",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#logger","aria-hidden":"true"},"#"),t(" logger")],-1),ee=e("strong",null,"logger",-1),te=e("code",null,"Logger",-1),ae=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),re={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L18",target:"_blank",rel:"noopener noreferrer"},se=e("hr",null,null,-1),ne=e("h3",{id:"name",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#name","aria-hidden":"true"},"#"),t(" name")],-1),de=e("p",null,[t("• "),e("strong",null,"name"),t(": "),e("code",null,"string")],-1),ie=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),oe={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L23",target:"_blank",rel:"noopener noreferrer"},le=e("hr",null,null,-1),ce=e("h3",{id:"traceprovider",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#traceprovider","aria-hidden":"true"},"#"),t(" traceProvider")],-1),he=e("p",null,[t("• "),e("strong",null,"traceProvider"),t(": "),e("code",null,"NodeTracerProvider")],-1),ue=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),pe={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L19",target:"_blank",rel:"noopener noreferrer"},_e=d('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="destroy" tabindex="-1"><a class="header-anchor" href="#destroy" aria-hidden="true">#</a> destroy</h3><p>▸ <strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>',6),fe={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L154",target:"_blank",rel:"noopener noreferrer"},ge=d('<hr><h3 id="emit" tabindex="-1"><a class="header-anchor" href="#emit" aria-hidden="true">#</a> emit</h3><p>▸ <strong>emit</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>parameter?</code>): <code>void</code></p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4>',4),me=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),be=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),ve={style:{"text-align":"left"}},xe=e("code",null,"EventKey",-1),ye=e("code",null,"EventBridgeEvents",-1),Ee=e("h4",{id:"parameters-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-1","aria-hidden":"true"},"#"),t(" Parameters")],-1),Be=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ce=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"K")])],-1),ke=e("td",{style:{"text-align":"left"}},[e("code",null,"parameter?")],-1),Te={style:{"text-align":"left"}},we=e("code",null,"EventBridgeEvents",-1),Le=e("code",null,"K",-1),Ge=e("h4",{id:"returns-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-1","aria-hidden":"true"},"#"),t(" Returns")],-1),Ne=e("p",null,[e("code",null,"void")],-1),Pe=e("h4",{id:"inherited-from",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from","aria-hidden":"true"},"#"),t(" Inherited from")],-1),De=e("h4",{id:"defined-in-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-8","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ie={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/GenericEventEmitter.ts#L24",target:"_blank",rel:"noopener noreferrer"},Ke=d('<hr><h3 id="gettracer" tabindex="-1"><a class="header-anchor" href="#gettracer" aria-hidden="true">#</a> getTracer</h3><p>▸ <strong>getTracer</strong>(): <code>Tracer</code></p><p>Returns open telemetry tracer of this service</p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>Tracer</code></p><p>Tracer</p><h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4>',8),Re={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L69",target:"_blank",rel:"noopener noreferrer"},Se=d('<hr><h3 id="off" tabindex="-1"><a class="header-anchor" href="#off" aria-hidden="true">#</a> off</h3><p>▸ <strong>off</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4>',4),Fe=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ae=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),Ve={style:{"text-align":"left"}},Me=e("code",null,"EventKey",-1),Oe=e("code",null,"EventBridgeEvents",-1),qe=e("h4",{id:"parameters-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-2","aria-hidden":"true"},"#"),t(" Parameters")],-1),Ue=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),He=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"K")])],-1),We=e("td",{style:{"text-align":"left"}},[e("code",null,"fn")],-1),Xe={style:{"text-align":"left"}},Ye=e("code",null,"EventReceiver",-1),Ze=e("code",null,"EventBridgeEvents",-1),$e=e("code",null,"K",-1),je=e("h4",{id:"returns-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-3","aria-hidden":"true"},"#"),t(" Returns")],-1),ze=e("p",null,[e("code",null,"void")],-1),Je=e("h4",{id:"inherited-from-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-1","aria-hidden":"true"},"#"),t(" Inherited from")],-1),Qe=e("h4",{id:"defined-in-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-10","aria-hidden":"true"},"#"),t(" Defined in")],-1),et={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/GenericEventEmitter.ts#L20",target:"_blank",rel:"noopener noreferrer"},tt=d('<hr><h3 id="on" tabindex="-1"><a class="header-anchor" href="#on" aria-hidden="true">#</a> on</h3><p>▸ <strong>on</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4>',4),at=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),rt=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),st={style:{"text-align":"left"}},nt=e("code",null,"EventKey",-1),dt=e("code",null,"EventBridgeEvents",-1),it=e("h4",{id:"parameters-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-3","aria-hidden":"true"},"#"),t(" Parameters")],-1),ot=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),lt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"K")])],-1),ct=e("td",{style:{"text-align":"left"}},[e("code",null,"fn")],-1),ht={style:{"text-align":"left"}},ut=e("code",null,"EventReceiver",-1),pt=e("code",null,"EventBridgeEvents",-1),_t=e("code",null,"K",-1),ft=e("h4",{id:"returns-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-4","aria-hidden":"true"},"#"),t(" Returns")],-1),gt=e("p",null,[e("code",null,"void")],-1),mt=e("h4",{id:"inherited-from-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-2","aria-hidden":"true"},"#"),t(" Inherited from")],-1),bt=e("h4",{id:"defined-in-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-11","aria-hidden":"true"},"#"),t(" Defined in")],-1),vt={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/GenericEventEmitter.ts#L16",target:"_blank",rel:"noopener noreferrer"},xt=d('<hr><h3 id="removealllisteners" tabindex="-1"><a class="header-anchor" href="#removealllisteners" aria-hidden="true">#</a> removeAllListeners</h3><p>▸ <strong>removeAllListeners</strong>(): <code>void</code></p><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-3" tabindex="-1"><a class="header-anchor" href="#inherited-from-3" aria-hidden="true">#</a> Inherited from</h4>',6),yt=e("h4",{id:"defined-in-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-12","aria-hidden":"true"},"#"),t(" Defined in")],-1),Et={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/GenericEventEmitter.ts#L28",target:"_blank",rel:"noopener noreferrer"},Bt=d('<hr><h3 id="start" tabindex="-1"><a class="header-anchor" href="#start" aria-hidden="true">#</a> start</h3><p>▸ <strong>start</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4>',6),Ct={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L155",target:"_blank",rel:"noopener noreferrer"},kt=d('<hr><h3 id="startactivespan" tabindex="-1"><a class="header-anchor" href="#startactivespan" aria-hidden="true">#</a> startActiveSpan</h3><p>▸ <strong>startActiveSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>context?</code>, <code>fn</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p><p>Start a child span for opentelemetry tracking</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">name of span</td></tr><tr><td style="text-align:left;"><code>opts</code></td><td style="text-align:left;"><code>SpanOptions</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">span options</td></tr><tr><td style="text-align:left;"><code>context</code></td><td style="text-align:left;"><code>undefined</code> | <code>Context</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">optional context</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(<code>span</code>: <code>Span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">function to be executed within the span</td></tr></tbody></table><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><p>return value of fn</p><h4 id="defined-in-14" tabindex="-1"><a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a> Defined in</h4>',12),Tt={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L81",target:"_blank",rel:"noopener noreferrer"},wt=d('<hr><h3 id="wrapinspan" tabindex="-1"><a class="header-anchor" href="#wrapinspan" aria-hidden="true">#</a> wrapInSpan</h3><p>▸ <strong>wrapInSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>fn</code>, <code>context?</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p><p>Start span for opentelemetry tracking on same level. The created span will not become the &quot;active&quot; span within opentelemetry!</p><p>This means during logging and similar the spanId of parent span is logged.</p><p>Use wrapInSpan for marking points in flow of one bigger function, but not to trace the program flow itself</p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">name of span</td></tr><tr><td style="text-align:left;"><code>opts</code></td><td style="text-align:left;"><code>SpanOptions</code></td><td style="text-align:left;">span options</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(<code>span</code>: <code>Span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</td><td style="text-align:left;">function te be executed in the span</td></tr><tr><td style="text-align:left;"><code>context?</code></td><td style="text-align:left;"><code>Context</code></td><td style="text-align:left;">span context</td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><p>return value of fn</p><h4 id="defined-in-15" tabindex="-1"><a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a> Defined in</h4>',14),Lt={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L131",target:"_blank",rel:"noopener noreferrer"};function Gt(Nt,Pt){const r=i("RouterLink"),n=i("ExternalLinkIcon");return l(),c("div",null,[e("p",null,[a(r,{to:"/api/"},{default:s(()=>[t("PURISTA API - v1.4.9")]),_:1}),t(" / "),a(r,{to:"/api/modules.html"},{default:s(()=>[t("Modules")]),_:1}),t(" / "),a(r,{to:"/api/modules/purista_core.html"},{default:s(()=>[t("@purista/core")]),_:1}),t(" / EventBridgeBaseClass")]),u,e("p",null,[a(r,{to:"/api/modules/purista_core.html"},{default:s(()=>[t("@purista/core")]),_:1}),t(".EventBridgeBaseClass")]),p,e("ul",null,[e("li",null,[e("p",null,[a(r,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:s(()=>[_]),_:1}),t("<"),a(r,{to:"/api/modules/purista_core.html#eventbridgeevents"},{default:s(()=>[f]),_:1}),t(">")]),g,e("p",null,[t("↳↳ "),a(r,{to:"/api/classes/purista_core.DefaultEventBridge.html"},{default:s(()=>[m]),_:1})])])]),b,v,e("ul",null,[e("li",null,[a(r,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#constructor"},{default:s(()=>[t("constructor")]),_:1})])]),x,e("ul",null,[e("li",null,[a(r,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#config"},{default:s(()=>[t("config")]),_:1})]),e("li",null,[a(r,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#defaultcommandtimeout"},{default:s(()=>[t("defaultCommandTimeout")]),_:1})]),e("li",null,[a(r,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#instanceid"},{default:s(()=>[t("instanceId")]),_:1})]),e("li",null,[a(r,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#logger"},{default:s(()=>[t("logger")]),_:1})]),e("li",null,[a(r,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#name"},{default:s(()=>[t("name")]),_:1})]),e("li",null,[a(r,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#traceprovider"},{default:s(()=>[t("traceProvider")]),_:1})])]),y,e("ul",null,[e("li",null,[a(r,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#destroy"},{default:s(()=>[t("destroy")]),_:1})]),e("li",null,[a(r,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#emit"},{default:s(()=>[t("emit")]),_:1})]),e("li",null,[a(r,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#gettracer"},{default:s(()=>[t("getTracer")]),_:1})]),e("li",null,[a(r,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#off"},{default:s(()=>[t("off")]),_:1})]),e("li",null,[a(r,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#on"},{default:s(()=>[t("on")]),_:1})]),e("li",null,[a(r,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#removealllisteners"},{default:s(()=>[t("removeAllListeners")]),_:1})]),e("li",null,[a(r,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#start"},{default:s(()=>[t("start")]),_:1})]),e("li",null,[a(r,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#startactivespan"},{default:s(()=>[t("startActiveSpan")]),_:1})]),e("li",null,[a(r,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#wrapinspan"},{default:s(()=>[t("wrapInSpan")]),_:1})])]),E,e("table",null,[B,e("tbody",null,[C,e("tr",null,[k,e("td",T,[a(r,{to:"/api/modules/purista_core.html#eventbridgeconfig"},{default:s(()=>[w]),_:1}),t("<"),a(r,{to:"/api/modules/purista_core.html#complete"},{default:s(()=>[L]),_:1}),t("<"),G,t(">>")])])])]),N,e("p",null,[a(r,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:s(()=>[t("GenericEventEmitter")]),_:1}),t("."),a(r,{to:"/api/classes/purista_core.GenericEventEmitter.html#constructor"},{default:s(()=>[t("constructor")]),_:1})]),P,e("p",null,[e("a",D,[t("packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:28"),a(n)])]),I,K,e("p",null,[t("• "),R,t(": "),a(r,{to:"/api/modules/purista_core.html#complete"},{default:s(()=>[S]),_:1}),t("<"),a(r,{to:"/api/modules/purista_core.html#eventbridgeconfig"},{default:s(()=>[F]),_:1}),t("<"),a(r,{to:"/api/modules/purista_core.html#complete"},{default:s(()=>[A]),_:1}),t("<"),V,t(">>>")]),M,e("p",null,[e("a",O,[t("packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:21"),a(n)])]),q,U,H,W,e("p",null,[e("a",X,[t("packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:27"),a(n)])]),Y,Z,$,j,e("p",null,[e("a",z,[t("packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:25"),a(n)])]),J,Q,e("p",null,[t("• "),ee,t(": "),a(r,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[te]),_:1})]),ae,e("p",null,[e("a",re,[t("packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:18"),a(n)])]),se,ne,de,ie,e("p",null,[e("a",oe,[t("packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:23"),a(n)])]),le,ce,he,ue,e("p",null,[e("a",pe,[t("packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:19"),a(n)])]),_e,e("p",null,[e("a",fe,[t("packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:154"),a(n)])]),ge,e("table",null,[me,e("tbody",null,[e("tr",null,[be,e("td",ve,[t("extends "),a(r,{to:"/api/modules/purista_core.html#eventkey"},{default:s(()=>[xe]),_:1}),t("<"),a(r,{to:"/api/modules/purista_core.html#eventbridgeevents"},{default:s(()=>[ye]),_:1}),t(">")])])])]),Ee,e("table",null,[Be,e("tbody",null,[Ce,e("tr",null,[ke,e("td",Te,[a(r,{to:"/api/modules/purista_core.html#eventbridgeevents"},{default:s(()=>[we]),_:1}),t("["),Le,t("]")])])])]),Ge,Ne,Pe,e("p",null,[a(r,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:s(()=>[t("GenericEventEmitter")]),_:1}),t("."),a(r,{to:"/api/classes/purista_core.GenericEventEmitter.html#emit"},{default:s(()=>[t("emit")]),_:1})]),De,e("p",null,[e("a",Ie,[t("packages/core/src/core/types/GenericEventEmitter.ts:24"),a(n)])]),Ke,e("p",null,[e("a",Re,[t("packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:69"),a(n)])]),Se,e("table",null,[Fe,e("tbody",null,[e("tr",null,[Ae,e("td",Ve,[t("extends "),a(r,{to:"/api/modules/purista_core.html#eventkey"},{default:s(()=>[Me]),_:1}),t("<"),a(r,{to:"/api/modules/purista_core.html#eventbridgeevents"},{default:s(()=>[Oe]),_:1}),t(">")])])])]),qe,e("table",null,[Ue,e("tbody",null,[He,e("tr",null,[We,e("td",Xe,[a(r,{to:"/api/modules/purista_core.internal.html#eventreceiver"},{default:s(()=>[Ye]),_:1}),t("<"),a(r,{to:"/api/modules/purista_core.html#eventbridgeevents"},{default:s(()=>[Ze]),_:1}),t("["),$e,t("]>")])])])]),je,ze,Je,e("p",null,[a(r,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:s(()=>[t("GenericEventEmitter")]),_:1}),t("."),a(r,{to:"/api/classes/purista_core.GenericEventEmitter.html#off"},{default:s(()=>[t("off")]),_:1})]),Qe,e("p",null,[e("a",et,[t("packages/core/src/core/types/GenericEventEmitter.ts:20"),a(n)])]),tt,e("table",null,[at,e("tbody",null,[e("tr",null,[rt,e("td",st,[t("extends "),a(r,{to:"/api/modules/purista_core.html#eventkey"},{default:s(()=>[nt]),_:1}),t("<"),a(r,{to:"/api/modules/purista_core.html#eventbridgeevents"},{default:s(()=>[dt]),_:1}),t(">")])])])]),it,e("table",null,[ot,e("tbody",null,[lt,e("tr",null,[ct,e("td",ht,[a(r,{to:"/api/modules/purista_core.internal.html#eventreceiver"},{default:s(()=>[ut]),_:1}),t("<"),a(r,{to:"/api/modules/purista_core.html#eventbridgeevents"},{default:s(()=>[pt]),_:1}),t("["),_t,t("]>")])])])]),ft,gt,mt,e("p",null,[a(r,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:s(()=>[t("GenericEventEmitter")]),_:1}),t("."),a(r,{to:"/api/classes/purista_core.GenericEventEmitter.html#on"},{default:s(()=>[t("on")]),_:1})]),bt,e("p",null,[e("a",vt,[t("packages/core/src/core/types/GenericEventEmitter.ts:16"),a(n)])]),xt,e("p",null,[a(r,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:s(()=>[t("GenericEventEmitter")]),_:1}),t("."),a(r,{to:"/api/classes/purista_core.GenericEventEmitter.html#removealllisteners"},{default:s(()=>[t("removeAllListeners")]),_:1})]),yt,e("p",null,[e("a",Et,[t("packages/core/src/core/types/GenericEventEmitter.ts:28"),a(n)])]),Bt,e("p",null,[e("a",Ct,[t("packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:155"),a(n)])]),kt,e("p",null,[e("a",Tt,[t("packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:81"),a(n)])]),wt,e("p",null,[e("a",Lt,[t("packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:131"),a(n)])])])}const It=o(h,[["render",Gt],["__file","purista_core.EventBridgeBaseClass.html.vue"]]);export{It as default};
