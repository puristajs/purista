import{_ as s,c as n,o as a,V as p}from"./chunks/framework.ITQiifkM.js";const v=JSON.parse('{"title":"Class: NatsBridge","description":"","frontmatter":{},"headers":[],"relativePath":"api/classes/purista_natsbridge.NatsBridge.md","filePath":"api/classes/purista_natsbridge.NatsBridge.md","lastUpdated":1708505616000}'),e={name:"api/classes/purista_natsbridge.NatsBridge.md"},i=p('<p><a href="./../README.html">PURISTA API</a> / <a href="./../modules.html">Modules</a> / <a href="./../modules/purista_natsbridge.html">@purista/natsbridge</a> / NatsBridge</p><h1 id="class-natsbridge" tabindex="-1">Class: NatsBridge <a class="header-anchor" href="#class-natsbridge" aria-label="Permalink to &quot;Class: NatsBridge&quot;">​</a></h1><p><a href="./../modules/purista_natsbridge.html">@purista/natsbridge</a>.NatsBridge</p><p>The event bridge supports brokers with and without JetStream enabled.</p><p>If JetStream is enabled, subscriptions which are marked as durable are persisted by using JetStream.<br> If JetStream is not available, subscription fall back to live-subscriptions without any persistence.</p><p>Example usage:</p><p><strong><code>Example</code></strong></p><ul><li><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span></code></pre></div></li></ul><p>import { NatsBridge } from &#39;@purista/natsbridge&#39;</p><p>// create and init our eventbridge const eventBridge = new NatsBridge() await eventBridge.start()</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>\n<span class="line"><span>## Hierarchy</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>- [`EventBridgeBaseClass`](purista_core.EventBridgeBaseClass.md)\\&lt;[`NatsBridgeConfig`](../modules/purista_natsbridge.md#natsbridgeconfig)\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>  ↳ **`NatsBridge`**</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>## Implements</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>- [`EventBridge`](../interfaces/purista_core.EventBridge.md)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>## Table of contents</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### Constructors</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>- [constructor](purista_natsbridge.NatsBridge.md#constructor)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### Properties</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>- [commands](purista_natsbridge.NatsBridge.md#commands)</span></span>\n<span class="line"><span>- [config](purista_natsbridge.NatsBridge.md#config)</span></span>\n<span class="line"><span>- [connection](purista_natsbridge.NatsBridge.md#connection)</span></span>\n<span class="line"><span>- [defaultCommandTimeout](purista_natsbridge.NatsBridge.md#defaultcommandtimeout)</span></span>\n<span class="line"><span>- [instanceId](purista_natsbridge.NatsBridge.md#instanceid)</span></span>\n<span class="line"><span>- [isJetStreamEnabled](purista_natsbridge.NatsBridge.md#isjetstreamenabled)</span></span>\n<span class="line"><span>- [jsm](purista_natsbridge.NatsBridge.md#jsm)</span></span>\n<span class="line"><span>- [logger](purista_natsbridge.NatsBridge.md#logger)</span></span>\n<span class="line"><span>- [name](purista_natsbridge.NatsBridge.md#name)</span></span>\n<span class="line"><span>- [sc](purista_natsbridge.NatsBridge.md#sc)</span></span>\n<span class="line"><span>- [subscriptions](purista_natsbridge.NatsBridge.md#subscriptions)</span></span>\n<span class="line"><span>- [traceProvider](purista_natsbridge.NatsBridge.md#traceprovider)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### Methods</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>- [destroy](purista_natsbridge.NatsBridge.md#destroy)</span></span>\n<span class="line"><span>- [emit](purista_natsbridge.NatsBridge.md#emit)</span></span>\n<span class="line"><span>- [emitMessage](purista_natsbridge.NatsBridge.md#emitmessage)</span></span>\n<span class="line"><span>- [getTracer](purista_natsbridge.NatsBridge.md#gettracer)</span></span>\n<span class="line"><span>- [invoke](purista_natsbridge.NatsBridge.md#invoke)</span></span>\n<span class="line"><span>- [isHealthy](purista_natsbridge.NatsBridge.md#ishealthy)</span></span>\n<span class="line"><span>- [isReady](purista_natsbridge.NatsBridge.md#isready)</span></span>\n<span class="line"><span>- [off](purista_natsbridge.NatsBridge.md#off)</span></span>\n<span class="line"><span>- [on](purista_natsbridge.NatsBridge.md#on)</span></span>\n<span class="line"><span>- [registerCommand](purista_natsbridge.NatsBridge.md#registercommand)</span></span>\n<span class="line"><span>- [registerSubscription](purista_natsbridge.NatsBridge.md#registersubscription)</span></span>\n<span class="line"><span>- [removeAllListeners](purista_natsbridge.NatsBridge.md#removealllisteners)</span></span>\n<span class="line"><span>- [start](purista_natsbridge.NatsBridge.md#start)</span></span>\n<span class="line"><span>- [startActiveSpan](purista_natsbridge.NatsBridge.md#startactivespan)</span></span>\n<span class="line"><span>- [unregisterCommand](purista_natsbridge.NatsBridge.md#unregistercommand)</span></span>\n<span class="line"><span>- [unregisterSubscription](purista_natsbridge.NatsBridge.md#unregistersubscription)</span></span>\n<span class="line"><span>- [wrapInSpan](purista_natsbridge.NatsBridge.md#wrapinspan)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>## Constructors</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### constructor</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>• **new NatsBridge**(`config?`): [`NatsBridge`](purista_natsbridge.NatsBridge.md)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Parameters</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>| Name | Type | Description |</span></span>\n<span class="line"><span>| :------ | :------ | :------ |</span></span>\n<span class="line"><span>| `config?` | `Object` | - |</span></span>\n<span class="line"><span>| `config.commandResponsePublishTwice?` | ``&quot;always&quot;`` \\| ``&quot;eventOnly&quot;`` \\| ``&quot;eventAndError&quot;`` \\| ``&quot;never&quot;`` | Indicates if a command response should be published a second time. If the command response gets published, it will be published to the regular topic pattern. If set to `never`, subscription might not get messages they are expecting because of the timing. If set to `always`, every command response is published. Because there might not be a consumer for every message, the broker will store the messages until the `defaultMessageExpiryInterval` is reached. This might result in a high ressource consumption of the broker. If set to `eventOnly`, only success responses which have a event name set, are published twice. There, we expect, that an event has at least one consumer subscription and the broker does not unnecessarily stores messages for a long time. **`Default`** ```ts eventOnly ``` |</span></span>\n<span class="line"><span>| `config.defaultCommandTimeout?` | `number` | Overwrite the hardcoded default timeout of command invocations |</span></span>\n<span class="line"><span>| `config.defaultMessageExpiryInterval?` | `number` | the message expiry interval in seconds **`Default`** ```ts 30 days in seconds ``` |</span></span>\n<span class="line"><span>| `config.emptyTopicPartString?` | `string` | The string which should be used in topics for parts, which are undefined **`Default`** ```ts __none__ ``` |</span></span>\n<span class="line"><span>| `config.instanceId?` | `string` | The instance id of the event bridge. If not set, a id will generated each time a instance is created. Use this if there is a need to always have the same instance id. |</span></span>\n<span class="line"><span>| `config.logLevel?` | [`LogLevelName`](../modules/purista_core.md#loglevelname) | If no logger instance is given, use this log level |</span></span>\n<span class="line"><span>| `config.logger?` | [`Logger`](purista_core.Logger.md) | A logger instance |</span></span>\n<span class="line"><span>| `config.maxMessages?` | `number` | maximum messages to run in parallel per subscription 10 means, each subscription can handle 10 calls at the same time **`Default`** ```ts 10 ``` |</span></span>\n<span class="line"><span>| `config.spanProcessor?` | `SpanProcessor` | A OpenTelemetry span processor |</span></span>\n<span class="line"><span>| `config.topicPrefix?` | `string` | the prefix for topic to prevent name collisions **`Default`** ```ts purista ``` |</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Returns</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[`NatsBridge`](purista_natsbridge.NatsBridge.md)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Overrides</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridgeBaseClass](purista_core.EventBridgeBaseClass.md).[constructor](purista_core.EventBridgeBaseClass.md#constructor)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[natsbridge/src/NatsBridge.ts:76](https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/NatsBridge.ts#L76)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>## Properties</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### commands</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>• **commands**: `Map`\\&lt;`string`, `Subscription`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[natsbridge/src/NatsBridge.ts:71](https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/NatsBridge.ts#L71)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### config</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>• **config**: [`Complete`](../modules/purista_core.md#complete)\\&lt;\\{ `commandResponsePublishTwice`: ``&quot;always&quot;`` \\| ``&quot;eventOnly&quot;`` \\| ``&quot;eventAndError&quot;`` \\| ``&quot;never&quot;`` ; `defaultCommandTimeout?`: `number` ; `defaultMessageExpiryInterval`: `number` ; `emptyTopicPartString`: `string` ; `instanceId?`: `string` ; `logLevel?`: [`LogLevelName`](../modules/purista_core.md#loglevelname) ; `logger?`: [`Logger`](purista_core.Logger.md) ; `maxMessages`: `number` ; `spanProcessor?`: `SpanProcessor` ; `topicPrefix`: `string`  }\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Inherited from</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridgeBaseClass](purista_core.EventBridgeBaseClass.md).[config](purista_core.EventBridgeBaseClass.md#config)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>core/dist/commonjs/core/EventBridge/EventBridgeBaseClass.impl.d.ts:14</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### connection</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>• **connection**: `undefined` \\| `NatsConnection`</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[natsbridge/src/NatsBridge.ts:65](https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/NatsBridge.ts#L65)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### defaultCommandTimeout</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>• **defaultCommandTimeout**: `number`</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>The default time until when a command invocation automatically returns a time out error</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Implementation of</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridge](../interfaces/purista_core.EventBridge.md).[defaultCommandTimeout](../interfaces/purista_core.EventBridge.md#defaultcommandtimeout)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Inherited from</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridgeBaseClass](purista_core.EventBridgeBaseClass.md).[defaultCommandTimeout](purista_core.EventBridgeBaseClass.md#defaultcommandtimeout)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>core/dist/commonjs/core/EventBridge/EventBridgeBaseClass.impl.d.ts:17</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### instanceId</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>• **instanceId**: `string`</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Implementation of</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridge](../interfaces/purista_core.EventBridge.md).[instanceId](../interfaces/purista_core.EventBridge.md#instanceid)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Inherited from</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridgeBaseClass](purista_core.EventBridgeBaseClass.md).[instanceId](purista_core.EventBridgeBaseClass.md#instanceid)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>core/dist/commonjs/core/EventBridge/EventBridgeBaseClass.impl.d.ts:16</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### isJetStreamEnabled</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>• **isJetStreamEnabled**: `boolean` = `false`</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[natsbridge/src/NatsBridge.ts:67](https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/NatsBridge.ts#L67)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### jsm</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>• **jsm**: `undefined` \\| `JetStreamManager`</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[natsbridge/src/NatsBridge.ts:69](https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/NatsBridge.ts#L69)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### logger</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>• **logger**: [`Logger`](purista_core.Logger.md)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Inherited from</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridgeBaseClass](purista_core.EventBridgeBaseClass.md).[logger](purista_core.EventBridgeBaseClass.md#logger)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>core/dist/commonjs/core/EventBridge/EventBridgeBaseClass.impl.d.ts:12</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### name</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>• **name**: `string`</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Implementation of</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridge](../interfaces/purista_core.EventBridge.md).[name](../interfaces/purista_core.EventBridge.md#name)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Inherited from</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridgeBaseClass](purista_core.EventBridgeBaseClass.md).[name](purista_core.EventBridgeBaseClass.md#name)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>core/dist/commonjs/core/EventBridge/EventBridgeBaseClass.impl.d.ts:15</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### sc</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>• **sc**: `Codec`\\&lt;`unknown`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[natsbridge/src/NatsBridge.ts:74](https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/NatsBridge.ts#L74)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### subscriptions</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>• **subscriptions**: `Map`\\&lt;`string`, `Subscription`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[natsbridge/src/NatsBridge.ts:72](https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/NatsBridge.ts#L72)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### traceProvider</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>• **traceProvider**: `NodeTracerProvider`</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Inherited from</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridgeBaseClass](purista_core.EventBridgeBaseClass.md).[traceProvider](purista_core.EventBridgeBaseClass.md#traceprovider)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>core/dist/commonjs/core/EventBridge/EventBridgeBaseClass.impl.d.ts:13</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>## Methods</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### destroy</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>▸ **destroy**(): `Promise`\\&lt;`void`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>Shut down event bridge as gracefully as possible</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Returns</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>`Promise`\\&lt;`void`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Implementation of</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridge](../interfaces/purista_core.EventBridge.md).[destroy](../interfaces/purista_core.EventBridge.md#destroy)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Overrides</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridgeBaseClass](purista_core.EventBridgeBaseClass.md).[destroy](purista_core.EventBridgeBaseClass.md#destroy)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[natsbridge/src/NatsBridge.ts:388](https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/NatsBridge.ts#L388)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### emit</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>▸ **emit**\\&lt;`K`\\&gt;(`eventName`, `parameter?`): `void`</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Type parameters</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>| Name | Type |</span></span>\n<span class="line"><span>| :------ | :------ |</span></span>\n<span class="line"><span>| `K` | extends [`EventKey`](../modules/purista_core.md#eventkey)\\&lt;\\{ `eventbridge-connected`: `never` ; `eventbridge-connection-error`: `unknown` ; `eventbridge-disconnected`: `never` ; `eventbridge-error`: `unknown` ; `eventbridge-reconnecting`: `never`  }\\&gt; |</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Parameters</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>| Name | Type |</span></span>\n<span class="line"><span>| :------ | :------ |</span></span>\n<span class="line"><span>| `eventName` | `K` |</span></span>\n<span class="line"><span>| `parameter?` | \\{ `eventbridge-connected`: `never` ; `eventbridge-connection-error`: `unknown` ; `eventbridge-disconnected`: `never` ; `eventbridge-error`: `unknown` ; `eventbridge-reconnecting`: `never`  }[`K`] |</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Returns</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>`void`</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Inherited from</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridgeBaseClass](purista_core.EventBridgeBaseClass.md).[emit](purista_core.EventBridgeBaseClass.md#emit)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>core/dist/commonjs/core/types/GenericEventEmitter.d.ts:13</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### emitMessage</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>▸ **emitMessage**\\&lt;`T`\\&gt;(`message`, `contentType?`, `contentEncoding?`): `Promise`\\&lt;`Readonly`\\&lt;[`EBMessage`](../modules/purista_core.md#ebmessage)\\&gt;\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>Emit a message to the eventbridge without awaiting a result</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Type parameters</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>| Name | Type |</span></span>\n<span class="line"><span>| :------ | :------ |</span></span>\n<span class="line"><span>| `T` | extends [`EBMessage`](../modules/purista_core.md#ebmessage) |</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Parameters</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>| Name | Type | Default value | Description |</span></span>\n<span class="line"><span>| :------ | :------ | :------ | :------ |</span></span>\n<span class="line"><span>| `message` | `Omit`\\&lt;[`EBMessage`](../modules/purista_core.md#ebmessage), ``&quot;id&quot;`` \\| ``&quot;timestamp&quot;`` \\| ``&quot;correlationId&quot;``\\&gt; | `undefined` | the message |</span></span>\n<span class="line"><span>| `contentType` | `string` | `&#39;application/json&#39;` | - |</span></span>\n<span class="line"><span>| `contentEncoding` | `string` | `&#39;utf-8&#39;` | - |</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Returns</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>`Promise`\\&lt;`Readonly`\\&lt;[`EBMessage`](../modules/purista_core.md#ebmessage)\\&gt;\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Implementation of</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridge](../interfaces/purista_core.EventBridge.md).[emitMessage](../interfaces/purista_core.EventBridge.md#emitmessage)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[natsbridge/src/NatsBridge.ts:106](https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/NatsBridge.ts#L106)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### getTracer</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>▸ **getTracer**(): `Tracer`</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>Returns open telemetry tracer of this service</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Returns</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>`Tracer`</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>Tracer</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Inherited from</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridgeBaseClass](purista_core.EventBridgeBaseClass.md).[getTracer](purista_core.EventBridgeBaseClass.md#gettracer)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>core/dist/commonjs/core/EventBridge/EventBridgeBaseClass.impl.d.ts:24</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### invoke</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>▸ **invoke**\\&lt;`T`\\&gt;(`input`, `commandTimeout?`): `Promise`\\&lt;`T`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>Call a command of a service and return the result of this command</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Type parameters</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>| Name |</span></span>\n<span class="line"><span>| :------ |</span></span>\n<span class="line"><span>| `T` |</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Parameters</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>| Name | Type | Description |</span></span>\n<span class="line"><span>| :------ | :------ | :------ |</span></span>\n<span class="line"><span>| `input` | `Omit`\\&lt;\\{ `contentEncoding`: `string` ; `contentType`: `string` ; `correlationId`: `string` ; `eventName?`: `string` ; `id`: `string` ; `messageType`: [`Command`](../enums/purista_core.EBMessageType.md#command) ; `otp?`: `string` ; `payload`: \\{ `parameter`: `unknown` ; `payload`: `unknown`  } ; `principalId?`: `string` ; `receiver`: [`EBMessageAddress`](../modules/purista_core.md#ebmessageaddress) ; `sender`: \\{ `instanceId`: `string` ; `serviceName`: `string` ; `serviceTarget`: `string` ; `serviceVersion`: `string`  } ; `tenantId?`: `string` ; `timestamp`: `number` ; `traceId?`: `string`  }, ``&quot;id&quot;`` \\| ``&quot;timestamp&quot;`` \\| ``&quot;correlationId&quot;`` \\| ``&quot;messageType&quot;``\\&gt; | a partial command message |</span></span>\n<span class="line"><span>| `commandTimeout` | `number` | the time to live (timeout) of the invocation |</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Returns</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>`Promise`\\&lt;`T`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Implementation of</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridge](../interfaces/purista_core.EventBridge.md).[invoke](../interfaces/purista_core.EventBridge.md#invoke)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[natsbridge/src/NatsBridge.ts:177](https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/NatsBridge.ts#L177)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### isHealthy</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>▸ **isHealthy**(): `Promise`\\&lt;`boolean`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>Indicates if the eventbridge is running and works correctly</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Returns</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>`Promise`\\&lt;`boolean`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Implementation of</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridge](../interfaces/purista_core.EventBridge.md).[isHealthy](../interfaces/purista_core.EventBridge.md#ishealthy)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[natsbridge/src/NatsBridge.ts:102](https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/NatsBridge.ts#L102)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### isReady</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>▸ **isReady**(): `Promise`\\&lt;`boolean`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>Indicates if the eventbridge has been started and is connected to underlaying message broker</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Returns</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>`Promise`\\&lt;`boolean`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Implementation of</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridge](../interfaces/purista_core.EventBridge.md).[isReady](../interfaces/purista_core.EventBridge.md#isready)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[natsbridge/src/NatsBridge.ts:98](https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/NatsBridge.ts#L98)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### off</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>▸ **off**\\&lt;`K`\\&gt;(`eventName`, `fn`): `void`</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Type parameters</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>| Name | Type |</span></span>\n<span class="line"><span>| :------ | :------ |</span></span>\n<span class="line"><span>| `K` | extends [`EventKey`](../modules/purista_core.md#eventkey)\\&lt;\\{ `eventbridge-connected`: `never` ; `eventbridge-connection-error`: `unknown` ; `eventbridge-disconnected`: `never` ; `eventbridge-error`: `unknown` ; `eventbridge-reconnecting`: `never`  }\\&gt; |</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Parameters</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>| Name | Type |</span></span>\n<span class="line"><span>| :------ | :------ |</span></span>\n<span class="line"><span>| `eventName` | `K` |</span></span>\n<span class="line"><span>| `fn` | `EventReceiver`\\&lt;\\{ `eventbridge-connected`: `never` ; `eventbridge-connection-error`: `unknown` ; `eventbridge-disconnected`: `never` ; `eventbridge-error`: `unknown` ; `eventbridge-reconnecting`: `never`  }[`K`]\\&gt; |</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Returns</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>`void`</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Inherited from</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridgeBaseClass](purista_core.EventBridgeBaseClass.md).[off](purista_core.EventBridgeBaseClass.md#off)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>core/dist/commonjs/core/types/GenericEventEmitter.d.ts:12</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### on</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>▸ **on**\\&lt;`K`\\&gt;(`eventName`, `fn`): `void`</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Type parameters</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>| Name | Type |</span></span>\n<span class="line"><span>| :------ | :------ |</span></span>\n<span class="line"><span>| `K` | extends [`EventKey`](../modules/purista_core.md#eventkey)\\&lt;\\{ `eventbridge-connected`: `never` ; `eventbridge-connection-error`: `unknown` ; `eventbridge-disconnected`: `never` ; `eventbridge-error`: `unknown` ; `eventbridge-reconnecting`: `never`  }\\&gt; |</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Parameters</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>| Name | Type |</span></span>\n<span class="line"><span>| :------ | :------ |</span></span>\n<span class="line"><span>| `eventName` | `K` |</span></span>\n<span class="line"><span>| `fn` | `EventReceiver`\\&lt;\\{ `eventbridge-connected`: `never` ; `eventbridge-connection-error`: `unknown` ; `eventbridge-disconnected`: `never` ; `eventbridge-error`: `unknown` ; `eventbridge-reconnecting`: `never`  }[`K`]\\&gt; |</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Returns</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>`void`</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Inherited from</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridgeBaseClass](purista_core.EventBridgeBaseClass.md).[on](purista_core.EventBridgeBaseClass.md#on)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>core/dist/commonjs/core/types/GenericEventEmitter.d.ts:11</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### registerCommand</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>▸ **registerCommand**(`address`, `cb`, `metadata`, `eventBridgeConfig`): `Promise`\\&lt;`string`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Parameters</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>| Name | Type |</span></span>\n<span class="line"><span>| :------ | :------ |</span></span>\n<span class="line"><span>| `address` | [`EBMessageAddress`](../modules/purista_core.md#ebmessageaddress) |</span></span>\n<span class="line"><span>| `cb` | (`message`: \\{ `contentEncoding`: `string` ; `contentType`: `string` ; `correlationId`: `string` ; `eventName?`: `string` ; `id`: `string` ; `messageType`: [`Command`](../enums/purista_core.EBMessageType.md#command) ; `otp?`: `string` ; `payload`: \\{ `parameter`: `unknown` ; `payload`: `unknown`  } ; `principalId?`: `string` ; `receiver`: [`EBMessageAddress`](../modules/purista_core.md#ebmessageaddress) ; `sender`: \\{ `instanceId`: `string` ; `serviceName`: `string` ; `serviceTarget`: `string` ; `serviceVersion`: `string`  } ; `tenantId?`: `string` ; `timestamp`: `number` ; `traceId?`: `string`  }) =&gt; `Promise`\\&lt;\\{ `contentEncoding`: ``&quot;utf-8&quot;`` ; `contentType`: ``&quot;application/json&quot;`` ; `correlationId`: `string` ; `eventName?`: `string` ; `id`: `string` ; `isHandledError`: `boolean` ; `messageType`: [`CommandErrorResponse`](../enums/purista_core.EBMessageType.md#commanderrorresponse) ; `otp?`: `string` ; `payload`: \\{ `data?`: `unknown` ; `message`: `string` ; `status`: [`StatusCode`](../enums/purista_core.StatusCode.md)  } ; `principalId?`: `string` ; `receiver`: \\{ `instanceId`: `string` ; `serviceName`: `string` ; `serviceTarget`: `string` ; `serviceVersion`: `string`  } ; `sender`: \\{ `instanceId`: `string` ; `serviceName`: `string` ; `serviceTarget`: `string` ; `serviceVersion`: `string`  } ; `tenantId?`: `string` ; `timestamp`: `number` ; `traceId?`: `string`  } \\| \\{ `contentEncoding`: `string` ; `contentType`: `string` ; `correlationId`: `string` ; `eventName?`: `string` ; `id`: `string` ; `messageType`: [`CommandSuccessResponse`](../enums/purista_core.EBMessageType.md#commandsuccessresponse) ; `otp?`: `string` ; `payload`: `unknown` ; `principalId?`: `string` ; `receiver`: \\{ `instanceId`: `string` ; `serviceName`: `string` ; `serviceTarget`: `string` ; `serviceVersion`: `string`  } ; `sender`: \\{ `instanceId`: `string` ; `serviceName`: `string` ; `serviceTarget`: `string` ; `serviceVersion`: `string`  } ; `tenantId?`: `string` ; `timestamp`: `number` ; `traceId?`: `string`  }\\&gt; |</span></span>\n<span class="line"><span>| `metadata` | [`CommandDefinitionMetadataBase`](../modules/purista_core.md#commanddefinitionmetadatabase) |</span></span>\n<span class="line"><span>| `eventBridgeConfig` | [`DefinitionEventBridgeConfig`](../modules/purista_core.md#definitioneventbridgeconfig) |</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Returns</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>`Promise`\\&lt;`string`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Implementation of</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridge](../interfaces/purista_core.EventBridge.md).[registerCommand](../interfaces/purista_core.EventBridge.md#registercommand)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[natsbridge/src/NatsBridge.ts:318](https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/NatsBridge.ts#L318)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### registerSubscription</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>▸ **registerSubscription**(`subscription`, `cb`): `Promise`\\&lt;`string`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>Register a new subscription</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Parameters</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>| Name | Type | Description |</span></span>\n<span class="line"><span>| :------ | :------ | :------ |</span></span>\n<span class="line"><span>| `subscription` | [`Subscription`](../modules/purista_core.md#subscription) | the subscription definition |</span></span>\n<span class="line"><span>| `cb` | (`message`: [`EBMessage`](../modules/purista_core.md#ebmessage)) =&gt; `Promise`\\&lt;`undefined` \\| `Omit`\\&lt;\\{ `contentEncoding`: `string` ; `contentType`: `string` ; `correlationId?`: `string` ; `eventName`: `string` ; `id`: `string` ; `messageType`: [`CustomMessage`](../enums/purista_core.EBMessageType.md#custommessage) ; `otp?`: `string` ; `payload?`: `unknown` ; `principalId?`: `string` ; `receiver?`: [`EBMessageAddress`](../modules/purista_core.md#ebmessageaddress) ; `sender`: \\{ `instanceId`: `string` ; `serviceName`: `string` ; `serviceTarget`: `string` ; `serviceVersion`: `string`  } ; `tenantId?`: `string` ; `timestamp`: `number` ; `traceId?`: `string`  }, ``&quot;id&quot;`` \\| ``&quot;timestamp&quot;``\\&gt;\\&gt; | the function to be called if a matching message arrives |</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Returns</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>`Promise`\\&lt;`string`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Implementation of</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridge](../interfaces/purista_core.EventBridge.md).[registerSubscription](../interfaces/purista_core.EventBridge.md#registersubscription)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[natsbridge/src/NatsBridge.ts:359](https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/NatsBridge.ts#L359)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### removeAllListeners</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>▸ **removeAllListeners**(): `void`</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Returns</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>`void`</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Inherited from</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridgeBaseClass](purista_core.EventBridgeBaseClass.md).[removeAllListeners](purista_core.EventBridgeBaseClass.md#removealllisteners)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>core/dist/commonjs/core/types/GenericEventEmitter.d.ts:14</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### start</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>▸ **start**(): `Promise`\\&lt;`void`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>Start the eventbridge and connect to the underlaying message broker</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Returns</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>`Promise`\\&lt;`void`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Implementation of</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridge](../interfaces/purista_core.EventBridge.md).[start](../interfaces/purista_core.EventBridge.md#start)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Overrides</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridgeBaseClass](purista_core.EventBridgeBaseClass.md).[start](purista_core.EventBridgeBaseClass.md#start)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[natsbridge/src/NatsBridge.ts:85](https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/NatsBridge.ts#L85)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### startActiveSpan</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>▸ **startActiveSpan**\\&lt;`F`\\&gt;(`name`, `opts`, `context`, `fn`): `Promise`\\&lt;`F`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>Start a child span for opentelemetry tracking</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Type parameters</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>| Name |</span></span>\n<span class="line"><span>| :------ |</span></span>\n<span class="line"><span>| `F` |</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Parameters</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>| Name | Type | Description |</span></span>\n<span class="line"><span>| :------ | :------ | :------ |</span></span>\n<span class="line"><span>| `name` | `string` | name of span |</span></span>\n<span class="line"><span>| `opts` | `SpanOptions` | span options |</span></span>\n<span class="line"><span>| `context` | `undefined` \\| `Context` | optional context |</span></span>\n<span class="line"><span>| `fn` | (`span`: `Span`) =&gt; `Promise`\\&lt;`F`\\&gt; | function to be executed within the span |</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Returns</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>`Promise`\\&lt;`F`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>return value of fn</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Inherited from</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridgeBaseClass](purista_core.EventBridgeBaseClass.md).[startActiveSpan](purista_core.EventBridgeBaseClass.md#startactivespan)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>core/dist/commonjs/core/EventBridge/EventBridgeBaseClass.impl.d.ts:33</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### unregisterCommand</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>▸ **unregisterCommand**(`address`): `Promise`\\&lt;`void`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>Unregister a service command</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Parameters</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>| Name | Type | Description |</span></span>\n<span class="line"><span>| :------ | :------ | :------ |</span></span>\n<span class="line"><span>| `address` | [`EBMessageAddress`](../modules/purista_core.md#ebmessageaddress) | The address (service name, version and command name) of the command to be de-registered |</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Returns</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>`Promise`\\&lt;`void`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Implementation of</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridge](../interfaces/purista_core.EventBridge.md).[unregisterCommand](../interfaces/purista_core.EventBridge.md#unregistercommand)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[natsbridge/src/NatsBridge.ts:348](https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/NatsBridge.ts#L348)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### unregisterSubscription</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>▸ **unregisterSubscription**(`address`): `Promise`\\&lt;`void`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Parameters</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>| Name | Type |</span></span>\n<span class="line"><span>| :------ | :------ |</span></span>\n<span class="line"><span>| `address` | [`EBMessageAddress`](../modules/purista_core.md#ebmessageaddress) |</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Returns</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>`Promise`\\&lt;`void`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Implementation of</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridge](../interfaces/purista_core.EventBridge.md).[unregisterSubscription](../interfaces/purista_core.EventBridge.md#unregistersubscription)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[natsbridge/src/NatsBridge.ts:375](https://github.com/sebastianwessel/purista/blob/master/packages/natsbridge/src/NatsBridge.ts#L375)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>___</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>### wrapInSpan</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>▸ **wrapInSpan**\\&lt;`F`\\&gt;(`name`, `opts`, `fn`, `context?`): `Promise`\\&lt;`F`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>Start span for opentelemetry tracking on same level.</span></span>\n<span class="line"><span>The created span will not become the &quot;active&quot; span within opentelemetry!</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>This means during logging and similar the spanId of parent span is logged.</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>Use wrapInSpan for marking points in flow of one bigger function,</span></span>\n<span class="line"><span>but not to trace the program flow itself</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Type parameters</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>| Name |</span></span>\n<span class="line"><span>| :------ |</span></span>\n<span class="line"><span>| `F` |</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Parameters</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>| Name | Type | Description |</span></span>\n<span class="line"><span>| :------ | :------ | :------ |</span></span>\n<span class="line"><span>| `name` | `string` | name of span |</span></span>\n<span class="line"><span>| `opts` | `SpanOptions` | span options |</span></span>\n<span class="line"><span>| `fn` | (`span`: `Span`) =&gt; `Promise`\\&lt;`F`\\&gt; | function te be executed in the span |</span></span>\n<span class="line"><span>| `context?` | `Context` | span context |</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Returns</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>`Promise`\\&lt;`F`\\&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>return value of fn</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Inherited from</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>[EventBridgeBaseClass](purista_core.EventBridgeBaseClass.md).[wrapInSpan](purista_core.EventBridgeBaseClass.md#wrapinspan)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>#### Defined in</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>core/dist/commonjs/core/EventBridge/EventBridgeBaseClass.impl.d.ts:49</span></span></code></pre></div>',11),l=[i];function t(r,c,o,d,g,m){return a(),n("div",null,l)}const b=s(e,[["render",t]]);export{v as __pageData,b as default};
