import{_ as n,c as a,o as p,ag as e}from"./chunks/framework.U_AETC1W.js";const f=JSON.parse('{"title":"Class: NatsConfigStore","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/nats-config-store/classes/NatsConfigStore.md","filePath":"api/@purista/nats-config-store/classes/NatsConfigStore.md","lastUpdated":1740066608000}'),l={name:"api/@purista/nats-config-store/classes/NatsConfigStore.md"};function i(t,s,c,o,r,g){return p(),a("div",null,s[0]||(s[0]=[e(`<p><a href="./../README.html"><strong>@purista/nats-config-store v2.0.5</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/nats-config-store</a> / NatsConfigStore</p><h1 id="class-natsconfigstore" tabindex="-1">Class: NatsConfigStore <a class="header-anchor" href="#class-natsconfigstore" aria-label="Permalink to &quot;Class: NatsConfigStore&quot;">​</a></h1><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/nats-config-store/src/NatsConfigStore.impl.ts#L31" target="_blank" rel="noreferrer">nats-config-store/src/NatsConfigStore.impl.ts:31</a></p><p>A config store for using NATS (with JetStream) as storage. JetStream must be enabled at the NATS broker.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`\`\`typescript</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const config = {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  port: 8222</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const store = new NatsConfigStore({ config })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">await store.setConfig(&#39;configKey&#39;,{ myConfig: &#39;value&#39; })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">let value = await store.getConfig(&#39;configKey&#39;)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">console.log(value) // outputs: { configKey: { myConfig: &#39;value&#39; } }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">await store.removeConfig(&#39;configKey&#39;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value = await store.getConfig(&#39;configKey&#39;)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">console.log(value) // outputs: undefined</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>## Extends</span></span>
<span class="line"><span></span></span>
<span class="line"><span>- [\`ConfigStoreBaseClass\`](../../core/classes/ConfigStoreBaseClass.md)\\&lt;[\`NatsConfigStoreConfig\`](../type-aliases/NatsConfigStoreConfig.md)\\&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## Constructors</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### new NatsConfigStore()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; **new NatsConfigStore**(\`config\`?): [\`NatsConfigStore\`](NatsConfigStore.md)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Defined in: [nats-config-store/src/NatsConfigStore.impl.ts:37](https://github.com/puristajs/purista/blob/master/packages/nats-config-store/src/NatsConfigStore.impl.ts#L37)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Parameters</span></span>
<span class="line"><span></span></span>
<span class="line"><span>##### config?</span></span>
<span class="line"><span></span></span>
<span class="line"><span>###### cacheTtl?</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`number\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Cache time to live in ms</span></span>
<span class="line"><span></span></span>
<span class="line"><span>###### enableCache?</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`boolean\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Enable cache</span></span>
<span class="line"><span></span></span>
<span class="line"><span>###### enableGet?</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`boolean\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Enable generally get method</span></span>
<span class="line"><span></span></span>
<span class="line"><span>###### enableRemove?</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`boolean\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Enable generally remove method</span></span>
<span class="line"><span></span></span>
<span class="line"><span>###### enableSet?</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`boolean\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Enable generally set method</span></span>
<span class="line"><span></span></span>
<span class="line"><span>###### keyValueStoreName?</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`string\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>###### logger?</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[\`Logger\`](../../core/classes/Logger.md)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>A logger instance</span></span>
<span class="line"><span></span></span>
<span class="line"><span>###### logLevel?</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[\`LogLevelName\`](../../core/type-aliases/LogLevelName.md)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>A log level for new logger if logger is not set</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Returns</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[\`NatsConfigStore\`](NatsConfigStore.md)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Overrides</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[\`ConfigStoreBaseClass\`](../../core/classes/ConfigStoreBaseClass.md).[\`constructor\`](../../core/classes/ConfigStoreBaseClass.md#constructors)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## Properties</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### cache</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; **cache**: [\`ConfigStoreCacheMap\`](../../core/type-aliases/ConfigStoreCacheMap.md)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Defined in: core/dist/commonjs/core/ConfigStore/ConfigStoreBaseClass.impl.d.ts:20</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Inherited from</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[\`ConfigStoreBaseClass\`](../../core/classes/ConfigStoreBaseClass.md).[\`cache\`](../../core/classes/ConfigStoreBaseClass.md#cache)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>***</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### config</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; **config**: \`object\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Defined in: core/dist/commonjs/core/ConfigStore/ConfigStoreBaseClass.impl.d.ts:18</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### cacheTtl?</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; \`optional\` **cacheTtl**: \`number\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Cache time to live in ms</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### enableCache?</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; \`optional\` **enableCache**: \`boolean\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Enable cache</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### enableGet?</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; \`optional\` **enableGet**: \`boolean\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Enable generally get method</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### enableRemove?</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; \`optional\` **enableRemove**: \`boolean\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Enable generally remove method</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### enableSet?</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; \`optional\` **enableSet**: \`boolean\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Enable generally set method</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### keyValueStoreName</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; **keyValueStoreName**: \`string\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### logger?</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; \`optional\` **logger**: [\`Logger\`](../../core/classes/Logger.md)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>A logger instance</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### logLevel?</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; \`optional\` **logLevel**: [\`LogLevelName\`](../../core/type-aliases/LogLevelName.md)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>A log level for new logger if logger is not set</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Inherited from</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[\`ConfigStoreBaseClass\`](../../core/classes/ConfigStoreBaseClass.md).[\`config\`](../../core/classes/ConfigStoreBaseClass.md#config-1)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>***</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### connection</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; **connection**: \`undefined\` \\| \`NatsConnection\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Defined in: [nats-config-store/src/NatsConfigStore.impl.ts:32](https://github.com/puristajs/purista/blob/master/packages/nats-config-store/src/NatsConfigStore.impl.ts#L32)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>***</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### kv</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; **kv**: \`undefined\` \\| \`KV\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Defined in: [nats-config-store/src/NatsConfigStore.impl.ts:35](https://github.com/puristajs/purista/blob/master/packages/nats-config-store/src/NatsConfigStore.impl.ts#L35)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>***</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### logger</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; **logger**: [\`Logger\`](../../core/classes/Logger.md)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Defined in: core/dist/commonjs/core/ConfigStore/ConfigStoreBaseClass.impl.d.ts:17</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Inherited from</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[\`ConfigStoreBaseClass\`](../../core/classes/ConfigStoreBaseClass.md).[\`logger\`](../../core/classes/ConfigStoreBaseClass.md#logger)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>***</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### name</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; **name**: \`string\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Defined in: core/dist/commonjs/core/ConfigStore/ConfigStoreBaseClass.impl.d.ts:19</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Inherited from</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[\`ConfigStoreBaseClass\`](../../core/classes/ConfigStoreBaseClass.md).[\`name\`](../../core/classes/ConfigStoreBaseClass.md#name-1)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>***</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### sc</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; **sc**: \`Codec\`\\&lt;\`unknown\`\\&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Defined in: [nats-config-store/src/NatsConfigStore.impl.ts:34](https://github.com/puristajs/purista/blob/master/packages/nats-config-store/src/NatsConfigStore.impl.ts#L34)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## Methods</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### destroy()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; **destroy**(): \`Promise\`\\&lt;\`void\`\\&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Defined in: [nats-config-store/src/NatsConfigStore.impl.ts:116](https://github.com/puristajs/purista/blob/master/packages/nats-config-store/src/NatsConfigStore.impl.ts#L116)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Returns</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`Promise\`\\&lt;\`void\`\\&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Overrides</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[\`ConfigStoreBaseClass\`](../../core/classes/ConfigStoreBaseClass.md).[\`destroy\`](../../core/classes/ConfigStoreBaseClass.md#destroy)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>***</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### getConfig()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; **getConfig**\\&lt;\`ConfigNames\`\\&gt;(...\`configNames\`): \`Promise\`\\&lt;[\`ObjectWithKeysFromStringArray\`](../../core/type-aliases/ObjectWithKeysFromStringArray.md)\\&lt;\`ConfigNames\`\\&gt;\\&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Defined in: core/dist/commonjs/core/ConfigStore/ConfigStoreBaseClass.impl.d.ts:37</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Returns the values for given config properties.</span></span>
<span class="line"><span>This function **SHOULD NOT** be overwritten by store implementation.</span></span>
<span class="line"><span>For implementation overwrite protected \`getConfigImpl\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Type Parameters</span></span>
<span class="line"><span></span></span>
<span class="line"><span>• **ConfigNames** *extends* \`string\`[]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Parameters</span></span>
<span class="line"><span></span></span>
<span class="line"><span>##### configNames</span></span>
<span class="line"><span></span></span>
<span class="line"><span>...\`ConfigNames\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Returns</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`Promise\`\\&lt;[\`ObjectWithKeysFromStringArray\`](../../core/type-aliases/ObjectWithKeysFromStringArray.md)\\&lt;\`ConfigNames\`\\&gt;\\&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>an object of { [configName]: value | undefined }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Inherited from</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[\`ConfigStoreBaseClass\`](../../core/classes/ConfigStoreBaseClass.md).[\`getConfig\`](../../core/classes/ConfigStoreBaseClass.md#getconfig)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>***</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### getConfigImpl()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; \`protected\` **getConfigImpl**\\&lt;\`ConfigNames\`\\&gt;(...\`stateNames\`): \`Promise\`\\&lt;[\`ObjectWithKeysFromStringArray\`](../../core/type-aliases/ObjectWithKeysFromStringArray.md)\\&lt;\`ConfigNames\`\\&gt;\\&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Defined in: [nats-config-store/src/NatsConfigStore.impl.ts:73](https://github.com/puristajs/purista/blob/master/packages/nats-config-store/src/NatsConfigStore.impl.ts#L73)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>This method must be overwritten by actual store implementation.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Type Parameters</span></span>
<span class="line"><span></span></span>
<span class="line"><span>• **ConfigNames** *extends* \`string\`[]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Parameters</span></span>
<span class="line"><span></span></span>
<span class="line"><span>##### stateNames</span></span>
<span class="line"><span></span></span>
<span class="line"><span>...\`ConfigNames\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Returns</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`Promise\`\\&lt;[\`ObjectWithKeysFromStringArray\`](../../core/type-aliases/ObjectWithKeysFromStringArray.md)\\&lt;\`ConfigNames\`\\&gt;\\&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>an object of { [configName]: value | undefined }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Overrides</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[\`ConfigStoreBaseClass\`](../../core/classes/ConfigStoreBaseClass.md).[\`getConfigImpl\`](../../core/classes/ConfigStoreBaseClass.md#getconfigimpl)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>***</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### getStore()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; **getStore**(): \`Promise\`\\&lt;\`KV\`\\&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Defined in: [nats-config-store/src/NatsConfigStore.impl.ts:45](https://github.com/puristajs/purista/blob/master/packages/nats-config-store/src/NatsConfigStore.impl.ts#L45)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Returns</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`Promise\`\\&lt;\`KV\`\\&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>***</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### removeConfig()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; **removeConfig**(\`configName\`): \`Promise\`\\&lt;\`void\`\\&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Defined in: core/dist/commonjs/core/ConfigStore/ConfigStoreBaseClass.impl.d.ts:52</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Removes the config item given by config name.</span></span>
<span class="line"><span>This function **SHOULD NOT** be overwritten by store implementation.</span></span>
<span class="line"><span>For implementation overwrite protected \`removeConfigImpl\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Parameters</span></span>
<span class="line"><span></span></span>
<span class="line"><span>##### configName</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`string\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Returns</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`Promise\`\\&lt;\`void\`\\&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Inherited from</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[\`ConfigStoreBaseClass\`](../../core/classes/ConfigStoreBaseClass.md).[\`removeConfig\`](../../core/classes/ConfigStoreBaseClass.md#removeconfig)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>***</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### removeConfigImpl()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; \`protected\` **removeConfigImpl**(\`stateName\`): \`Promise\`\\&lt;\`void\`\\&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Defined in: [nats-config-store/src/NatsConfigStore.impl.ts:92](https://github.com/puristajs/purista/blob/master/packages/nats-config-store/src/NatsConfigStore.impl.ts#L92)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>This method must be overwritten by actual store implementation.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Parameters</span></span>
<span class="line"><span></span></span>
<span class="line"><span>##### stateName</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`string\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Returns</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`Promise\`\\&lt;\`void\`\\&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Overrides</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[\`ConfigStoreBaseClass\`](../../core/classes/ConfigStoreBaseClass.md).[\`removeConfigImpl\`](../../core/classes/ConfigStoreBaseClass.md#removeconfigimpl)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>***</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### setConfig()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; **setConfig**(\`configName\`, \`configValue\`): \`Promise\`\\&lt;\`void\`\\&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Defined in: core/dist/commonjs/core/ConfigStore/ConfigStoreBaseClass.impl.d.ts:69</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Sets a config value</span></span>
<span class="line"><span>This function **SHOULD NOT** be overwritten by store implementation.</span></span>
<span class="line"><span>For implementation overwrite protected \`setConfigImpl\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Parameters</span></span>
<span class="line"><span></span></span>
<span class="line"><span>##### configName</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`string\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>##### configValue</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`unknown\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Returns</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`Promise\`\\&lt;\`void\`\\&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Inherited from</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[\`ConfigStoreBaseClass\`](../../core/classes/ConfigStoreBaseClass.md).[\`setConfig\`](../../core/classes/ConfigStoreBaseClass.md#setconfig)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>***</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### setConfigImpl()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; \`protected\` **setConfigImpl**(\`stateName\`, \`stateValue\`): \`Promise\`\\&lt;\`void\`\\&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Defined in: [nats-config-store/src/NatsConfigStore.impl.ts:104](https://github.com/puristajs/purista/blob/master/packages/nats-config-store/src/NatsConfigStore.impl.ts#L104)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>This method must be overwritten by actual store implementation.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Parameters</span></span>
<span class="line"><span></span></span>
<span class="line"><span>##### stateName</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`string\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>##### stateValue</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`unknown\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Returns</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`Promise\`\\&lt;\`void\`\\&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Overrides</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[\`ConfigStoreBaseClass\`](../../core/classes/ConfigStoreBaseClass.md).[\`setConfigImpl\`](../../core/classes/ConfigStoreBaseClass.md#setconfigimpl)</span></span></code></pre></div>`,9)]))}const C=n(l,[["render",i]]);export{f as __pageData,C as default};
