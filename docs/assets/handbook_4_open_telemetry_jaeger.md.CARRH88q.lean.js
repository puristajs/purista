import{_ as r,C as p,c as o,o as l,ag as t,j as i,a,G as n}from"./chunks/framework.U_AETC1W.js";const d="/graphic/jaeger_screenshot.png",y=JSON.parse('{"title":"Jaeger","description":"Use Opentelemetry with Jaeger to trace PURISTA based typescript applications","frontmatter":{"title":"Jaeger","description":"Use Opentelemetry with Jaeger to trace PURISTA based typescript applications","order":405000},"headers":[],"relativePath":"handbook/4_open_telemetry/jaeger.md","filePath":"handbook/4_open_telemetry/jaeger.md","lastUpdated":1710090869000}'),h={name:"handbook/4_open_telemetry/jaeger.md"};function g(c,e,k,_,u,m){const s=p("ExternalLink");return l(),o("div",null,[e[4]||(e[4]=t("",5)),i("p",null,[e[0]||(e[0]=a("Open the Jaeger in your browser: ")),n(s,{href:"http://localhost:16686"}),e[1]||(e[1]=a("."))]),e[5]||(e[5]=t("",2)),i("p",null,[e[2]||(e[2]=a("To generate some traces, go to the OpenAPI UI at ")),n(s,{href:"http://localhost:8080"}),e[3]||(e[3]=a(" and call some commands. To stop and cleanup and stop all docker containers:"))]),e[6]||(e[6]=t("",1))])}const F=r(h,[["render",g]]);export{y as __pageData,F as default};
