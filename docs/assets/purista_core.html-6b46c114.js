import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as c,c as r,b as e,e as n,w as s,d as t,a as d}from"./app-ccf1f840.js";const u={},h=e("h1",{id:"module-purista-core",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#module-purista-core","aria-hidden":"true"},"#"),t(" Module: @purista/core")],-1),_=e("p",null,"This is the main package of PURISTA.",-1),p=e("p",null,"A backend framework for building message based domain services.",-1),f=e("p",null,"This framework adapts and combines a wide range of different patters from domain driven design, cqrs, microservice, event sourcing and lambda functions.",-1),g=e("p",null,"It is build from ground up in typescript and highly focuses on schema, and auto generation of types, input-output-validation, OpenApi documentation (swagger).",-1),m={href:"https://jestjs.io",target:"_blank",rel:"noopener noreferrer"},y={href:"https://sinonjs.org",target:"_blank",rel:"noopener noreferrer"},b={href:"https://purista.dev",target:"_blank",rel:"noopener noreferrer"},x=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),v=e("h3",{id:"enumerations",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#enumerations","aria-hidden":"true"},"#"),t(" Enumerations")],-1),S=e("h3",{id:"classes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#classes","aria-hidden":"true"},"#"),t(" Classes")],-1),T=e("h3",{id:"interfaces",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#interfaces","aria-hidden":"true"},"#"),t(" Interfaces")],-1),k=e("h3",{id:"type-aliases",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),t(" Type Aliases")],-1),C=e("h3",{id:"variables",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#variables","aria-hidden":"true"},"#"),t(" Variables")],-1),P=e("h3",{id:"functions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#functions","aria-hidden":"true"},"#"),t(" Functions")],-1),w=e("h3",{id:"command",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#command","aria-hidden":"true"},"#"),t(" Command")],-1),M=e("h3",{id:"event-bridge",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#event-bridge","aria-hidden":"true"},"#"),t(" Event bridge")],-1),E=e("h3",{id:"helper",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#helper","aria-hidden":"true"},"#"),t(" Helper")],-1),I=e("h3",{id:"service",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#service","aria-hidden":"true"},"#"),t(" Service")],-1),F=e("h3",{id:"store",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#store","aria-hidden":"true"},"#"),t(" Store")],-1),D=e("h3",{id:"subscription",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscription","aria-hidden":"true"},"#"),t(" Subscription")],-1),R=e("h3",{id:"unit-test-helper",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#unit-test-helper","aria-hidden":"true"},"#"),t(" Unit test helper")],-1),B=d('<h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="authcredentials" tabindex="-1"><a class="header-anchor" href="#authcredentials" aria-hidden="true">#</a> AuthCredentials</h3><p>Ƭ <strong>AuthCredentials</strong>: <code>Object</code></p><p>HTTP authentication information</p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>basicAuth?</code></td><td style="text-align:left;">{ <code>password</code>: <code>string</code> ; <code>username</code>: <code>string</code> }</td><td style="text-align:left;">Basic-Auth information</td></tr><tr><td style="text-align:left;"><code>basicAuth.password</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Basic-Auth password</td></tr><tr><td style="text-align:left;"><code>basicAuth.username</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Basic-Auth username</td></tr><tr><td style="text-align:left;"><code>bearerToken?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Bearer token header</td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',7),N={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpClient/types/AuthCredentials.ts#L4",target:"_blank",rel:"noopener noreferrer"},L=e("hr",null,null,-1),O=e("h3",{id:"brokerheadercommandmsg",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#brokerheadercommandmsg","aria-hidden":"true"},"#"),t(" BrokerHeaderCommandMsg")],-1),H=e("strong",null,"BrokerHeaderCommandMsg",-1),A=e("code",null,"Prettify",-1),j=e("code",null,"BrokerHeaderCustomMsg",-1),G=e("code",null,"receiverInstanceId?",-1),q=e("code",null,"InstanceId",-1),V=e("code",null,"receiverServiceName",-1),z=e("code",null,"string",-1),Z=e("code",null,"receiverServiceTarget",-1),U=e("code",null,"string",-1),Q=e("code",null,"receiverServiceVersion",-1),K=e("code",null,"string",-1),W=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),$={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/BrokerHeaderCommandMsg.ts#L5",target:"_blank",rel:"noopener noreferrer"},Y=e("hr",null,null,-1),J=e("h3",{id:"brokerheadercommandresponsemsg",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#brokerheadercommandresponsemsg","aria-hidden":"true"},"#"),t(" BrokerHeaderCommandResponseMsg")],-1),X=e("strong",null,"BrokerHeaderCommandResponseMsg",-1),ee=e("code",null,"Prettify",-1),te=e("code",null,"BrokerHeaderCommandMsg",-1),ne=e("code",null,"receiverInstanceId",-1),oe=e("code",null,"InstanceId",-1),se=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),le={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/BrokerHeaderCommandResponseMsg.ts#L5",target:"_blank",rel:"noopener noreferrer"},de=e("hr",null,null,-1),ae=e("h3",{id:"brokerheadercustommsg",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#brokerheadercustommsg","aria-hidden":"true"},"#"),t(" BrokerHeaderCustomMsg")],-1),ie=e("p",null,[t("Ƭ "),e("strong",null,"BrokerHeaderCustomMsg"),t(": "),e("code",null,"Object")],-1),ce=e("h4",{id:"type-declaration-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-1","aria-hidden":"true"},"#"),t(" Type declaration")],-1),re=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ue=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),he=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType")],-1),_e={style:{"text-align":"left"}},pe=e("code",null,"EBMessageType",-1),fe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),ge=e("td",{style:{"text-align":"left"}},[e("code",null,"senderInstanceId")],-1),me={style:{"text-align":"left"}},ye=e("code",null,"InstanceId",-1),be=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"senderServiceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),xe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"senderServiceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),ve=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"senderServiceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Se=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),Te={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/BrokerHeaderCustomMsg.ts#L4",target:"_blank",rel:"noopener noreferrer"},ke=e("hr",null,null,-1),Ce=e("h3",{id:"command-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#command-1","aria-hidden":"true"},"#"),t(" Command")],-1),Pe=e("strong",null,"Command",-1),we=e("code",null,"PayloadType",-1),Me=e("code",null,"ParameterType",-1),Ee=e("code",null,"Prettify",-1),Ie=e("code",null,"correlationId",-1),Fe=e("code",null,"CorrelationId",-1),De=e("code",null,"messageType",-1),Re=e("code",null,"Command",-1),Be=e("code",null,"payload",-1),Ne=e("code",null,"parameter",-1),Le=e("code",null,"ParameterType",-1),Oe=e("code",null,"payload",-1),He=e("code",null,"PayloadType",-1),Ae=e("code",null,"receiver",-1),je=e("code",null,"EBMessageAddress",-1),Ge=e("code",null,"EBMessageBase",-1),qe=d('<p>Command is a event bridge message, which is emitted by sender to event bridge. The event bridge dispatches the event to the receiver. A command expects to get a response message from receiver back to sender.</p><p>Also if there are subscriptions which are matching given command, the event bridge also dispatches the command message to the subscriber(s).</p><p>BE AWARE: Subscribers should not respond with command responses if they are &quot;silent&quot; subscribers/listeners.</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4>',6),Ve={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/Command.ts#L18",target:"_blank",rel:"noopener noreferrer"},ze=e("hr",null,null,-1),Ze=e("h3",{id:"commanddefinitionlist",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commanddefinitionlist","aria-hidden":"true"},"#"),t(" CommandDefinitionList")],-1),Ue=e("strong",null,"CommandDefinitionList",-1),Qe=e("code",null,"ServiceClassType",-1),Ke=e("code",null,"CommandDefinition",-1),We=e("code",null,"ServiceClassType",-1),$e=e("code",null,"CommandDefinitionMetadataBase",-1),Ye=e("code",null,"any",-1),Je=e("code",null,"any",-1),Xe=e("code",null,"any",-1),et=e("code",null,"any",-1),tt=e("code",null,"any",-1),nt=e("code",null,"any",-1),ot=d(`<p>Helper type for creating list of service commands to be passed as input to service class</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> userServiceCommands<span class="token operator">:</span> CommandDefinitionList<span class="token operator">&lt;</span>UserService<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span>signUp<span class="token punctuation">.</span><span class="token function">getDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4>`,3),st=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),lt=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),dt={style:{"text-align":"left"}},at=e("code",null,"ServiceClass",-1),it=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),ct={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandDefinitionList.ts#L12",target:"_blank",rel:"noopener noreferrer"},rt=e("hr",null,null,-1),ut=e("h3",{id:"commanddefinitionmetadatabase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commanddefinitionmetadatabase","aria-hidden":"true"},"#"),t(" CommandDefinitionMetadataBase")],-1),ht=e("p",null,[t("Ƭ "),e("strong",null,"CommandDefinitionMetadataBase"),t(": "),e("code",null,"Object")],-1),_t=e("h4",{id:"type-declaration-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-2","aria-hidden":"true"},"#"),t(" Type declaration")],-1),pt=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ft=e("td",{style:{"text-align":"left"}},[e("code",null,"expose")],-1),gt={style:{"text-align":"left"}},mt=e("code",null,"contentEncodingRequest?",-1),yt=e("code",null,"string",-1),bt=e("code",null,"contentEncodingResponse?",-1),xt=e("code",null,"string",-1),vt=e("code",null,"contentTypeRequest?",-1),St=e("code",null,"ContentType",-1),Tt=e("code",null,"contentTypeResponse?",-1),kt=e("code",null,"ContentType",-1),Ct=e("code",null,"deprecated?",-1),Pt=e("code",null,"boolean",-1),wt=e("code",null,"inputPayload?",-1),Mt=e("code",null,"SchemaObject",-1),Et=e("code",null,"outputPayload?",-1),It=e("code",null,"SchemaObject",-1),Ft=e("code",null,"parameter?",-1),Dt=e("code",null,"SchemaObject",-1),Rt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingRequest?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Bt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingResponse?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Nt=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeRequest?")],-1),Lt={style:{"text-align":"left"}},Ot=e("code",null,"ContentType",-1),Ht=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeResponse?")],-1),At={style:{"text-align":"left"}},jt=e("code",null,"ContentType",-1),Gt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.deprecated?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")])],-1),qt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.inputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Vt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.outputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),zt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.parameter?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Zt=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ut={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandDefinitionMetadataBase.ts#L5",target:"_blank",rel:"noopener noreferrer"},Qt=d(`<hr><h3 id="complete" tabindex="-1"><a class="header-anchor" href="#complete" aria-hidden="true">#</a> Complete</h3><p>Ƭ <strong>Complete</strong>&lt;<code>T</code>&gt;: { [P in keyof Required&lt;T&gt;]: Pick&lt;T, P&gt; extends Required&lt;Pick&lt;T, P&gt;&gt; ? T[P] : T[P] | undefined }</p><p>A helper which forces to provide all object keys, even if they are optional.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
 one<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
 two<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
 three<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">// without:</span>
<span class="token keyword">const</span> x<span class="token operator">:</span><span class="token constant">A</span> <span class="token operator">=</span> <span class="token punctuation">{</span> three<span class="token operator">:</span> <span class="token string">&#39;will work&#39;</span><span class="token punctuation">}</span>

<span class="token comment">// this will fail</span>
<span class="token keyword">const</span> y<span class="token operator">:</span>Complete<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span> three<span class="token operator">:</span> <span class="token string">&#39;will complain that one and two is missing&#39;</span><span class="token punctuation">}</span>
<span class="token comment">// needs to be like this:</span>
<span class="token keyword">const</span> z<span class="token operator">:</span>Complete<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span> one<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> two<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> three<span class="token operator">:</span> <span class="token string">&#39;will work&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>`,9),Kt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/Complete.ts#L20",target:"_blank",rel:"noopener noreferrer"},Wt=d('<hr><h3 id="compressionmethod" tabindex="-1"><a class="header-anchor" href="#compressionmethod" aria-hidden="true">#</a> CompressionMethod</h3><p>Ƭ <strong>CompressionMethod</strong>: <code>&quot;gzip&quot;</code> | <code>&quot;deflat&quot;</code> | <code>&quot;br&quot;</code> | <code>undefined</code></p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4>',4),$t={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/CompressionMethod.ts#L1",target:"_blank",rel:"noopener noreferrer"},Yt=d('<hr><h3 id="contenttype" tabindex="-1"><a class="header-anchor" href="#contenttype" aria-hidden="true">#</a> ContentType</h3><p>Ƭ <strong>ContentType</strong>: <code>&quot;application/json&quot;</code> | <code>&quot;application/javascript&quot;</code> | <code>&quot;text/csv&quot;</code> | <code>&quot;text/css&quot;</code> | <code>&quot;text/html&quot;</code> | <code>&quot;text/javascript&quot;</code> | <code>&quot;text/markdown&quot;</code> | <code>&quot;text/plain&quot;</code> | <code>&quot;text/xml&quot;</code> | <code>string</code></p><p>List of content types for message payloads. If the content type is other than <code>application/json</code>, the message payload must be a string. It is up to the implementation to extract the content type from the original message and to convert or transform data.</p><h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4>',5),Jt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ContentType.ts#L6",target:"_blank",rel:"noopener noreferrer"},Xt=e("hr",null,null,-1),en=e("h3",{id:"contextbase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#contextbase","aria-hidden":"true"},"#"),t(" ContextBase")],-1),tn=e("p",null,[t("Ƭ "),e("strong",null,"ContextBase"),t(": "),e("code",null,"Object")],-1),nn=e("p",null,"The ContextBase provides is a basic type. Each context for command function, subscription function and all Hooks and transformers will have at least the properties of this type.",-1),on=e("h4",{id:"type-declaration-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-3","aria-hidden":"true"},"#"),t(" Type declaration")],-1),sn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),ln=e("td",{style:{"text-align":"left"}},[e("code",null,"configs")],-1),dn={style:{"text-align":"left"}},an=e("code",null,"getConfig",-1),cn=e("code",null,"ConfigGetterFunction",-1),rn=e("code",null,"removeConfig",-1),un=e("code",null,"ConfigDeleteFunction",-1),hn=e("code",null,"setConfig",-1),_n=e("code",null,"ConfigSetterFunction",-1),pn=e("td",{style:{"text-align":"left"}},"the config store",-1),fn=e("td",{style:{"text-align":"left"}},[e("code",null,"configs.getConfig")],-1),gn={style:{"text-align":"left"}},mn=e("code",null,"ConfigGetterFunction",-1),yn=e("td",{style:{"text-align":"left"}},"get a config value from the config store",-1),bn=e("td",{style:{"text-align":"left"}},[e("code",null,"configs.removeConfig")],-1),xn={style:{"text-align":"left"}},vn=e("code",null,"ConfigDeleteFunction",-1),Sn=e("td",{style:{"text-align":"left"}},"delete a config value from the config store",-1),Tn=e("td",{style:{"text-align":"left"}},[e("code",null,"configs.setConfig")],-1),kn={style:{"text-align":"left"}},Cn=e("code",null,"ConfigSetterFunction",-1),Pn=e("td",{style:{"text-align":"left"}},"set a config value in the config store",-1),wn=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),Mn={style:{"text-align":"left"}},En=e("code",null,"Logger",-1),In=e("td",{style:{"text-align":"left"}},"the logger instance",-1),Fn=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets")],-1),Dn={style:{"text-align":"left"}},Rn=e("code",null,"getSecret",-1),Bn=e("code",null,"SecretGetterFunction",-1),Nn=e("code",null,"removeSecret",-1),Ln=e("code",null,"SecretDeleteFunction",-1),On=e("code",null,"setSecret",-1),Hn=e("code",null,"SecretSetterFunction",-1),An=e("td",{style:{"text-align":"left"}},"the secret store",-1),jn=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets.getSecret")],-1),Gn={style:{"text-align":"left"}},qn=e("code",null,"SecretGetterFunction",-1),Vn=e("td",{style:{"text-align":"left"}},"get a secret from the secret store",-1),zn=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets.removeSecret")],-1),Zn={style:{"text-align":"left"}},Un=e("code",null,"SecretDeleteFunction",-1),Qn=e("td",{style:{"text-align":"left"}},"delete a secret from the secret store",-1),Kn=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets.setSecret")],-1),Wn={style:{"text-align":"left"}},$n=e("code",null,"SecretSetterFunction",-1),Yn=e("td",{style:{"text-align":"left"}},"set a secret in the secret store",-1),Jn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"Context"),t(" | "),e("code",null,"undefined"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")]),e("td",{style:{"text-align":"left"}},"wrap given function in an opentelemetry active span")],-1),Xn=e("td",{style:{"text-align":"left"}},[e("code",null,"states")],-1),eo={style:{"text-align":"left"}},to=e("code",null,"getState",-1),no=e("code",null,"StateGetterFunction",-1),oo=e("code",null,"removeState",-1),so=e("code",null,"StateDeleteFunction",-1),lo=e("code",null,"setState",-1),ao=e("code",null,"StateSetterFunction",-1),io=e("td",{style:{"text-align":"left"}},"the state store",-1),co=e("td",{style:{"text-align":"left"}},[e("code",null,"states.getState")],-1),ro={style:{"text-align":"left"}},uo=e("code",null,"StateGetterFunction",-1),ho=e("td",{style:{"text-align":"left"}},"get a state value from the state store",-1),_o=e("td",{style:{"text-align":"left"}},[e("code",null,"states.removeState")],-1),po={style:{"text-align":"left"}},fo=e("code",null,"StateDeleteFunction",-1),go=e("td",{style:{"text-align":"left"}},"delete a state value from the state store",-1),mo=e("td",{style:{"text-align":"left"}},[e("code",null,"states.setState")],-1),yo={style:{"text-align":"left"}},bo=e("code",null,"StateSetterFunction",-1),xo=e("td",{style:{"text-align":"left"}},"set a state value in the state store",-1),vo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")]),e("td",{style:{"text-align":"left"}},"wrap given function in an opentelemetry span")],-1),So=e("h4",{id:"defined-in-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-10","aria-hidden":"true"},"#"),t(" Defined in")],-1),To={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ContextBase.ts#L12",target:"_blank",rel:"noopener noreferrer"},ko=e("hr",null,null,-1),Co=e("h3",{id:"correlationid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#correlationid","aria-hidden":"true"},"#"),t(" CorrelationId")],-1),Po=e("p",null,[t("Ƭ "),e("strong",null,"CorrelationId"),t(": "),e("code",null,"string")],-1),wo=e("p",null,"the correlation id links the command invocation message with the command response message",-1),Mo=e("h4",{id:"defined-in-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-11","aria-hidden":"true"},"#"),t(" Defined in")],-1),Eo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/CorrelationId.ts#L2",target:"_blank",rel:"noopener noreferrer"},Io=e("hr",null,null,-1),Fo=e("h3",{id:"custommessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#custommessage","aria-hidden":"true"},"#"),t(" CustomMessage")],-1),Do=e("strong",null,"CustomMessage",-1),Ro=e("code",null,"Payload",-1),Bo=e("code",null,"Prettify",-1),No=e("code",null,"eventName",-1),Lo=e("code",null,"string",-1),Oo=e("code",null,"messageType",-1),Ho=e("code",null,"CustomMessage",-1),Ao=e("code",null,"payload?",-1),jo=e("code",null,"Payload",-1),Go=e("code",null,"receiver?",-1),qo=e("code",null,"EBMessageAddress",-1),Vo=e("code",null,"EBMessageBase",-1),zo=d('<p>A custom message is a message which can be used to pass business information. The producer emits the message without knowledge about any consumer. The producer does not expect a response from a consumer.</p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-12" tabindex="-1"><a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a> Defined in</h4>',4),Zo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/CustomMessage.ts#L11",target:"_blank",rel:"noopener noreferrer"},Uo=d('<hr><h3 id="defaultconfigstoreconfig" tabindex="-1"><a class="header-anchor" href="#defaultconfigstoreconfig" aria-hidden="true">#</a> DefaultConfigStoreConfig</h3><p>Ƭ <strong>DefaultConfigStoreConfig</strong>: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4>',4),Qo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultConfigStore/types/DefaultConfigStoreConfig.ts#L1",target:"_blank",rel:"noopener noreferrer"},Ko=d('<hr><h3 id="defaulteventbridgeconfig" tabindex="-1"><a class="header-anchor" href="#defaulteventbridgeconfig" aria-hidden="true">#</a> DefaultEventBridgeConfig</h3><p>Ƭ <strong>DefaultEventBridgeConfig</strong>: <code>Object</code></p><p>The configuration for the DefaultEventBridge.</p><h4 id="type-declaration-4" tabindex="-1"><a class="header-anchor" href="#type-declaration-4" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>emitMessagesAsEventBridgeEvents?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Emit messages which have an event name set as javascript events on the event bridge instance</td></tr><tr><td style="text-align:left;"><code>logWarnOnMessagesWithoutReceiver?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Log warnings on messages which are emitted, but could not delivered to at least one receiver</td></tr></tbody></table><h4 id="defined-in-14" tabindex="-1"><a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a> Defined in</h4>',7),Wo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/types/DefaultEventBridgeConfig.ts#L4",target:"_blank",rel:"noopener noreferrer"},$o=d('<hr><h3 id="defaultsecretstoreconfig" tabindex="-1"><a class="header-anchor" href="#defaultsecretstoreconfig" aria-hidden="true">#</a> DefaultSecretStoreConfig</h3><p>Ƭ <strong>DefaultSecretStoreConfig</strong>: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><h4 id="defined-in-15" tabindex="-1"><a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a> Defined in</h4>',4),Yo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultSecretStore/types/DefaultSecretStoreConfig.ts#L1",target:"_blank",rel:"noopener noreferrer"},Jo=d('<hr><h3 id="defaultstatestoreconfig" tabindex="-1"><a class="header-anchor" href="#defaultstatestoreconfig" aria-hidden="true">#</a> DefaultStateStoreConfig</h3><p>Ƭ <strong>DefaultStateStoreConfig</strong>: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><h4 id="defined-in-16" tabindex="-1"><a class="header-anchor" href="#defined-in-16" aria-hidden="true">#</a> Defined in</h4>',4),Xo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultStateStore/types/DefaultStateStoreConfig.ts#L1",target:"_blank",rel:"noopener noreferrer"},es=d('<hr><h3 id="definitioneventbridgeconfig" tabindex="-1"><a class="header-anchor" href="#definitioneventbridgeconfig" aria-hidden="true">#</a> DefinitionEventBridgeConfig</h3><p>Ƭ <strong>DefinitionEventBridgeConfig</strong>: <code>Object</code></p><p>Settings and advices for the event bridge, which are set in the command or subscription builder. The properties are advices and hints. It depends on the used event bridge implementation and underlaying message broker, if a specific property can be respected.</p><h4 id="type-declaration-5" tabindex="-1"><a class="header-anchor" href="#type-declaration-5" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>autoacknowledge</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Send the acknowledge to message broker as soon as the message arrives - defaults to true for commands - defaults to false for subscriptions</td></tr><tr><td style="text-align:left;"><code>durable</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Advise the underlaying message broker to store messages if no consumer is available. Messages will be send as soon as the service is able to consume.</td></tr><tr><td style="text-align:left;"><code>shared</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">If set to true, the event bridge is adviced to deliver one message to at least one consumer instance. True is the default value. If set to false, the event bridge is adviced to deliver one message to all consumer instances. Use case: Receiving Info of message, which need to be passed to all instance to keep information in sync. In serverless environments, this flag should not have any effect <strong><code>Default</code></strong> <code>ts true </code></td></tr></tbody></table><h4 id="defined-in-17" tabindex="-1"><a class="header-anchor" href="#defined-in-17" aria-hidden="true">#</a> Defined in</h4>',7),ts={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/DefinitionEventBridgeConfig.ts#L6",target:"_blank",rel:"noopener noreferrer"},ns=e("hr",null,null,-1),os=e("h3",{id:"ebmessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessage","aria-hidden":"true"},"#"),t(" EBMessage")],-1),ss=e("strong",null,"EBMessage",-1),ls=e("code",null,"Command",-1),ds=e("code",null,"CommandResponse",-1),as=e("code",null,"InfoMessage",-1),is=e("code",null,"CustomMessage",-1),cs=e("p",null,"EBMessage is some message which is handled by the event bridge.",-1),rs=e("h4",{id:"defined-in-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-18","aria-hidden":"true"},"#"),t(" Defined in")],-1),us={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessage.ts#L8",target:"_blank",rel:"noopener noreferrer"},hs=e("hr",null,null,-1),_s=e("h3",{id:"ebmessageaddress",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessageaddress","aria-hidden":"true"},"#"),t(" EBMessageAddress")],-1),ps=e("p",null,[t("Ƭ "),e("strong",null,"EBMessageAddress"),t(": "),e("code",null,"Object")],-1),fs=e("p",null,"A event bridge message address describes the sender or receiver of a message.",-1),gs=e("h4",{id:"type-declaration-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-6","aria-hidden":"true"},"#"),t(" Type declaration")],-1),ms=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),ys=e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId?")],-1),bs={style:{"text-align":"left"}},xs=e("code",null,"InstanceId",-1),vs=e("td",{style:{"text-align":"left"}},"instance id of eventbridge",-1),Ss=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the service")],-1),Ts=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the command or subscription")],-1),ks=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the version of the service")],-1),Cs=e("h4",{id:"defined-in-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-19","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ps={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessageAddress.ts#L6",target:"_blank",rel:"noopener noreferrer"},ws=e("hr",null,null,-1),Ms=e("h3",{id:"ebmessagebase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessagebase","aria-hidden":"true"},"#"),t(" EBMessageBase")],-1),Es=e("p",null,[t("Ƭ "),e("strong",null,"EBMessageBase"),t(": "),e("code",null,"Object")],-1),Is=e("p",null,"Default fields which are part of any purista message",-1),Fs=e("h4",{id:"type-declaration-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-7","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Ds=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Rs=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content encoding of message payload")],-1),Bs=e("td",{style:{"text-align":"left"}},[e("code",null,"contentType")],-1),Ns={style:{"text-align":"left"}},Ls=e("code",null,"ContentType",-1),Os=e("td",{style:{"text-align":"left"}},"content type of message payload",-1),Hs=e("td",{style:{"text-align":"left"}},[e("code",null,"correlationId?")],-1),As={style:{"text-align":"left"}},js=e("code",null,"CorrelationId",-1),Gs=e("td",{style:{"text-align":"left"}},"correlation id to know which command response referrs to which command",-1),qs=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name for this message")],-1),Vs=e("td",{style:{"text-align":"left"}},[e("code",null,"id")],-1),zs={style:{"text-align":"left"}},Zs=e("code",null,"EBMessageId",-1),Us=e("td",{style:{"text-align":"left"}},"global unique id of message",-1),Qs=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"otp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"stringified Opentelemetry parent trace id")],-1),Ks=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),Ws={style:{"text-align":"left"}},$s=e("code",null,"PrincipalId",-1),Ys=e("td",{style:{"text-align":"left"}},"principal id",-1),Js=e("td",{style:{"text-align":"left"}},[e("code",null,"sender")],-1),Xs={style:{"text-align":"left"}},el=e("code",null,"EBMessageSenderAddress",-1),tl=e("td",{style:{"text-align":"left"}},"-",-1),nl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"timestamp of message creation time")],-1),ol=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId?")],-1),sl={style:{"text-align":"left"}},ll=e("code",null,"TraceId",-1),dl=e("td",{style:{"text-align":"left"}},"trace id of message",-1),al=e("h4",{id:"defined-in-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-20","aria-hidden":"true"},"#"),t(" Defined in")],-1),il={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessageBase.ts#L11",target:"_blank",rel:"noopener noreferrer"},cl=e("hr",null,null,-1),rl=e("h3",{id:"ebmessageid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessageid","aria-hidden":"true"},"#"),t(" EBMessageId")],-1),ul=e("p",null,[t("Ƭ "),e("strong",null,"EBMessageId"),t(": "),e("code",null,"string")],-1),hl=e("p",null,"Unique id of the event bridge message",-1),_l=e("h4",{id:"defined-in-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-21","aria-hidden":"true"},"#"),t(" Defined in")],-1),pl={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessageId.ts#L4",target:"_blank",rel:"noopener noreferrer"},fl=e("hr",null,null,-1),gl=e("h3",{id:"ebmessagesenderaddress",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessagesenderaddress","aria-hidden":"true"},"#"),t(" EBMessageSenderAddress")],-1),ml=e("strong",null,"EBMessageSenderAddress",-1),yl=e("code",null,"Prettify",-1),bl=e("code",null,"Omit",-1),xl=e("code",null,"EBMessageAddress",-1),vl=e("code",null,'"instanceId"',-1),Sl=e("code",null,"Required",-1),Tl=e("code",null,"Pick",-1),kl=e("code",null,"EBMessageAddress",-1),Cl=e("code",null,'"instanceId"',-1),Pl=e("p",null,"A event bridge message address describes the sender or receiver of a message.",-1),wl=e("h4",{id:"defined-in-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-22","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ml={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessageSenderAddress.ts#L7",target:"_blank",rel:"noopener noreferrer"},El=e("hr",null,null,-1),Il=e("h3",{id:"emitcustommessagefunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#emitcustommessagefunction","aria-hidden":"true"},"#"),t(" EmitCustomMessageFunction")],-1),Fl=e("strong",null,"EmitCustomMessageFunction",-1),Dl=e("code",null,"eventName",-1),Rl=e("code",null,"string",-1),Bl=e("code",null,"payload?",-1),Nl=e("code",null,"Payload",-1),Ll=e("code",null,"contentType?",-1),Ol=e("code",null,"ContentType",-1),Hl=e("code",null,"contentEncoding?",-1),Al=e("code",null,"string",-1),jl=e("code",null,"Promise",-1),Gl=e("code",null,"void",-1),ql=d(`<h4 id="type-declaration-8" tabindex="-1"><a class="header-anchor" href="#type-declaration-8" aria-hidden="true">#</a> Type declaration</h4><p>▸ &lt;<code>Payload</code>&gt;(<code>eventName</code>, <code>payload?</code>, <code>contentType?</code>, <code>contentEncoding?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Emits the given payload as custom message with the given event name.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">await</span> <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;my-custom-event-name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> the<span class="token operator">:</span> <span class="token string">&#39;payload&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h5>`,8),Vl=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),zl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Zl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Payload")])],-1),Ul=e("td",{style:{"text-align":"left"}},[e("code",null,"contentType?")],-1),Ql={style:{"text-align":"left"}},Kl=e("code",null,"ContentType",-1),Wl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),$l=e("h5",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns","aria-hidden":"true"},"#"),t(" Returns")],-1),Yl=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),Jl=e("h4",{id:"defined-in-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-23","aria-hidden":"true"},"#"),t(" Defined in")],-1),Xl={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EmitCustomMessageFunction.ts#L10",target:"_blank",rel:"noopener noreferrer"},ed=e("hr",null,null,-1),td=e("h3",{id:"errorresponsepayload",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#errorresponsepayload","aria-hidden":"true"},"#"),t(" ErrorResponsePayload")],-1),nd=e("p",null,[t("Ƭ "),e("strong",null,"ErrorResponsePayload"),t(": "),e("code",null,"Object")],-1),od=e("p",null,"Error message payload",-1),sd=e("h4",{id:"type-declaration-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-9","aria-hidden":"true"},"#"),t(" Type declaration")],-1),ld=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),dd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"data?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"addition data")],-1),ad=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"message")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"a human readable error message")],-1),id=e("td",{style:{"text-align":"left"}},[e("code",null,"status")],-1),cd={style:{"text-align":"left"}},rd=e("code",null,"StatusCode",-1),ud=e("td",{style:{"text-align":"left"}},"the error status code",-1),hd=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId?")],-1),_d={style:{"text-align":"left"}},pd=e("code",null,"TraceId",-1),fd=e("td",{style:{"text-align":"left"}},"the trace if of the request",-1),gd=e("h4",{id:"defined-in-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-24","aria-hidden":"true"},"#"),t(" Defined in")],-1),md={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ErrorResponsePayload.ts#L7",target:"_blank",rel:"noopener noreferrer"},yd=d('<hr><h3 id="eventbridgeadapterevents" tabindex="-1"><a class="header-anchor" href="#eventbridgeadapterevents" aria-hidden="true">#</a> EventBridgeAdapterEvents</h3><p>Ƭ <strong>EventBridgeAdapterEvents</strong>: <code>Object</code></p><h4 id="index-signature" tabindex="-1"><a class="header-anchor" href="#index-signature" aria-hidden="true">#</a> Index signature</h4><p>▪ [key: <code>string</code>]: <code>unknown</code></p><h4 id="defined-in-25" tabindex="-1"><a class="header-anchor" href="#defined-in-25" aria-hidden="true">#</a> Defined in</h4>',6),bd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeEvents.ts#L42",target:"_blank",rel:"noopener noreferrer"},xd=e("hr",null,null,-1),vd=e("h3",{id:"eventbridgeconfig",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#eventbridgeconfig","aria-hidden":"true"},"#"),t(" EventBridgeConfig")],-1),Sd=e("strong",null,"EventBridgeConfig",-1),Td=e("code",null,"CustomConfig",-1),kd=e("code",null,"Prettify",-1),Cd=e("code",null,"defaultCommandTimeout?",-1),Pd=e("code",null,"number",-1),wd=e("code",null,"instanceId?",-1),Md=e("code",null,"string",-1),Ed=e("code",null,"logLevel?",-1),Id=e("code",null,"LogLevelName",-1),Fd=e("code",null,"logger?",-1),Dd=e("code",null,"Logger",-1),Rd=e("code",null,"spanProcessor?",-1),Bd=e("code",null,"SpanProcessor",-1),Nd=e("code",null,"CustomConfig",-1),Ld=d('<p>The config object for an event bridge. Every event bridge implementation must use this type for configuration.</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>CustomConfig</code></td></tr></tbody></table><h4 id="defined-in-26" tabindex="-1"><a class="header-anchor" href="#defined-in-26" aria-hidden="true">#</a> Defined in</h4>',4),Od={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeConfig.ts#L10",target:"_blank",rel:"noopener noreferrer"},Hd=d('<hr><h3 id="eventbridgecustomevents" tabindex="-1"><a class="header-anchor" href="#eventbridgecustomevents" aria-hidden="true">#</a> EventBridgeCustomEvents</h3><p>Ƭ <strong>EventBridgeCustomEvents</strong>: <code>Object</code></p><h4 id="index-signature-1" tabindex="-1"><a class="header-anchor" href="#index-signature-1" aria-hidden="true">#</a> Index signature</h4><p>▪ [key: <code>string</code>]: <code>unknown</code></p><h4 id="defined-in-27" tabindex="-1"><a class="header-anchor" href="#defined-in-27" aria-hidden="true">#</a> Defined in</h4>',6),Ad={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeEvents.ts#L37",target:"_blank",rel:"noopener noreferrer"},jd=e("hr",null,null,-1),Gd=e("h3",{id:"eventbridgeevents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#eventbridgeevents","aria-hidden":"true"},"#"),t(" EventBridgeEvents")],-1),qd=e("strong",null,"EventBridgeEvents",-1),Vd=e("code",null,"Prettify",-1),zd=e("code",null,"EventBridgeEventsBasic",-1),Zd=e("code",null,"addPrefixToObject",-1),Ud=e("code",null,"EventBridgeAdapterEvents",-1),Qd=e("code",null,'"adapter-"',-1),Kd=e("code",null,"addPrefixToObject",-1),Wd=e("code",null,"EventBridgeCustomEvents",-1),$d=e("code",null,'"custom-"',-1),Yd=e("h4",{id:"defined-in-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-28","aria-hidden":"true"},"#"),t(" Defined in")],-1),Jd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeEvents.ts#L47",target:"_blank",rel:"noopener noreferrer"},Xd=d('<hr><h3 id="eventkey" tabindex="-1"><a class="header-anchor" href="#eventkey" aria-hidden="true">#</a> EventKey</h3><p>Ƭ <strong>EventKey</strong>&lt;<code>T</code>&gt;: <code>string</code> &amp; keyof <code>T</code></p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4>',4),ea=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ta=e("td",{style:{"text-align":"left"}},[e("code",null,"T")],-1),na={style:{"text-align":"left"}},oa=e("code",null,"EventMap",-1),sa=e("h4",{id:"defined-in-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-29","aria-hidden":"true"},"#"),t(" Defined in")],-1),la={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L5",target:"_blank",rel:"noopener noreferrer"},da=d('<hr><h3 id="eventmap" tabindex="-1"><a class="header-anchor" href="#eventmap" aria-hidden="true">#</a> EventMap</h3><p>Ƭ <strong>EventMap</strong>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p><h4 id="defined-in-30" tabindex="-1"><a class="header-anchor" href="#defined-in-30" aria-hidden="true">#</a> Defined in</h4>',4),aa={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L3",target:"_blank",rel:"noopener noreferrer"},ia=e("hr",null,null,-1),ca=e("h3",{id:"httpclientconfig",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#httpclientconfig","aria-hidden":"true"},"#"),t(" HttpClientConfig")],-1),ra=e("strong",null,"HttpClientConfig",-1),ua=e("code",null,"CustomConfig",-1),ha=e("code",null,"Prettify",-1),_a=e("code",null,"baseUrl",-1),pa=e("code",null,"string",-1),fa=e("code",null,"basicAuth?",-1),ga=e("code",null,"password",-1),ma=e("code",null,"string",-1),ya=e("code",null,"username",-1),ba=e("code",null,"string",-1),xa=e("code",null,"bearerToken?",-1),va=e("code",null,"string",-1),Sa=e("code",null,"defaultHeaders?",-1),Ta=e("code",null,"Record",-1),ka=e("code",null,"string",-1),Ca=e("code",null,"string",-1),Pa=e("code",null,"defaultTimeout?",-1),wa=e("code",null,"number",-1),Ma=e("code",null,"enableOpentelemetry?",-1),Ea=e("code",null,"boolean",-1),Ia=e("code",null,"isKeepAlive?",-1),Fa=e("code",null,"boolean",-1),Da=e("code",null,"logLevel?",-1),Ra=e("code",null,"LogLevelName",-1),Ba=e("code",null,"logger?",-1),Na=e("code",null,"Logger",-1),La=e("code",null,"name?",-1),Oa=e("code",null,"string",-1),Ha=e("code",null,"spanProcessor?",-1),Aa=e("code",null,"SpanProcessor",-1),ja=e("code",null,"CustomConfig",-1),Ga=d('<p>Tha basic configuration for a HTTPClient Requires as least a <code>baseUrl</code></p><h4 id="type-parameters-7" tabindex="-1"><a class="header-anchor" href="#type-parameters-7" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>CustomConfig</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</td></tr></tbody></table><h4 id="defined-in-31" tabindex="-1"><a class="header-anchor" href="#defined-in-31" aria-hidden="true">#</a> Defined in</h4>',4),qa={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpClient/types/HttpClientConfig.ts#L9",target:"_blank",rel:"noopener noreferrer"},Va=d('<hr><h3 id="httpclientrequestoptions" tabindex="-1"><a class="header-anchor" href="#httpclientrequestoptions" aria-hidden="true">#</a> HttpClientRequestOptions</h3><p>Ƭ <strong>HttpClientRequestOptions</strong>: <code>Object</code></p><p>Options for a single request</p><h4 id="type-declaration-10" tabindex="-1"><a class="header-anchor" href="#type-declaration-10" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>hash?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">url hash @example: http://example.com/index.html#hash</td></tr><tr><td style="text-align:left;"><code>headers?</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</td><td style="text-align:left;">additional headers</td></tr><tr><td style="text-align:left;"><code>query?</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</td><td style="text-align:left;">query/search string parameter</td></tr><tr><td style="text-align:left;"><code>timeout?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Timeout for the request in ms <strong><code>Default</code></strong> <code>ts 30000 </code></td></tr></tbody></table><h4 id="defined-in-32" tabindex="-1"><a class="header-anchor" href="#defined-in-32" aria-hidden="true">#</a> Defined in</h4>',7),za={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpClient/types/HttpClientRequestOptions.ts#L4",target:"_blank",rel:"noopener noreferrer"},Za=d('<hr><h3 id="httpeventbridgeconfig" tabindex="-1"><a class="header-anchor" href="#httpeventbridgeconfig" aria-hidden="true">#</a> HttpEventBridgeConfig</h3><p>Ƭ <strong>HttpEventBridgeConfig</strong>: <code>Object</code></p><h4 id="type-declaration-11" tabindex="-1"><a class="header-anchor" href="#type-declaration-11" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>apiPrefix?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the prefix to be used if the command is configured as REST api endpoint according to the OpenAPI defintion needs to <code>enableRestApiExpose</code> set to <code>true</code></td></tr><tr><td style="text-align:left;"><code>commandPayloadAsCloudEvent?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">command invocations are wrapped in CloudEvent <strong><code>Link</code></strong> https://github.com/cloudevents/spec/tree/v1.0</td></tr><tr><td style="text-align:left;"><code>enableRestApiExpose?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">expose commands as regular REST endpoints when they are configured as endpoints</td></tr><tr><td style="text-align:left;"><code>name?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">name of the bridge</td></tr><tr><td style="text-align:left;"><code>pathPrefix?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the prefix to be used for exposing commands as endpoints expecting a event bus message</td></tr><tr><td style="text-align:left;"><code>serve</code></td><td style="text-align:left;">(<code>options</code>: { <code>fetch</code>: (<code>request</code>: <code>Request</code>) =&gt; <code>Promise</code>&lt;<code>unknown</code>&gt; | <code>unknown</code> ; <code>hostname?</code>: <code>string</code> ; <code>port?</code>: <code>number</code> }) =&gt; <code>Server</code></td><td style="text-align:left;">The serve function is depending on the runtime. - Bun: <code>Bun.serve</code> - Node.js: <code>serve</code> function from additional package <code>@hono/hono-node-server</code> - Deno: <code>serve</code> function from package <code>https://deno.land/std/http/server.ts</code> <strong><code>See</code></strong> https://hono.dev</td></tr><tr><td style="text-align:left;"><code>serverHost?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Host of the server.</td></tr><tr><td style="text-align:left;"><code>serverPort?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Port of the server.</td></tr><tr><td style="text-align:left;"><code>subscriptionPayloadAsCloudEvent?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">subscription invocations are wrapped in CloudEvent <strong><code>Link</code></strong> https://github.com/cloudevents/spec/tree/v1.0</td></tr></tbody></table><h4 id="defined-in-33" tabindex="-1"><a class="header-anchor" href="#defined-in-33" aria-hidden="true">#</a> Defined in</h4>',6),Ua={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpEventBridge/types/HttpEventBridgeConfig.ts#L3",target:"_blank",rel:"noopener noreferrer"},Qa=e("hr",null,null,-1),Ka=e("h3",{id:"httpexposedservicemeta",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#httpexposedservicemeta","aria-hidden":"true"},"#"),t(" HttpExposedServiceMeta")],-1),Wa=e("strong",null,"HttpExposedServiceMeta",-1),$a=e("code",null,"ParameterType",-1),Ya=e("code",null,"Prettify",-1),Ja=e("code",null,"CommandDefinitionMetadataBase",-1),Xa=e("code",null,"expose",-1),ei=e("code",null,"http",-1),ti=e("code",null,"method",-1),ni=e("code",null,'"GET"',-1),oi=e("code",null,'"POST"',-1),si=e("code",null,'"PATCH"',-1),li=e("code",null,'"PUT"',-1),di=e("code",null,'"DELETE"',-1),ai=e("code",null,"openApi?",-1),ii=e("code",null,"additionalStatusCodes?",-1),ci=e("code",null,"StatusCode",-1),ri=e("code",null,"description",-1),ui=e("code",null,"string",-1),hi=e("code",null,"isSecure",-1),_i=e("code",null,"boolean",-1),pi=e("code",null,"operationId?",-1),fi=e("code",null,"string",-1),gi=e("code",null,"query?",-1),mi=e("code",null,"QueryParameter",-1),yi=e("code",null,"ParameterType",-1),bi=e("code",null,"summary",-1),xi=e("code",null,"string",-1),vi=e("code",null,"tags?",-1),Si=e("code",null,"string",-1),Ti=e("code",null,"path",-1),ki=e("code",null,"string",-1),Ci=d('<h4 id="type-parameters-8" tabindex="-1"><a class="header-anchor" href="#type-parameters-8" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;">{}</td></tr></tbody></table><h4 id="defined-in-34" tabindex="-1"><a class="header-anchor" href="#defined-in-34" aria-hidden="true">#</a> Defined in</h4>',3),Pi={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/HttpExposedServiceMeta.ts#L4",target:"_blank",rel:"noopener noreferrer"},wi=e("hr",null,null,-1),Mi=e("h3",{id:"infoinvoketimeout",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoinvoketimeout","aria-hidden":"true"},"#"),t(" InfoInvokeTimeout")],-1),Ei=e("strong",null,"InfoInvokeTimeout",-1),Ii=e("code",null,"messageType",-1),Fi=e("code",null,"InfoInvokeTimeout",-1),Di=e("code",null,"InfoServiceBase",-1),Ri=e("h4",{id:"defined-in-35",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-35","aria-hidden":"true"},"#"),t(" Defined in")],-1),Bi={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoInvokeTimeout.ts#L22",target:"_blank",rel:"noopener noreferrer"},Ni=e("hr",null,null,-1),Li=e("h3",{id:"infoinvoketimeoutpayload",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoinvoketimeoutpayload","aria-hidden":"true"},"#"),t(" InfoInvokeTimeoutPayload")],-1),Oi=e("p",null,[t("Ƭ "),e("strong",null,"InfoInvokeTimeoutPayload"),t(": "),e("code",null,"Object")],-1),Hi=e("h4",{id:"type-declaration-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-12","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Ai=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ji=e("td",{style:{"text-align":"left"}},[e("code",null,"correlationId")],-1),Gi={style:{"text-align":"left"}},qi=e("code",null,"CorrelationId",-1),Vi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"serviceName"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceTarget"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceVersion"),t(": "),e("code",null,"string"),t(" }")])],-1),zi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Zi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Ui=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Qi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"serviceName"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceTarget"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceVersion"),t(": "),e("code",null,"string"),t(" }")])],-1),Ki=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Wi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),$i=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Yi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")])],-1),Ji=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId")],-1),Xi={style:{"text-align":"left"}},ec=e("code",null,"TraceId",-1),tc=e("h4",{id:"defined-in-36",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-36","aria-hidden":"true"},"#"),t(" Defined in")],-1),nc={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoInvokeTimeout.ts#L6",target:"_blank",rel:"noopener noreferrer"},oc=e("hr",null,null,-1),sc=e("h3",{id:"infomessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infomessage","aria-hidden":"true"},"#"),t(" InfoMessage")],-1),lc=e("strong",null,"InfoMessage",-1),dc=e("code",null,"InfoServiceDrain",-1),ac=e("code",null,"InfoServiceFunctionAdded",-1),ic=e("code",null,"InfoServiceInit",-1),cc=e("code",null,"InfoServiceNotReady",-1),rc=e("code",null,"InfoServiceReady",-1),uc=e("code",null,"InfoServiceShutdown",-1),hc=e("code",null,"InfoInvokeTimeout",-1),_c=e("code",null,"InfoSubscriptionError",-1),pc=e("h4",{id:"defined-in-37",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-37","aria-hidden":"true"},"#"),t(" Defined in")],-1),fc={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoMessage.ts#L11",target:"_blank",rel:"noopener noreferrer"},gc=e("hr",null,null,-1),mc=e("h3",{id:"infomessagetype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infomessagetype","aria-hidden":"true"},"#"),t(" InfoMessageType")],-1),yc=e("strong",null,"InfoMessageType",-1),bc=e("code",null,"InfoServiceDrain",-1),xc=e("code",null,"InfoServiceFunctionAdded",-1),vc=e("code",null,"InfoServiceInit",-1),Sc=e("code",null,"InfoServiceNotReady",-1),Tc=e("code",null,"InfoServiceReady",-1),kc=e("code",null,"InfoServiceShutdown",-1),Cc=e("code",null,"InfoInvokeTimeout",-1),Pc=e("code",null,"InfoSubscriptionError",-1),wc=e("h4",{id:"defined-in-38",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-38","aria-hidden":"true"},"#"),t(" Defined in")],-1),Mc={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoMessage.ts#L21",target:"_blank",rel:"noopener noreferrer"},Ec=e("hr",null,null,-1),Ic=e("h3",{id:"infoservicebase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicebase","aria-hidden":"true"},"#"),t(" InfoServiceBase")],-1),Fc=e("strong",null,"InfoServiceBase",-1),Dc=e("code",null,"Prettify",-1),Rc=e("code",null,"contentEncoding",-1),Bc=e("code",null,'"utf-8"',-1),Nc=e("code",null,"contentType",-1),Lc=e("code",null,'"application/json"',-1),Oc=e("code",null,"payload?",-1),Hc=e("code",null,"unknown",-1),Ac=e("code",null,"EBMessageBase",-1),jc=e("h4",{id:"defined-in-39",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-39","aria-hidden":"true"},"#"),t(" Defined in")],-1),Gc={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceBase.ts#L4",target:"_blank",rel:"noopener noreferrer"},qc=e("hr",null,null,-1),Vc=e("h3",{id:"infoservicedrain",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicedrain","aria-hidden":"true"},"#"),t(" InfoServiceDrain")],-1),zc=e("strong",null,"InfoServiceDrain",-1),Zc=e("code",null,"Prettify",-1),Uc=e("code",null,"messageType",-1),Qc=e("code",null,"InfoServiceDrain",-1),Kc=e("code",null,"InfoServiceBase",-1),Wc=e("h4",{id:"defined-in-40",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-40","aria-hidden":"true"},"#"),t(" Defined in")],-1),$c={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceDrain.ts#L5",target:"_blank",rel:"noopener noreferrer"},Yc=e("hr",null,null,-1),Jc=e("h3",{id:"infoservicefunctionadded",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicefunctionadded","aria-hidden":"true"},"#"),t(" InfoServiceFunctionAdded")],-1),Xc=e("strong",null,"InfoServiceFunctionAdded",-1),er=e("code",null,"Prettify",-1),tr=e("code",null,"messageType",-1),nr=e("code",null,"InfoServiceFunctionAdded",-1),or=e("code",null,"InfoServiceBase",-1),sr=e("h4",{id:"defined-in-41",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-41","aria-hidden":"true"},"#"),t(" Defined in")],-1),lr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceFunctionAdded.ts#L5",target:"_blank",rel:"noopener noreferrer"},dr=e("hr",null,null,-1),ar=e("h3",{id:"infoserviceinit",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoserviceinit","aria-hidden":"true"},"#"),t(" InfoServiceInit")],-1),ir=e("strong",null,"InfoServiceInit",-1),cr=e("code",null,"Prettify",-1),rr=e("code",null,"messageType",-1),ur=e("code",null,"InfoServiceInit",-1),hr=e("code",null,"InfoServiceBase",-1),_r=e("h4",{id:"defined-in-42",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-42","aria-hidden":"true"},"#"),t(" Defined in")],-1),pr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceInit.ts#L5",target:"_blank",rel:"noopener noreferrer"},fr=e("hr",null,null,-1),gr=e("h3",{id:"infoservicenotready",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicenotready","aria-hidden":"true"},"#"),t(" InfoServiceNotReady")],-1),mr=e("strong",null,"InfoServiceNotReady",-1),yr=e("code",null,"Prettify",-1),br=e("code",null,"messageType",-1),xr=e("code",null,"InfoServiceNotReady",-1),vr=e("code",null,"InfoServiceBase",-1),Sr=e("h4",{id:"defined-in-43",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-43","aria-hidden":"true"},"#"),t(" Defined in")],-1),Tr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceNotReady.ts#L5",target:"_blank",rel:"noopener noreferrer"},kr=e("hr",null,null,-1),Cr=e("h3",{id:"infoserviceready",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoserviceready","aria-hidden":"true"},"#"),t(" InfoServiceReady")],-1),Pr=e("strong",null,"InfoServiceReady",-1),wr=e("code",null,"Prettify",-1),Mr=e("code",null,"messageType",-1),Er=e("code",null,"InfoServiceReady",-1),Ir=e("code",null,"InfoServiceBase",-1),Fr=e("h4",{id:"defined-in-44",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-44","aria-hidden":"true"},"#"),t(" Defined in")],-1),Dr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceReady.ts#L5",target:"_blank",rel:"noopener noreferrer"},Rr=e("hr",null,null,-1),Br=e("h3",{id:"infoserviceshutdown",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoserviceshutdown","aria-hidden":"true"},"#"),t(" InfoServiceShutdown")],-1),Nr=e("strong",null,"InfoServiceShutdown",-1),Lr=e("code",null,"Prettify",-1),Or=e("code",null,"messageType",-1),Hr=e("code",null,"InfoServiceShutdown",-1),Ar=e("code",null,"InfoServiceBase",-1),jr=e("h4",{id:"defined-in-45",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-45","aria-hidden":"true"},"#"),t(" Defined in")],-1),Gr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceShutdown.ts#L5",target:"_blank",rel:"noopener noreferrer"},qr=e("hr",null,null,-1),Vr=e("h3",{id:"infosubscriptionerror",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infosubscriptionerror","aria-hidden":"true"},"#"),t(" InfoSubscriptionError")],-1),zr=e("strong",null,"InfoSubscriptionError",-1),Zr=e("code",null,"Prettify",-1),Ur=e("code",null,"messageType",-1),Qr=e("code",null,"InfoSubscriptionError",-1),Kr=e("code",null,"InfoServiceBase",-1),Wr=e("h4",{id:"defined-in-46",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-46","aria-hidden":"true"},"#"),t(" Defined in")],-1),$r={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoSubscriptionError.ts#L5",target:"_blank",rel:"noopener noreferrer"},Yr=e("hr",null,null,-1),Jr=e("h3",{id:"instanceid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#instanceid","aria-hidden":"true"},"#"),t(" InstanceId")],-1),Xr=e("p",null,[t("Ƭ "),e("strong",null,"InstanceId"),t(": "),e("code",null,"string")],-1),eu=e("p",null,"the instance id of the event bridge",-1),tu=e("h4",{id:"defined-in-47",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-47","aria-hidden":"true"},"#"),t(" Defined in")],-1),nu={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/InstanceId.ts#L2",target:"_blank",rel:"noopener noreferrer"},ou=e("hr",null,null,-1),su=e("h3",{id:"invokefunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#invokefunction","aria-hidden":"true"},"#"),t(" InvokeFunction")],-1),lu=e("strong",null,"InvokeFunction",-1),du=e("code",null,"address",-1),au=e("code",null,"EBMessageAddress",-1),iu=e("code",null,"payload",-1),cu=e("code",null,"PayloadType",-1),ru=e("code",null,"parameter",-1),uu=e("code",null,"ParameterType",-1),hu=e("code",null,"Promise",-1),_u=e("code",null,"InvokeResponseType",-1),pu=d(`<h4 id="type-declaration-13" tabindex="-1"><a class="header-anchor" href="#type-declaration-13" aria-hidden="true">#</a> Type declaration</h4><p>▸ &lt;<code>InvokeResponseType</code>, <code>PayloadType</code>, <code>ParameterType</code>&gt;(<code>address</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>InvokeResponseType</code>&gt;</p><p>Invokes a command and returns the result. It is recommended to validate the result against a schema which only contains the data you actually need.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>
<span class="token keyword">const</span> address<span class="token operator">:</span> EBMessageAddress <span class="token operator">=</span> <span class="token punctuation">{</span>
  serviceName<span class="token operator">:</span> <span class="token string">&#39;name-of-service-to-invoke&#39;</span><span class="token punctuation">,</span>
  serviceVersion<span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>
  serviceTarget<span class="token operator">:</span> <span class="token string">&#39;command-name-to-invoke&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> inputPayload <span class="token operator">=</span> <span class="token punctuation">{</span> my<span class="token operator">:</span> <span class="token string">&#39;input&#39;</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> inputParameter <span class="token operator">=</span> <span class="token punctuation">{</span> search<span class="token operator">:</span> <span class="token string">&#39;for_me&#39;</span> <span class="token punctuation">}</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token generic-function"><span class="token function">invoke</span><span class="token generic class-name"><span class="token operator">&lt;</span>MyResultType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>address<span class="token punctuation">,</span> inputPayload inputParameter <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="type-parameters-9" tabindex="-1"><a class="header-anchor" href="#type-parameters-9" aria-hidden="true">#</a> Type parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>InvokeResponseType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h5>`,8),fu=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),gu=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),mu={style:{"text-align":"left"}},yu=e("code",null,"EBMessageAddress",-1),bu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")])],-1),xu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ParameterType")])],-1),vu=e("h5",{id:"returns-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-1","aria-hidden":"true"},"#"),t(" Returns")],-1),Su=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"InvokeResponseType"),t(">")],-1),Tu=e("h4",{id:"defined-in-48",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-48","aria-hidden":"true"},"#"),t(" Defined in")],-1),ku={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/InvokeFunction.ts#L21",target:"_blank",rel:"noopener noreferrer"},Cu=d('<hr><h3 id="logfnparamtype" tabindex="-1"><a class="header-anchor" href="#logfnparamtype" aria-hidden="true">#</a> LogFnParamType</h3><p>Ƭ <strong>LogFnParamType</strong>: [<code>unknown</code>, string?, ...any] | [<code>string</code>, ...any]</p><h4 id="defined-in-49" tabindex="-1"><a class="header-anchor" href="#defined-in-49" aria-hidden="true">#</a> Defined in</h4>',4),Pu={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/Logger.ts#L17",target:"_blank",rel:"noopener noreferrer"},wu=d('<hr><h3 id="loglevelname" tabindex="-1"><a class="header-anchor" href="#loglevelname" aria-hidden="true">#</a> LogLevelName</h3><p>Ƭ <strong>LogLevelName</strong>: <code>&quot;info&quot;</code> | <code>&quot;error&quot;</code> | <code>&quot;warn&quot;</code> | <code>&quot;debug&quot;</code> | <code>&quot;trace&quot;</code> | <code>&quot;fatal&quot;</code></p><h4 id="defined-in-50" tabindex="-1"><a class="header-anchor" href="#defined-in-50" aria-hidden="true">#</a> Defined in</h4>',4),Mu={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/LogLevelName.ts#L1",target:"_blank",rel:"noopener noreferrer"},Eu=e("hr",null,null,-1),Iu=e("h3",{id:"loggeroptions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#loggeroptions","aria-hidden":"true"},"#"),t(" LoggerOptions")],-1),Fu=e("p",null,[t("Ƭ "),e("strong",null,"LoggerOptions"),t(": "),e("code",null,"Object")],-1),Du=e("h4",{id:"type-declaration-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-14","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Ru=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Bu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hostname?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Nu=e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId?")],-1),Lu={style:{"text-align":"left"}},Ou=e("code",null,"InstanceId",-1),Hu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"name?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Au=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),ju={style:{"text-align":"left"}},Gu=e("code",null,"PrincipalId",-1),qu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"puristaVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Vu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),zu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Zu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Uu=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId?")],-1),Qu={style:{"text-align":"left"}},Ku=e("code",null,"TraceId",-1),Wu=e("h4",{id:"defined-in-51",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-51","aria-hidden":"true"},"#"),t(" Defined in")],-1),$u={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/Logger.ts#L5",target:"_blank",rel:"noopener noreferrer"},Yu=d('<hr><h3 id="loggerstubs" tabindex="-1"><a class="header-anchor" href="#loggerstubs" aria-hidden="true">#</a> LoggerStubs</h3><p>Ƭ <strong>LoggerStubs</strong>: <code>Object</code></p><h4 id="type-declaration-15" tabindex="-1"><a class="header-anchor" href="#type-declaration-15" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>debug</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>error</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>info</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>trace</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>warn</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr></tbody></table><h4 id="defined-in-52" tabindex="-1"><a class="header-anchor" href="#defined-in-52" aria-hidden="true">#</a> Defined in</h4>',6),Ju={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getLogger.mock.ts#L41",target:"_blank",rel:"noopener noreferrer"},Xu=e("hr",null,null,-1),eh=e("h3",{id:"newable",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#newable","aria-hidden":"true"},"#"),t(" Newable")],-1),th=e("strong",null,"Newable",-1),nh=e("code",null,"T",-1),oh=e("code",null,"ConfigType",-1),sh=e("code",null,"config",-1),lh=e("code",null,"ServiceConstructorInput",-1),dh=e("code",null,"ConfigType",-1),ah=e("code",null,"T",-1),ih=d('<h4 id="type-parameters-10" tabindex="-1"><a class="header-anchor" href="#type-parameters-10" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="type-declaration-16" tabindex="-1"><a class="header-anchor" href="#type-declaration-16" aria-hidden="true">#</a> Type declaration</h4><p>• <strong>new Newable</strong>(<code>config</code>): <code>T</code></p><h5 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h5>',5),ch=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),rh=e("td",{style:{"text-align":"left"}},[e("code",null,"config")],-1),uh={style:{"text-align":"left"}},hh=e("code",null,"ServiceConstructorInput",-1),_h=e("code",null,"ConfigType",-1),ph=e("h5",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),t(" Returns")],-1),fh=e("p",null,[e("code",null,"T")],-1),gh=e("h4",{id:"defined-in-53",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-53","aria-hidden":"true"},"#"),t(" Defined in")],-1),mh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L28",target:"_blank",rel:"noopener noreferrer"},yh=e("hr",null,null,-1),bh=e("h3",{id:"pendiginvocation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pendiginvocation","aria-hidden":"true"},"#"),t(" PendigInvocation")],-1),xh=e("p",null,[t("Ƭ "),e("strong",null,"PendigInvocation"),t(": "),e("code",null,"Object")],-1),vh=e("h4",{id:"type-declaration-17",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-17","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Sh=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Th=e("td",{style:{"text-align":"left"}},[e("code",null,"reject")],-1),kh={style:{"text-align":"left"}},Ch=e("code",null,"error",-1),Ph=e("code",null,"HandledError",-1),wh=e("code",null,"UnhandledError",-1),Mh=e("code",null,"void",-1),Eh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"resolve")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"responsePayload"),t(": "),e("code",null,"unknown"),t(") => "),e("code",null,"void")])],-1),Ih=e("h4",{id:"defined-in-54",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-54","aria-hidden":"true"},"#"),t(" Defined in")],-1),Fh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/types/PendingInvocations.ts#L3",target:"_blank",rel:"noopener noreferrer"},Dh=d('<hr><h3 id="prettify" tabindex="-1"><a class="header-anchor" href="#prettify" aria-hidden="true">#</a> Prettify</h3><p>Ƭ <strong>Prettify</strong>&lt;<code>T</code>&gt;: { [K in keyof T]: T[K] } &amp; {}</p><h4 id="type-parameters-11" tabindex="-1"><a class="header-anchor" href="#type-parameters-11" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="defined-in-55" tabindex="-1"><a class="header-anchor" href="#defined-in-55" aria-hidden="true">#</a> Defined in</h4>',6),Rh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/Prettify.ts#L1",target:"_blank",rel:"noopener noreferrer"},Bh=e("hr",null,null,-1),Nh=e("h3",{id:"principalid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#principalid","aria-hidden":"true"},"#"),t(" PrincipalId")],-1),Lh=e("p",null,[t("Ƭ "),e("strong",null,"PrincipalId"),t(": "),e("code",null,"string")],-1),Oh=e("p",null,"the principal id",-1),Hh=e("h4",{id:"defined-in-56",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-56","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ah={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/PrincipalId.ts#L2",target:"_blank",rel:"noopener noreferrer"},jh=d('<hr><h3 id="queryparameter" tabindex="-1"><a class="header-anchor" href="#queryparameter" aria-hidden="true">#</a> QueryParameter</h3><p>Ƭ <strong>QueryParameter</strong>&lt;<code>ParameterType</code>&gt;: <code>Object</code></p><h4 id="type-parameters-12" tabindex="-1"><a class="header-anchor" href="#type-parameters-12" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;">{}</td></tr></tbody></table><h4 id="type-declaration-18" tabindex="-1"><a class="header-anchor" href="#type-declaration-18" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;">keyof <code>ParameterType</code></td></tr><tr><td style="text-align:left;"><code>required</code></td><td style="text-align:left;"><code>boolean</code></td></tr></tbody></table><h4 id="defined-in-57" tabindex="-1"><a class="header-anchor" href="#defined-in-57" aria-hidden="true">#</a> Defined in</h4>',8),Gh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/QueryParameter.ts#L1",target:"_blank",rel:"noopener noreferrer"},qh=d('<hr><h3 id="routerfunction" tabindex="-1"><a class="header-anchor" href="#routerfunction" aria-hidden="true">#</a> RouterFunction</h3><p>Ƭ <strong>RouterFunction</strong>&lt;<code>T</code>&gt;: (<code>this</code>: <code>T</code>, <code>c</code>: <code>Context</code>) =&gt; <code>Promise</code>&lt;<code>Response</code>&gt;</p><h4 id="type-parameters-13" tabindex="-1"><a class="header-anchor" href="#type-parameters-13" aria-hidden="true">#</a> Type parameters</h4>',4),Vh=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),zh=e("td",{style:{"text-align":"left"}},[e("code",null,"T")],-1),Zh={style:{"text-align":"left"}},Uh=e("code",null,"HttpEventBridge",-1),Qh=e("code",null,"HttpEventBridgeConfig",-1),Kh=e("code",null,"HttpEventBridge",-1),Wh=e("code",null,"HttpEventBridgeConfig",-1),$h=d('<h4 id="type-declaration-19" tabindex="-1"><a class="header-anchor" href="#type-declaration-19" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>c</code>): <code>Promise</code>&lt;<code>Response</code>&gt;</p><h5 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>this</code></td><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>c</code></td><td style="text-align:left;"><code>Context</code></td></tr></tbody></table><h5 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Response</code>&gt;</p><h4 id="defined-in-58" tabindex="-1"><a class="header-anchor" href="#defined-in-58" aria-hidden="true">#</a> Defined in</h4>',7),Yh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpEventBridge/types/RouterFunction.ts#L6",target:"_blank",rel:"noopener noreferrer"},Jh=e("hr",null,null,-1),Xh=e("h3",{id:"serviceevents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#serviceevents","aria-hidden":"true"},"#"),t(" ServiceEvents")],-1),e_=e("strong",null,"ServiceEvents",-1),t_=e("code",null,"ServiceEventsInternal",-1),n_=e("code",null,"addPrefixToObject",-1),o_=e("code",null,"CustomEvents",-1),s_=e("code",null,'"custom-"',-1),l_=e("code",null,"addPrefixToObject",-1),d_=e("code",null,"CustomEvents",-1),a_=e("code",null,'"misc-"',-1),i_=e("p",null,"ServiceEvents are plain javascript events sent by the service. There are three types:",-1),c_=e("ul",null,[e("li",null,[t("technical events when a services starts, stops, an error occurs and so on are prefixed with "),e("code",null,"service-")]),e("li",null,[t("response messages, which have a event name assigned, are prefixed with "),e("code",null,"custom-")]),e("li",null,[t("additional events, free defined by developer are prefixed with "),e("code",null,"misc-")])],-1),r_=e("h4",{id:"defined-in-59",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-59","aria-hidden":"true"},"#"),t(" Defined in")],-1),u_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceEvents.ts#L98",target:"_blank",rel:"noopener noreferrer"},h_=d('<hr><h3 id="serviceinfotype" tabindex="-1"><a class="header-anchor" href="#serviceinfotype" aria-hidden="true">#</a> ServiceInfoType</h3><p>Ƭ <strong>ServiceInfoType</strong>: <code>Object</code></p><p>General service information</p><h4 id="type-declaration-20" tabindex="-1"><a class="header-anchor" href="#type-declaration-20" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>serviceDescription</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>serviceName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>serviceVersion</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="defined-in-60" tabindex="-1"><a class="header-anchor" href="#defined-in-60" aria-hidden="true">#</a> Defined in</h4>',7),__={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/ServiceInfoType.ts#L4",target:"_blank",rel:"noopener noreferrer"},p_=d('<hr><h3 id="shutdownentry" tabindex="-1"><a class="header-anchor" href="#shutdownentry" aria-hidden="true">#</a> ShutdownEntry</h3><p>Ƭ <strong>ShutdownEntry</strong>: <code>Object</code></p><p>Entry of thing you like to shutdown gracefully</p><h4 id="type-declaration-21" tabindex="-1"><a class="header-anchor" href="#type-declaration-21" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>destroy</code></td><td style="text-align:left;">() =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</td><td style="text-align:left;">a async function that is called during shutdown</td></tr><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the name</td></tr></tbody></table><h4 id="defined-in-61" tabindex="-1"><a class="header-anchor" href="#defined-in-61" aria-hidden="true">#</a> Defined in</h4>',7),f_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/types/ShutdownEntry.ts#L4",target:"_blank",rel:"noopener noreferrer"},g_=e("hr",null,null,-1),m_=e("h3",{id:"storebaseconfig",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#storebaseconfig","aria-hidden":"true"},"#"),t(" StoreBaseConfig")],-1),y_=e("strong",null,"StoreBaseConfig",-1),b_=e("code",null,"Config",-1),x_=e("code",null,"Prettify",-1),v_=e("code",null,"enableGet?",-1),S_=e("code",null,"boolean",-1),T_=e("code",null,"enableRemove?",-1),k_=e("code",null,"boolean",-1),C_=e("code",null,"enableSet?",-1),P_=e("code",null,"boolean",-1),w_=e("code",null,"logLevel?",-1),M_=e("code",null,"LogLevelName",-1),E_=e("code",null,"logger?",-1),I_=e("code",null,"Logger",-1),F_=e("code",null,"Config",-1),D_=d('<p>Basic configuration object which is used by any store</p><h4 id="type-parameters-14" tabindex="-1"><a class="header-anchor" href="#type-parameters-14" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Config</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</td></tr></tbody></table><h4 id="defined-in-62" tabindex="-1"><a class="header-anchor" href="#defined-in-62" aria-hidden="true">#</a> Defined in</h4>',4),R_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/StoreBaseConfig.ts#L8",target:"_blank",rel:"noopener noreferrer"},B_=e("hr",null,null,-1),N_=e("h3",{id:"subscriptiondefinitionlist",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiondefinitionlist","aria-hidden":"true"},"#"),t(" SubscriptionDefinitionList")],-1),L_=e("strong",null,"SubscriptionDefinitionList",-1),O_=e("code",null,"ServiceClassType",-1),H_=e("code",null,"SubscriptionDefinition",-1),A_=e("code",null,"ServiceClassType",-1),j_=e("code",null,"any",-1),G_=e("code",null,"any",-1),q_=e("code",null,"any",-1),V_=e("code",null,"any",-1),z_=d(`<p>Helper type for creating list of service commands to be passed as input to service class</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> userServiceCommands<span class="token operator">:</span> SubscriptionDefinitionList<span class="token operator">&lt;</span>UserService<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span>signUp<span class="token punctuation">.</span><span class="token function">getDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="type-parameters-15" tabindex="-1"><a class="header-anchor" href="#type-parameters-15" aria-hidden="true">#</a> Type parameters</h4>`,3),Z_=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),U_=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),Q_={style:{"text-align":"left"}},K_=e("code",null,"ServiceClass",-1),W_=e("h4",{id:"defined-in-63",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-63","aria-hidden":"true"},"#"),t(" Defined in")],-1),$_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionDefinitionList.ts#L11",target:"_blank",rel:"noopener noreferrer"},Y_=e("hr",null,null,-1),J_=e("h3",{id:"subscriptiondefinitionmetadatabase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiondefinitionmetadatabase","aria-hidden":"true"},"#"),t(" SubscriptionDefinitionMetadataBase")],-1),X_=e("p",null,[t("Ƭ "),e("strong",null,"SubscriptionDefinitionMetadataBase"),t(": "),e("code",null,"Object")],-1),ep=e("h4",{id:"type-declaration-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-22","aria-hidden":"true"},"#"),t(" Type declaration")],-1),tp=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),np=e("td",{style:{"text-align":"left"}},[e("code",null,"expose")],-1),op={style:{"text-align":"left"}},sp=e("code",null,"contentEncodingRequest?",-1),lp=e("code",null,"string",-1),dp=e("code",null,"contentEncodingResponse?",-1),ap=e("code",null,"string",-1),ip=e("code",null,"contentTypeRequest?",-1),cp=e("code",null,"ContentType",-1),rp=e("code",null,"contentTypeResponse?",-1),up=e("code",null,"ContentType",-1),hp=e("code",null,"inputPayload?",-1),_p=e("code",null,"SchemaObject",-1),pp=e("code",null,"outputPayload?",-1),fp=e("code",null,"SchemaObject",-1),gp=e("code",null,"parameter?",-1),mp=e("code",null,"SchemaObject",-1),yp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingRequest?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),bp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingResponse?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),xp=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeRequest?")],-1),vp={style:{"text-align":"left"}},Sp=e("code",null,"ContentType",-1),Tp=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeResponse?")],-1),kp={style:{"text-align":"left"}},Cp=e("code",null,"ContentType",-1),Pp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.inputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),wp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.outputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Mp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.parameter?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Ep=e("h4",{id:"defined-in-64",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-64","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ip={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionDefinitionMetadataBase.ts#L5",target:"_blank",rel:"noopener noreferrer"},Fp=e("hr",null,null,-1),Dp=e("h3",{id:"subscriptionstorageentry",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionstorageentry","aria-hidden":"true"},"#"),t(" SubscriptionStorageEntry")],-1),Rp=e("p",null,[t("Ƭ "),e("strong",null,"SubscriptionStorageEntry"),t(": "),e("code",null,"Object")],-1),Bp=e("h4",{id:"type-declaration-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-23","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Np=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Lp=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),Op={style:{"text-align":"left"}},Hp=e("code",null,"message",-1),Ap=e("code",null,"EBMessage",-1),jp=e("code",null,"Promise",-1),Gp=e("code",null,"Omit",-1),qp=e("code",null,"CustomMessage",-1),Vp=e("code",null,'"id"',-1),zp=e("code",null,'"timestamp"',-1),Zp=e("code",null,"undefined",-1),Up=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"emitEventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Qp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingEventName")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),Kp=e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingMessageType")],-1),Wp={style:{"text-align":"left"}},$p=e("code",null,"input",-1),Yp=e("code",null,"EBMessageType",-1),Jp=e("code",null,"boolean",-1),Xp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingPrincipalId")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),e1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingReceiverInstanceId")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),t1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingReceiverServiceName")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),n1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingReceiverServiceTarget")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),o1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingReceiverServiceVersion")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),s1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingSenderInstanceId")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),l1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingSenderServiceName")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),d1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingSenderServiceTarget")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),a1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingSenderServiceVersion")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),i1=e("h4",{id:"defined-in-65",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-65","aria-hidden":"true"},"#"),t(" Defined in")],-1),c1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/types/SubscriptionStorageEntry.ts#L3",target:"_blank",rel:"noopener noreferrer"},r1=d('<hr><h3 id="supportedhttpmethod" tabindex="-1"><a class="header-anchor" href="#supportedhttpmethod" aria-hidden="true">#</a> SupportedHttpMethod</h3><p>Ƭ <strong>SupportedHttpMethod</strong>: <code>&quot;GET&quot;</code> | <code>&quot;POST&quot;</code> | <code>&quot;PATCH&quot;</code> | <code>&quot;PUT&quot;</code> | <code>&quot;DELETE&quot;</code></p><p>Supported HTTP-Methods for defining endpoints</p><h4 id="defined-in-66" tabindex="-1"><a class="header-anchor" href="#defined-in-66" aria-hidden="true">#</a> Defined in</h4>',5),u1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/SupportedHttpMethod.ts#L2",target:"_blank",rel:"noopener noreferrer"},h1=e("hr",null,null,-1),_1=e("h3",{id:"traceid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#traceid","aria-hidden":"true"},"#"),t(" TraceId")],-1),p1=e("p",null,[t("Ƭ "),e("strong",null,"TraceId"),t(": "),e("code",null,"string")],-1),f1=e("p",null,"The trace id which will be passed through all commands, invocations and subscriptions",-1),g1=e("h4",{id:"defined-in-67",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-67","aria-hidden":"true"},"#"),t(" Defined in")],-1),m1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/TraceId.ts#L4",target:"_blank",rel:"noopener noreferrer"},y1=d('<hr><h3 id="addprefixtoobject" tabindex="-1"><a class="header-anchor" href="#addprefixtoobject" aria-hidden="true">#</a> addPrefixToObject</h3><p>Ƭ <strong>addPrefixToObject</strong>&lt;<code>T</code>, <code>P</code>&gt;: { [K in keyof T as K extends string ? `${P}${K}` : never]: T[K] }</p><p>Helper for better typescript type. All keys of given object must start with the given prefix. Otherwise Typescript will complain.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `T` | `T` |\n| `P` | extends `string` |\n\n#### Defined in\n\n[core/types/addPrefixToObject.ts:7](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/addPrefixToObject.ts#L7)\n\n## Variables\n\n### MIN\\_CONTENT\\_SIZE\\_FOR\\_COMPRESSION\n\n• `Const` **MIN\\_CONTENT\\_SIZE\\_FOR\\_COMPRESSION**: ``1024``\n\n#### Defined in\n\n[core/HttpServer/MinContentSizeForCompression.const.ts:1](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/MinContentSizeForCompression.const.ts#L1)\n\n___\n\n### ServiceInfoValidator\n\n• `Const` **ServiceInfoValidator**: `Object`\n\n#### Type declaration\n\n| Name | Type |\n| :------ | :------ |\n| `set` | (`obj`: [`ServiceInfoType`](purista_core.md#serviceinfotype), `prop`: keyof [`ServiceInfoType`](purista_core.md#serviceinfotype), `value`: `string`) =&gt; `boolean` |\n\n#### Defined in\n\n[core/Service/ServiceInfoValidator.impl.ts:5](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/Service/ServiceInfoValidator.impl.ts#L5)\n\n___\n\n### infoMessageTypes\n\n• `Const` **infoMessageTypes**: [`EBMessageType`](../enums/purista_core.EBMessageType.md)[]\n\n#### Defined in\n\n[core/types/infoType/InfoMessage.ts:30](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoMessage.ts#L30)\n\n___\n\n### puristaVersion\n\n• `Const` **puristaVersion**: ``&quot;1.6.0&quot;``\n\n#### Defined in\n\n[version.ts:1](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/version.ts#L1)\n\n## Functions\n\n### extendApi\n\n▸ **extendApi**&lt;`T`\\&gt;(`schema`, `SchemaObject?`): `T`\n\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `T` | extends [`OpenApiZodAny`](../interfaces/purista_core.OpenApiZodAny.md)&lt;`T`\\&gt; |\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `schema` | `T` |\n| `SchemaObject` | `SchemaObject` |\n\n#### Returns\n\n`T`\n\n#### Defined in\n\n[zodOpenApi/zodOpenApi.impl.ts:25](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/zodOpenApi/zodOpenApi.impl.ts#L25)\n\n___\n\n### generateSchema\n\n▸ **generateSchema**(`zodRef`, `useOutput?`): `SchemaObject`\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `zodRef` | [`OpenApiZodAny`](../interfaces/purista_core.OpenApiZodAny.md) |\n| `useOutput?` | `boolean` |\n\n#### Returns\n\n`SchemaObject`\n\n#### Defined in\n\n[zodOpenApi/zodOpenApi.impl.ts:414](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/zodOpenApi/zodOpenApi.impl.ts#L414)\n\n___\n\n### getCommandFunctionWithValidation\n\n▸ **getCommandFunctionWithValidation**&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `MessageResultType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;(`fn`, `inputPayloadSchema`, `inputParameterSchema`, `outputPayloadSchema`, `beforeGuards?`): [`CommandFunction`](purista_core.md#commandfunction)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;\n\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `ServiceClassType` | extends [`ServiceClass`](../interfaces/purista_core.ServiceClass.md)&lt;`unknown`, `ServiceClassType`\\&gt; |\n| `MessagePayloadType` | `unknown` |\n| `MessageParamsType` | `unknown` |\n| `MessageResultType` | `unknown` |\n| `FunctionPayloadType` | `MessagePayloadType` |\n| `FunctionParamsType` | `MessageParamsType` |\n| `FunctionResultType` | `MessageResultType` |\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `fn` | [`CommandFunction`](purista_core.md#commandfunction)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt; |\n| `inputPayloadSchema` | `undefined` \\| `ZodType`&lt;`FunctionPayloadType`, `ZodTypeDef`, `MessagePayloadType`\\&gt; |\n| `inputParameterSchema` | `undefined` \\| `ZodType`&lt;`FunctionParamsType`, `ZodTypeDef`, `MessageParamsType`\\&gt; |\n| `outputPayloadSchema` | `undefined` \\| `ZodType`&lt;`MessageResultType`, `ZodTypeDef`, `FunctionResultType`\\&gt; |\n| `beforeGuards` | `Record`&lt;`string`, [`CommandBeforeGuardHook`](purista_core.md#commandbeforeguardhook)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`\\&gt;\\&gt; |\n\n#### Returns\n\n[`CommandFunction`](purista_core.md#commandfunction)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;\n\n#### Defined in\n\n[CommandDefinitionBuilder/getCommandFunctionWithValidation.impl.ts:13](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/getCommandFunctionWithValidation.impl.ts#L13)\n\n___\n\n### getDefaultEventBridgeConfig\n\n▸ **getDefaultEventBridgeConfig**(): [`Complete`](purista_core.md#complete)&lt;[`DefaultEventBridgeConfig`](purista_core.md#defaulteventbridgeconfig)\\&gt;\n\n#### Returns\n\n[`Complete`](purista_core.md#complete)&lt;[`DefaultEventBridgeConfig`](purista_core.md#defaulteventbridgeconfig)\\&gt;\n\n#### Defined in\n\n[DefaultEventBridge/getDefaultEventBridgeConfig.impl.ts:4](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/getDefaultEventBridgeConfig.impl.ts#L4)\n\n___\n\n### getDefaultHttpEventBridgeConfig\n\n▸ **getDefaultHttpEventBridgeConfig**(): `Object`\n\n#### Returns\n\n`Object`\n\n| Name | Type | Description |\n| :------ | :------ | :------ |\n| `apiPrefix?` | `string` | the prefix to be used if the command is configured as REST api endpoint according to the OpenAPI defintion needs to `enableRestApiExpose` set to `true` |\n| `commandPayloadAsCloudEvent?` | `boolean` | command invocations are wrapped in CloudEvent **`Link`** https://github.com/cloudevents/spec/tree/v1.0 |\n| `defaultCommandTimeout?` | `number` | Overwrite the hardcoded default timeout of command invocations |\n| `enableRestApiExpose?` | `boolean` | expose commands as regular REST endpoints when they are configured as endpoints |\n| `instanceId?` | `string` | The instance id of the event bridge. If not set, a id will generated each time a instance is created. Use this if there is a need to always have the same instance id. |\n| `logLevel?` | [`LogLevelName`](purista_core.md#loglevelname) | If no logger instance is given, use this log level |\n| `logger?` | [`Logger`](../classes/purista_core.Logger.md) | A logger instance |\n| `name?` | `string` | name of the bridge |\n| `pathPrefix?` | `string` | the prefix to be used for exposing commands as endpoints expecting a event bus message |\n| `serverHost?` | `string` | Host of the server. |\n| `serverPort?` | `number` | Port of the server. |\n| `spanProcessor?` | `SpanProcessor` | A OpenTelemetry span processor |\n| `subscriptionPayloadAsCloudEvent?` | `boolean` | subscription invocations are wrapped in CloudEvent **`Link`** https://github.com/cloudevents/spec/tree/v1.0 |\n\n#### Defined in\n\n[HttpEventBridge/getDefaultHttpEventBridgeConfig.impl.ts:4](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpEventBridge/getDefaultHttpEventBridgeConfig.impl.ts#L4)\n\n___\n\n### getDefaultLogLevel\n\n▸ **getDefaultLogLevel**(): [`LogLevelName`](purista_core.md#loglevelname)\n\n#### Returns\n\n[`LogLevelName`](purista_core.md#loglevelname)\n\n#### Defined in\n\n[DefaultLogger/getDefaultLogLevel.ts:4](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultLogger/getDefaultLogLevel.ts#L4)\n\n___\n\n### getNewSubscriptionStorageEntry\n\n▸ **getNewSubscriptionStorageEntry**(`subscription`, `cb`): [`SubscriptionStorageEntry`](purista_core.md#subscriptionstorageentry)\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `subscription` | [`Subscription`](purista_core.md#subscription) |\n| `cb` | (`message`: [`EBMessage`](purista_core.md#ebmessage)) =&gt; `Promise`&lt;`undefined` \\| `Omit`&lt;{ `contentEncoding`: `string` ; `contentType`: `string` ; `correlationId?`: `string` ; `eventName`: `string` ; `id`: `string` ; `messageType`: [`CustomMessage`](../enums/purista_core.EBMessageType.md#custommessage) ; `otp?`: `string` ; `payload?`: `unknown` ; `principalId?`: `string` ; `receiver?`: [`EBMessageAddress`](purista_core.md#ebmessageaddress) ; `sender`: { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; `timestamp`: `number` ; `traceId?`: `string`  }, ``&quot;id&quot;`` \\| ``&quot;timestamp&quot;``\\&gt;\\&gt; |\n\n#### Returns\n\n[`SubscriptionStorageEntry`](purista_core.md#subscriptionstorageentry)\n\n#### Defined in\n\n[DefaultEventBridge/getNewSubscriptionStorageEntry.impl.ts:4](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/getNewSubscriptionStorageEntry.impl.ts#L4)\n\n___\n\n### getSubscriptionFunctionWithValidation\n\n▸ **getSubscriptionFunctionWithValidation**&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `MessageResultType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;(`fn`, `inputPayloadSchema`, `inputParameterSchema`, `outputPayloadSchema`, `beforeGuards?`): [`SubscriptionFunction`](purista_core.md#subscriptionfunction)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;\n\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `ServiceClassType` | extends [`ServiceClass`](../interfaces/purista_core.ServiceClass.md)&lt;`unknown`, `ServiceClassType`\\&gt; |\n| `MessagePayloadType` | `unknown` |\n| `MessageParamsType` | `unknown` |\n| `MessageResultType` | `unknown` |\n| `FunctionPayloadType` | `MessagePayloadType` |\n| `FunctionParamsType` | `MessageParamsType` |\n| `FunctionResultType` | `MessageResultType` |\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `fn` | [`SubscriptionFunction`](purista_core.md#subscriptionfunction)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt; |\n| `inputPayloadSchema` | `undefined` \\| `ZodType`&lt;`FunctionPayloadType`, `ZodTypeDef`, `MessagePayloadType`\\&gt; |\n| `inputParameterSchema` | `undefined` \\| `ZodType`&lt;`FunctionParamsType`, `ZodTypeDef`, `MessageParamsType`\\&gt; |\n| `outputPayloadSchema` | `undefined` \\| `ZodType`&lt;`MessageResultType`, `ZodTypeDef`, `FunctionResultType`\\&gt; |\n| `beforeGuards` | `Record`&lt;`string`, [`SubscriptionBeforeGuardHook`](purista_core.md#subscriptionbeforeguardhook)&lt;`ServiceClassType`, `FunctionPayloadType`, `FunctionParamsType`\\&gt;\\&gt; |\n\n#### Returns\n\n[`SubscriptionFunction`](purista_core.md#subscriptionfunction)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;\n\n#### Defined in\n\n[SubscriptionDefinitionBuilder/getSubscriptionFunctionWithValidation.impl.ts:13](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/getSubscriptionFunctionWithValidation.impl.ts#L13)\n\n___\n\n### getTimeoutPromise\n\n▸ **getTimeoutPromise**&lt;`T`\\&gt;(`fn`, `ttl?`): `Promise`&lt;`T`\\&gt;\n\n**`Default`**\n\n```ts\n30000\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="type-parameters-16" tabindex="-1"><a class="header-anchor" href="#type-parameters-16" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;"><code>Promise</code>&lt;<code>T</code>&gt;</td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">the promise which should get a timeout</td></tr><tr><td style="text-align:left;"><code>ttl</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;"><code>30000</code></td><td style="text-align:left;">the timeout in ms</td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>T</code>&gt;</p><h4 id="defined-in-68" tabindex="-1"><a class="header-anchor" href="#defined-in-68" aria-hidden="true">#</a> Defined in</h4>',12),b1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/getTimeoutPromise.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},x1=e("hr",null,null,-1),v1=e("h3",{id:"initdefaultconfigstore",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initdefaultconfigstore","aria-hidden":"true"},"#"),t(" initDefaultConfigStore")],-1),S1=e("strong",null,"initDefaultConfigStore",-1),T1=e("code",null,"options",-1),k1=e("code",null,"DefaultConfigStore",-1),C1=e("h4",{id:"parameters-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-5","aria-hidden":"true"},"#"),t(" Parameters")],-1),P1=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),w1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"options")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")])],-1),M1=e("td",{style:{"text-align":"left"}},[e("code",null,"options.logger")],-1),E1={style:{"text-align":"left"}},I1=e("code",null,"Logger",-1),F1=e("h4",{id:"returns-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-5","aria-hidden":"true"},"#"),t(" Returns")],-1),D1=e("code",null,"DefaultConfigStore",-1),R1=e("h4",{id:"defined-in-69",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-69","aria-hidden":"true"},"#"),t(" Defined in")],-1),B1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultConfigStore/initDefaultConfigStore.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},N1=e("hr",null,null,-1),L1=e("h3",{id:"initdefaultsecretstore",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initdefaultsecretstore","aria-hidden":"true"},"#"),t(" initDefaultSecretStore")],-1),O1=e("strong",null,"initDefaultSecretStore",-1),H1=e("code",null,"options",-1),A1=e("code",null,"DefaultSecretStore",-1),j1=e("h4",{id:"parameters-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-6","aria-hidden":"true"},"#"),t(" Parameters")],-1),G1=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),q1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"options")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")])],-1),V1=e("td",{style:{"text-align":"left"}},[e("code",null,"options.logger")],-1),z1={style:{"text-align":"left"}},Z1=e("code",null,"Logger",-1),U1=e("h4",{id:"returns-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-6","aria-hidden":"true"},"#"),t(" Returns")],-1),Q1=e("code",null,"DefaultSecretStore",-1),K1=e("h4",{id:"defined-in-70",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-70","aria-hidden":"true"},"#"),t(" Defined in")],-1),W1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultSecretStore/initDefaultSecretStore.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},$1=e("hr",null,null,-1),Y1=e("h3",{id:"initdefaultstatestore",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initdefaultstatestore","aria-hidden":"true"},"#"),t(" initDefaultStateStore")],-1),J1=e("strong",null,"initDefaultStateStore",-1),X1=e("code",null,"options",-1),ef=e("code",null,"DefaultStateStore",-1),tf=e("h4",{id:"parameters-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-7","aria-hidden":"true"},"#"),t(" Parameters")],-1),nf=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),of=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"options")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")])],-1),sf=e("td",{style:{"text-align":"left"}},[e("code",null,"options.logger")],-1),lf={style:{"text-align":"left"}},df=e("code",null,"Logger",-1),af=e("h4",{id:"returns-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-7","aria-hidden":"true"},"#"),t(" Returns")],-1),cf=e("code",null,"DefaultStateStore",-1),rf=e("h4",{id:"defined-in-71",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-71","aria-hidden":"true"},"#"),t(" Defined in")],-1),uf={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultStateStore/initDefaultStateStore.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},hf=e("hr",null,null,-1),_f=e("h3",{id:"initlogger",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initlogger","aria-hidden":"true"},"#"),t(" initLogger")],-1),pf=e("strong",null,"initLogger",-1),ff=e("code",null,"level?",-1),gf=e("code",null,"opt?",-1),mf=e("code",null,"Logger",-1),yf=e("p",null,"Create a new logger with the given minimum log level",-1),bf=e("h4",{id:"parameters-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-8","aria-hidden":"true"},"#"),t(" Parameters")],-1),xf=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),vf=e("td",{style:{"text-align":"left"}},[e("code",null,"level")],-1),Sf={style:{"text-align":"left"}},Tf=e("code",null,"LogLevelName",-1),kf=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"opt?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"LoggerOptions")])],-1),Cf=e("h4",{id:"returns-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-8","aria-hidden":"true"},"#"),t(" Returns")],-1),Pf=e("code",null,"Logger",-1),wf=e("h4",{id:"defined-in-72",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-72","aria-hidden":"true"},"#"),t(" Defined in")],-1),Mf={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultLogger/initLogger.impl.ts#L13",target:"_blank",rel:"noopener noreferrer"},Ef=e("hr",null,null,-1),If=e("h3",{id:"iscustommessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscustommessage","aria-hidden":"true"},"#"),t(" isCustomMessage")],-1),Ff=e("p",null,[t("▸ "),e("strong",null,"isCustomMessage"),t("("),e("code",null,"message"),t("): message is Object")],-1),Df=e("p",null,"Checks if a PURISTA message is type of custom message",-1),Rf=e("h4",{id:"parameters-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-9","aria-hidden":"true"},"#"),t(" Parameters")],-1),Bf=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Nf=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),Lf={style:{"text-align":"left"}},Of=e("code",null,"EBMessage",-1),Hf=e("td",{style:{"text-align":"left"}},"any PURISTA message",-1),Af=e("h4",{id:"returns-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-9","aria-hidden":"true"},"#"),t(" Returns")],-1),jf=e("p",null,"message is Object",-1),Gf=e("p",null,"true if message is type of custom message",-1),qf=e("h4",{id:"defined-in-73",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-73","aria-hidden":"true"},"#"),t(" Defined in")],-1),Vf={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/isCustomMessage.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},zf=d('<hr><h3 id="ishttpexposedservicemeta" tabindex="-1"><a class="header-anchor" href="#ishttpexposedservicemeta" aria-hidden="true">#</a> isHttpExposedServiceMeta</h3><p>▸ <strong>isHttpExposedServiceMeta</strong>(<code>input?</code>): input is Object</p><p>Checks if given input is type of HttpExposedServiceMeta</p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input?</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10" aria-hidden="true">#</a> Returns</h4><p>input is Object</p><p>boolean - true if input is type of HttpExposedServiceMeta</p><h4 id="defined-in-74" tabindex="-1"><a class="header-anchor" href="#defined-in-74" aria-hidden="true">#</a> Defined in</h4>',10),Zf={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/isHttpExposedServiceMeta.impl.ts#L8",target:"_blank",rel:"noopener noreferrer"},Uf=e("hr",null,null,-1),Qf=e("h3",{id:"isinfomessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#isinfomessage","aria-hidden":"true"},"#"),t(" isInfoMessage")],-1),Kf=e("p",null,[t("▸ "),e("strong",null,"isInfoMessage"),t("("),e("code",null,"message"),t("): message is InfoMessage")],-1),Wf=e("h4",{id:"parameters-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-11","aria-hidden":"true"},"#"),t(" Parameters")],-1),$f=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Yf=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),Jf={style:{"text-align":"left"}},Xf=e("code",null,"EBMessage",-1),eg=e("h4",{id:"returns-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-11","aria-hidden":"true"},"#"),t(" Returns")],-1),tg=e("p",null,"message is InfoMessage",-1),ng=e("h4",{id:"defined-in-75",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-75","aria-hidden":"true"},"#"),t(" Defined in")],-1),og={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/isInfoMessage.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},sg=e("hr",null,null,-1),lg=e("h3",{id:"isinfoservicefunctionadded",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#isinfoservicefunctionadded","aria-hidden":"true"},"#"),t(" isInfoServiceFunctionAdded")],-1),dg=e("p",null,[t("▸ "),e("strong",null,"isInfoServiceFunctionAdded"),t("("),e("code",null,"message"),t("): message is Object")],-1),ag=e("h4",{id:"parameters-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-12","aria-hidden":"true"},"#"),t(" Parameters")],-1),ig=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),cg=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),rg={style:{"text-align":"left"}},ug=e("code",null,"EBMessage",-1),hg=e("h4",{id:"returns-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-12","aria-hidden":"true"},"#"),t(" Returns")],-1),_g=e("p",null,"message is Object",-1),pg=e("h4",{id:"defined-in-76",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-76","aria-hidden":"true"},"#"),t(" Defined in")],-1),fg={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/isInfoServiceFunctionAdded.impl.ts#L5",target:"_blank",rel:"noopener noreferrer"},gg=d('<hr><h3 id="ismessagematchingsubscription" tabindex="-1"><a class="header-anchor" href="#ismessagematchingsubscription" aria-hidden="true">#</a> isMessageMatchingSubscription</h3><p>▸ <strong>isMessageMatchingSubscription</strong>(<code>_log</code>, <code>message</code>, <code>subscription</code>): <code>boolean</code></p><h4 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13" aria-hidden="true">#</a> Parameters</h4>',4),mg=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),yg=e("td",{style:{"text-align":"left"}},[e("code",null,"_log")],-1),bg={style:{"text-align":"left"}},xg=e("code",null,"Logger",-1),vg=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),Sg={style:{"text-align":"left"}},Tg=e("code",null,"EBMessage",-1),kg=e("td",{style:{"text-align":"left"}},[e("code",null,"subscription")],-1),Cg={style:{"text-align":"left"}},Pg=e("code",null,"SubscriptionStorageEntry",-1),wg=e("h4",{id:"returns-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-13","aria-hidden":"true"},"#"),t(" Returns")],-1),Mg=e("p",null,[e("code",null,"boolean")],-1),Eg=e("h4",{id:"defined-in-77",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-77","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ig={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/isMessageMatchingSubscription.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},Fg=d('<hr><h3 id="throwifnotvalidmessage" tabindex="-1"><a class="header-anchor" href="#throwifnotvalidmessage" aria-hidden="true">#</a> throwIfNotValidMessage</h3><p>▸ <strong>throwIfNotValidMessage</strong>(<code>input</code>): <code>void</code></p><p>Validates if the given input might be valid event bridge message It only checks for &quot;technically possible&quot;</p><h4 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="defined-in-78" tabindex="-1"><a class="header-anchor" href="#defined-in-78" aria-hidden="true">#</a> Defined in</h4>',9),Dg={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/throwIfNotValidMessage.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},Rg=d('<h2 id="command-2" tabindex="-1"><a class="header-anchor" href="#command-2" aria-hidden="true">#</a> Command</h2><p>• <strong>CommandDefinitionBuilder</strong>&lt;<code>ServiceClassType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>Command definition builder is a helper to create and define a command for a service. It helps to set all needed information like schemas and hooks. With these information, the types are automatically set and extended.</p><p>A working schema definition needs at least a command name, a short description and the function implementation.</p><h4 id="type-parameters-17" tabindex="-1"><a class="header-anchor" href="#type-parameters-17" aria-hidden="true">#</a> Type parameters</h4>',5),Bg=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ng=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),Lg={style:{"text-align":"left"}},Og=e("code",null,"ServiceClass",-1),Hg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Ag=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),jg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),Gg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),qg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),Vg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),zg=e("h4",{id:"defined-in-79",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-79","aria-hidden":"true"},"#"),t(" Defined in")],-1),Zg={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L31",target:"_blank",rel:"noopener noreferrer"},Ug=e("h3",{id:"commandafterguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandafterguardhook","aria-hidden":"true"},"#"),t(" CommandAfterGuardHook")],-1),Qg=e("strong",null,"CommandAfterGuardHook",-1),Kg=e("code",null,"ServiceClassType",-1),Wg=e("code",null,"MessagePayloadType",-1),$g=e("code",null,"MessageParamsType",-1),Yg=e("code",null,"FunctionResultType",-1),Jg=e("code",null,"FunctionPayloadType",-1),Xg=e("code",null,"FunctionParamsType",-1),em=e("code",null,"this",-1),tm=e("code",null,"ServiceClassType",-1),nm=e("code",null,"context",-1),om=e("code",null,"CommandFunctionContext",-1),sm=e("code",null,"MessagePayloadType",-1),lm=e("code",null,"MessageParamsType",-1),dm=e("code",null,"result",-1),am=e("code",null,"Readonly",-1),im=e("code",null,"FunctionResultType",-1),cm=e("code",null,"input",-1),rm=e("code",null,"Readonly",-1),um=e("code",null,"FunctionPayloadType",-1),hm=e("code",null,"parameter",-1),_m=e("code",null,"Readonly",-1),pm=e("code",null,"FunctionParamsType",-1),fm=e("code",null,"Promise",-1),gm=e("code",null,"void",-1),mm=e("h4",{id:"type-parameters-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-18","aria-hidden":"true"},"#"),t(" Type parameters")],-1),ym=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),bm=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),xm={style:{"text-align":"left"}},vm=e("code",null,"ServiceClass",-1),Sm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Tm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),km=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Cm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Pm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),wm=d('<h4 id="type-declaration-24" tabindex="-1"><a class="header-anchor" href="#type-declaration-24" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>result</code>, <code>input</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Definition of after guard hook functions. This guard is called after function successfully returns and after output validation.</p><h5 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15" aria-hidden="true">#</a> Parameters</h5>',4),Mm=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Em=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),Im=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),Fm={style:{"text-align":"left"}},Dm=e("code",null,"CommandFunctionContext",-1),Rm=e("code",null,"MessagePayloadType",-1),Bm=e("code",null,"MessageParamsType",-1),Nm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"result")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionResultType"),t(">")])],-1),Lm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"input")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),Om=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),Hm=e("h5",{id:"returns-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-15","aria-hidden":"true"},"#"),t(" Returns")],-1),Am=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),jm=e("h4",{id:"defined-in-80",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-80","aria-hidden":"true"},"#"),t(" Defined in")],-1),Gm={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandAfterGuardHook.ts#L10",target:"_blank",rel:"noopener noreferrer"},qm=e("hr",null,null,-1),Vm=e("h3",{id:"commandbeforeguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandbeforeguardhook","aria-hidden":"true"},"#"),t(" CommandBeforeGuardHook")],-1),zm=e("strong",null,"CommandBeforeGuardHook",-1),Zm=e("code",null,"ServiceClassType",-1),Um=e("code",null,"MessagePayloadType",-1),Qm=e("code",null,"MessageParamsType",-1),Km=e("code",null,"FunctionPayloadType",-1),Wm=e("code",null,"FunctionParamsType",-1),$m=e("code",null,"this",-1),Ym=e("code",null,"ServiceClassType",-1),Jm=e("code",null,"context",-1),Xm=e("code",null,"CommandFunctionContext",-1),ey=e("code",null,"MessagePayloadType",-1),ty=e("code",null,"MessageParamsType",-1),ny=e("code",null,"payload",-1),oy=e("code",null,"Readonly",-1),sy=e("code",null,"FunctionPayloadType",-1),ly=e("code",null,"parameter",-1),dy=e("code",null,"Readonly",-1),ay=e("code",null,"FunctionParamsType",-1),iy=e("code",null,"Promise",-1),cy=e("code",null,"void",-1),ry=e("h4",{id:"type-parameters-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-19","aria-hidden":"true"},"#"),t(" Type parameters")],-1),uy=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),hy=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),_y={style:{"text-align":"left"}},py=e("code",null,"ServiceClass",-1),fy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),gy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),my=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),yy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),by=d('<h4 id="type-declaration-25" tabindex="-1"><a class="header-anchor" href="#type-declaration-25" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Guard is called after command function input validation and before executing the command function. The guard is usefull to separate for example auth checks from business logic. It should throw HandledError or return void.</p><h5 id="parameters-16" tabindex="-1"><a class="header-anchor" href="#parameters-16" aria-hidden="true">#</a> Parameters</h5>',4),xy=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),vy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),Sy=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),Ty={style:{"text-align":"left"}},ky=e("code",null,"CommandFunctionContext",-1),Cy=e("code",null,"MessagePayloadType",-1),Py=e("code",null,"MessageParamsType",-1),wy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),My=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),Ey=e("h5",{id:"returns-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-16","aria-hidden":"true"},"#"),t(" Returns")],-1),Iy=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),Fy=e("h4",{id:"defined-in-81",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-81","aria-hidden":"true"},"#"),t(" Defined in")],-1),Dy={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandBeforeGuardHook.ts#L11",target:"_blank",rel:"noopener noreferrer"},Ry=d('<hr><h3 id="commanddefinition" tabindex="-1"><a class="header-anchor" href="#commanddefinition" aria-hidden="true">#</a> CommandDefinition</h3><p>Ƭ <strong>CommandDefinition</strong>&lt;<code>ServiceClassType</code>, <code>MetadataType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>The definition for a command provided by some service.</p><h4 id="type-parameters-20" tabindex="-1"><a class="header-anchor" href="#type-parameters-20" aria-hidden="true">#</a> Type parameters</h4>',5),By=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ny=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),Ly={style:{"text-align":"left"}},Oy=e("code",null,"ServiceClass",-1),Hy=e("code",null,"ServiceClass",-1),Ay=e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")],-1),jy={style:{"text-align":"left"}},Gy=e("code",null,"CommandDefinitionMetadataBase",-1),qy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Vy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),zy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Zy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),Uy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),Qy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Ky=e("h4",{id:"type-declaration-26",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-26","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Wy=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),$y=e("td",{style:{"text-align":"left"}},[e("code",null,"call")],-1),Yy={style:{"text-align":"left"}},Jy=e("code",null,"CommandFunction",-1),Xy=e("code",null,"ServiceClassType",-1),eb=e("code",null,"MessagePayloadType",-1),tb=e("code",null,"MessageParamsType",-1),nb=e("code",null,"FunctionPayloadType",-1),ob=e("code",null,"FunctionParamsType",-1),sb=e("code",null,"FunctionResultType",-1),lb=e("td",{style:{"text-align":"left"}},"the command function",-1),db=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandDescription")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the description of the command")],-1),ab=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the command")],-1),ib=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),cb={style:{"text-align":"left"}},rb=e("code",null,"DefinitionEventBridgeConfig",-1),ub=e("td",{style:{"text-align":"left"}},"config information for event bridge",-1),hb=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the eventName for the command response")],-1),_b=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks")],-1),pb={style:{"text-align":"left"}},fb=e("code",null,"afterGuard?",-1),gb=e("code",null,"Record",-1),mb=e("code",null,"string",-1),yb=e("code",null,"CommandAfterGuardHook",-1),bb=e("code",null,"ServiceClassType",-1),xb=e("code",null,"MessagePayloadType",-1),vb=e("code",null,"MessageParamsType",-1),Sb=e("code",null,"FunctionResultType",-1),Tb=e("code",null,"FunctionPayloadType",-1),kb=e("code",null,"FunctionParamsType",-1),Cb=e("code",null,"beforeGuard?",-1),Pb=e("code",null,"Record",-1),wb=e("code",null,"string",-1),Mb=e("code",null,"CommandBeforeGuardHook",-1),Eb=e("code",null,"ServiceClassType",-1),Ib=e("code",null,"MessagePayloadType",-1),Fb=e("code",null,"MessageParamsType",-1),Db=e("code",null,"FunctionPayloadType",-1),Rb=e("code",null,"FunctionParamsType",-1),Bb=e("code",null,"transformInput?",-1),Nb=e("code",null,"transformFunction",-1),Lb=e("code",null,"CommandTransformInputHook",-1),Ob=e("code",null,"ServiceClassType",-1),Hb=e("code",null,"MessagePayloadType",-1),Ab=e("code",null,"MessageParamsType",-1),jb=e("code",null,"transformInputSchema",-1),Gb=e("code",null,"z.ZodType",-1),qb=e("code",null,"transformParameterSchema",-1),Vb=e("code",null,"z.ZodType",-1),zb=e("code",null,"transformOutput?",-1),Zb=e("code",null,"transformFunction",-1),Ub=e("code",null,"CommandTransformOutputHook",-1),Qb=e("code",null,"ServiceClassType",-1),Kb=e("code",null,"MessagePayloadType",-1),Wb=e("code",null,"MessageResultType",-1),$b=e("code",null,"FunctionParamsType",-1),Yb=e("code",null,"unknown",-1),Jb=e("code",null,"transformOutputSchema",-1),Xb=e("code",null,"z.ZodType",-1),ex=e("td",{style:{"text-align":"left"}},"hooks of command",-1),tx=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.afterGuard?")],-1),nx={style:{"text-align":"left"}},ox=e("code",null,"Record",-1),sx=e("code",null,"string",-1),lx=e("code",null,"CommandAfterGuardHook",-1),dx=e("code",null,"ServiceClassType",-1),ax=e("code",null,"MessagePayloadType",-1),ix=e("code",null,"MessageParamsType",-1),cx=e("code",null,"FunctionResultType",-1),rx=e("code",null,"FunctionPayloadType",-1),ux=e("code",null,"FunctionParamsType",-1),hx=e("td",{style:{"text-align":"left"}},"-",-1),_x=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.beforeGuard?")],-1),px={style:{"text-align":"left"}},fx=e("code",null,"Record",-1),gx=e("code",null,"string",-1),mx=e("code",null,"CommandBeforeGuardHook",-1),yx=e("code",null,"ServiceClassType",-1),bx=e("code",null,"MessagePayloadType",-1),xx=e("code",null,"MessageParamsType",-1),vx=e("code",null,"FunctionPayloadType",-1),Sx=e("code",null,"FunctionParamsType",-1),Tx=e("td",{style:{"text-align":"left"}},"-",-1),kx=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput?")],-1),Cx={style:{"text-align":"left"}},Px=e("code",null,"transformFunction",-1),wx=e("code",null,"CommandTransformInputHook",-1),Mx=e("code",null,"ServiceClassType",-1),Ex=e("code",null,"MessagePayloadType",-1),Ix=e("code",null,"MessageParamsType",-1),Fx=e("code",null,"transformInputSchema",-1),Dx=e("code",null,"z.ZodType",-1),Rx=e("code",null,"transformParameterSchema",-1),Bx=e("code",null,"z.ZodType",-1),Nx=e("td",{style:{"text-align":"left"}},"-",-1),Lx=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformFunction")],-1),Ox={style:{"text-align":"left"}},Hx=e("code",null,"CommandTransformInputHook",-1),Ax=e("code",null,"ServiceClassType",-1),jx=e("code",null,"MessagePayloadType",-1),Gx=e("code",null,"MessageParamsType",-1),qx=e("td",{style:{"text-align":"left"}},"-",-1),Vx=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),zx=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),Zx=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput?")],-1),Ux={style:{"text-align":"left"}},Qx=e("code",null,"transformFunction",-1),Kx=e("code",null,"CommandTransformOutputHook",-1),Wx=e("code",null,"ServiceClassType",-1),$x=e("code",null,"MessagePayloadType",-1),Yx=e("code",null,"MessageResultType",-1),Jx=e("code",null,"FunctionParamsType",-1),Xx=e("code",null,"unknown",-1),e3=e("code",null,"transformOutputSchema",-1),t3=e("code",null,"z.ZodType",-1),n3=e("td",{style:{"text-align":"left"}},"-",-1),o3=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformFunction")],-1),s3={style:{"text-align":"left"}},l3=e("code",null,"CommandTransformOutputHook",-1),d3=e("code",null,"ServiceClassType",-1),a3=e("code",null,"MessagePayloadType",-1),i3=e("code",null,"MessageResultType",-1),c3=e("code",null,"FunctionParamsType",-1),r3=e("code",null,"unknown",-1),u3=e("td",{style:{"text-align":"left"}},"-",-1),h3=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),_3=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"metadata")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")]),e("td",{style:{"text-align":"left"}},"the metadata of the command")],-1),p3=e("h4",{id:"defined-in-82",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-82","aria-hidden":"true"},"#"),t(" Defined in")],-1),f3={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandDefinition.ts#L17",target:"_blank",rel:"noopener noreferrer"},g3=e("hr",null,null,-1),m3=e("h3",{id:"commanderrorresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commanderrorresponse","aria-hidden":"true"},"#"),t(" CommandErrorResponse")],-1),y3=e("strong",null,"CommandErrorResponse",-1),b3=e("code",null,"Prettify",-1),x3=e("code",null,"contentEncoding",-1),v3=e("code",null,'"utf-8"',-1),S3=e("code",null,"contentType",-1),T3=e("code",null,'"application/json"',-1),k3=e("code",null,"correlationId",-1),C3=e("code",null,"CorrelationId",-1),P3=e("code",null,"isHandledError",-1),w3=e("code",null,"boolean",-1),M3=e("code",null,"messageType",-1),E3=e("code",null,"CommandErrorResponse",-1),I3=e("code",null,"payload",-1),F3=e("code",null,"data?",-1),D3=e("code",null,"unknown",-1),R3=e("code",null,"message",-1),B3=e("code",null,"string",-1),N3=e("code",null,"status",-1),L3=e("code",null,"StatusCode",-1),O3=e("code",null,"receiver",-1),H3=e("code",null,"EBMessageSenderAddress",-1),A3=e("code",null,"EBMessageBase",-1),j3=e("p",null,"CommandErrorResponse is a response to a specific previously received command which indicates some failure.",-1),G3=e("h4",{id:"defined-in-83",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-83","aria-hidden":"true"},"#"),t(" Defined in")],-1),q3={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandErrorResponse.ts#L13",target:"_blank",rel:"noopener noreferrer"},V3=e("hr",null,null,-1),z3=e("h3",{id:"commandfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandfunction","aria-hidden":"true"},"#"),t(" CommandFunction")],-1),Z3=e("strong",null,"CommandFunction",-1),U3=e("code",null,"ServiceClassType",-1),Q3=e("code",null,"MessagePayloadType",-1),K3=e("code",null,"MessageParamsType",-1),W3=e("code",null,"FunctionPayloadType",-1),$3=e("code",null,"FunctionParamsType",-1),Y3=e("code",null,"FunctionResultType",-1),J3=e("code",null,"this",-1),X3=e("code",null,"ServiceClassType",-1),ev=e("code",null,"context",-1),tv=e("code",null,"CommandFunctionContext",-1),nv=e("code",null,"MessagePayloadType",-1),ov=e("code",null,"MessageParamsType",-1),sv=e("code",null,"payload",-1),lv=e("code",null,"Readonly",-1),dv=e("code",null,"FunctionPayloadType",-1),av=e("code",null,"parameter",-1),iv=e("code",null,"Readonly",-1),cv=e("code",null,"FunctionParamsType",-1),rv=e("code",null,"Promise",-1),uv=e("code",null,"FunctionResultType",-1),hv=e("h4",{id:"type-parameters-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-21","aria-hidden":"true"},"#"),t(" Type parameters")],-1),_v=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),pv=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),fv={style:{"text-align":"left"}},gv=e("code",null,"ServiceClass",-1),mv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),yv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),bv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),xv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),vv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Sv=d('<h4 id="type-declaration-27" tabindex="-1"><a class="header-anchor" href="#type-declaration-27" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>FunctionResultType</code>&gt;</p><p>CommandFunction is a function which will be triggered when a matching event bridge message is received by the service</p><h5 id="parameters-17" tabindex="-1"><a class="header-anchor" href="#parameters-17" aria-hidden="true">#</a> Parameters</h5>',4),Tv=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),kv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),Cv=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),Pv={style:{"text-align":"left"}},wv=e("code",null,"CommandFunctionContext",-1),Mv=e("code",null,"MessagePayloadType",-1),Ev=e("code",null,"MessageParamsType",-1),Iv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),Fv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),Dv=e("h5",{id:"returns-17",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-17","aria-hidden":"true"},"#"),t(" Returns")],-1),Rv=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"FunctionResultType"),t(">")],-1),Bv=e("h4",{id:"defined-in-84",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-84","aria-hidden":"true"},"#"),t(" Defined in")],-1),Nv={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandFunction.ts#L9",target:"_blank",rel:"noopener noreferrer"},Lv=e("hr",null,null,-1),Ov=e("h3",{id:"commandfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandfunctioncontext","aria-hidden":"true"},"#"),t(" CommandFunctionContext")],-1),Hv=e("strong",null,"CommandFunctionContext",-1),Av=e("code",null,"MessagePayloadType",-1),jv=e("code",null,"MessageParamsType",-1),Gv=e("code",null,"Prettify",-1),qv=e("code",null,"ContextBase",-1),Vv=e("code",null,"CommandFunctionContextEnhancements",-1),zv=e("code",null,"MessagePayloadType",-1),Zv=e("code",null,"MessageParamsType",-1),Uv=d('<p>The command function context which will be passed into command function.</p><h4 id="type-parameters-22" tabindex="-1"><a class="header-anchor" href="#type-parameters-22" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-85" tabindex="-1"><a class="header-anchor" href="#defined-in-85" aria-hidden="true">#</a> Defined in</h4>',4),Qv={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandFunctionContext.ts#L47",target:"_blank",rel:"noopener noreferrer"},Kv=d('<hr><h3 id="commandfunctioncontextenhancements" tabindex="-1"><a class="header-anchor" href="#commandfunctioncontextenhancements" aria-hidden="true">#</a> CommandFunctionContextEnhancements</h3><p>Ƭ <strong>CommandFunctionContextEnhancements</strong>&lt;<code>MessagePayloadType</code>, <code>MessageParamsType</code>&gt;: <code>Object</code></p><p>It provides the original command message with types for payload and parameter. Also, the methods:</p><ul><li><code>emit</code> which allows to emit custom events to the event bridge</li><li><code>invoke</code> which allows to call other commands</li></ul><h4 id="type-parameters-23" tabindex="-1"><a class="header-anchor" href="#type-parameters-23" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-28" tabindex="-1"><a class="header-anchor" href="#type-declaration-28" aria-hidden="true">#</a> Type declaration</h4>',8),Wv=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),$v=e("td",{style:{"text-align":"left"}},[e("code",null,"emit")],-1),Yv={style:{"text-align":"left"}},Jv=e("code",null,"EmitCustomMessageFunction",-1),Xv=e("td",{style:{"text-align":"left"}},"emit a custom message",-1),e2=e("td",{style:{"text-align":"left"}},[e("code",null,"invoke")],-1),t2={style:{"text-align":"left"}},n2=e("code",null,"InvokeFunction",-1),o2=e("td",{style:{"text-align":"left"}},[t("Invokes a command and returns the result. It is recommended to validate the result against a schema which only contains the data you actually need. "),e("strong",null,[e("code",null,"Example")]),t(),e("code",null,"typescript const address: EBMessageAddress = { serviceName: 'name-of-service-to-invoke', serviceVersion: '1', serviceTarget: 'command-name-to-invoke', } const inputPayload = { my: 'input' } const inputParameter = { search: 'for_me' } const result = await invoke<MyResultType>(address, inputPayload inputParameter ) ")],-1),s2=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),l2={style:{"text-align":"left"}},d2=e("code",null,"Readonly",-1),a2=e("code",null,"Command",-1),i2=e("code",null,"MessagePayloadType",-1),c2=e("code",null,"MessageParamsType",-1),r2=e("td",{style:{"text-align":"left"}},"the original message",-1),u2=e("h4",{id:"defined-in-86",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-86","aria-hidden":"true"},"#"),t(" Defined in")],-1),h2={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandFunctionContext.ts#L16",target:"_blank",rel:"noopener noreferrer"},_2=e("hr",null,null,-1),p2=e("h3",{id:"commandresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandresponse","aria-hidden":"true"},"#"),t(" CommandResponse")],-1),f2=e("strong",null,"CommandResponse",-1),g2=e("code",null,"T",-1),m2=e("code",null,"CommandSuccessResponse",-1),y2=e("code",null,"T",-1),b2=e("code",null,"CommandErrorResponse",-1),x2=d('<p>CommandResponse is a response to a specific previously received command which can be either a success or failure</p><h4 id="type-parameters-24" tabindex="-1"><a class="header-anchor" href="#type-parameters-24" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-87" tabindex="-1"><a class="header-anchor" href="#defined-in-87" aria-hidden="true">#</a> Defined in</h4>',4),v2={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandResponse.ts#L9",target:"_blank",rel:"noopener noreferrer"},S2=e("hr",null,null,-1),T2=e("h3",{id:"commandsuccessresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandsuccessresponse","aria-hidden":"true"},"#"),t(" CommandSuccessResponse")],-1),k2=e("strong",null,"CommandSuccessResponse",-1),C2=e("code",null,"PayloadType",-1),P2=e("code",null,"Prettify",-1),w2=e("code",null,"correlationId",-1),M2=e("code",null,"CorrelationId",-1),E2=e("code",null,"messageType",-1),I2=e("code",null,"CommandSuccessResponse",-1),F2=e("code",null,"payload",-1),D2=e("code",null,"PayloadType",-1),R2=e("code",null,"receiver",-1),B2=e("code",null,"EBMessageSenderAddress",-1),N2=e("code",null,"EBMessageBase",-1),L2=d('<p>CommandSuccessResponse is a response to a specific previously received command. It indicates that the command was executed successfully and contains the result payload</p><h4 id="type-parameters-25" tabindex="-1"><a class="header-anchor" href="#type-parameters-25" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-88" tabindex="-1"><a class="header-anchor" href="#defined-in-88" aria-hidden="true">#</a> Defined in</h4>',4),O2={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandSuccessResponse.ts#L13",target:"_blank",rel:"noopener noreferrer"},H2=e("hr",null,null,-1),A2=e("h3",{id:"commandtransformfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandtransformfunctioncontext","aria-hidden":"true"},"#"),t(" CommandTransformFunctionContext")],-1),j2=e("strong",null,"CommandTransformFunctionContext",-1),G2=e("code",null,"PayloadType",-1),q2=e("code",null,"ParameterType",-1),V2=e("code",null,"Prettify",-1),z2=e("code",null,"ContextBase",-1),Z2=e("code",null,"message",-1),U2=e("code",null,"Readonly",-1),Q2=e("code",null,"Command",-1),K2=e("code",null,"PayloadType",-1),W2=e("code",null,"ParameterType",-1),$2=d('<h4 id="type-parameters-26" tabindex="-1"><a class="header-anchor" href="#type-parameters-26" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td></tr></tbody></table><h4 id="defined-in-89" tabindex="-1"><a class="header-anchor" href="#defined-in-89" aria-hidden="true">#</a> Defined in</h4>',3),Y2={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandTransformFunctionContext.ts#L8",target:"_blank",rel:"noopener noreferrer"},J2=e("hr",null,null,-1),X2=e("h3",{id:"commandtransforminputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandtransforminputhook","aria-hidden":"true"},"#"),t(" CommandTransformInputHook")],-1),e4=e("strong",null,"CommandTransformInputHook",-1),t4=e("code",null,"ServiceClassType",-1),n4=e("code",null,"PayloadOutput",-1),o4=e("code",null,"ParamsOutput",-1),s4=e("code",null,"PayloadInput",-1),l4=e("code",null,"ParamsInput",-1),d4=e("code",null,"this",-1),a4=e("code",null,"ServiceClassType",-1),i4=e("code",null,"context",-1),c4=e("code",null,"CommandTransformFunctionContext",-1),r4=e("code",null,"PayloadInput",-1),u4=e("code",null,"ParamsInput",-1),h4=e("code",null,"payload",-1),_4=e("code",null,"Readonly",-1),p4=e("code",null,"PayloadInput",-1),f4=e("code",null,"parameter",-1),g4=e("code",null,"Readonly",-1),m4=e("code",null,"ParamsInput",-1),y4=e("code",null,"Promise",-1),b4=e("code",null,"parameter",-1),x4=e("code",null,"Readonly",-1),v4=e("code",null,"ParamsOutput",-1),S4=e("code",null,"payload",-1),T4=e("code",null,"Readonly",-1),k4=e("code",null,"PayloadOutput",-1),C4=d('<h4 id="type-parameters-27" tabindex="-1"><a class="header-anchor" href="#type-parameters-27" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>PayloadOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>PayloadInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-29" tabindex="-1"><a class="header-anchor" href="#type-declaration-29" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><p>The command transform gets the raw message payload and parameter input, which is validated against the transform input schemas. The command transform function is called before guard hooks and before the actual command function.</p><p>It should throw HandledError or return an object with the transformed payload and parameter. The type of returned payload and parameter must match the command function input for payload and parameter</p><h5 id="parameters-18" tabindex="-1"><a class="header-anchor" href="#parameters-18" aria-hidden="true">#</a> Parameters</h5>',7),P4=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),w4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),M4=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),E4={style:{"text-align":"left"}},I4=e("code",null,"CommandTransformFunctionContext",-1),F4=e("code",null,"PayloadInput",-1),D4=e("code",null,"ParamsInput",-1),R4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"PayloadInput"),t(">")])],-1),B4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"ParamsInput"),t(">")])],-1),N4=d('<h5 id="returns-18" tabindex="-1"><a class="header-anchor" href="#returns-18" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><h4 id="defined-in-90" tabindex="-1"><a class="header-anchor" href="#defined-in-90" aria-hidden="true">#</a> Defined in</h4>',3),L4={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandTransformInputHook.ts#L12",target:"_blank",rel:"noopener noreferrer"},O4=e("hr",null,null,-1),H4=e("h3",{id:"commandtransformoutputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandtransformoutputhook","aria-hidden":"true"},"#"),t(" CommandTransformOutputHook")],-1),A4=e("strong",null,"CommandTransformOutputHook",-1),j4=e("code",null,"ServiceClassType",-1),G4=e("code",null,"MessagePayloadType",-1),q4=e("code",null,"MessageResultType",-1),V4=e("code",null,"MessageParamsType",-1),z4=e("code",null,"ResponseOutput",-1),Z4=e("code",null,"this",-1),U4=e("code",null,"ServiceClassType",-1),Q4=e("code",null,"context",-1),K4=e("code",null,"CommandTransformFunctionContext",-1),W4=e("code",null,"MessagePayloadType",-1),$4=e("code",null,"MessageParamsType",-1),Y4=e("code",null,"payload",-1),J4=e("code",null,"Readonly",-1),X4=e("code",null,"MessageResultType",-1),eS=e("code",null,"parameter",-1),tS=e("code",null,"Readonly",-1),nS=e("code",null,"MessageParamsType",-1),oS=e("code",null,"Promise",-1),sS=e("code",null,"ResponseOutput",-1),lS=d('<h4 id="type-parameters-28" tabindex="-1"><a class="header-anchor" href="#type-parameters-28" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>MessageResultType</code></td><td style="text-align:left;"><code>MessageResultType</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>ResponseOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-30" tabindex="-1"><a class="header-anchor" href="#type-declaration-30" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>ResponseOutput</code>&gt;</p><p>This transform hook is executed after function output validation and AfterGuardHooks.</p><h5 id="parameters-19" tabindex="-1"><a class="header-anchor" href="#parameters-19" aria-hidden="true">#</a> Parameters</h5>',6),dS=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),aS=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),iS=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),cS={style:{"text-align":"left"}},rS=e("code",null,"CommandTransformFunctionContext",-1),uS=e("code",null,"MessagePayloadType",-1),hS=e("code",null,"MessageParamsType",-1),_S=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageResultType"),t(">")])],-1),pS=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageParamsType"),t(">")])],-1),fS=e("h5",{id:"returns-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-19","aria-hidden":"true"},"#"),t(" Returns")],-1),gS=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"ResponseOutput"),t(">")],-1),mS=e("h4",{id:"defined-in-91",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-91","aria-hidden":"true"},"#"),t(" Defined in")],-1),yS={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandTransformOutputHook.ts#L7",target:"_blank",rel:"noopener noreferrer"},bS=e("hr",null,null,-1),xS=e("h3",{id:"iscommand",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscommand","aria-hidden":"true"},"#"),t(" isCommand")],-1),vS=e("p",null,[t("▸ "),e("strong",null,"isCommand"),t("("),e("code",null,"message"),t("): message is Object")],-1),SS=e("p",null,"Checks if given message is type of Command",-1),TS=e("h4",{id:"parameters-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-20","aria-hidden":"true"},"#"),t(" Parameters")],-1),kS=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),CS=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),PS={style:{"text-align":"left"}},wS=e("code",null,"EBMessage",-1),MS=e("h4",{id:"returns-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-20","aria-hidden":"true"},"#"),t(" Returns")],-1),ES=e("p",null,"message is Object",-1),IS=e("p",null,"boolean",-1),FS=e("h4",{id:"defined-in-92",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-92","aria-hidden":"true"},"#"),t(" Defined in")],-1),DS={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/isCommand.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},RS=d('<hr><h3 id="iscommanderrorresponse" tabindex="-1"><a class="header-anchor" href="#iscommanderrorresponse" aria-hidden="true">#</a> isCommandErrorResponse</h3><p>▸ <strong>isCommandErrorResponse</strong>(<code>message</code>): message is Object</p><p>Checks if given message is type of CommandErrorResponse</p><h4 id="parameters-21" tabindex="-1"><a class="header-anchor" href="#parameters-21" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>message</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="returns-21" tabindex="-1"><a class="header-anchor" href="#returns-21" aria-hidden="true">#</a> Returns</h4><p>message is Object</p><p>boolean</p><h4 id="defined-in-93" tabindex="-1"><a class="header-anchor" href="#defined-in-93" aria-hidden="true">#</a> Defined in</h4>',10),BS={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/isCommandErrorResponse.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},NS=e("hr",null,null,-1),LS=e("h3",{id:"iscommandresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscommandresponse","aria-hidden":"true"},"#"),t(" isCommandResponse")],-1),OS=e("p",null,[t("▸ "),e("strong",null,"isCommandResponse"),t("("),e("code",null,"message"),t("): message is CommandResponse")],-1),HS=e("p",null,"Checks if given message is type of CommandResponse (success or error)",-1),AS=e("h4",{id:"parameters-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-22","aria-hidden":"true"},"#"),t(" Parameters")],-1),jS=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),GS=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),qS={style:{"text-align":"left"}},VS=e("code",null,"EBMessage",-1),zS=e("h4",{id:"returns-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-22","aria-hidden":"true"},"#"),t(" Returns")],-1),ZS=e("p",null,"message is CommandResponse",-1),US=e("p",null,"boolean",-1),QS=e("h4",{id:"defined-in-94",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-94","aria-hidden":"true"},"#"),t(" Defined in")],-1),KS={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/isCommandResponse.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},WS=e("hr",null,null,-1),$S=e("h3",{id:"iscommandsuccessresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscommandsuccessresponse","aria-hidden":"true"},"#"),t(" isCommandSuccessResponse")],-1),YS=e("p",null,[t("▸ "),e("strong",null,"isCommandSuccessResponse"),t("("),e("code",null,"message"),t("): message is Object")],-1),JS=e("p",null,"Checks if given message is type of CommandSuccessResponse",-1),XS=e("h4",{id:"parameters-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-23","aria-hidden":"true"},"#"),t(" Parameters")],-1),eT=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),tT=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),nT={style:{"text-align":"left"}},oT=e("code",null,"EBMessage",-1),sT=e("h4",{id:"returns-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-23","aria-hidden":"true"},"#"),t(" Returns")],-1),lT=e("p",null,"message is Object",-1),dT=e("p",null,"boolean",-1),aT=e("h4",{id:"defined-in-95",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-95","aria-hidden":"true"},"#"),t(" Defined in")],-1),iT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/isCommandSuccessResponse.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},cT=d(`<h2 id="event-bridge-1" tabindex="-1"><a class="header-anchor" href="#event-bridge-1" aria-hidden="true">#</a> Event bridge</h2><p>• <strong>DefaultEventBridge</strong>: <code>Object</code></p><p>Simple implementation of some simple in-memory event bridge. Does not support threads and does not need any external databases.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> DefaultEventBridge <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@purista/core&#39;</span>

<span class="token keyword">const</span> eventBridge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultEventBridge</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> eventBridge<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// add your services</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-96" tabindex="-1"><a class="header-anchor" href="#defined-in-96" aria-hidden="true">#</a> Defined in</h4>`,6),rT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L61",target:"_blank",rel:"noopener noreferrer"},uT=d('<p>• <strong>EventBridgeBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>The base class to be extended by event bridge implementations</p><h4 id="type-parameters-29" tabindex="-1"><a class="header-anchor" href="#type-parameters-29" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="defined-in-97" tabindex="-1"><a class="header-anchor" href="#defined-in-97" aria-hidden="true">#</a> Defined in</h4>',5),hT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L17",target:"_blank",rel:"noopener noreferrer"},_T=e("p",null,[t("• "),e("strong",null,"EventBridge"),t(": "),e("code",null,"Object")],-1),pT=e("p",null,"Event bridge interface The event bridge must implement this interface.",-1),fT=e("h4",{id:"defined-in-98",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-98","aria-hidden":"true"},"#"),t(" Defined in")],-1),gT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L19",target:"_blank",rel:"noopener noreferrer"},mT=e("h3",{id:"eventbridgeeventsbasic",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#eventbridgeeventsbasic","aria-hidden":"true"},"#"),t(" EventBridgeEventsBasic")],-1),yT=e("p",null,[t("Ƭ "),e("strong",null,"EventBridgeEventsBasic"),t(": "),e("code",null,"Object")],-1),bT=e("p",null,"Events which can be emitted by a event bridge",-1),xT=e("h4",{id:"type-declaration-31",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-31","aria-hidden":"true"},"#"),t(" Type declaration")],-1),vT=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),ST=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-connected")]),e("td",{style:{"text-align":"left"}},[e("code",null,"never")]),e("td",{style:{"text-align":"left"}},"emitted when then connection to event bridge is established")],-1),TT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-connection-error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined"),t(" | "),e("code",null,"unknown"),t(" | "),e("code",null,"Error")]),e("td",{style:{"text-align":"left"}},"emitted when the connection to event bridge can not be established or a connection has issues or gets closed unexpectedly")],-1),kT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-disconnected")]),e("td",{style:{"text-align":"left"}},[e("code",null,"never")]),e("td",{style:{"text-align":"left"}},"emitted when the connection to event bridge closed")],-1),CT=e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-error")],-1),PT={style:{"text-align":"left"}},wT=e("code",null,"UnhandledError",-1),MT=e("code",null,"unknown",-1),ET=e("td",{style:{"text-align":"left"}},"emitted on internal event bridge error",-1),IT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-reconnecting")]),e("td",{style:{"text-align":"left"}},[e("code",null,"never")]),e("td",{style:{"text-align":"left"}},"emitted on retry to connect to event bridge")],-1),FT=e("h4",{id:"defined-in-99",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-99","aria-hidden":"true"},"#"),t(" Defined in")],-1),DT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeEvents.ts#L20",target:"_blank",rel:"noopener noreferrer"},RT=e("hr",null,null,-1),BT=e("h3",{id:"getcommandqueuename",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommandqueuename","aria-hidden":"true"},"#"),t(" getCommandQueueName")],-1),NT=e("p",null,[t("▸ "),e("strong",null,"getCommandQueueName"),t("("),e("code",null,"address"),t("): "),e("code",null,"string")],-1),LT=e("h4",{id:"parameters-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-24","aria-hidden":"true"},"#"),t(" Parameters")],-1),OT=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),HT=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),AT={style:{"text-align":"left"}},jT=e("code",null,"EBMessageAddress",-1),GT=e("h4",{id:"returns-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-24","aria-hidden":"true"},"#"),t(" Returns")],-1),qT=e("p",null,[e("code",null,"string")],-1),VT=e("h4",{id:"defined-in-100",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-100","aria-hidden":"true"},"#"),t(" Defined in")],-1),zT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getCommandQueueName.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},ZT=d('<h2 id="helper-1" tabindex="-1"><a class="header-anchor" href="#helper-1" aria-hidden="true">#</a> Helper</h2><h3 id="converttocamelcase" tabindex="-1"><a class="header-anchor" href="#converttocamelcase" aria-hidden="true">#</a> convertToCamelCase</h3><p>▸ <strong>convertToCamelCase</strong>(<code>str</code>): <code>string</code></p><p>Converts a string into camelCase</p><p><strong><code>Link</code></strong></p><p>https://github.com/30-seconds/30-seconds-of-code</p><h4 id="parameters-25" tabindex="-1"><a class="header-anchor" href="#parameters-25" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">string</td></tr></tbody></table><h4 id="returns-25" tabindex="-1"><a class="header-anchor" href="#returns-25" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>string converted to camelCase</p><h4 id="defined-in-101" tabindex="-1"><a class="header-anchor" href="#defined-in-101" aria-hidden="true">#</a> Defined in</h4>',12),UT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/string/convertToCamelCase.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},QT=d('<hr><h3 id="converttokebabcase" tabindex="-1"><a class="header-anchor" href="#converttokebabcase" aria-hidden="true">#</a> convertToKebabCase</h3><p>▸ <strong>convertToKebabCase</strong>(<code>str</code>): <code>string</code></p><p>Converts a string into kebab-case</p><p><strong><code>Link</code></strong></p><p>https://github.com/30-seconds/30-seconds-of-code</p><h4 id="parameters-26" tabindex="-1"><a class="header-anchor" href="#parameters-26" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">string</td></tr></tbody></table><h4 id="returns-26" tabindex="-1"><a class="header-anchor" href="#returns-26" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>string converted to kebab-case</p><h4 id="defined-in-102" tabindex="-1"><a class="header-anchor" href="#defined-in-102" aria-hidden="true">#</a> Defined in</h4>',12),KT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/string/convertToKebabCase.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},WT=d('<hr><h3 id="converttopascalcase" tabindex="-1"><a class="header-anchor" href="#converttopascalcase" aria-hidden="true">#</a> convertToPascalCase</h3><p>▸ <strong>convertToPascalCase</strong>(<code>str</code>): <code>string</code></p><p>Converts a string into PascalCase</p><p><strong><code>Link</code></strong></p><p>https://github.com/30-seconds/30-seconds-of-code</p><h4 id="parameters-27" tabindex="-1"><a class="header-anchor" href="#parameters-27" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">string</td></tr></tbody></table><h4 id="returns-27" tabindex="-1"><a class="header-anchor" href="#returns-27" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>string converted to PascalCase</p><h4 id="defined-in-103" tabindex="-1"><a class="header-anchor" href="#defined-in-103" aria-hidden="true">#</a> Defined in</h4>',12),$T={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/string/convertToPascalCase.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},YT=d('<hr><h3 id="converttosnakecase" tabindex="-1"><a class="header-anchor" href="#converttosnakecase" aria-hidden="true">#</a> convertToSnakeCase</h3><p>▸ <strong>convertToSnakeCase</strong>(<code>str</code>): <code>string</code></p><p>Converts a string into snake_case</p><p><strong><code>Link</code></strong></p><p>https://github.com/30-seconds/30-seconds-of-code</p><h4 id="parameters-28" tabindex="-1"><a class="header-anchor" href="#parameters-28" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">string</td></tr></tbody></table><h4 id="returns-28" tabindex="-1"><a class="header-anchor" href="#returns-28" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>string converted to snake_case</p><h4 id="defined-in-104" tabindex="-1"><a class="header-anchor" href="#defined-in-104" aria-hidden="true">#</a> Defined in</h4>',12),JT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/string/convertToSnakeCase.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},XT=e("hr",null,null,-1),ek=e("h3",{id:"createerrorresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#createerrorresponse","aria-hidden":"true"},"#"),t(" createErrorResponse")],-1),tk=e("strong",null,"createErrorResponse",-1),nk=e("code",null,"instanceId",-1),ok=e("code",null,"originalEBMessage",-1),sk=e("code",null,"statusCode?",-1),lk=e("code",null,"error?",-1),dk=e("code",null,"Readonly",-1),ak=e("code",null,"Omit",-1),ik=e("code",null,"contentEncoding",-1),ck=e("code",null,'"utf-8"',-1),rk=e("code",null,"contentType",-1),uk=e("code",null,'"application/json"',-1),hk=e("code",null,"correlationId",-1),_k=e("code",null,"string",-1),pk=e("code",null,"eventName?",-1),fk=e("code",null,"string",-1),gk=e("code",null,"id",-1),mk=e("code",null,"string",-1),yk=e("code",null,"isHandledError",-1),bk=e("code",null,"boolean",-1),xk=e("code",null,"messageType",-1),vk=e("code",null,"CommandErrorResponse",-1),Sk=e("code",null,"otp?",-1),Tk=e("code",null,"string",-1),kk=e("code",null,"payload",-1),Ck=e("code",null,"data?",-1),Pk=e("code",null,"unknown",-1),wk=e("code",null,"message",-1),Mk=e("code",null,"string",-1),Ek=e("code",null,"status",-1),Ik=e("code",null,"StatusCode",-1),Fk=e("code",null,"principalId?",-1),Dk=e("code",null,"string",-1),Rk=e("code",null,"receiver",-1),Bk=e("code",null,"sender",-1),Nk=e("code",null,"timestamp",-1),Lk=e("code",null,"number",-1),Ok=e("code",null,"traceId?",-1),Hk=e("code",null,"string",-1),Ak=e("code",null,'"instanceId"',-1),jk=e("p",null,"Creates a error response object based on original command Toggles sender and receiver",-1),Gk=e("h4",{id:"parameters-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-29","aria-hidden":"true"},"#"),t(" Parameters")],-1),qk=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value")])],-1),Vk=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),zk=e("td",{style:{"text-align":"left"}},[e("code",null,"originalEBMessage")],-1),Zk={style:{"text-align":"left"}},Uk=e("code",null,"Readonly",-1),Qk=e("code",null,"contentEncoding",-1),Kk=e("code",null,"string",-1),Wk=e("code",null,"contentType",-1),$k=e("code",null,"string",-1),Yk=e("code",null,"correlationId",-1),Jk=e("code",null,"string",-1),Xk=e("code",null,"eventName?",-1),e5=e("code",null,"string",-1),t5=e("code",null,"id",-1),n5=e("code",null,"string",-1),o5=e("code",null,"messageType",-1),s5=e("code",null,"Command",-1),l5=e("code",null,"otp?",-1),d5=e("code",null,"string",-1),a5=e("code",null,"payload",-1),i5=e("code",null,"parameter",-1),c5=e("code",null,"unknown",-1),r5=e("code",null,"payload",-1),u5=e("code",null,"unknown",-1),h5=e("code",null,"principalId?",-1),_5=e("code",null,"string",-1),p5=e("code",null,"receiver",-1),f5=e("code",null,"EBMessageAddress",-1),g5=e("code",null,"sender",-1),m5=e("code",null,"timestamp",-1),y5=e("code",null,"number",-1),b5=e("code",null,"traceId?",-1),x5=e("code",null,"string",-1),v5=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),S5=e("td",{style:{"text-align":"left"}},[e("code",null,"statusCode")],-1),T5={style:{"text-align":"left"}},k5=e("code",null,"StatusCode",-1),C5=e("td",{style:{"text-align":"left"}},[e("code",null,"StatusCode.InternalServerError")],-1),P5=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"error?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),w5=e("h4",{id:"returns-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-29","aria-hidden":"true"},"#"),t(" Returns")],-1),M5=e("code",null,"Readonly",-1),E5=e("code",null,"Omit",-1),I5=e("code",null,"contentEncoding",-1),F5=e("code",null,'"utf-8"',-1),D5=e("code",null,"contentType",-1),R5=e("code",null,'"application/json"',-1),B5=e("code",null,"correlationId",-1),N5=e("code",null,"string",-1),L5=e("code",null,"eventName?",-1),O5=e("code",null,"string",-1),H5=e("code",null,"id",-1),A5=e("code",null,"string",-1),j5=e("code",null,"isHandledError",-1),G5=e("code",null,"boolean",-1),q5=e("code",null,"messageType",-1),V5=e("code",null,"CommandErrorResponse",-1),z5=e("code",null,"otp?",-1),Z5=e("code",null,"string",-1),U5=e("code",null,"payload",-1),Q5=e("code",null,"data?",-1),K5=e("code",null,"unknown",-1),W5=e("code",null,"message",-1),$5=e("code",null,"string",-1),Y5=e("code",null,"status",-1),J5=e("code",null,"StatusCode",-1),X5=e("code",null,"principalId?",-1),e6=e("code",null,"string",-1),t6=e("code",null,"receiver",-1),n6=e("code",null,"sender",-1),o6=e("code",null,"timestamp",-1),s6=e("code",null,"number",-1),l6=e("code",null,"traceId?",-1),d6=e("code",null,"string",-1),a6=e("code",null,'"instanceId"',-1),i6=e("p",null,"CommandErrorResponse message object",-1),c6=e("h4",{id:"defined-in-105",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-105","aria-hidden":"true"},"#"),t(" Defined in")],-1),r6={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/createErrorResponse.impl.ts#L18",target:"_blank",rel:"noopener noreferrer"},u6=e("hr",null,null,-1),h6=e("h3",{id:"createinfomessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#createinfomessage","aria-hidden":"true"},"#"),t(" createInfoMessage")],-1),_6=e("strong",null,"createInfoMessage",-1),p6=e("code",null,"messageType",-1),f6=e("code",null,"sender",-1),g6=e("code",null,"additional?",-1),m6=e("code",null,"InfoMessage",-1),y6=e("h4",{id:"parameters-30",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-30","aria-hidden":"true"},"#"),t(" Parameters")],-1),b6=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),x6=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType")],-1),v6={style:{"text-align":"left"}},S6=e("code",null,"InfoMessageType",-1),T6=e("td",{style:{"text-align":"left"}},"-",-1),k6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),C6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.instanceId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"instance id of eventbridge")],-1),P6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the service")],-1),w6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the command or subscription")],-1),M6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the version of the service")],-1),E6=e("td",{style:{"text-align":"left"}},[e("code",null,"additional?")],-1),I6={style:{"text-align":"left"}},F6=e("code",null,"Partial",-1),D6=e("code",null,"InfoMessage",-1),R6=e("td",{style:{"text-align":"left"}},"-",-1),B6=e("h4",{id:"returns-30",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-30","aria-hidden":"true"},"#"),t(" Returns")],-1),N6=e("code",null,"InfoMessage",-1),L6=e("h4",{id:"defined-in-106",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-106","aria-hidden":"true"},"#"),t(" Defined in")],-1),O6={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/createInfoMessage.impl.ts#L14",target:"_blank",rel:"noopener noreferrer"},H6=e("hr",null,null,-1),A6=e("h3",{id:"createsuccessresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#createsuccessresponse","aria-hidden":"true"},"#"),t(" createSuccessResponse")],-1),j6=e("strong",null,"createSuccessResponse",-1),G6=e("code",null,"T",-1),q6=e("code",null,"instanceId",-1),V6=e("code",null,"originalEBMessage",-1),z6=e("code",null,"payload",-1),Z6=e("code",null,"eventName?",-1),U6=e("code",null,"contentType?",-1),Q6=e("code",null,"contentEncoding?",-1),K6=e("code",null,"Readonly",-1),W6=e("code",null,"contentEncoding",-1),$6=e("code",null,"string",-1),Y6=e("code",null,"contentType",-1),J6=e("code",null,"string",-1),X6=e("code",null,"correlationId",-1),e9=e("code",null,"string",-1),t9=e("code",null,"eventName?",-1),n9=e("code",null,"string",-1),o9=e("code",null,"id",-1),s9=e("code",null,"string",-1),l9=e("code",null,"messageType",-1),d9=e("code",null,"CommandSuccessResponse",-1),a9=e("code",null,"otp?",-1),i9=e("code",null,"string",-1),c9=e("code",null,"payload",-1),r9=e("code",null,"T",-1),u9=e("code",null,"principalId?",-1),h9=e("code",null,"string",-1),_9=e("code",null,"receiver",-1),p9=e("code",null,"sender",-1),f9=e("code",null,"timestamp",-1),g9=e("code",null,"number",-1),m9=e("code",null,"traceId?",-1),y9=e("code",null,"string",-1),b9=d('<h4 id="type-parameters-30" tabindex="-1"><a class="header-anchor" href="#type-parameters-30" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-31" tabindex="-1"><a class="header-anchor" href="#parameters-31" aria-hidden="true">#</a> Parameters</h4>',3),x9=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value")])],-1),v9=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),S9=e("td",{style:{"text-align":"left"}},[e("code",null,"originalEBMessage")],-1),T9={style:{"text-align":"left"}},k9=e("code",null,"Readonly",-1),C9=e("code",null,"contentEncoding",-1),P9=e("code",null,"string",-1),w9=e("code",null,"contentType",-1),M9=e("code",null,"string",-1),E9=e("code",null,"correlationId",-1),I9=e("code",null,"string",-1),F9=e("code",null,"eventName?",-1),D9=e("code",null,"string",-1),R9=e("code",null,"id",-1),B9=e("code",null,"string",-1),N9=e("code",null,"messageType",-1),L9=e("code",null,"Command",-1),O9=e("code",null,"otp?",-1),H9=e("code",null,"string",-1),A9=e("code",null,"payload",-1),j9=e("code",null,"parameter",-1),G9=e("code",null,"unknown",-1),q9=e("code",null,"payload",-1),V9=e("code",null,"unknown",-1),z9=e("code",null,"principalId?",-1),Z9=e("code",null,"string",-1),U9=e("code",null,"receiver",-1),Q9=e("code",null,"EBMessageAddress",-1),K9=e("code",null,"sender",-1),W9=e("code",null,"timestamp",-1),$9=e("code",null,"number",-1),Y9=e("code",null,"traceId?",-1),J9=e("code",null,"string",-1),X9=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),e0=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"T")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),t0=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),n0=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"'application/json'")])],-1),o0=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"'utf-8'")])],-1),s0=e("h4",{id:"returns-31",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-31","aria-hidden":"true"},"#"),t(" Returns")],-1),l0=e("code",null,"Readonly",-1),d0=e("code",null,"contentEncoding",-1),a0=e("code",null,"string",-1),i0=e("code",null,"contentType",-1),c0=e("code",null,"string",-1),r0=e("code",null,"correlationId",-1),u0=e("code",null,"string",-1),h0=e("code",null,"eventName?",-1),_0=e("code",null,"string",-1),p0=e("code",null,"id",-1),f0=e("code",null,"string",-1),g0=e("code",null,"messageType",-1),m0=e("code",null,"CommandSuccessResponse",-1),y0=e("code",null,"otp?",-1),b0=e("code",null,"string",-1),x0=e("code",null,"payload",-1),v0=e("code",null,"T",-1),S0=e("code",null,"principalId?",-1),T0=e("code",null,"string",-1),k0=e("code",null,"receiver",-1),C0=e("code",null,"sender",-1),P0=e("code",null,"timestamp",-1),w0=e("code",null,"number",-1),M0=e("code",null,"traceId?",-1),E0=e("code",null,"string",-1),I0=e("h4",{id:"defined-in-107",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-107","aria-hidden":"true"},"#"),t(" Defined in")],-1),F0={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/createSuccessResponse.impl.ts#L15",target:"_blank",rel:"noopener noreferrer"},D0=d('<hr><h3 id="deserializeotp" tabindex="-1"><a class="header-anchor" href="#deserializeotp" aria-hidden="true">#</a> deserializeOtp</h3><p>▸ <strong>deserializeOtp</strong>(<code>logger</code>, <code>otp?</code>): <code>undefined</code> | <code>Context</code></p><h4 id="parameters-32" tabindex="-1"><a class="header-anchor" href="#parameters-32" aria-hidden="true">#</a> Parameters</h4>',4),R0=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),B0=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),N0={style:{"text-align":"left"}},L0=e("code",null,"Logger",-1),O0=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"otp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),H0=e("h4",{id:"returns-32",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-32","aria-hidden":"true"},"#"),t(" Returns")],-1),A0=e("p",null,[e("code",null,"undefined"),t(" | "),e("code",null,"Context")],-1),j0=e("h4",{id:"defined-in-108",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-108","aria-hidden":"true"},"#"),t(" Defined in")],-1),G0={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/serializeOtp.impl.ts#L26",target:"_blank",rel:"noopener noreferrer"},q0=d('<hr><h3 id="getcleanedmessage" tabindex="-1"><a class="header-anchor" href="#getcleanedmessage" aria-hidden="true">#</a> getCleanedMessage</h3><p>▸ <strong>getCleanedMessage</strong>(<code>message</code>, <code>stripeOutContent?</code>): <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><p>Helper function for logging. Returns a message object, where fields which might contain sensitive data, are overwritten with string values. For command messages, parameter and payload are overwritten with string values.</p><p>For command success responses, the response field is overwritten.</p><p>Command error responses are not changed.</p><h4 id="parameters-33" tabindex="-1"><a class="header-anchor" href="#parameters-33" aria-hidden="true">#</a> Parameters</h4>',7),V0=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value")])],-1),z0=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),Z0={style:{"text-align":"left"}},U0=e("code",null,"Readonly",-1),Q0=e("code",null,"EBMessage",-1),K0=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),W0=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stripeOutContent")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},[e("code",null,"!isDevelop()")])],-1),$0=e("h4",{id:"returns-33",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-33","aria-hidden":"true"},"#"),t(" Returns")],-1),Y0=e("p",null,[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"unknown"),t(">")],-1),J0=e("h4",{id:"defined-in-109",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-109","aria-hidden":"true"},"#"),t(" Defined in")],-1),X0={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getCleanedMessage.impl.ts#L15",target:"_blank",rel:"noopener noreferrer"},e7=e("hr",null,null,-1),t7=e("h3",{id:"geterrormessageforcode",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#geterrormessageforcode","aria-hidden":"true"},"#"),t(" getErrorMessageForCode")],-1),n7=e("p",null,[t("▸ "),e("strong",null,"getErrorMessageForCode"),t("("),e("code",null,"code"),t("): "),e("code",null,"string")],-1),o7=e("h4",{id:"parameters-34",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-34","aria-hidden":"true"},"#"),t(" Parameters")],-1),s7=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),l7=e("td",{style:{"text-align":"left"}},[e("code",null,"code")],-1),d7={style:{"text-align":"left"}},a7=e("code",null,"StatusCode",-1),i7=e("h4",{id:"returns-34",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-34","aria-hidden":"true"},"#"),t(" Returns")],-1),c7=e("p",null,[e("code",null,"string")],-1),r7=e("h4",{id:"defined-in-110",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-110","aria-hidden":"true"},"#"),t(" Defined in")],-1),u7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getErrorMessageForCode.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},h7=d('<hr><h3 id="getnewcorrelationid" tabindex="-1"><a class="header-anchor" href="#getnewcorrelationid" aria-hidden="true">#</a> getNewCorrelationId</h3><p>▸ <strong>getNewCorrelationId</strong>(): <code>string</code></p><p>Create a new unique event bridge correlation id</p><h4 id="returns-35" tabindex="-1"><a class="header-anchor" href="#returns-35" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>EBMessageId</p><h4 id="defined-in-111" tabindex="-1"><a class="header-anchor" href="#defined-in-111" aria-hidden="true">#</a> Defined in</h4>',8),_7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getNewCorrelationId.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},p7=d('<hr><h3 id="getnewebmessageid" tabindex="-1"><a class="header-anchor" href="#getnewebmessageid" aria-hidden="true">#</a> getNewEBMessageId</h3><p>▸ <strong>getNewEBMessageId</strong>(): <code>string</code></p><p>Create a new unique event bridge message id</p><h4 id="returns-36" tabindex="-1"><a class="header-anchor" href="#returns-36" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>EBMessageId</p><h4 id="defined-in-112" tabindex="-1"><a class="header-anchor" href="#defined-in-112" aria-hidden="true">#</a> Defined in</h4>',8),f7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getNewEBMessageId.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},g7=d('<hr><h3 id="getnewinstanceid" tabindex="-1"><a class="header-anchor" href="#getnewinstanceid" aria-hidden="true">#</a> getNewInstanceId</h3><p>▸ <strong>getNewInstanceId</strong>(): <code>string</code></p><h4 id="returns-37" tabindex="-1"><a class="header-anchor" href="#returns-37" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-113" tabindex="-1"><a class="header-anchor" href="#defined-in-113" aria-hidden="true">#</a> Defined in</h4>',6),m7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getNewInstanceId.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},y7=d('<hr><h3 id="getnewtraceid" tabindex="-1"><a class="header-anchor" href="#getnewtraceid" aria-hidden="true">#</a> getNewTraceId</h3><p>▸ <strong>getNewTraceId</strong>(): <code>string</code></p><h4 id="returns-38" tabindex="-1"><a class="header-anchor" href="#returns-38" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-114" tabindex="-1"><a class="header-anchor" href="#defined-in-114" aria-hidden="true">#</a> Defined in</h4>',6),b7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getNewTraceId.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},x7=e("hr",null,null,-1),v7=e("h3",{id:"getsubscriptionqueuename",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getsubscriptionqueuename","aria-hidden":"true"},"#"),t(" getSubscriptionQueueName")],-1),S7=e("p",null,[t("▸ "),e("strong",null,"getSubscriptionQueueName"),t("("),e("code",null,"address"),t("): "),e("code",null,"string")],-1),T7=e("h4",{id:"parameters-35",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-35","aria-hidden":"true"},"#"),t(" Parameters")],-1),k7=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),C7=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),P7={style:{"text-align":"left"}},w7=e("code",null,"EBMessageAddress",-1),M7=e("h4",{id:"returns-39",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-39","aria-hidden":"true"},"#"),t(" Returns")],-1),E7=e("p",null,[e("code",null,"string")],-1),I7=e("h4",{id:"defined-in-115",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-115","aria-hidden":"true"},"#"),t(" Defined in")],-1),F7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getSubscriptionQueueName.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},D7=d('<hr><h3 id="getuniqueid" tabindex="-1"><a class="header-anchor" href="#getuniqueid" aria-hidden="true">#</a> getUniqueId</h3><p>▸ <strong>getUniqueId</strong>(): <code>string</code></p><h4 id="returns-40" tabindex="-1"><a class="header-anchor" href="#returns-40" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-116" tabindex="-1"><a class="header-anchor" href="#defined-in-116" aria-hidden="true">#</a> Defined in</h4>',6),R7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getUniqueId.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},B7=d(`<hr><h3 id="gracefulshutdown" tabindex="-1"><a class="header-anchor" href="#gracefulshutdown" aria-hidden="true">#</a> gracefulShutdown</h3><p>▸ <strong>gracefulShutdown</strong>(<code>logger</code>, <code>list</code>, <code>timeoutMs?</code>): <code>void</code></p><p>Helps to gracefully shut down your application. Provide in list objects. The objects contains a name and a promise function which should be executed.</p><p>The execution of array list functions is done sequential.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> shutDownList <span class="token operator">=</span> <span class="token punctuation">[</span>
 <span class="token punctuation">{</span>
   name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>serviceA<span class="token punctuation">.</span>info<span class="token punctuation">.</span>serviceName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> version </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>serviceA<span class="token punctuation">.</span>info<span class="token punctuation">.</span>serviceVersion<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
   fn<span class="token operator">:</span> serviceA<span class="token punctuation">.</span>destroy
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token punctuation">{</span>
   name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>serviceB<span class="token punctuation">.</span>info<span class="token punctuation">.</span>serviceName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> version </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>serviceB<span class="token punctuation">.</span>info<span class="token punctuation">.</span>serviceVersion<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
   fn<span class="token operator">:</span> serviceB<span class="token punctuation">.</span>destroy
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">{</span>
   name<span class="token operator">:</span> eventbridge<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
   fn<span class="token operator">:</span> eventbridge<span class="token punctuation">.</span>destroy
 <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
<span class="token function">gracefulShutdown</span><span class="token punctuation">(</span>logger<span class="token punctuation">,</span> shutDownList<span class="token punctuation">)</span>

<span class="token comment">// will shutdown ServiceA, then ServiceB, then the event bridge</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>Default</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token number">30000</span> milliseconds
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="parameters-36" tabindex="-1"><a class="header-anchor" href="#parameters-36" aria-hidden="true">#</a> Parameters</h4>`,10),N7=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value"),e("th",{style:{"text-align":"left"}},"Description")])],-1),L7=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),O7={style:{"text-align":"left"}},H7=e("code",null,"Logger",-1),A7=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),j7=e("td",{style:{"text-align":"left"}},"the logger object",-1),G7=e("td",{style:{"text-align":"left"}},[e("code",null,"list")],-1),q7={style:{"text-align":"left"}},V7=e("code",null,"ShutdownEntry",-1),z7=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),Z7=e("td",{style:{"text-align":"left"}},"a object containing name and function",-1),U7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"timeoutMs")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},[e("code",null,"30000")]),e("td",{style:{"text-align":"left"}},"in ms to shut")],-1),Q7=e("h4",{id:"returns-41",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-41","aria-hidden":"true"},"#"),t(" Returns")],-1),K7=e("p",null,[e("code",null,"void")],-1),W7=e("h4",{id:"defined-in-117",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-117","aria-hidden":"true"},"#"),t(" Defined in")],-1),$7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/gracefulShutdown.impl.ts#L36",target:"_blank",rel:"noopener noreferrer"},Y7=d('<hr><h3 id="isdevelop" tabindex="-1"><a class="header-anchor" href="#isdevelop" aria-hidden="true">#</a> isDevelop</h3><p>▸ <strong>isDevelop</strong>(): <code>boolean</code></p><p>returns true if NODE_ENV is set to value starting with &quot;develop&quot;</p><h4 id="returns-42" tabindex="-1"><a class="header-anchor" href="#returns-42" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-118" tabindex="-1"><a class="header-anchor" href="#defined-in-118" aria-hidden="true">#</a> Defined in</h4>',7),J7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/isDevelop.impl.ts#L6",target:"_blank",rel:"noopener noreferrer"},X7=d('<hr><h3 id="serializeotp" tabindex="-1"><a class="header-anchor" href="#serializeotp" aria-hidden="true">#</a> serializeOtp</h3><p>▸ <strong>serializeOtp</strong>(): <code>string</code></p><h4 id="returns-43" tabindex="-1"><a class="header-anchor" href="#returns-43" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-119" tabindex="-1"><a class="header-anchor" href="#defined-in-119" aria-hidden="true">#</a> Defined in</h4>',6),e8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/serializeOtp.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},t8=e("h2",{id:"service-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#service-1","aria-hidden":"true"},"#"),t(" Service")],-1),n8=e("p",null,[t("• "),e("strong",null,"ServiceEventsNames"),t(": "),e("code",null,"Object")],-1),o8=e("p",null,[t("Events which can be emitted by a service. Internal events are prefixed with "),e("code",null,"service-")],-1),s8=e("h4",{id:"defined-in-120",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-120","aria-hidden":"true"},"#"),t(" Defined in")],-1),l8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceEvents.ts#L11",target:"_blank",rel:"noopener noreferrer"},d8=d(`<p>• <strong>Service</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for all services. This class provides base functions to work with the event bridge, logging and so on</p><p>Every service should extend this class and should not directly access the eventbridge or other service</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">MyService</span> <span class="token keyword">extends</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span>

  <span class="token keyword">async</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// your custom implementation</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// your custom implementation</span>
   <span class="token keyword">await</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="type-parameters-31" tabindex="-1"><a class="header-anchor" href="#type-parameters-31" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;"><code>unknown</code> | <code>undefined</code></td></tr></tbody></table><h4 id="defined-in-121" tabindex="-1"><a class="header-anchor" href="#defined-in-121" aria-hidden="true">#</a> Defined in</h4>`,7),a8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/Service/Service.impl.ts#L74",target:"_blank",rel:"noopener noreferrer"},i8=d('<p>• <strong>ServiceBuilder</strong>&lt;<code>ConfigType</code>, <code>ConfigInputType</code>, <code>ServiceClassType</code>&gt;: <code>Object</code></p><p>This class is used to build a service. The <code>ServiceBuilder</code> class is used to build a service. It has a few methods that are used to add command definitions and subscription definitions to the service. It also has a method that is used to create an instance of the service class.</p><h4 id="type-parameters-32" tabindex="-1"><a class="header-anchor" href="#type-parameters-32" aria-hidden="true">#</a> Type parameters</h4>',3),c8=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),r8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"ConfigType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"unknown"),t(">")])],-1),u8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"ConfigInputType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"unknown"),t(">")])],-1),h8=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),_8={style:{"text-align":"left"}},p8=e("code",null,"ServiceClass",-1),f8=e("code",null,"Service",-1),g8=e("code",null,"ConfigType",-1),m8=e("h4",{id:"defined-in-122",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-122","aria-hidden":"true"},"#"),t(" Defined in")],-1),y8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L38",target:"_blank",rel:"noopener noreferrer"},b8=d('<p>• <strong>ServiceClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>The ServiceClass interface</p><h4 id="type-parameters-33" tabindex="-1"><a class="header-anchor" href="#type-parameters-33" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;"><code>unknown</code> | <code>undefined</code></td></tr></tbody></table><h4 id="defined-in-123" tabindex="-1"><a class="header-anchor" href="#defined-in-123" aria-hidden="true">#</a> Defined in</h4>',5),x8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L11",target:"_blank",rel:"noopener noreferrer"},v8=d('<h3 id="serviceconstructorinput" tabindex="-1"><a class="header-anchor" href="#serviceconstructorinput" aria-hidden="true">#</a> ServiceConstructorInput</h3><p>Ƭ <strong>ServiceConstructorInput</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><h4 id="type-parameters-34" tabindex="-1"><a class="header-anchor" href="#type-parameters-34" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="type-declaration-32" tabindex="-1"><a class="header-anchor" href="#type-declaration-32" aria-hidden="true">#</a> Type declaration</h4>',5),S8=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),T8=e("td",{style:{"text-align":"left"}},[e("code",null,"commandDefinitionList")],-1),k8={style:{"text-align":"left"}},C8=e("code",null,"CommandDefinitionList",-1),P8=e("code",null,"any",-1),w8=e("td",{style:{"text-align":"left"}},"The list of command definitions for this service",-1),M8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ConfigType")]),e("td",{style:{"text-align":"left"}},"The service specific config")],-1),E8=e("td",{style:{"text-align":"left"}},[e("code",null,"configStore?")],-1),I8={style:{"text-align":"left"}},F8=e("code",null,"ConfigStore",-1),D8=e("td",{style:{"text-align":"left"}},"The config store instance",-1),R8=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridge")],-1),B8={style:{"text-align":"left"}},N8=e("code",null,"EventBridge",-1),L8=e("td",{style:{"text-align":"left"}},"The eventBridge instance",-1),O8=e("td",{style:{"text-align":"left"}},[e("code",null,"info")],-1),H8={style:{"text-align":"left"}},A8=e("code",null,"ServiceInfoType",-1),j8=e("td",{style:{"text-align":"left"}},"The service info with name, version and description of service",-1),G8=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),q8={style:{"text-align":"left"}},V8=e("code",null,"Logger",-1),z8=e("td",{style:{"text-align":"left"}},"A logger instance",-1),Z8=e("td",{style:{"text-align":"left"}},[e("code",null,"secretStore?")],-1),U8={style:{"text-align":"left"}},Q8=e("code",null,"SecretStore",-1),K8=e("td",{style:{"text-align":"left"}},"The secret store instance",-1),W8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"spanProcessor?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SpanProcessor")]),e("td",{style:{"text-align":"left"}},"The opentelemetry span processor instance")],-1),$8=e("td",{style:{"text-align":"left"}},[e("code",null,"stateStore?")],-1),Y8={style:{"text-align":"left"}},J8=e("code",null,"StateStore",-1),X8=e("td",{style:{"text-align":"left"}},"the state store instance",-1),eC=e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionDefinitionList")],-1),tC={style:{"text-align":"left"}},nC=e("code",null,"SubscriptionDefinitionList",-1),oC=e("code",null,"any",-1),sC=e("td",{style:{"text-align":"left"}},"The list of subscription definitions for this service",-1),lC=e("h4",{id:"defined-in-124",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-124","aria-hidden":"true"},"#"),t(" Defined in")],-1),dC={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceConstructorInput.ts#L15",target:"_blank",rel:"noopener noreferrer"},aC=d('<hr><h3 id="serviceeventsinternal" tabindex="-1"><a class="header-anchor" href="#serviceeventsinternal" aria-hidden="true">#</a> ServiceEventsInternal</h3><p>Ƭ <strong>ServiceEventsInternal</strong>: <code>Object</code></p><p>Events which can be emitted by a service. Internal events are prefixed with <code>service-</code>.</p><p>Response messages, which have an event name assigned, are prefixed with <code>custom-</code> If you like to use your own events, the event name must be prefixed with <code>misc-</code>.</p><h4 id="type-declaration-33" tabindex="-1"><a class="header-anchor" href="#type-declaration-33" aria-hidden="true">#</a> Type declaration</h4>',6),iC=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),cC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-available")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service is fully initialized and ready Should be emitted by custom service class. It is not emitted by default")],-1),rC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-drain")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service is going to be stopped")],-1),uC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error")],-1),hC={style:{"text-align":"left"}},_C=e("code",null,"commandName",-1),pC=e("code",null,"string",-1),fC=e("code",null,"error",-1),gC=e("code",null,"HandledError",-1),mC=e("code",null,"traceId",-1),yC=e("code",null,"TraceId",-1),bC=e("td",{style:{"text-align":"left"}},"emitted when a command throws a HandledError",-1),xC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error.commandName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),vC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error.error")],-1),SC={style:{"text-align":"left"}},TC=e("code",null,"HandledError",-1),kC=e("td",{style:{"text-align":"left"}},"-",-1),CC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error.traceId")],-1),PC={style:{"text-align":"left"}},wC=e("code",null,"TraceId",-1),MC=e("td",{style:{"text-align":"left"}},"-",-1),EC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error")],-1),IC={style:{"text-align":"left"}},FC=e("code",null,"error",-1),DC=e("code",null,"HandledError",-1),RC=e("code",null,"subscriptionName",-1),BC=e("code",null,"string",-1),NC=e("code",null,"traceId",-1),LC=e("code",null,"TraceId",-1),OC=e("td",{style:{"text-align":"left"}},"emitted when a subscription throws a HandledError",-1),HC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error.error")],-1),AC={style:{"text-align":"left"}},jC=e("code",null,"HandledError",-1),GC=e("td",{style:{"text-align":"left"}},"-",-1),qC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error.subscriptionName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),VC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error.traceId")],-1),zC={style:{"text-align":"left"}},ZC=e("code",null,"TraceId",-1),UC=e("td",{style:{"text-align":"left"}},"-",-1),QC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-not-available")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined"),t(" | "),e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"emitted when the service is not available (for example database connection could not be established)")],-1),KC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-started")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service is started, but not fully initialized and not ready yet")],-1),WC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-stopped")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service has been stopped")],-1),$C=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error")],-1),YC={style:{"text-align":"left"}},JC=e("code",null,"commandName",-1),XC=e("code",null,"string",-1),eP=e("code",null,"error",-1),tP=e("code",null,"unknown",-1),nP=e("code",null,"traceId",-1),oP=e("code",null,"TraceId",-1),sP=e("td",{style:{"text-align":"left"}},"emitted when a command throws an error other than a HandledError",-1),lP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error.commandName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),dP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),aP=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error.traceId")],-1),iP={style:{"text-align":"left"}},cP=e("code",null,"TraceId",-1),rP=e("td",{style:{"text-align":"left"}},"-",-1),uP=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error")],-1),hP={style:{"text-align":"left"}},_P=e("code",null,"error",-1),pP=e("code",null,"unknown",-1),fP=e("code",null,"subscriptionName",-1),gP=e("code",null,"string",-1),mP=e("code",null,"traceId",-1),yP=e("code",null,"TraceId",-1),bP=e("td",{style:{"text-align":"left"}},"emitted when a subscription throws an error other than a HandledError",-1),xP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),vP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error.subscriptionName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),SP=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error.traceId")],-1),TP={style:{"text-align":"left"}},kP=e("code",null,"TraceId",-1),CP=e("td",{style:{"text-align":"left"}},"-",-1),PP=e("h4",{id:"defined-in-125",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-125","aria-hidden":"true"},"#"),t(" Defined in")],-1),wP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceEvents.ts#L54",target:"_blank",rel:"noopener noreferrer"},MP=d('<h2 id="store-1" tabindex="-1"><a class="header-anchor" href="#store-1" aria-hidden="true">#</a> Store</h2><p>• <strong>ConfigStoreBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for config store adapters</p><h4 id="type-parameters-35" tabindex="-1"><a class="header-anchor" href="#type-parameters-35" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; = {}</td></tr></tbody></table><h4 id="defined-in-126" tabindex="-1"><a class="header-anchor" href="#defined-in-126" aria-hidden="true">#</a> Defined in</h4>',6),EP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},IP=d(`<p>• <strong>DefaultConfigStore</strong>: <code>Object</code></p><p>The DefaultConfigStore is a placeholder which offers all needed methods. Getters and setters will throw a UnhandledError with status <code>Unauthorized</code>, when a disabled operation is called.</p><p>For development and testing purpose, you can initiate the store with values.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultConfigStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
   enableGet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
   enableRemove<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
   enableSet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
   config<span class="token operator">:</span> <span class="token punctuation">{</span>
     initialValue<span class="token operator">:</span> <span class="token string">&#39;initial&#39;</span><span class="token punctuation">,</span>
   <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token string">&#39;initialValue&#39;</span><span class="token punctuation">)</span> <span class="token comment">// outputs: { initialValue: &#39;initial&#39; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-127" tabindex="-1"><a class="header-anchor" href="#defined-in-127" aria-hidden="true">#</a> Defined in</h4>`,6),FP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultConfigStore/DefaultConfigStore.impl.ts#L25",target:"_blank",rel:"noopener noreferrer"},DP=d(`<p>• <strong>DefaultSecretStore</strong>: <code>Object</code></p><p>The DefaultSecretStore is a placeholder which offers all needed methods. Getters and setters will throw a UnhandledError with status <code>Unauthorized</code>, when a disabled operation is called.</p><p>For development and testing purpose, you can initiate the store with values.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultSecretStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 config<span class="token operator">:</span> <span class="token punctuation">{</span>
   secretOne<span class="token operator">:</span> <span class="token string">&#39;my_secret_one_value&#39;</span><span class="token punctuation">,</span>
   secretTwo<span class="token operator">:</span> <span class="token string">&#39;my_secret_two_value&#39;</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getSecret</span><span class="token punctuation">(</span><span class="token string">&#39;secretOne&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;secretTwo) // outputs: { secretOne: my_secret_one_value, secretTwo: &#39;</span>my_secret_two_value&#39; <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Per default, setting/changing and removal of values are disabled. You can enable it on instance creation:</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultSecretStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 enableGet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
 enableRemove<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
 enableSet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-128" tabindex="-1"><a class="header-anchor" href="#defined-in-128" aria-hidden="true">#</a> Defined in</h4>`,9),RP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultSecretStore/DefaultSecretStore.impl.ts#L33",target:"_blank",rel:"noopener noreferrer"},BP=e("p",null,[t("• "),e("strong",null,"DefaultStateStore"),t(": "),e("code",null,"Object")],-1),NP=e("p",null,[t("The DefaultStateStore is a placeholder which offers all needed methods. Getters and setters will throw a UnhandledError with status "),e("code",null,"Not implemented")],-1),LP=e("h4",{id:"defined-in-129",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-129","aria-hidden":"true"},"#"),t(" Defined in")],-1),OP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultStateStore/DefaultStateStore.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},HP=d('<p>• <strong>SecretStoreBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for secret store adapters</p><h4 id="type-parameters-36" tabindex="-1"><a class="header-anchor" href="#type-parameters-36" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; = {}</td></tr></tbody></table><h4 id="defined-in-130" tabindex="-1"><a class="header-anchor" href="#defined-in-130" aria-hidden="true">#</a> Defined in</h4>',5),AP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/SecretStoreBaseClass.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},jP=d('<p>• <strong>StateStoreBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for config store implementations</p><h4 id="type-parameters-37" tabindex="-1"><a class="header-anchor" href="#type-parameters-37" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; = {}</td></tr></tbody></table><h4 id="defined-in-131" tabindex="-1"><a class="header-anchor" href="#defined-in-131" aria-hidden="true">#</a> Defined in</h4>',5),GP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/StateStoreBaseClass.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},qP=e("p",null,[t("• "),e("strong",null,"ConfigStore"),t(": "),e("code",null,"Object")],-1),VP=e("p",null,"Interface definition for config store adapters",-1),zP=e("h4",{id:"defined-in-132",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-132","aria-hidden":"true"},"#"),t(" Defined in")],-1),ZP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/types/ConfigStore.ts#L10",target:"_blank",rel:"noopener noreferrer"},UP=e("p",null,[t("• "),e("strong",null,"SecretStore"),t(": "),e("code",null,"Object")],-1),QP=e("p",null,"Interface definition for a secret store implementation",-1),KP=e("h4",{id:"defined-in-133",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-133","aria-hidden":"true"},"#"),t(" Defined in")],-1),WP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/types/SecretStore.ts#L9",target:"_blank",rel:"noopener noreferrer"},$P=e("p",null,[t("• "),e("strong",null,"StateStore"),t(": "),e("code",null,"Object")],-1),YP=e("p",null,"Interface definition for state store implementations",-1),JP=e("h4",{id:"defined-in-134",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-134","aria-hidden":"true"},"#"),t(" Defined in")],-1),XP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/types/StateStore.ts#L10",target:"_blank",rel:"noopener noreferrer"},ew=d('<h3 id="configdeletefunction" tabindex="-1"><a class="header-anchor" href="#configdeletefunction" aria-hidden="true">#</a> ConfigDeleteFunction</h3><p>Ƭ <strong>ConfigDeleteFunction</strong>: (<code>configName</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-34" tabindex="-1"><a class="header-anchor" href="#type-declaration-34" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>configName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>delete a config value from the config store</p><h5 id="parameters-37" tabindex="-1"><a class="header-anchor" href="#parameters-37" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>configName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-44" tabindex="-1"><a class="header-anchor" href="#returns-44" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-135" tabindex="-1"><a class="header-anchor" href="#defined-in-135" aria-hidden="true">#</a> Defined in</h4>',10),tw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/types/ConfigDeleteFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},nw=d('<hr><h3 id="configgetterfunction" tabindex="-1"><a class="header-anchor" href="#configgetterfunction" aria-hidden="true">#</a> ConfigGetterFunction</h3><p>Ƭ <strong>ConfigGetterFunction</strong>: (...<code>configNames</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="type-declaration-35" tabindex="-1"><a class="header-anchor" href="#type-declaration-35" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>...configNames</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><p>get a config value from the config store</p><h5 id="parameters-38" tabindex="-1"><a class="header-anchor" href="#parameters-38" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...configNames</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h5 id="returns-45" tabindex="-1"><a class="header-anchor" href="#returns-45" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="defined-in-136" tabindex="-1"><a class="header-anchor" href="#defined-in-136" aria-hidden="true">#</a> Defined in</h4>',11),ow={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/types/ConfigGetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},sw=d('<hr><h3 id="configsetterfunction" tabindex="-1"><a class="header-anchor" href="#configsetterfunction" aria-hidden="true">#</a> ConfigSetterFunction</h3><p>Ƭ <strong>ConfigSetterFunction</strong>: (<code>secretName</code>: <code>string</code>, <code>secretValue</code>: <code>unknown</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-36" tabindex="-1"><a class="header-anchor" href="#type-declaration-36" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>set a config value in the config store</p><h5 id="parameters-39" tabindex="-1"><a class="header-anchor" href="#parameters-39" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>secretValue</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="returns-46" tabindex="-1"><a class="header-anchor" href="#returns-46" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-137" tabindex="-1"><a class="header-anchor" href="#defined-in-137" aria-hidden="true">#</a> Defined in</h4>',11),lw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/types/ConfigSetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},dw=d('<hr><h3 id="secretdeletefunction" tabindex="-1"><a class="header-anchor" href="#secretdeletefunction" aria-hidden="true">#</a> SecretDeleteFunction</h3><p>Ƭ <strong>SecretDeleteFunction</strong>: (<code>secretName</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-37" tabindex="-1"><a class="header-anchor" href="#type-declaration-37" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>delete a secret from the secret store</p><h5 id="parameters-40" tabindex="-1"><a class="header-anchor" href="#parameters-40" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-47" tabindex="-1"><a class="header-anchor" href="#returns-47" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-138" tabindex="-1"><a class="header-anchor" href="#defined-in-138" aria-hidden="true">#</a> Defined in</h4>',11),aw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/types/SecretDeleteFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},iw=d('<hr><h3 id="secretgetterfunction" tabindex="-1"><a class="header-anchor" href="#secretgetterfunction" aria-hidden="true">#</a> SecretGetterFunction</h3><p>Ƭ <strong>SecretGetterFunction</strong>: (...<code>secretName</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;&gt;</p><h4 id="type-declaration-38" tabindex="-1"><a class="header-anchor" href="#type-declaration-38" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>...secretName</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;&gt;</p><p>get a secret from the secret store</p><h5 id="parameters-41" tabindex="-1"><a class="header-anchor" href="#parameters-41" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...secretName</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h5 id="returns-48" tabindex="-1"><a class="header-anchor" href="#returns-48" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;&gt;</p><h4 id="defined-in-139" tabindex="-1"><a class="header-anchor" href="#defined-in-139" aria-hidden="true">#</a> Defined in</h4>',11),cw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/types/SecretGetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},rw=d('<hr><h3 id="secretsetterfunction" tabindex="-1"><a class="header-anchor" href="#secretsetterfunction" aria-hidden="true">#</a> SecretSetterFunction</h3><p>Ƭ <strong>SecretSetterFunction</strong>: (<code>secretName</code>: <code>string</code>, <code>secretValue</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-39" tabindex="-1"><a class="header-anchor" href="#type-declaration-39" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>set a secret in the secret store</p><h5 id="parameters-42" tabindex="-1"><a class="header-anchor" href="#parameters-42" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>secretValue</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-49" tabindex="-1"><a class="header-anchor" href="#returns-49" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-140" tabindex="-1"><a class="header-anchor" href="#defined-in-140" aria-hidden="true">#</a> Defined in</h4>',11),uw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/types/SecretSetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},hw=d('<hr><h3 id="statedeletefunction" tabindex="-1"><a class="header-anchor" href="#statedeletefunction" aria-hidden="true">#</a> StateDeleteFunction</h3><p>Ƭ <strong>StateDeleteFunction</strong>: (<code>stateName</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-40" tabindex="-1"><a class="header-anchor" href="#type-declaration-40" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>stateName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>delete a state value from the state store</p><h5 id="parameters-43" tabindex="-1"><a class="header-anchor" href="#parameters-43" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>stateName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-50" tabindex="-1"><a class="header-anchor" href="#returns-50" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-141" tabindex="-1"><a class="header-anchor" href="#defined-in-141" aria-hidden="true">#</a> Defined in</h4>',11),_w={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/types/StateDeleteFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},pw=d('<hr><h3 id="stategetterfunction" tabindex="-1"><a class="header-anchor" href="#stategetterfunction" aria-hidden="true">#</a> StateGetterFunction</h3><p>Ƭ <strong>StateGetterFunction</strong>: (...<code>stateNames</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="type-declaration-41" tabindex="-1"><a class="header-anchor" href="#type-declaration-41" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>...stateNames</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><p>get a state value from the state store</p><h5 id="parameters-44" tabindex="-1"><a class="header-anchor" href="#parameters-44" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...stateNames</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h5 id="returns-51" tabindex="-1"><a class="header-anchor" href="#returns-51" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="defined-in-142" tabindex="-1"><a class="header-anchor" href="#defined-in-142" aria-hidden="true">#</a> Defined in</h4>',11),fw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/types/StateGetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},gw=d('<hr><h3 id="statesetterfunction" tabindex="-1"><a class="header-anchor" href="#statesetterfunction" aria-hidden="true">#</a> StateSetterFunction</h3><p>Ƭ <strong>StateSetterFunction</strong>: (<code>secretName</code>: <code>string</code>, <code>secretValue</code>: <code>unknown</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-42" tabindex="-1"><a class="header-anchor" href="#type-declaration-42" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>set a state value in the state store</p><h5 id="parameters-45" tabindex="-1"><a class="header-anchor" href="#parameters-45" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>secretValue</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="returns-52" tabindex="-1"><a class="header-anchor" href="#returns-52" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-143" tabindex="-1"><a class="header-anchor" href="#defined-in-143" aria-hidden="true">#</a> Defined in</h4>',11),mw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/types/StateSetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},yw=d('<h2 id="subscription-1" tabindex="-1"><a class="header-anchor" href="#subscription-1" aria-hidden="true">#</a> Subscription</h2><p>• <strong>SubscriptionDefinitionBuilder</strong>&lt;<code>ServiceClassType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>Subscription definition builder is a helper to create and define a subscriptions for a service. It helps to set all needed filters.</p><p>A working schema definition needs at least a subscription name, a short description and the subscription implementation.</p><h4 id="type-parameters-38" tabindex="-1"><a class="header-anchor" href="#type-parameters-38" aria-hidden="true">#</a> Type parameters</h4>',5),bw=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),xw=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),vw={style:{"text-align":"left"}},Sw=e("code",null,"ServiceClass",-1),Tw=e("code",null,"ServiceClass",-1),kw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Cw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),Pw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),ww=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),Mw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),Ew=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType"),t(" | "),e("code",null,"void"),t(" | "),e("code",null,"undefined")])],-1),Iw=e("h4",{id:"defined-in-144",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-144","aria-hidden":"true"},"#"),t(" Defined in")],-1),Fw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L30",target:"_blank",rel:"noopener noreferrer"},Dw=d('<h3 id="subscription-2" tabindex="-1"><a class="header-anchor" href="#subscription-2" aria-hidden="true">#</a> Subscription</h3><p>Ƭ <strong>Subscription</strong>&lt;<code>PayloadType</code>, <code>ParameterType</code>&gt;: <code>Object</code></p><p>A subscription managed by the event bridge</p><h4 id="type-parameters-39" tabindex="-1"><a class="header-anchor" href="#type-parameters-39" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-43" tabindex="-1"><a class="header-anchor" href="#type-declaration-43" aria-hidden="true">#</a> Type declaration</h4>',6),Rw=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Bw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"emitEventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the event name to be used for custom message if the subscriptions returns a result")],-1),Nw=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),Lw={style:{"text-align":"left"}},Ow=e("code",null,"DefinitionEventBridgeConfig",-1),Hw=e("td",{style:{"text-align":"left"}},"config information for event bridge",-1),Aw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the event name to subscribe for")],-1),jw=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType?")],-1),Gw={style:{"text-align":"left"}},qw=e("code",null,"EBMessageType",-1),Vw=e("td",{style:{"text-align":"left"}},"the message type",-1),zw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload?")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"parameter?"),t(": "),e("code",null,"ParameterType"),t(" ; "),e("code",null,"payload?"),t(": "),e("code",null,"PayloadType"),t(" }")]),e("td",{style:{"text-align":"left"}},"the message payload")],-1),Zw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload.parameter?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ParameterType")]),e("td",{style:{"text-align":"left"}},"-")],-1),Uw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload.payload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")]),e("td",{style:{"text-align":"left"}},"-")],-1),Qw=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),Kw={style:{"text-align":"left"}},Ww=e("code",null,"PrincipalId",-1),$w=e("td",{style:{"text-align":"left"}},"the principal id",-1),Yw=e("td",{style:{"text-align":"left"}},[e("code",null,"receiver?")],-1),Jw={style:{"text-align":"left"}},Xw=e("code",null,"instanceId?",-1),eM=e("code",null,"InstanceId",-1),tM=e("code",null,"serviceName?",-1),nM=e("code",null,"string",-1),oM=e("code",null,"serviceTarget?",-1),sM=e("code",null,"string",-1),lM=e("code",null,"serviceVersion?",-1),dM=e("code",null,"string",-1),aM=e("td",{style:{"text-align":"left"}},"the consumer address of the message",-1),iM=e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.instanceId?")],-1),cM={style:{"text-align":"left"}},rM=e("code",null,"InstanceId",-1),uM=e("td",{style:{"text-align":"left"}},"-",-1),hM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),_M=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),pM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),fM=e("td",{style:{"text-align":"left"}},[e("code",null,"sender?")],-1),gM={style:{"text-align":"left"}},mM=e("code",null,"instanceId?",-1),yM=e("code",null,"InstanceId",-1),bM=e("code",null,"serviceName?",-1),xM=e("code",null,"string",-1),vM=e("code",null,"serviceTarget?",-1),SM=e("code",null,"string",-1),TM=e("code",null,"serviceVersion?",-1),kM=e("code",null,"string",-1),CM=e("td",{style:{"text-align":"left"}},"the producer address of the message",-1),PM=e("td",{style:{"text-align":"left"}},[e("code",null,"sender.instanceId?")],-1),wM={style:{"text-align":"left"}},MM=e("code",null,"InstanceId",-1),EM=e("td",{style:{"text-align":"left"}},"-",-1),IM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),FM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),DM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),RM=e("td",{style:{"text-align":"left"}},[e("code",null,"subscriber")],-1),BM={style:{"text-align":"left"}},NM=e("code",null,"EBMessageAddress",-1),LM=e("td",{style:{"text-align":"left"}},"the address of the subscription (service name, version and subscription name)",-1),OM=e("h4",{id:"defined-in-145",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-145","aria-hidden":"true"},"#"),t(" Defined in")],-1),HM={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/Subscription.ts#L12",target:"_blank",rel:"noopener noreferrer"},AM=e("hr",null,null,-1),jM=e("h3",{id:"subscriptionafterguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionafterguardhook","aria-hidden":"true"},"#"),t(" SubscriptionAfterGuardHook")],-1),GM=e("strong",null,"SubscriptionAfterGuardHook",-1),qM=e("code",null,"ServiceClassType",-1),VM=e("code",null,"FunctionResultType",-1),zM=e("code",null,"FunctionPayloadOutputType",-1),ZM=e("code",null,"FunctionParameterType",-1),UM=e("code",null,"this",-1),QM=e("code",null,"ServiceClassType",-1),KM=e("code",null,"context",-1),WM=e("code",null,"SubscriptionFunctionContext",-1),$M=e("code",null,"result",-1),YM=e("code",null,"Readonly",-1),JM=e("code",null,"FunctionResultType",-1),XM=e("code",null,"payload",-1),eE=e("code",null,"Readonly",-1),tE=e("code",null,"FunctionPayloadOutputType",-1),nE=e("code",null,"parameter",-1),oE=e("code",null,"Readonly",-1),sE=e("code",null,"FunctionParameterType",-1),lE=e("code",null,"Promise",-1),dE=e("code",null,"void",-1),aE=e("h4",{id:"type-parameters-40",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-40","aria-hidden":"true"},"#"),t(" Type parameters")],-1),iE=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),cE=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),rE={style:{"text-align":"left"}},uE=e("code",null,"ServiceClass",-1),hE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),_E=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadOutputType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),pE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParameterType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),fE=d('<h4 id="type-declaration-44" tabindex="-1"><a class="header-anchor" href="#type-declaration-44" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>result</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Definition of after guard hook functions. This guard is called after function successfully returns and after output validation.</p><h5 id="parameters-46" tabindex="-1"><a class="header-anchor" href="#parameters-46" aria-hidden="true">#</a> Parameters</h5>',4),gE=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),mE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),yE=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),bE={style:{"text-align":"left"}},xE=e("code",null,"SubscriptionFunctionContext",-1),vE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"result")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionResultType"),t(">")])],-1),SE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadOutputType"),t(">")])],-1),TE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParameterType"),t(">")])],-1),kE=e("h5",{id:"returns-53",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-53","aria-hidden":"true"},"#"),t(" Returns")],-1),CE=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),PE=e("h4",{id:"defined-in-146",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-146","aria-hidden":"true"},"#"),t(" Defined in")],-1),wE={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionAfterGuardHook.ts#L10",target:"_blank",rel:"noopener noreferrer"},ME=e("hr",null,null,-1),EE=e("h3",{id:"subscriptionbeforeguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionbeforeguardhook","aria-hidden":"true"},"#"),t(" SubscriptionBeforeGuardHook")],-1),IE=e("strong",null,"SubscriptionBeforeGuardHook",-1),FE=e("code",null,"ServiceClassType",-1),DE=e("code",null,"FunctionPayloadType",-1),RE=e("code",null,"FunctionParamsType",-1),BE=e("code",null,"this",-1),NE=e("code",null,"ServiceClassType",-1),LE=e("code",null,"context",-1),OE=e("code",null,"SubscriptionFunctionContext",-1),HE=e("code",null,"payload",-1),AE=e("code",null,"Readonly",-1),jE=e("code",null,"FunctionPayloadType",-1),GE=e("code",null,"parameter",-1),qE=e("code",null,"Readonly",-1),VE=e("code",null,"FunctionParamsType",-1),zE=e("code",null,"Promise",-1),ZE=e("code",null,"void",-1),UE=e("h4",{id:"type-parameters-41",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-41","aria-hidden":"true"},"#"),t(" Type parameters")],-1),QE=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),KE=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),WE={style:{"text-align":"left"}},$E=e("code",null,"ServiceClass",-1),YE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),JE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),XE=d('<h4 id="type-declaration-45" tabindex="-1"><a class="header-anchor" href="#type-declaration-45" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Guard is called after command function input validation and before executing the command function. The guard is usefull to separate for example auth checks from business logic. It should throw HandledError or return void.</p><h5 id="parameters-47" tabindex="-1"><a class="header-anchor" href="#parameters-47" aria-hidden="true">#</a> Parameters</h5>',4),eI=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),tI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),nI=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),oI={style:{"text-align":"left"}},sI=e("code",null,"SubscriptionFunctionContext",-1),lI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),dI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),aI=e("h5",{id:"returns-54",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-54","aria-hidden":"true"},"#"),t(" Returns")],-1),iI=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),cI=e("h4",{id:"defined-in-147",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-147","aria-hidden":"true"},"#"),t(" Defined in")],-1),rI={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionBeforeGuardHook.ts#L11",target:"_blank",rel:"noopener noreferrer"},uI=d('<hr><h3 id="subscriptiondefinition" tabindex="-1"><a class="header-anchor" href="#subscriptiondefinition" aria-hidden="true">#</a> SubscriptionDefinition</h3><p>Ƭ <strong>SubscriptionDefinition</strong>&lt;<code>ServiceClassType</code>, <code>MetadataType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>The definition for a subscription provided by some service.</p><h4 id="type-parameters-42" tabindex="-1"><a class="header-anchor" href="#type-parameters-42" aria-hidden="true">#</a> Type parameters</h4>',5),hI=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),_I=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),pI={style:{"text-align":"left"}},fI=e("code",null,"ServiceClass",-1),gI=e("code",null,"ServiceClass",-1),mI=e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")],-1),yI={style:{"text-align":"left"}},bI=e("code",null,"SubscriptionDefinitionMetadataBase",-1),xI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),vI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),SI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),TI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),kI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),CI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),PI=e("h4",{id:"type-declaration-46",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-46","aria-hidden":"true"},"#"),t(" Type declaration")],-1),wI=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),MI=e("td",{style:{"text-align":"left"}},[e("code",null,"call")],-1),EI={style:{"text-align":"left"}},II=e("code",null,"SubscriptionFunction",-1),FI=e("code",null,"ServiceClassType",-1),DI=e("code",null,"MessagePayloadType",-1),RI=e("code",null,"MessageParamsType",-1),BI=e("code",null,"FunctionPayloadType",-1),NI=e("code",null,"FunctionParamsType",-1),LI=e("code",null,"FunctionResultType",-1),OI=e("td",{style:{"text-align":"left"}},"the subscription function",-1),HI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"emitEventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name to be used for custom message if the subscription functions returns value")],-1),AI=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),jI={style:{"text-align":"left"}},GI=e("code",null,"DefinitionEventBridgeConfig",-1),qI=e("td",{style:{"text-align":"left"}},"config information for event bridge",-1),VI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"filter forevent name")],-1),zI=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks")],-1),ZI={style:{"text-align":"left"}},UI=e("code",null,"afterGuard?",-1),QI=e("code",null,"Record",-1),KI=e("code",null,"string",-1),WI=e("code",null,"SubscriptionAfterGuardHook",-1),$I=e("code",null,"ServiceClassType",-1),YI=e("code",null,"FunctionResultType",-1),JI=e("code",null,"FunctionPayloadType",-1),XI=e("code",null,"FunctionParamsType",-1),eF=e("code",null,"beforeGuard?",-1),tF=e("code",null,"Record",-1),nF=e("code",null,"string",-1),oF=e("code",null,"SubscriptionBeforeGuardHook",-1),sF=e("code",null,"ServiceClassType",-1),lF=e("code",null,"FunctionPayloadType",-1),dF=e("code",null,"FunctionParamsType",-1),aF=e("code",null,"transformInput?",-1),iF=e("code",null,"transformFunction",-1),cF=e("code",null,"SubscriptionTransformInputHook",-1),rF=e("code",null,"ServiceClassType",-1),uF=e("code",null,"MessagePayloadType",-1),hF=e("code",null,"MessageParamsType",-1),_F=e("code",null,"transformInputSchema",-1),pF=e("code",null,"z.ZodType",-1),fF=e("code",null,"transformParameterSchema",-1),gF=e("code",null,"z.ZodType",-1),mF=e("code",null,"transformOutput?",-1),yF=e("code",null,"transformFunction",-1),bF=e("code",null,"SubscriptionTransformOutputHook",-1),xF=e("code",null,"ServiceClassType",-1),vF=e("code",null,"FunctionResultType",-1),SF=e("code",null,"FunctionParamsType",-1),TF=e("code",null,"any",-1),kF=e("code",null,"transformOutputSchema",-1),CF=e("code",null,"z.ZodType",-1),PF=e("td",{style:{"text-align":"left"}},"hooks of subscription",-1),wF=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.afterGuard?")],-1),MF={style:{"text-align":"left"}},EF=e("code",null,"Record",-1),IF=e("code",null,"string",-1),FF=e("code",null,"SubscriptionAfterGuardHook",-1),DF=e("code",null,"ServiceClassType",-1),RF=e("code",null,"FunctionResultType",-1),BF=e("code",null,"FunctionPayloadType",-1),NF=e("code",null,"FunctionParamsType",-1),LF=e("td",{style:{"text-align":"left"}},"-",-1),OF=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.beforeGuard?")],-1),HF={style:{"text-align":"left"}},AF=e("code",null,"Record",-1),jF=e("code",null,"string",-1),GF=e("code",null,"SubscriptionBeforeGuardHook",-1),qF=e("code",null,"ServiceClassType",-1),VF=e("code",null,"FunctionPayloadType",-1),zF=e("code",null,"FunctionParamsType",-1),ZF=e("td",{style:{"text-align":"left"}},"-",-1),UF=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput?")],-1),QF={style:{"text-align":"left"}},KF=e("code",null,"transformFunction",-1),WF=e("code",null,"SubscriptionTransformInputHook",-1),$F=e("code",null,"ServiceClassType",-1),YF=e("code",null,"MessagePayloadType",-1),JF=e("code",null,"MessageParamsType",-1),XF=e("code",null,"transformInputSchema",-1),eD=e("code",null,"z.ZodType",-1),tD=e("code",null,"transformParameterSchema",-1),nD=e("code",null,"z.ZodType",-1),oD=e("td",{style:{"text-align":"left"}},"-",-1),sD=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformFunction")],-1),lD={style:{"text-align":"left"}},dD=e("code",null,"SubscriptionTransformInputHook",-1),aD=e("code",null,"ServiceClassType",-1),iD=e("code",null,"MessagePayloadType",-1),cD=e("code",null,"MessageParamsType",-1),rD=e("td",{style:{"text-align":"left"}},"-",-1),uD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),hD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),_D=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput?")],-1),pD={style:{"text-align":"left"}},fD=e("code",null,"transformFunction",-1),gD=e("code",null,"SubscriptionTransformOutputHook",-1),mD=e("code",null,"ServiceClassType",-1),yD=e("code",null,"FunctionResultType",-1),bD=e("code",null,"FunctionParamsType",-1),xD=e("code",null,"any",-1),vD=e("code",null,"transformOutputSchema",-1),SD=e("code",null,"z.ZodType",-1),TD=e("td",{style:{"text-align":"left"}},"-",-1),kD=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformFunction")],-1),CD={style:{"text-align":"left"}},PD=e("code",null,"SubscriptionTransformOutputHook",-1),wD=e("code",null,"ServiceClassType",-1),MD=e("code",null,"FunctionResultType",-1),ED=e("code",null,"FunctionParamsType",-1),ID=e("code",null,"any",-1),FD=e("td",{style:{"text-align":"left"}},"-",-1),DD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),RD=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType?")],-1),BD={style:{"text-align":"left"}},ND=e("code",null,"EBMessageType",-1),LD=e("td",{style:{"text-align":"left"}},"filter for message type",-1),OD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"metadata")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")]),e("td",{style:{"text-align":"left"}},"the metadata of the subscription")],-1),HD=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),AD={style:{"text-align":"left"}},jD=e("code",null,"PrincipalId",-1),GD=e("td",{style:{"text-align":"left"}},"filter for principal id",-1),qD=e("td",{style:{"text-align":"left"}},[e("code",null,"receiver?")],-1),VD={style:{"text-align":"left"}},zD=e("code",null,"instanceId?",-1),ZD=e("code",null,"InstanceId",-1),UD=e("code",null,"serviceName?",-1),QD=e("code",null,"string",-1),KD=e("code",null,"serviceTarget?",-1),WD=e("code",null,"string",-1),$D=e("code",null,"serviceVersion?",-1),YD=e("code",null,"string",-1),JD=e("td",{style:{"text-align":"left"}},"filter for messages consumed by given receiver",-1),XD=e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.instanceId?")],-1),eR={style:{"text-align":"left"}},tR=e("code",null,"InstanceId",-1),nR=e("td",{style:{"text-align":"left"}},"-",-1),oR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),sR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),lR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),dR=e("td",{style:{"text-align":"left"}},[e("code",null,"sender?")],-1),aR={style:{"text-align":"left"}},iR=e("code",null,"instanceId?",-1),cR=e("code",null,"InstanceId",-1),rR=e("code",null,"serviceName?",-1),uR=e("code",null,"string",-1),hR=e("code",null,"serviceTarget?",-1),_R=e("code",null,"string",-1),pR=e("code",null,"serviceVersion?",-1),fR=e("code",null,"string",-1),gR=e("td",{style:{"text-align":"left"}},"filter for messages produced by given sender",-1),mR=e("td",{style:{"text-align":"left"}},[e("code",null,"sender.instanceId?")],-1),yR={style:{"text-align":"left"}},bR=e("code",null,"InstanceId",-1),xR=e("td",{style:{"text-align":"left"}},"-",-1),vR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),SR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),TR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),kR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionDescription")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the description of the subscription")],-1),CR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the subscription")],-1),PR=e("h4",{id:"defined-in-148",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-148","aria-hidden":"true"},"#"),t(" Defined in")],-1),wR={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionDefinition.ts#L20",target:"_blank",rel:"noopener noreferrer"},MR=e("hr",null,null,-1),ER=e("h3",{id:"subscriptionfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionfunction","aria-hidden":"true"},"#"),t(" SubscriptionFunction")],-1),IR=e("strong",null,"SubscriptionFunction",-1),FR=e("code",null,"ServiceClassType",-1),DR=e("code",null,"MessagePayloadType",-1),RR=e("code",null,"MessageParamsType",-1),BR=e("code",null,"FunctionPayloadType",-1),NR=e("code",null,"FunctionParamsType",-1),LR=e("code",null,"FunctionResultType",-1),OR=e("code",null,"this",-1),HR=e("code",null,"ServiceClassType",-1),AR=e("code",null,"context",-1),jR=e("code",null,"SubscriptionFunctionContext",-1),GR=e("code",null,"payload",-1),qR=e("code",null,"Readonly",-1),VR=e("code",null,"FunctionPayloadType",-1),zR=e("code",null,"parameter",-1),ZR=e("code",null,"Readonly",-1),UR=e("code",null,"FunctionParamsType",-1),QR=e("code",null,"Promise",-1),KR=e("code",null,"FunctionResultType",-1),WR=e("h4",{id:"type-parameters-43",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-43","aria-hidden":"true"},"#"),t(" Type parameters")],-1),$R=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),YR=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),JR={style:{"text-align":"left"}},XR=e("code",null,"ServiceClass",-1),eB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),tB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),nB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),oB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),sB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),lB=d('<h4 id="type-declaration-47" tabindex="-1"><a class="header-anchor" href="#type-declaration-47" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>FunctionResultType</code>&gt;</p><p>CommandFunction is a function which will be triggered when a matching event bridge message is received by the service</p><h5 id="parameters-48" tabindex="-1"><a class="header-anchor" href="#parameters-48" aria-hidden="true">#</a> Parameters</h5>',4),dB=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),aB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),iB=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),cB={style:{"text-align":"left"}},rB=e("code",null,"SubscriptionFunctionContext",-1),uB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),hB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),_B=e("h5",{id:"returns-55",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-55","aria-hidden":"true"},"#"),t(" Returns")],-1),pB=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"FunctionResultType"),t(">")],-1),fB=e("h4",{id:"defined-in-149",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-149","aria-hidden":"true"},"#"),t(" Defined in")],-1),gB={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionFunction.ts#L8",target:"_blank",rel:"noopener noreferrer"},mB=e("hr",null,null,-1),yB=e("h3",{id:"subscriptionfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionfunctioncontext","aria-hidden":"true"},"#"),t(" SubscriptionFunctionContext")],-1),bB=e("strong",null,"SubscriptionFunctionContext",-1),xB=e("code",null,"Prettify",-1),vB=e("code",null,"ContextBase",-1),SB=e("code",null,"SubscriptionFunctionContextEnhancements",-1),TB=e("p",null,"The subscription function context which will be passed into subscription function.",-1),kB=e("h4",{id:"defined-in-150",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-150","aria-hidden":"true"},"#"),t(" Defined in")],-1),CB={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionFunctionContext.ts#L47",target:"_blank",rel:"noopener noreferrer"},PB=d('<hr><h3 id="subscriptionfunctioncontextenhancements" tabindex="-1"><a class="header-anchor" href="#subscriptionfunctioncontextenhancements" aria-hidden="true">#</a> SubscriptionFunctionContextEnhancements</h3><p>Ƭ <strong>SubscriptionFunctionContextEnhancements</strong>: <code>Object</code></p><p>It provides the original command message. Also, the methods:</p><ul><li><code>emit</code> which allows to emit custom events to the event bridge</li><li><code>invoke</code> which allows to call other commands</li></ul><h4 id="type-declaration-48" tabindex="-1"><a class="header-anchor" href="#type-declaration-48" aria-hidden="true">#</a> Type declaration</h4>',6),wB=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),MB=e("td",{style:{"text-align":"left"}},[e("code",null,"emit")],-1),EB={style:{"text-align":"left"}},IB=e("code",null,"EmitCustomMessageFunction",-1),FB=e("td",{style:{"text-align":"left"}},"emit a custom message",-1),DB=e("td",{style:{"text-align":"left"}},[e("code",null,"invoke")],-1),RB={style:{"text-align":"left"}},BB=e("code",null,"InvokeFunction",-1),NB=e("td",{style:{"text-align":"left"}},[t("Invokes a command and returns the result. It is recommended to validate the result against a schema which only contains the data you actually need. "),e("strong",null,[e("code",null,"Example")]),t(),e("code",null,"typescript const address: EBMessageAddress = { serviceName: 'name-of-service-to-invoke', serviceVersion: '1', serviceTarget: 'command-name-to-invoke', } const inputPayload = { my: 'input' } const inputParameter = { search: 'for_me' } const result = await invoke<MyResultType>(address, inputPayload inputParameter ) ")],-1),LB=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),OB={style:{"text-align":"left"}},HB=e("code",null,"Readonly",-1),AB=e("code",null,"EBMessage",-1),jB=e("td",{style:{"text-align":"left"}},"the original message",-1),GB=e("h4",{id:"defined-in-151",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-151","aria-hidden":"true"},"#"),t(" Defined in")],-1),qB={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionFunctionContext.ts#L16",target:"_blank",rel:"noopener noreferrer"},VB=e("hr",null,null,-1),zB=e("h3",{id:"subscriptiontransformfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiontransformfunctioncontext","aria-hidden":"true"},"#"),t(" SubscriptionTransformFunctionContext")],-1),ZB=e("strong",null,"SubscriptionTransformFunctionContext",-1),UB=e("code",null,"Prettify",-1),QB=e("code",null,"ContextBase",-1),KB=e("code",null,"message",-1),WB=e("code",null,"Readonly",-1),$B=e("code",null,"EBMessage",-1),YB=e("h4",{id:"defined-in-152",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-152","aria-hidden":"true"},"#"),t(" Defined in")],-1),JB={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionTransformFunctionContext.ts#L8",target:"_blank",rel:"noopener noreferrer"},XB=e("hr",null,null,-1),eN=e("h3",{id:"subscriptiontransforminputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiontransforminputhook","aria-hidden":"true"},"#"),t(" SubscriptionTransformInputHook")],-1),tN=e("strong",null,"SubscriptionTransformInputHook",-1),nN=e("code",null,"ServiceClassType",-1),oN=e("code",null,"PayloadOutput",-1),sN=e("code",null,"ParamsOutput",-1),lN=e("code",null,"PayloadInput",-1),dN=e("code",null,"ParamsInput",-1),aN=e("code",null,"this",-1),iN=e("code",null,"ServiceClassType",-1),cN=e("code",null,"context",-1),rN=e("code",null,"SubscriptionTransformFunctionContext",-1),uN=e("code",null,"payload",-1),hN=e("code",null,"Readonly",-1),_N=e("code",null,"PayloadInput",-1),pN=e("code",null,"parameter",-1),fN=e("code",null,"Readonly",-1),gN=e("code",null,"ParamsInput",-1),mN=e("code",null,"Promise",-1),yN=e("code",null,"parameter",-1),bN=e("code",null,"Readonly",-1),xN=e("code",null,"ParamsOutput",-1),vN=e("code",null,"payload",-1),SN=e("code",null,"Readonly",-1),TN=e("code",null,"PayloadOutput",-1),kN=d('<h4 id="type-parameters-44" tabindex="-1"><a class="header-anchor" href="#type-parameters-44" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>PayloadOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>PayloadInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-49" tabindex="-1"><a class="header-anchor" href="#type-declaration-49" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><h5 id="parameters-49" tabindex="-1"><a class="header-anchor" href="#parameters-49" aria-hidden="true">#</a> Parameters</h5>',5),CN=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),PN=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),wN=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),MN={style:{"text-align":"left"}},EN=e("code",null,"SubscriptionTransformFunctionContext",-1),IN=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"PayloadInput"),t(">")])],-1),FN=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"ParamsInput"),t(">")])],-1),DN=d('<h5 id="returns-56" tabindex="-1"><a class="header-anchor" href="#returns-56" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><h4 id="defined-in-153" tabindex="-1"><a class="header-anchor" href="#defined-in-153" aria-hidden="true">#</a> Defined in</h4>',3),RN={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionTransformInputHook.ts#L6",target:"_blank",rel:"noopener noreferrer"},BN=e("hr",null,null,-1),NN=e("h3",{id:"subscriptiontransformoutputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiontransformoutputhook","aria-hidden":"true"},"#"),t(" SubscriptionTransformOutputHook")],-1),LN=e("strong",null,"SubscriptionTransformOutputHook",-1),ON=e("code",null,"ServiceClassType",-1),HN=e("code",null,"MessageResultType",-1),AN=e("code",null,"MessageParamsType",-1),jN=e("code",null,"ResponseOutput",-1),GN=e("code",null,"this",-1),qN=e("code",null,"ServiceClassType",-1),VN=e("code",null,"context",-1),zN=e("code",null,"SubscriptionTransformFunctionContext",-1),ZN=e("code",null,"payload",-1),UN=e("code",null,"Readonly",-1),QN=e("code",null,"MessageResultType",-1),KN=e("code",null,"parameter",-1),WN=e("code",null,"Readonly",-1),$N=e("code",null,"MessageParamsType",-1),YN=e("code",null,"Promise",-1),JN=e("code",null,"ResponseOutput",-1),XN=d('<h4 id="type-parameters-45" tabindex="-1"><a class="header-anchor" href="#type-parameters-45" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>MessageResultType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ResponseOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-50" tabindex="-1"><a class="header-anchor" href="#type-declaration-50" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>ResponseOutput</code>&gt;</p><p>This transform hook is executed after function output validation and AfterGuardHooks.</p><h5 id="parameters-50" tabindex="-1"><a class="header-anchor" href="#parameters-50" aria-hidden="true">#</a> Parameters</h5>',6),eL=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),tL=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),nL=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),oL={style:{"text-align":"left"}},sL=e("code",null,"SubscriptionTransformFunctionContext",-1),lL=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageResultType"),t(">")])],-1),dL=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageParamsType"),t(">")])],-1),aL=e("h5",{id:"returns-57",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-57","aria-hidden":"true"},"#"),t(" Returns")],-1),iL=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"ResponseOutput"),t(">")],-1),cL=e("h4",{id:"defined-in-154",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-154","aria-hidden":"true"},"#"),t(" Defined in")],-1),rL={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionTransformOutputHook.ts#L8",target:"_blank",rel:"noopener noreferrer"},uL=d('<h2 id="unit-test-helper-1" tabindex="-1"><a class="header-anchor" href="#unit-test-helper-1" aria-hidden="true">#</a> Unit test helper</h2><h3 id="getcommandcontextmock" tabindex="-1"><a class="header-anchor" href="#getcommandcontextmock" aria-hidden="true">#</a> getCommandContextMock</h3><p>▸ <strong>getCommandContextMock</strong>&lt;<code>MessagePayloadType</code>, <code>MessageParamsType</code>&gt;(<code>payload</code>, <code>parameter</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for command function context</p><h4 id="type-parameters-46" tabindex="-1"><a class="header-anchor" href="#type-parameters-46" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-51" tabindex="-1"><a class="header-anchor" href="#parameters-51" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>payload</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>parameter</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-58" tabindex="-1"><a class="header-anchor" href="#returns-58" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p>',10),hL=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),_L=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),pL={style:{"text-align":"left"}},fL=e("code",null,"configs",-1),gL=e("code",null,"getConfig",-1),mL=e("code",null,"ConfigGetterFunction",-1),yL=e("code",null,"removeConfig",-1),bL=e("code",null,"ConfigDeleteFunction",-1),xL=e("code",null,"setConfig",-1),vL=e("code",null,"ConfigSetterFunction",-1),SL=e("code",null,"emit",-1),TL=e("code",null,"EmitCustomMessageFunction",-1),kL=e("code",null,"invoke",-1),CL=e("code",null,"InvokeFunction",-1),PL=e("code",null,"logger",-1),wL=e("code",null,"Logger",-1),ML=e("code",null,"message",-1),EL=e("code",null,"Readonly",-1),IL=e("code",null,"secrets",-1),FL=e("code",null,"getSecret",-1),DL=e("code",null,"SecretGetterFunction",-1),RL=e("code",null,"removeSecret",-1),BL=e("code",null,"SecretDeleteFunction",-1),NL=e("code",null,"setSecret",-1),LL=e("code",null,"SecretSetterFunction",-1),OL=e("code",null,"startActiveSpan",-1),HL=e("code",null,"name",-1),AL=e("code",null,"string",-1),jL=e("code",null,"opts",-1),GL=e("code",null,"SpanOptions",-1),qL=e("code",null,"context",-1),VL=e("code",null,"undefined",-1),zL=e("code",null,"Context",-1),ZL=e("code",null,"fn",-1),UL=e("code",null,"span",-1),QL=e("code",null,"Span",-1),KL=e("code",null,"Promise",-1),WL=e("code",null,"F",-1),$L=e("code",null,"Promise",-1),YL=e("code",null,"F",-1),JL=e("code",null,"states",-1),XL=e("code",null,"getState",-1),eO=e("code",null,"StateGetterFunction",-1),tO=e("code",null,"removeState",-1),nO=e("code",null,"StateDeleteFunction",-1),oO=e("code",null,"setState",-1),sO=e("code",null,"StateSetterFunction",-1),lO=e("code",null,"wrapInSpan",-1),dO=e("code",null,"name",-1),aO=e("code",null,"string",-1),iO=e("code",null,"opts",-1),cO=e("code",null,"SpanOptions",-1),rO=e("code",null,"fn",-1),uO=e("code",null,"span",-1),hO=e("code",null,"Span",-1),_O=e("code",null,"Promise",-1),pO=e("code",null,"F",-1),fO=e("code",null,"context?",-1),gO=e("code",null,"Context",-1),mO=e("code",null,"Promise",-1),yO=e("code",null,"F",-1),bO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs")],-1),xO={style:{"text-align":"left"}},vO=e("code",null,"getConfig",-1),SO=e("code",null,"ConfigGetterFunction",-1),TO=e("code",null,"removeConfig",-1),kO=e("code",null,"ConfigDeleteFunction",-1),CO=e("code",null,"setConfig",-1),PO=e("code",null,"ConfigSetterFunction",-1),wO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.getConfig")],-1),MO={style:{"text-align":"left"}},EO=e("code",null,"ConfigGetterFunction",-1),IO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.removeConfig")],-1),FO={style:{"text-align":"left"}},DO=e("code",null,"ConfigDeleteFunction",-1),RO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.setConfig")],-1),BO={style:{"text-align":"left"}},NO=e("code",null,"ConfigSetterFunction",-1),LO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.emit")],-1),OO={style:{"text-align":"left"}},HO=e("code",null,"EmitCustomMessageFunction",-1),AO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.invoke")],-1),jO={style:{"text-align":"left"}},GO=e("code",null,"InvokeFunction",-1),qO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.logger")],-1),VO={style:{"text-align":"left"}},zO=e("code",null,"Logger",-1),ZO=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.message")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<{ messageType: EBMessageType.Command; correlationId: string; receiver: EBMessageAddress; payload: { parameter: MessageParamsType; payload: MessagePayloadType; }; ... 8 more ...; sender: { ...; }; }>")])],-1),UO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets")],-1),QO={style:{"text-align":"left"}},KO=e("code",null,"getSecret",-1),WO=e("code",null,"SecretGetterFunction",-1),$O=e("code",null,"removeSecret",-1),YO=e("code",null,"SecretDeleteFunction",-1),JO=e("code",null,"setSecret",-1),XO=e("code",null,"SecretSetterFunction",-1),eH=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.getSecret")],-1),tH={style:{"text-align":"left"}},nH=e("code",null,"SecretGetterFunction",-1),oH=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.removeSecret")],-1),sH={style:{"text-align":"left"}},lH=e("code",null,"SecretDeleteFunction",-1),dH=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.setSecret")],-1),aH={style:{"text-align":"left"}},iH=e("code",null,"SecretSetterFunction",-1),cH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"undefined"),t(" | "),e("code",null,"Context"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),rH=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states")],-1),uH={style:{"text-align":"left"}},hH=e("code",null,"getState",-1),_H=e("code",null,"StateGetterFunction",-1),pH=e("code",null,"removeState",-1),fH=e("code",null,"StateDeleteFunction",-1),gH=e("code",null,"setState",-1),mH=e("code",null,"StateSetterFunction",-1),yH=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.getState")],-1),bH={style:{"text-align":"left"}},xH=e("code",null,"StateGetterFunction",-1),vH=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.removeState")],-1),SH={style:{"text-align":"left"}},TH=e("code",null,"StateDeleteFunction",-1),kH=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.setState")],-1),CH={style:{"text-align":"left"}},PH=e("code",null,"StateSetterFunction",-1),wH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),MH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"emit"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"invoke"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),EH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.emit")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),IH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),FH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),DH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),RH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.invoke")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),BH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),NH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),LH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),OH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),HH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),AH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),jH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),GH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),qH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),VH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),zH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),ZH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),UH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),QH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),KH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),WH=e("h4",{id:"defined-in-155",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-155","aria-hidden":"true"},"#"),t(" Defined in")],-1),$H={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getCommandContext.mock.ts#L12",target:"_blank",rel:"noopener noreferrer"},YH=e("hr",null,null,-1),JH=e("h3",{id:"getcommanderrormessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommanderrormessagemock","aria-hidden":"true"},"#"),t(" getCommandErrorMessageMock")],-1),XH=e("strong",null,"getCommandErrorMessageMock",-1),eA=e("code",null,"error?",-1),tA=e("code",null,"input?",-1),nA=e("code",null,"commandMessage?",-1),oA=e("code",null,"Readonly",-1),sA=e("code",null,"contentEncoding",-1),lA=e("code",null,'"utf-8"',-1),dA=e("code",null,"contentType",-1),aA=e("code",null,'"application/json"',-1),iA=e("code",null,"correlationId",-1),cA=e("code",null,"string",-1),rA=e("code",null,"eventName?",-1),uA=e("code",null,"string",-1),hA=e("code",null,"id",-1),_A=e("code",null,"string",-1),pA=e("code",null,"isHandledError",-1),fA=e("code",null,"boolean",-1),gA=e("code",null,"messageType",-1),mA=e("code",null,"CommandErrorResponse",-1),yA=e("code",null,"otp?",-1),bA=e("code",null,"string",-1),xA=e("code",null,"payload",-1),vA=e("code",null,"data?",-1),SA=e("code",null,"unknown",-1),TA=e("code",null,"message",-1),kA=e("code",null,"string",-1),CA=e("code",null,"status",-1),PA=e("code",null,"StatusCode",-1),wA=e("code",null,"principalId?",-1),MA=e("code",null,"string",-1),EA=e("code",null,"receiver",-1),IA=e("code",null,"sender",-1),FA=e("code",null,"timestamp",-1),DA=e("code",null,"number",-1),RA=e("code",null,"traceId?",-1),BA=e("code",null,"string",-1),NA=e("p",null,"A function that returns a mocked command error response message",-1),LA=e("h4",{id:"parameters-52",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-52","aria-hidden":"true"},"#"),t(" Parameters")],-1),OA=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),HA=e("td",{style:{"text-align":"left"}},[e("code",null,"error?")],-1),AA={style:{"text-align":"left"}},jA=e("code",null,"HandledError",-1),GA=e("code",null,"UnhandledError",-1),qA=e("td",{style:{"text-align":"left"}},"-",-1),VA=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),zA={style:{"text-align":"left"}},ZA=e("code",null,"Partial",-1),UA=e("code",null,"contentEncoding",-1),QA=e("code",null,'"utf-8"',-1),KA=e("code",null,"contentType",-1),WA=e("code",null,'"application/json"',-1),$A=e("code",null,"correlationId",-1),YA=e("code",null,"string",-1),JA=e("code",null,"eventName?",-1),XA=e("code",null,"string",-1),ej=e("code",null,"id",-1),tj=e("code",null,"string",-1),nj=e("code",null,"isHandledError",-1),oj=e("code",null,"boolean",-1),sj=e("code",null,"messageType",-1),lj=e("code",null,"CommandErrorResponse",-1),dj=e("code",null,"otp?",-1),aj=e("code",null,"string",-1),ij=e("code",null,"payload",-1),cj=e("code",null,"data?",-1),rj=e("code",null,"unknown",-1),uj=e("code",null,"message",-1),hj=e("code",null,"string",-1),_j=e("code",null,"status",-1),pj=e("code",null,"StatusCode",-1),fj=e("code",null,"principalId?",-1),gj=e("code",null,"string",-1),mj=e("code",null,"receiver",-1),yj=e("code",null,"sender",-1),bj=e("code",null,"timestamp",-1),xj=e("code",null,"number",-1),vj=e("code",null,"traceId?",-1),Sj=e("code",null,"string",-1),Tj=e("td",{style:{"text-align":"left"}},"-",-1),kj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),Cj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content encoding of message payload")],-1),Pj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.contentType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content type of message payload")],-1),wj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.correlationId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"correlation id to know which command response referrs to which command")],-1),Mj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name for this message")],-1),Ej=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.id")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"global unique id of message")],-1),Ij=e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.messageType")],-1),Fj={style:{"text-align":"left"}},Dj=e("code",null,"Command",-1),Rj=e("td",{style:{"text-align":"left"}},"-",-1),Bj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.otp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"stringified Opentelemetry parent trace id")],-1),Nj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),Lj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload.parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),Oj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload.payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),Hj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.principalId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"principal id")],-1),Aj=e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.receiver")],-1),jj={style:{"text-align":"left"}},Gj=e("code",null,"EBMessageAddress",-1),qj=e("td",{style:{"text-align":"left"}},"-",-1),Vj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.sender")]),e("td",{style:{"text-align":"left"}},"{ serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; }"),e("td",{style:{"text-align":"left"}},"-")],-1),zj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"timestamp of message creation time")],-1),Zj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.traceId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"trace id of message")],-1),Uj=e("h4",{id:"returns-59",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-59","aria-hidden":"true"},"#"),t(" Returns")],-1),Qj=e("code",null,"Readonly",-1),Kj=e("code",null,"contentEncoding",-1),Wj=e("code",null,'"utf-8"',-1),$j=e("code",null,"contentType",-1),Yj=e("code",null,'"application/json"',-1),Jj=e("code",null,"correlationId",-1),Xj=e("code",null,"string",-1),eG=e("code",null,"eventName?",-1),tG=e("code",null,"string",-1),nG=e("code",null,"id",-1),oG=e("code",null,"string",-1),sG=e("code",null,"isHandledError",-1),lG=e("code",null,"boolean",-1),dG=e("code",null,"messageType",-1),aG=e("code",null,"CommandErrorResponse",-1),iG=e("code",null,"otp?",-1),cG=e("code",null,"string",-1),rG=e("code",null,"payload",-1),uG=e("code",null,"data?",-1),hG=e("code",null,"unknown",-1),_G=e("code",null,"message",-1),pG=e("code",null,"string",-1),fG=e("code",null,"status",-1),gG=e("code",null,"StatusCode",-1),mG=e("code",null,"principalId?",-1),yG=e("code",null,"string",-1),bG=e("code",null,"receiver",-1),xG=e("code",null,"sender",-1),vG=e("code",null,"timestamp",-1),SG=e("code",null,"number",-1),TG=e("code",null,"traceId?",-1),kG=e("code",null,"string",-1),CG=e("h4",{id:"defined-in-156",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-156","aria-hidden":"true"},"#"),t(" Defined in")],-1),PG={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/messages/getCommandErrorMessage.mock.ts#L16",target:"_blank",rel:"noopener noreferrer"},wG=e("hr",null,null,-1),MG=e("h3",{id:"getcommandmessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommandmessagemock","aria-hidden":"true"},"#"),t(" getCommandMessageMock")],-1),EG=e("strong",null,"getCommandMessageMock",-1),IG=e("code",null,"Payload",-1),FG=e("code",null,"Parameter",-1),DG=e("code",null,"input?",-1),RG=e("code",null,"Readonly",-1),BG=e("code",null,"contentEncoding",-1),NG=e("code",null,"string",-1),LG=e("code",null,"contentType",-1),OG=e("code",null,"string",-1),HG=e("code",null,"correlationId",-1),AG=e("code",null,"string",-1),jG=e("code",null,"eventName?",-1),GG=e("code",null,"string",-1),qG=e("code",null,"id",-1),VG=e("code",null,"string",-1),zG=e("code",null,"messageType",-1),ZG=e("code",null,"Command",-1),UG=e("code",null,"otp?",-1),QG=e("code",null,"string",-1),KG=e("code",null,"payload",-1),WG=e("code",null,"parameter",-1),$G=e("code",null,"Parameter",-1),YG=e("code",null,"payload",-1),JG=e("code",null,"Payload",-1),XG=e("code",null,"principalId?",-1),eq=e("code",null,"string",-1),tq=e("code",null,"receiver",-1),nq=e("code",null,"EBMessageAddress",-1),oq=e("code",null,"sender",-1),sq=e("code",null,"timestamp",-1),lq=e("code",null,"number",-1),dq=e("code",null,"traceId?",-1),aq=e("code",null,"string",-1),iq=d('<p>A function that returns a mocked command message.</p><h4 id="type-parameters-47" tabindex="-1"><a class="header-anchor" href="#type-parameters-47" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>Parameter</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-53" tabindex="-1"><a class="header-anchor" href="#parameters-53" aria-hidden="true">#</a> Parameters</h4>',4),cq=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),rq=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),uq={style:{"text-align":"left"}},hq=e("code",null,"Partial",-1),_q=e("code",null,"contentEncoding",-1),pq=e("code",null,"string",-1),fq=e("code",null,"contentType",-1),gq=e("code",null,"string",-1),mq=e("code",null,"correlationId",-1),yq=e("code",null,"string",-1),bq=e("code",null,"eventName?",-1),xq=e("code",null,"string",-1),vq=e("code",null,"id",-1),Sq=e("code",null,"string",-1),Tq=e("code",null,"messageType",-1),kq=e("code",null,"Command",-1),Cq=e("code",null,"otp?",-1),Pq=e("code",null,"string",-1),wq=e("code",null,"payload",-1),Mq=e("code",null,"parameter",-1),Eq=e("code",null,"Parameter",-1),Iq=e("code",null,"payload",-1),Fq=e("code",null,"Payload",-1),Dq=e("code",null,"principalId?",-1),Rq=e("code",null,"string",-1),Bq=e("code",null,"receiver",-1),Nq=e("code",null,"EBMessageAddress",-1),Lq=e("code",null,"sender",-1),Oq=e("code",null,"timestamp",-1),Hq=e("code",null,"number",-1),Aq=e("code",null,"traceId?",-1),jq=e("code",null,"string",-1),Gq=e("code",null,"payload?",-1),qq=e("code",null,"parameter?",-1),Vq=e("code",null,"Parameter",-1),zq=e("code",null,"payload?",-1),Zq=e("code",null,"Payload",-1),Uq=e("h4",{id:"returns-60",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-60","aria-hidden":"true"},"#"),t(" Returns")],-1),Qq=e("code",null,"Readonly",-1),Kq=e("code",null,"contentEncoding",-1),Wq=e("code",null,"string",-1),$q=e("code",null,"contentType",-1),Yq=e("code",null,"string",-1),Jq=e("code",null,"correlationId",-1),Xq=e("code",null,"string",-1),eV=e("code",null,"eventName?",-1),tV=e("code",null,"string",-1),nV=e("code",null,"id",-1),oV=e("code",null,"string",-1),sV=e("code",null,"messageType",-1),lV=e("code",null,"Command",-1),dV=e("code",null,"otp?",-1),aV=e("code",null,"string",-1),iV=e("code",null,"payload",-1),cV=e("code",null,"parameter",-1),rV=e("code",null,"Parameter",-1),uV=e("code",null,"payload",-1),hV=e("code",null,"Payload",-1),_V=e("code",null,"principalId?",-1),pV=e("code",null,"string",-1),fV=e("code",null,"receiver",-1),gV=e("code",null,"EBMessageAddress",-1),mV=e("code",null,"sender",-1),yV=e("code",null,"timestamp",-1),bV=e("code",null,"number",-1),xV=e("code",null,"traceId?",-1),vV=e("code",null,"string",-1),SV=e("h4",{id:"defined-in-157",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-157","aria-hidden":"true"},"#"),t(" Defined in")],-1),TV={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/messages/getCommandMessage.mock.ts#L15",target:"_blank",rel:"noopener noreferrer"},kV=e("hr",null,null,-1),CV=e("h3",{id:"getcommandsuccessmessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommandsuccessmessagemock","aria-hidden":"true"},"#"),t(" getCommandSuccessMessageMock")],-1),PV=e("strong",null,"getCommandSuccessMessageMock",-1),wV=e("code",null,"PayloadType",-1),MV=e("code",null,"payload",-1),EV=e("code",null,"input?",-1),IV=e("code",null,"commandMessage?",-1),FV=e("code",null,"Readonly",-1),DV=e("code",null,"contentEncoding",-1),RV=e("code",null,"string",-1),BV=e("code",null,"contentType",-1),NV=e("code",null,"string",-1),LV=e("code",null,"correlationId",-1),OV=e("code",null,"string",-1),HV=e("code",null,"eventName?",-1),AV=e("code",null,"string",-1),jV=e("code",null,"id",-1),GV=e("code",null,"string",-1),qV=e("code",null,"messageType",-1),VV=e("code",null,"CommandSuccessResponse",-1),zV=e("code",null,"otp?",-1),ZV=e("code",null,"string",-1),UV=e("code",null,"payload",-1),QV=e("code",null,"PayloadType",-1),KV=e("code",null,"principalId?",-1),WV=e("code",null,"string",-1),$V=e("code",null,"receiver",-1),YV=e("code",null,"sender",-1),JV=e("code",null,"timestamp",-1),XV=e("code",null,"number",-1),ez=e("code",null,"traceId?",-1),tz=e("code",null,"string",-1),nz=d('<p>A function that returns a mocked command success response message.</p><h4 id="type-parameters-48" tabindex="-1"><a class="header-anchor" href="#type-parameters-48" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td></tr></tbody></table><h4 id="parameters-54" tabindex="-1"><a class="header-anchor" href="#parameters-54" aria-hidden="true">#</a> Parameters</h4>',4),oz=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),sz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")]),e("td",{style:{"text-align":"left"}},"-")],-1),lz=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),dz={style:{"text-align":"left"}},az=e("code",null,"Partial",-1),iz=e("code",null,"contentEncoding",-1),cz=e("code",null,"string",-1),rz=e("code",null,"contentType",-1),uz=e("code",null,"string",-1),hz=e("code",null,"correlationId",-1),_z=e("code",null,"string",-1),pz=e("code",null,"eventName?",-1),fz=e("code",null,"string",-1),gz=e("code",null,"id",-1),mz=e("code",null,"string",-1),yz=e("code",null,"messageType",-1),bz=e("code",null,"CommandSuccessResponse",-1),xz=e("code",null,"otp?",-1),vz=e("code",null,"string",-1),Sz=e("code",null,"payload",-1),Tz=e("code",null,"PayloadType",-1),kz=e("code",null,"principalId?",-1),Cz=e("code",null,"string",-1),Pz=e("code",null,"receiver",-1),wz=e("code",null,"sender",-1),Mz=e("code",null,"timestamp",-1),Ez=e("code",null,"number",-1),Iz=e("code",null,"traceId?",-1),Fz=e("code",null,"string",-1),Dz=e("td",{style:{"text-align":"left"}},"-",-1),Rz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),Bz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content encoding of message payload")],-1),Nz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.contentType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content type of message payload")],-1),Lz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.correlationId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"correlation id to know which command response referrs to which command")],-1),Oz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name for this message")],-1),Hz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.id")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"global unique id of message")],-1),Az=e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.messageType")],-1),jz={style:{"text-align":"left"}},Gz=e("code",null,"Command",-1),qz=e("td",{style:{"text-align":"left"}},"-",-1),Vz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.otp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"stringified Opentelemetry parent trace id")],-1),zz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),Zz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload.parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),Uz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload.payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),Qz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.principalId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"principal id")],-1),Kz=e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.receiver")],-1),Wz={style:{"text-align":"left"}},$z=e("code",null,"EBMessageAddress",-1),Yz=e("td",{style:{"text-align":"left"}},"-",-1),Jz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.sender")]),e("td",{style:{"text-align":"left"}},"{ serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; }"),e("td",{style:{"text-align":"left"}},"-")],-1),Xz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"timestamp of message creation time")],-1),eZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.traceId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"trace id of message")],-1),tZ=e("h4",{id:"returns-61",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-61","aria-hidden":"true"},"#"),t(" Returns")],-1),nZ=e("code",null,"Readonly",-1),oZ=e("code",null,"contentEncoding",-1),sZ=e("code",null,"string",-1),lZ=e("code",null,"contentType",-1),dZ=e("code",null,"string",-1),aZ=e("code",null,"correlationId",-1),iZ=e("code",null,"string",-1),cZ=e("code",null,"eventName?",-1),rZ=e("code",null,"string",-1),uZ=e("code",null,"id",-1),hZ=e("code",null,"string",-1),_Z=e("code",null,"messageType",-1),pZ=e("code",null,"CommandSuccessResponse",-1),fZ=e("code",null,"otp?",-1),gZ=e("code",null,"string",-1),mZ=e("code",null,"payload",-1),yZ=e("code",null,"PayloadType",-1),bZ=e("code",null,"principalId?",-1),xZ=e("code",null,"string",-1),vZ=e("code",null,"receiver",-1),SZ=e("code",null,"sender",-1),TZ=e("code",null,"timestamp",-1),kZ=e("code",null,"number",-1),CZ=e("code",null,"traceId?",-1),PZ=e("code",null,"string",-1),wZ=e("h4",{id:"defined-in-158",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-158","aria-hidden":"true"},"#"),t(" Defined in")],-1),MZ={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/messages/getCommandSuccessMessage.mock.ts#L9",target:"_blank",rel:"noopener noreferrer"},EZ=d('<hr><h3 id="getcommandtransformcontextmock" tabindex="-1"><a class="header-anchor" href="#getcommandtransformcontextmock" aria-hidden="true">#</a> getCommandTransformContextMock</h3><p>▸ <strong>getCommandTransformContextMock</strong>&lt;<code>MessagePayloadType</code>, <code>MessageParamsType</code>&gt;(<code>payload</code>, <code>parameter</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for command transform function context</p><h4 id="type-parameters-49" tabindex="-1"><a class="header-anchor" href="#type-parameters-49" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-55" tabindex="-1"><a class="header-anchor" href="#parameters-55" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>payload</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>parameter</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-62" tabindex="-1"><a class="header-anchor" href="#returns-62" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p>',10),IZ=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),FZ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),DZ={style:{"text-align":"left"}},RZ=e("code",null,"configs",-1),BZ=e("code",null,"getConfig",-1),NZ=e("code",null,"ConfigGetterFunction",-1),LZ=e("code",null,"removeConfig",-1),OZ=e("code",null,"ConfigDeleteFunction",-1),HZ=e("code",null,"setConfig",-1),AZ=e("code",null,"ConfigSetterFunction",-1),jZ=e("code",null,"logger",-1),GZ=e("code",null,"Logger",-1),qZ=e("code",null,"message",-1),VZ=e("code",null,"Readonly",-1),zZ=e("code",null,"secrets",-1),ZZ=e("code",null,"getSecret",-1),UZ=e("code",null,"SecretGetterFunction",-1),QZ=e("code",null,"removeSecret",-1),KZ=e("code",null,"SecretDeleteFunction",-1),WZ=e("code",null,"setSecret",-1),$Z=e("code",null,"SecretSetterFunction",-1),YZ=e("code",null,"startActiveSpan",-1),JZ=e("code",null,"name",-1),XZ=e("code",null,"string",-1),eU=e("code",null,"opts",-1),tU=e("code",null,"SpanOptions",-1),nU=e("code",null,"context",-1),oU=e("code",null,"undefined",-1),sU=e("code",null,"Context",-1),lU=e("code",null,"fn",-1),dU=e("code",null,"span",-1),aU=e("code",null,"Span",-1),iU=e("code",null,"Promise",-1),cU=e("code",null,"F",-1),rU=e("code",null,"Promise",-1),uU=e("code",null,"F",-1),hU=e("code",null,"states",-1),_U=e("code",null,"getState",-1),pU=e("code",null,"StateGetterFunction",-1),fU=e("code",null,"removeState",-1),gU=e("code",null,"StateDeleteFunction",-1),mU=e("code",null,"setState",-1),yU=e("code",null,"StateSetterFunction",-1),bU=e("code",null,"wrapInSpan",-1),xU=e("code",null,"name",-1),vU=e("code",null,"string",-1),SU=e("code",null,"opts",-1),TU=e("code",null,"SpanOptions",-1),kU=e("code",null,"fn",-1),CU=e("code",null,"span",-1),PU=e("code",null,"Span",-1),wU=e("code",null,"Promise",-1),MU=e("code",null,"F",-1),EU=e("code",null,"context?",-1),IU=e("code",null,"Context",-1),FU=e("code",null,"Promise",-1),DU=e("code",null,"F",-1),RU=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs")],-1),BU={style:{"text-align":"left"}},NU=e("code",null,"getConfig",-1),LU=e("code",null,"ConfigGetterFunction",-1),OU=e("code",null,"removeConfig",-1),HU=e("code",null,"ConfigDeleteFunction",-1),AU=e("code",null,"setConfig",-1),jU=e("code",null,"ConfigSetterFunction",-1),GU=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.getConfig")],-1),qU={style:{"text-align":"left"}},VU=e("code",null,"ConfigGetterFunction",-1),zU=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.removeConfig")],-1),ZU={style:{"text-align":"left"}},UU=e("code",null,"ConfigDeleteFunction",-1),QU=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.setConfig")],-1),KU={style:{"text-align":"left"}},WU=e("code",null,"ConfigSetterFunction",-1),$U=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.logger")],-1),YU={style:{"text-align":"left"}},JU=e("code",null,"Logger",-1),XU=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.message")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<{ messageType: EBMessageType.Command; correlationId: string; receiver: EBMessageAddress; payload: { parameter: MessageParamsType; payload: MessagePayloadType; }; ... 8 more ...; sender: { ...; }; }>")])],-1),eQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets")],-1),tQ={style:{"text-align":"left"}},nQ=e("code",null,"getSecret",-1),oQ=e("code",null,"SecretGetterFunction",-1),sQ=e("code",null,"removeSecret",-1),lQ=e("code",null,"SecretDeleteFunction",-1),dQ=e("code",null,"setSecret",-1),aQ=e("code",null,"SecretSetterFunction",-1),iQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.getSecret")],-1),cQ={style:{"text-align":"left"}},rQ=e("code",null,"SecretGetterFunction",-1),uQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.removeSecret")],-1),hQ={style:{"text-align":"left"}},_Q=e("code",null,"SecretDeleteFunction",-1),pQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.setSecret")],-1),fQ={style:{"text-align":"left"}},gQ=e("code",null,"SecretSetterFunction",-1),mQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"undefined"),t(" | "),e("code",null,"Context"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),yQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states")],-1),bQ={style:{"text-align":"left"}},xQ=e("code",null,"getState",-1),vQ=e("code",null,"StateGetterFunction",-1),SQ=e("code",null,"removeState",-1),TQ=e("code",null,"StateDeleteFunction",-1),kQ=e("code",null,"setState",-1),CQ=e("code",null,"StateSetterFunction",-1),PQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.getState")],-1),wQ={style:{"text-align":"left"}},MQ=e("code",null,"StateGetterFunction",-1),EQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.removeState")],-1),IQ={style:{"text-align":"left"}},FQ=e("code",null,"StateDeleteFunction",-1),DQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.setState")],-1),RQ={style:{"text-align":"left"}},BQ=e("code",null,"StateSetterFunction",-1),NQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),LQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),OQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),HQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),AQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),jQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),GQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),qQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),VQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),zQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),ZQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),UQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),QQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),KQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),WQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),$Q=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),YQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),JQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),XQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),eK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),tK=e("h4",{id:"defined-in-159",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-159","aria-hidden":"true"},"#"),t(" Defined in")],-1),nK={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getCommandTransformContext.mock.ts#L12",target:"_blank",rel:"noopener noreferrer"},oK=e("hr",null,null,-1),sK=e("h3",{id:"getcustommessagemessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcustommessagemessagemock","aria-hidden":"true"},"#"),t(" getCustomMessageMessageMock")],-1),lK=e("strong",null,"getCustomMessageMessageMock",-1),dK=e("code",null,"PayloadType",-1),aK=e("code",null,"eventName",-1),iK=e("code",null,"payload",-1),cK=e("code",null,"input?",-1),rK=e("code",null,"Readonly",-1),uK=e("code",null,"contentEncoding",-1),hK=e("code",null,"string",-1),_K=e("code",null,"contentType",-1),pK=e("code",null,"string",-1),fK=e("code",null,"correlationId?",-1),gK=e("code",null,"string",-1),mK=e("code",null,"eventName",-1),yK=e("code",null,"string",-1),bK=e("code",null,"id",-1),xK=e("code",null,"string",-1),vK=e("code",null,"messageType",-1),SK=e("code",null,"CustomMessage",-1),TK=e("code",null,"otp?",-1),kK=e("code",null,"string",-1),CK=e("code",null,"payload?",-1),PK=e("code",null,"PayloadType",-1),wK=e("code",null,"principalId?",-1),MK=e("code",null,"string",-1),EK=e("code",null,"receiver?",-1),IK=e("code",null,"EBMessageAddress",-1),FK=e("code",null,"sender",-1),DK=e("code",null,"timestamp",-1),RK=e("code",null,"number",-1),BK=e("code",null,"traceId?",-1),NK=e("code",null,"string",-1),LK=d('<p>A function that returns a mocked custom message.</p><h4 id="type-parameters-50" tabindex="-1"><a class="header-anchor" href="#type-parameters-50" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td></tr></tbody></table><h4 id="parameters-56" tabindex="-1"><a class="header-anchor" href="#parameters-56" aria-hidden="true">#</a> Parameters</h4>',4),OK=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),HK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),AK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")])],-1),jK=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),GK={style:{"text-align":"left"}},qK=e("code",null,"Partial",-1),VK=e("code",null,"contentEncoding",-1),zK=e("code",null,"string",-1),ZK=e("code",null,"contentType",-1),UK=e("code",null,"string",-1),QK=e("code",null,"correlationId?",-1),KK=e("code",null,"string",-1),WK=e("code",null,"eventName",-1),$K=e("code",null,"string",-1),YK=e("code",null,"id",-1),JK=e("code",null,"string",-1),XK=e("code",null,"messageType",-1),eW=e("code",null,"CustomMessage",-1),tW=e("code",null,"otp?",-1),nW=e("code",null,"string",-1),oW=e("code",null,"payload?",-1),sW=e("code",null,"PayloadType",-1),lW=e("code",null,"principalId?",-1),dW=e("code",null,"string",-1),aW=e("code",null,"receiver?",-1),iW=e("code",null,"EBMessageAddress",-1),cW=e("code",null,"sender",-1),rW=e("code",null,"timestamp",-1),uW=e("code",null,"number",-1),hW=e("code",null,"traceId?",-1),_W=e("code",null,"string",-1),pW=e("h4",{id:"returns-63",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-63","aria-hidden":"true"},"#"),t(" Returns")],-1),fW=e("code",null,"Readonly",-1),gW=e("code",null,"contentEncoding",-1),mW=e("code",null,"string",-1),yW=e("code",null,"contentType",-1),bW=e("code",null,"string",-1),xW=e("code",null,"correlationId?",-1),vW=e("code",null,"string",-1),SW=e("code",null,"eventName",-1),TW=e("code",null,"string",-1),kW=e("code",null,"id",-1),CW=e("code",null,"string",-1),PW=e("code",null,"messageType",-1),wW=e("code",null,"CustomMessage",-1),MW=e("code",null,"otp?",-1),EW=e("code",null,"string",-1),IW=e("code",null,"payload?",-1),FW=e("code",null,"PayloadType",-1),DW=e("code",null,"principalId?",-1),RW=e("code",null,"string",-1),BW=e("code",null,"receiver?",-1),NW=e("code",null,"EBMessageAddress",-1),LW=e("code",null,"sender",-1),OW=e("code",null,"timestamp",-1),HW=e("code",null,"number",-1),AW=e("code",null,"traceId?",-1),jW=e("code",null,"string",-1),GW=e("h4",{id:"defined-in-160",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-160","aria-hidden":"true"},"#"),t(" Defined in")],-1),qW={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/messages/getCustomMessage.mock.ts#L15",target:"_blank",rel:"noopener noreferrer"},VW=d('<hr><h3 id="geteventbridgemock" tabindex="-1"><a class="header-anchor" href="#geteventbridgemock" aria-hidden="true">#</a> getEventBridgeMock</h3><p>▸ <strong>getEventBridgeMock</strong>(<code>sandbox?</code>): <code>Object</code></p><p>Mocks the eventBridge and stubs the methods</p><h4 id="parameters-57" tabindex="-1"><a class="header-anchor" href="#parameters-57" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-64" tabindex="-1"><a class="header-anchor" href="#returns-64" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p><p>EventBridge mocked</p>',9),zW=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ZW=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),UW={style:{"text-align":"left"}},QW=e("code",null,"EventBridge",-1),KW=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">>")])],-1),WW=e("h4",{id:"defined-in-161",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-161","aria-hidden":"true"},"#"),t(" Defined in")],-1),$W={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getEventBridge.mock.ts#L10",target:"_blank",rel:"noopener noreferrer"},YW=d('<hr><h3 id="getloggermock" tabindex="-1"><a class="header-anchor" href="#getloggermock" aria-hidden="true">#</a> getLoggerMock</h3><p>▸ <strong>getLoggerMock</strong>(<code>sandbox?</code>): <code>Object</code></p><p>Mocks the logger and methods are stubs</p><h4 id="parameters-58" tabindex="-1"><a class="header-anchor" href="#parameters-58" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-65" tabindex="-1"><a class="header-anchor" href="#returns-65" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p><p>logger mocked</p>',9),JW=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),XW=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),e$={style:{"text-align":"left"}},t$=e("code",null,"Logger",-1),n$=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),o$=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),s$=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),l$=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),d$=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),a$=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),i$=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),c$=e("h4",{id:"defined-in-162",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-162","aria-hidden":"true"},"#"),t(" Defined in")],-1),r$={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getLogger.mock.ts#L10",target:"_blank",rel:"noopener noreferrer"},u$=d('<hr><h3 id="getsubscriptioncontextmock" tabindex="-1"><a class="header-anchor" href="#getsubscriptioncontextmock" aria-hidden="true">#</a> getSubscriptionContextMock</h3><p>▸ <strong>getSubscriptionContextMock</strong>(<code>message</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for subscription function context</p><h4 id="parameters-59" tabindex="-1"><a class="header-anchor" href="#parameters-59" aria-hidden="true">#</a> Parameters</h4>',5),h$=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),_$=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),p$={style:{"text-align":"left"}},f$=e("code",null,"EBMessage",-1),g$=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sandbox?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonSandbox")])],-1),m$=e("h4",{id:"returns-66",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-66","aria-hidden":"true"},"#"),t(" Returns")],-1),y$=e("p",null,[e("code",null,"Object")],-1),b$=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),x$=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),v$={style:{"text-align":"left"}},S$=e("code",null,"configs",-1),T$=e("code",null,"getConfig",-1),k$=e("code",null,"ConfigGetterFunction",-1),C$=e("code",null,"removeConfig",-1),P$=e("code",null,"ConfigDeleteFunction",-1),w$=e("code",null,"setConfig",-1),M$=e("code",null,"ConfigSetterFunction",-1),E$=e("code",null,"emit",-1),I$=e("code",null,"EmitCustomMessageFunction",-1),F$=e("code",null,"invoke",-1),D$=e("code",null,"InvokeFunction",-1),R$=e("code",null,"logger",-1),B$=e("code",null,"Logger",-1),N$=e("code",null,"message",-1),L$=e("code",null,"Readonly",-1),O$=e("code",null,"EBMessage",-1),H$=e("code",null,"secrets",-1),A$=e("code",null,"getSecret",-1),j$=e("code",null,"SecretGetterFunction",-1),G$=e("code",null,"removeSecret",-1),q$=e("code",null,"SecretDeleteFunction",-1),V$=e("code",null,"setSecret",-1),z$=e("code",null,"SecretSetterFunction",-1),Z$=e("code",null,"startActiveSpan",-1),U$=e("code",null,"name",-1),Q$=e("code",null,"string",-1),K$=e("code",null,"opts",-1),W$=e("code",null,"SpanOptions",-1),$$=e("code",null,"context",-1),Y$=e("code",null,"undefined",-1),J$=e("code",null,"Context",-1),X$=e("code",null,"fn",-1),eY=e("code",null,"span",-1),tY=e("code",null,"Span",-1),nY=e("code",null,"Promise",-1),oY=e("code",null,"F",-1),sY=e("code",null,"Promise",-1),lY=e("code",null,"F",-1),dY=e("code",null,"states",-1),aY=e("code",null,"getState",-1),iY=e("code",null,"StateGetterFunction",-1),cY=e("code",null,"removeState",-1),rY=e("code",null,"StateDeleteFunction",-1),uY=e("code",null,"setState",-1),hY=e("code",null,"StateSetterFunction",-1),_Y=e("code",null,"wrapInSpan",-1),pY=e("code",null,"name",-1),fY=e("code",null,"string",-1),gY=e("code",null,"opts",-1),mY=e("code",null,"SpanOptions",-1),yY=e("code",null,"fn",-1),bY=e("code",null,"span",-1),xY=e("code",null,"Span",-1),vY=e("code",null,"Promise",-1),SY=e("code",null,"F",-1),TY=e("code",null,"context?",-1),kY=e("code",null,"Context",-1),CY=e("code",null,"Promise",-1),PY=e("code",null,"F",-1),wY=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs")],-1),MY={style:{"text-align":"left"}},EY=e("code",null,"getConfig",-1),IY=e("code",null,"ConfigGetterFunction",-1),FY=e("code",null,"removeConfig",-1),DY=e("code",null,"ConfigDeleteFunction",-1),RY=e("code",null,"setConfig",-1),BY=e("code",null,"ConfigSetterFunction",-1),NY=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.getConfig")],-1),LY={style:{"text-align":"left"}},OY=e("code",null,"ConfigGetterFunction",-1),HY=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.removeConfig")],-1),AY={style:{"text-align":"left"}},jY=e("code",null,"ConfigDeleteFunction",-1),GY=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.setConfig")],-1),qY={style:{"text-align":"left"}},VY=e("code",null,"ConfigSetterFunction",-1),zY=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.emit")],-1),ZY={style:{"text-align":"left"}},UY=e("code",null,"EmitCustomMessageFunction",-1),QY=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.invoke")],-1),KY={style:{"text-align":"left"}},WY=e("code",null,"InvokeFunction",-1),$Y=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.logger")],-1),YY={style:{"text-align":"left"}},JY=e("code",null,"Logger",-1),XY=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.message")],-1),eJ={style:{"text-align":"left"}},tJ=e("code",null,"Readonly",-1),nJ=e("code",null,"EBMessage",-1),oJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets")],-1),sJ={style:{"text-align":"left"}},lJ=e("code",null,"getSecret",-1),dJ=e("code",null,"SecretGetterFunction",-1),aJ=e("code",null,"removeSecret",-1),iJ=e("code",null,"SecretDeleteFunction",-1),cJ=e("code",null,"setSecret",-1),rJ=e("code",null,"SecretSetterFunction",-1),uJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.getSecret")],-1),hJ={style:{"text-align":"left"}},_J=e("code",null,"SecretGetterFunction",-1),pJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.removeSecret")],-1),fJ={style:{"text-align":"left"}},gJ=e("code",null,"SecretDeleteFunction",-1),mJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.setSecret")],-1),yJ={style:{"text-align":"left"}},bJ=e("code",null,"SecretSetterFunction",-1),xJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"undefined"),t(" | "),e("code",null,"Context"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),vJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states")],-1),SJ={style:{"text-align":"left"}},TJ=e("code",null,"getState",-1),kJ=e("code",null,"StateGetterFunction",-1),CJ=e("code",null,"removeState",-1),PJ=e("code",null,"StateDeleteFunction",-1),wJ=e("code",null,"setState",-1),MJ=e("code",null,"StateSetterFunction",-1),EJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.getState")],-1),IJ={style:{"text-align":"left"}},FJ=e("code",null,"StateGetterFunction",-1),DJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.removeState")],-1),RJ={style:{"text-align":"left"}},BJ=e("code",null,"StateDeleteFunction",-1),NJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.setState")],-1),LJ={style:{"text-align":"left"}},OJ=e("code",null,"StateSetterFunction",-1),HJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),AJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"emit"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"invoke"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),jJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.emit")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),GJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),qJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),VJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),zJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.invoke")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),ZJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),UJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),QJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),KJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),WJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),$J=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),YJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),JJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),XJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),eX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),tX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),nX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),oX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),sX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),lX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),dX=e("h4",{id:"defined-in-163",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-163","aria-hidden":"true"},"#"),t(" Defined in")],-1),aX={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getSubscriptionContext.mock.ts#L11",target:"_blank",rel:"noopener noreferrer"},iX=d('<hr><h3 id="getsubscriptiontransformcontextmock" tabindex="-1"><a class="header-anchor" href="#getsubscriptiontransformcontextmock" aria-hidden="true">#</a> getSubscriptionTransformContextMock</h3><p>▸ <strong>getSubscriptionTransformContextMock</strong>(<code>message</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for subscription transform function context</p><h4 id="parameters-60" tabindex="-1"><a class="header-anchor" href="#parameters-60" aria-hidden="true">#</a> Parameters</h4>',5),cX=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),rX=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),uX={style:{"text-align":"left"}},hX=e("code",null,"EBMessage",-1),_X=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sandbox?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonSandbox")])],-1),pX=e("h4",{id:"returns-67",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-67","aria-hidden":"true"},"#"),t(" Returns")],-1),fX=e("p",null,[e("code",null,"Object")],-1),gX=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),mX=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),yX={style:{"text-align":"left"}},bX=e("code",null,"configs",-1),xX=e("code",null,"getConfig",-1),vX=e("code",null,"ConfigGetterFunction",-1),SX=e("code",null,"removeConfig",-1),TX=e("code",null,"ConfigDeleteFunction",-1),kX=e("code",null,"setConfig",-1),CX=e("code",null,"ConfigSetterFunction",-1),PX=e("code",null,"logger",-1),wX=e("code",null,"Logger",-1),MX=e("code",null,"message",-1),EX=e("code",null,"Readonly",-1),IX=e("code",null,"EBMessage",-1),FX=e("code",null,"secrets",-1),DX=e("code",null,"getSecret",-1),RX=e("code",null,"SecretGetterFunction",-1),BX=e("code",null,"removeSecret",-1),NX=e("code",null,"SecretDeleteFunction",-1),LX=e("code",null,"setSecret",-1),OX=e("code",null,"SecretSetterFunction",-1),HX=e("code",null,"startActiveSpan",-1),AX=e("code",null,"name",-1),jX=e("code",null,"string",-1),GX=e("code",null,"opts",-1),qX=e("code",null,"SpanOptions",-1),VX=e("code",null,"context",-1),zX=e("code",null,"undefined",-1),ZX=e("code",null,"Context",-1),UX=e("code",null,"fn",-1),QX=e("code",null,"span",-1),KX=e("code",null,"Span",-1),WX=e("code",null,"Promise",-1),$X=e("code",null,"F",-1),YX=e("code",null,"Promise",-1),JX=e("code",null,"F",-1),XX=e("code",null,"states",-1),eee=e("code",null,"getState",-1),tee=e("code",null,"StateGetterFunction",-1),nee=e("code",null,"removeState",-1),oee=e("code",null,"StateDeleteFunction",-1),see=e("code",null,"setState",-1),lee=e("code",null,"StateSetterFunction",-1),dee=e("code",null,"wrapInSpan",-1),aee=e("code",null,"name",-1),iee=e("code",null,"string",-1),cee=e("code",null,"opts",-1),ree=e("code",null,"SpanOptions",-1),uee=e("code",null,"fn",-1),hee=e("code",null,"span",-1),_ee=e("code",null,"Span",-1),pee=e("code",null,"Promise",-1),fee=e("code",null,"F",-1),gee=e("code",null,"context?",-1),mee=e("code",null,"Context",-1),yee=e("code",null,"Promise",-1),bee=e("code",null,"F",-1),xee=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs")],-1),vee={style:{"text-align":"left"}},See=e("code",null,"getConfig",-1),Tee=e("code",null,"ConfigGetterFunction",-1),kee=e("code",null,"removeConfig",-1),Cee=e("code",null,"ConfigDeleteFunction",-1),Pee=e("code",null,"setConfig",-1),wee=e("code",null,"ConfigSetterFunction",-1),Mee=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.getConfig")],-1),Eee={style:{"text-align":"left"}},Iee=e("code",null,"ConfigGetterFunction",-1),Fee=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.removeConfig")],-1),Dee={style:{"text-align":"left"}},Ree=e("code",null,"ConfigDeleteFunction",-1),Bee=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.setConfig")],-1),Nee={style:{"text-align":"left"}},Lee=e("code",null,"ConfigSetterFunction",-1),Oee=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.logger")],-1),Hee={style:{"text-align":"left"}},Aee=e("code",null,"Logger",-1),jee=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.message")],-1),Gee={style:{"text-align":"left"}},qee=e("code",null,"Readonly",-1),Vee=e("code",null,"EBMessage",-1),zee=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets")],-1),Zee={style:{"text-align":"left"}},Uee=e("code",null,"getSecret",-1),Qee=e("code",null,"SecretGetterFunction",-1),Kee=e("code",null,"removeSecret",-1),Wee=e("code",null,"SecretDeleteFunction",-1),$ee=e("code",null,"setSecret",-1),Yee=e("code",null,"SecretSetterFunction",-1),Jee=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.getSecret")],-1),Xee={style:{"text-align":"left"}},ete=e("code",null,"SecretGetterFunction",-1),tte=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.removeSecret")],-1),nte={style:{"text-align":"left"}},ote=e("code",null,"SecretDeleteFunction",-1),ste=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.setSecret")],-1),lte={style:{"text-align":"left"}},dte=e("code",null,"SecretSetterFunction",-1),ate=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"undefined"),t(" | "),e("code",null,"Context"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),ite=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states")],-1),cte={style:{"text-align":"left"}},rte=e("code",null,"getState",-1),ute=e("code",null,"StateGetterFunction",-1),hte=e("code",null,"removeState",-1),_te=e("code",null,"StateDeleteFunction",-1),pte=e("code",null,"setState",-1),fte=e("code",null,"StateSetterFunction",-1),gte=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.getState")],-1),mte={style:{"text-align":"left"}},yte=e("code",null,"StateGetterFunction",-1),bte=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.removeState")],-1),xte={style:{"text-align":"left"}},vte=e("code",null,"StateDeleteFunction",-1),Ste=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.setState")],-1),Tte={style:{"text-align":"left"}},kte=e("code",null,"StateSetterFunction",-1),Cte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),Pte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),wte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Mte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Ete=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Ite=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),Fte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Dte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Rte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Bte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Nte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Lte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Ote=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Hte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Ate=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),jte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Gte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),qte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Vte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),zte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Zte=e("h4",{id:"defined-in-164",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-164","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ute={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getSubscriptionTransformContext.mock.ts#L11",target:"_blank",rel:"noopener noreferrer"};function Qte(Kte,Wte){const o=a("RouterLink"),l=a("ExternalLinkIcon");return c(),r("div",null,[e("p",null,[n(o,{to:"/api/"},{default:s(()=>[t("PURISTA API")]),_:1}),t(" / "),n(o,{to:"/api/modules.html"},{default:s(()=>[t("Modules")]),_:1}),t(" / @purista/core")]),h,_,p,f,g,e("p",null,[t("It contains the builders, classes & types and some helper functions. For easier testing of commands and subscriptions, the package contains different mock creation helper based on "),e("a",m,[t("jest"),n(l)]),t(" and "),e("a",y,[t("sinon"),n(l)])]),e("p",null,[t("Learn PURIST at "),e("a",b,[t("purista.dev"),n(l)])]),x,v,e("ul",null,[e("li",null,[n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[t("EBMessageType")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.EventBridgeEventNames.html"},{default:s(()=>[t("EventBridgeEventNames")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.PuristaSpanName.html"},{default:s(()=>[t("PuristaSpanName")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.PuristaSpanTag.html"},{default:s(()=>[t("PuristaSpanTag")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[t("StatusCode")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.StoreType.html"},{default:s(()=>[t("StoreType")]),_:1})])]),S,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultLogger.html"},{default:s(()=>[t("DefaultLogger")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:s(()=>[t("GenericEventEmitter")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[t("HandledError")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.HonoTRouter.html"},{default:s(()=>[t("HonoTRouter")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.HttpClient.html"},{default:s(()=>[t("HttpClient")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.HttpEventBridge.html"},{default:s(()=>[t("HttpEventBridge")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[t("Logger")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.UnhandledError.html"},{default:s(()=>[t("UnhandledError")]),_:1})])]),T,e("ul",null,[e("li",null,[n(o,{to:"/api/interfaces/purista_core.HttpEventBridgeClient.html"},{default:s(()=>[t("HttpEventBridgeClient")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.IEmitter.html"},{default:s(()=>[t("IEmitter")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.ILogger.html"},{default:s(()=>[t("ILogger")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.OpenApiZodAny.html"},{default:s(()=>[t("OpenApiZodAny")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.RestClient.html"},{default:s(()=>[t("RestClient")]),_:1})])]),k,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#authcredentials"},{default:s(()=>[t("AuthCredentials")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#brokerheadercommandmsg"},{default:s(()=>[t("BrokerHeaderCommandMsg")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#brokerheadercommandresponsemsg"},{default:s(()=>[t("BrokerHeaderCommandResponseMsg")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#brokerheadercustommsg"},{default:s(()=>[t("BrokerHeaderCustomMsg")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#command"},{default:s(()=>[t("Command")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commanddefinitionlist"},{default:s(()=>[t("CommandDefinitionList")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[t("CommandDefinitionMetadataBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#complete"},{default:s(()=>[t("Complete")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#compressionmethod"},{default:s(()=>[t("CompressionMethod")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[t("ContentType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[t("ContextBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[t("CorrelationId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#custommessage"},{default:s(()=>[t("CustomMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#defaultconfigstoreconfig"},{default:s(()=>[t("DefaultConfigStoreConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#defaulteventbridgeconfig"},{default:s(()=>[t("DefaultEventBridgeConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#defaultsecretstoreconfig"},{default:s(()=>[t("DefaultSecretStoreConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#defaultstatestoreconfig"},{default:s(()=>[t("DefaultStateStoreConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:s(()=>[t("DefinitionEventBridgeConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[t("EBMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[t("EBMessageAddress")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[t("EBMessageBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessageid"},{default:s(()=>[t("EBMessageId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessagesenderaddress"},{default:s(()=>[t("EBMessageSenderAddress")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[t("EmitCustomMessageFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#errorresponsepayload"},{default:s(()=>[t("ErrorResponsePayload")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgeadapterevents"},{default:s(()=>[t("EventBridgeAdapterEvents")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgeconfig"},{default:s(()=>[t("EventBridgeConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgecustomevents"},{default:s(()=>[t("EventBridgeCustomEvents")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgeevents"},{default:s(()=>[t("EventBridgeEvents")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventkey"},{default:s(()=>[t("EventKey")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventmap"},{default:s(()=>[t("EventMap")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#httpclientconfig"},{default:s(()=>[t("HttpClientConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#httpclientrequestoptions"},{default:s(()=>[t("HttpClientRequestOptions")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#httpeventbridgeconfig"},{default:s(()=>[t("HttpEventBridgeConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#httpexposedservicemeta"},{default:s(()=>[t("HttpExposedServiceMeta")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoinvoketimeout"},{default:s(()=>[t("InfoInvokeTimeout")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoinvoketimeoutpayload"},{default:s(()=>[t("InfoInvokeTimeoutPayload")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[t("InfoMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infomessagetype"},{default:s(()=>[t("InfoMessageType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[t("InfoServiceBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoservicedrain"},{default:s(()=>[t("InfoServiceDrain")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoservicefunctionadded"},{default:s(()=>[t("InfoServiceFunctionAdded")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoserviceinit"},{default:s(()=>[t("InfoServiceInit")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoservicenotready"},{default:s(()=>[t("InfoServiceNotReady")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoserviceready"},{default:s(()=>[t("InfoServiceReady")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoserviceshutdown"},{default:s(()=>[t("InfoServiceShutdown")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infosubscriptionerror"},{default:s(()=>[t("InfoSubscriptionError")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[t("InstanceId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[t("InvokeFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#logfnparamtype"},{default:s(()=>[t("LogFnParamType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[t("LogLevelName")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#loggeroptions"},{default:s(()=>[t("LoggerOptions")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#loggerstubs"},{default:s(()=>[t("LoggerStubs")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#newable"},{default:s(()=>[t("Newable")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#pendiginvocation"},{default:s(()=>[t("PendigInvocation")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[t("Prettify")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[t("PrincipalId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[t("QueryParameter")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#routerfunction"},{default:s(()=>[t("RouterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceevents"},{default:s(()=>[t("ServiceEvents")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceinfotype"},{default:s(()=>[t("ServiceInfoType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#shutdownentry"},{default:s(()=>[t("ShutdownEntry")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#storebaseconfig"},{default:s(()=>[t("StoreBaseConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinitionlist"},{default:s(()=>[t("SubscriptionDefinitionList")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinitionmetadatabase"},{default:s(()=>[t("SubscriptionDefinitionMetadataBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionstorageentry"},{default:s(()=>[t("SubscriptionStorageEntry")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#supportedhttpmethod"},{default:s(()=>[t("SupportedHttpMethod")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[t("TraceId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[t("addPrefixToObject")]),_:1})])]),C,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#min_content_size_for_compression"},{default:s(()=>[t("MIN_CONTENT_SIZE_FOR_COMPRESSION")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceinfovalidator"},{default:s(()=>[t("ServiceInfoValidator")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infomessagetypes"},{default:s(()=>[t("infoMessageTypes")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#puristaversion"},{default:s(()=>[t("puristaVersion")]),_:1})])]),P,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#extendapi"},{default:s(()=>[t("extendApi")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#generateschema"},{default:s(()=>[t("generateSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandfunctionwithvalidation"},{default:s(()=>[t("getCommandFunctionWithValidation")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getdefaulteventbridgeconfig"},{default:s(()=>[t("getDefaultEventBridgeConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getdefaulthttpeventbridgeconfig"},{default:s(()=>[t("getDefaultHttpEventBridgeConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getdefaultloglevel"},{default:s(()=>[t("getDefaultLogLevel")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewsubscriptionstorageentry"},{default:s(()=>[t("getNewSubscriptionStorageEntry")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getsubscriptionfunctionwithvalidation"},{default:s(()=>[t("getSubscriptionFunctionWithValidation")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#gettimeoutpromise"},{default:s(()=>[t("getTimeoutPromise")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#initdefaultconfigstore"},{default:s(()=>[t("initDefaultConfigStore")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#initdefaultsecretstore"},{default:s(()=>[t("initDefaultSecretStore")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#initdefaultstatestore"},{default:s(()=>[t("initDefaultStateStore")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#initlogger"},{default:s(()=>[t("initLogger")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscustommessage"},{default:s(()=>[t("isCustomMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ishttpexposedservicemeta"},{default:s(()=>[t("isHttpExposedServiceMeta")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#isinfomessage"},{default:s(()=>[t("isInfoMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#isinfoservicefunctionadded"},{default:s(()=>[t("isInfoServiceFunctionAdded")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ismessagematchingsubscription"},{default:s(()=>[t("isMessageMatchingSubscription")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#throwifnotvalidmessage"},{default:s(()=>[t("throwIfNotValidMessage")]),_:1})])]),w,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[t("CommandDefinitionBuilder")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:s(()=>[t("CommandAfterGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:s(()=>[t("CommandBeforeGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[t("CommandDefinition")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commanderrorresponse"},{default:s(()=>[t("CommandErrorResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[t("CommandFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[t("CommandFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontextenhancements"},{default:s(()=>[t("CommandFunctionContextEnhancements")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandresponse"},{default:s(()=>[t("CommandResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandsuccessresponse"},{default:s(()=>[t("CommandSuccessResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[t("CommandTransformFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[t("CommandTransformInputHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[t("CommandTransformOutputHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscommand"},{default:s(()=>[t("isCommand")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscommanderrorresponse"},{default:s(()=>[t("isCommandErrorResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscommandresponse"},{default:s(()=>[t("isCommandResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscommandsuccessresponse"},{default:s(()=>[t("isCommandSuccessResponse")]),_:1})])]),M,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultEventBridge.html"},{default:s(()=>[t("DefaultEventBridge")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:s(()=>[t("EventBridgeBaseClass")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:s(()=>[t("EventBridge")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgeeventsbasic"},{default:s(()=>[t("EventBridgeEventsBasic")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandqueuename"},{default:s(()=>[t("getCommandQueueName")]),_:1})])]),E,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#converttocamelcase"},{default:s(()=>[t("convertToCamelCase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#converttokebabcase"},{default:s(()=>[t("convertToKebabCase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#converttopascalcase"},{default:s(()=>[t("convertToPascalCase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#converttosnakecase"},{default:s(()=>[t("convertToSnakeCase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#createerrorresponse"},{default:s(()=>[t("createErrorResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#createinfomessage"},{default:s(()=>[t("createInfoMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#createsuccessresponse"},{default:s(()=>[t("createSuccessResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#deserializeotp"},{default:s(()=>[t("deserializeOtp")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcleanedmessage"},{default:s(()=>[t("getCleanedMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#geterrormessageforcode"},{default:s(()=>[t("getErrorMessageForCode")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewcorrelationid"},{default:s(()=>[t("getNewCorrelationId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewebmessageid"},{default:s(()=>[t("getNewEBMessageId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewinstanceid"},{default:s(()=>[t("getNewInstanceId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewtraceid"},{default:s(()=>[t("getNewTraceId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getsubscriptionqueuename"},{default:s(()=>[t("getSubscriptionQueueName")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getuniqueid"},{default:s(()=>[t("getUniqueId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#gracefulshutdown"},{default:s(()=>[t("gracefulShutdown")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#isdevelop"},{default:s(()=>[t("isDevelop")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serializeotp"},{default:s(()=>[t("serializeOtp")]),_:1})])]),I,e("ul",null,[e("li",null,[n(o,{to:"/api/enums/purista_core.ServiceEventsNames.html"},{default:s(()=>[t("ServiceEventsNames")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.Service.html"},{default:s(()=>[t("Service")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.ServiceBuilder.html"},{default:s(()=>[t("ServiceBuilder")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[t("ServiceClass")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceconstructorinput"},{default:s(()=>[t("ServiceConstructorInput")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceeventsinternal"},{default:s(()=>[t("ServiceEventsInternal")]),_:1})])]),F,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.ConfigStoreBaseClass.html"},{default:s(()=>[t("ConfigStoreBaseClass")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultConfigStore.html"},{default:s(()=>[t("DefaultConfigStore")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultSecretStore.html"},{default:s(()=>[t("DefaultSecretStore")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultStateStore.html"},{default:s(()=>[t("DefaultStateStore")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.SecretStoreBaseClass.html"},{default:s(()=>[t("SecretStoreBaseClass")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.StateStoreBaseClass.html"},{default:s(()=>[t("StateStoreBaseClass")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.ConfigStore.html"},{default:s(()=>[t("ConfigStore")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.SecretStore.html"},{default:s(()=>[t("SecretStore")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.StateStore.html"},{default:s(()=>[t("StateStore")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[t("ConfigDeleteFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[t("ConfigGetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[t("ConfigSetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[t("SecretDeleteFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[t("SecretGetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[t("SecretSetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[t("StateDeleteFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[t("StateGetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[t("StateSetterFunction")]),_:1})])]),D,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:s(()=>[t("SubscriptionDefinitionBuilder")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscription"},{default:s(()=>[t("Subscription")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionafterguardhook"},{default:s(()=>[t("SubscriptionAfterGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionbeforeguardhook"},{default:s(()=>[t("SubscriptionBeforeGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinition"},{default:s(()=>[t("SubscriptionDefinition")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunction"},{default:s(()=>[t("SubscriptionFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[t("SubscriptionFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontextenhancements"},{default:s(()=>[t("SubscriptionFunctionContextEnhancements")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[t("SubscriptionTransformFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:s(()=>[t("SubscriptionTransformInputHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:s(()=>[t("SubscriptionTransformOutputHook")]),_:1})])]),R,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandcontextmock"},{default:s(()=>[t("getCommandContextMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommanderrormessagemock"},{default:s(()=>[t("getCommandErrorMessageMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandmessagemock"},{default:s(()=>[t("getCommandMessageMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandsuccessmessagemock"},{default:s(()=>[t("getCommandSuccessMessageMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandtransformcontextmock"},{default:s(()=>[t("getCommandTransformContextMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcustommessagemessagemock"},{default:s(()=>[t("getCustomMessageMessageMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#geteventbridgemock"},{default:s(()=>[t("getEventBridgeMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getloggermock"},{default:s(()=>[t("getLoggerMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getsubscriptioncontextmock"},{default:s(()=>[t("getSubscriptionContextMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getsubscriptiontransformcontextmock"},{default:s(()=>[t("getSubscriptionTransformContextMock")]),_:1})])]),B,e("p",null,[e("a",N,[t("HttpClient/types/AuthCredentials.ts:4"),n(l)])]),L,O,e("p",null,[t("Ƭ "),H,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[A]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#brokerheadercustommsg"},{default:s(()=>[j]),_:1}),t(" & { "),G,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[q]),_:1}),t(" ; "),V,t(": "),z,t(" ; "),Z,t(": "),U,t(" ; "),Q,t(": "),K,t(" }>")]),W,e("p",null,[e("a",$,[t("core/types/BrokerHeaderCommandMsg.ts:5"),n(l)])]),Y,J,e("p",null,[t("Ƭ "),X,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[ee]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#brokerheadercommandmsg"},{default:s(()=>[te]),_:1}),t(" & { "),ne,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[oe]),_:1}),t(" }>")]),se,e("p",null,[e("a",le,[t("core/types/BrokerHeaderCommandResponseMsg.ts:5"),n(l)])]),de,ae,ie,ce,e("table",null,[re,e("tbody",null,[ue,e("tr",null,[he,e("td",_e,[n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[pe]),_:1})])]),fe,e("tr",null,[ge,e("td",me,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[ye]),_:1})])]),be,xe,ve])]),Se,e("p",null,[e("a",Te,[t("core/types/BrokerHeaderCustomMsg.ts:4"),n(l)])]),ke,Ce,e("p",null,[t("Ƭ "),Pe,t("<"),we,t(", "),Me,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Ee]),_:1}),t("<{ "),Ie,t(": "),n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[Fe]),_:1}),t(" ; "),De,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[Re]),_:1}),t(" ; "),Be,t(": { "),Ne,t(": "),Le,t(" ; "),Oe,t(": "),He,t(" } ; "),Ae,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[je]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[Ge]),_:1}),t(">")]),qe,e("p",null,[e("a",Ve,[t("core/types/commandType/Command.ts:18"),n(l)])]),ze,Ze,e("p",null,[t("Ƭ "),Ue,t("<"),Qe,t(">: "),n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[Ke]),_:1}),t("<"),We,t(", "),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[$e]),_:1}),t(", "),Ye,t(", "),Je,t(", "),Xe,t(", "),et,t(", "),tt,t(", "),nt,t(">[]")]),ot,e("table",null,[st,e("tbody",null,[e("tr",null,[lt,e("td",dt,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[at]),_:1})])])])]),it,e("p",null,[e("a",ct,[t("core/types/commandType/CommandDefinitionList.ts:12"),n(l)])]),rt,ut,ht,_t,e("table",null,[pt,e("tbody",null,[e("tr",null,[ft,e("td",gt,[t("{ "),mt,t(": "),yt,t(" ; "),bt,t(": "),xt,t(" ; "),vt,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[St]),_:1}),t(" ; "),Tt,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[kt]),_:1}),t(" ; "),Ct,t(": "),Pt,t(" ; "),wt,t(": "),Mt,t(" ; "),Et,t(": "),It,t(" ; "),Ft,t(": "),Dt,t(" }")])]),Rt,Bt,e("tr",null,[Nt,e("td",Lt,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[Ot]),_:1})])]),e("tr",null,[Ht,e("td",At,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[jt]),_:1})])]),Gt,qt,Vt,zt])]),Zt,e("p",null,[e("a",Ut,[t("core/types/commandType/CommandDefinitionMetadataBase.ts:5"),n(l)])]),Qt,e("p",null,[e("a",Kt,[t("core/types/Complete.ts:20"),n(l)])]),Wt,e("p",null,[e("a",$t,[t("core/HttpServer/types/CompressionMethod.ts:1"),n(l)])]),Yt,e("p",null,[e("a",Jt,[t("core/types/ContentType.ts:6"),n(l)])]),Xt,en,tn,nn,on,e("table",null,[sn,e("tbody",null,[e("tr",null,[ln,e("td",dn,[t("{ "),an,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[cn]),_:1}),t(" ; "),rn,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[un]),_:1}),t(" ; "),hn,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[_n]),_:1}),t(" }")]),pn]),e("tr",null,[fn,e("td",gn,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[mn]),_:1})]),yn]),e("tr",null,[bn,e("td",xn,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[vn]),_:1})]),Sn]),e("tr",null,[Tn,e("td",kn,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[Cn]),_:1})]),Pn]),e("tr",null,[wn,e("td",Mn,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[En]),_:1})]),In]),e("tr",null,[Fn,e("td",Dn,[t("{ "),Rn,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[Bn]),_:1}),t(" ; "),Nn,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[Ln]),_:1}),t(" ; "),On,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[Hn]),_:1}),t(" }")]),An]),e("tr",null,[jn,e("td",Gn,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[qn]),_:1})]),Vn]),e("tr",null,[zn,e("td",Zn,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[Un]),_:1})]),Qn]),e("tr",null,[Kn,e("td",Wn,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[$n]),_:1})]),Yn]),Jn,e("tr",null,[Xn,e("td",eo,[t("{ "),to,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[no]),_:1}),t(" ; "),oo,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[so]),_:1}),t(" ; "),lo,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[ao]),_:1}),t(" }")]),io]),e("tr",null,[co,e("td",ro,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[uo]),_:1})]),ho]),e("tr",null,[_o,e("td",po,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[fo]),_:1})]),go]),e("tr",null,[mo,e("td",yo,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[bo]),_:1})]),xo]),vo])]),So,e("p",null,[e("a",To,[t("core/types/ContextBase.ts:12"),n(l)])]),ko,Co,Po,wo,Mo,e("p",null,[e("a",Eo,[t("core/types/CorrelationId.ts:2"),n(l)])]),Io,Fo,e("p",null,[t("Ƭ "),Do,t("<"),Ro,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Bo]),_:1}),t("<{ "),No,t(": "),Lo,t(" ; "),Oo,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:s(()=>[Ho]),_:1}),t(" ; "),Ao,t(": "),jo,t(" ; "),Go,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[qo]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[Vo]),_:1}),t(">")]),zo,e("p",null,[e("a",Zo,[t("core/types/CustomMessage.ts:11"),n(l)])]),Uo,e("p",null,[e("a",Qo,[t("DefaultConfigStore/types/DefaultConfigStoreConfig.ts:1"),n(l)])]),Ko,e("p",null,[e("a",Wo,[t("DefaultEventBridge/types/DefaultEventBridgeConfig.ts:4"),n(l)])]),$o,e("p",null,[e("a",Yo,[t("DefaultSecretStore/types/DefaultSecretStoreConfig.ts:1"),n(l)])]),Jo,e("p",null,[e("a",Xo,[t("DefaultStateStore/types/DefaultStateStoreConfig.ts:1"),n(l)])]),es,e("p",null,[e("a",ts,[t("core/types/DefinitionEventBridgeConfig.ts:6"),n(l)])]),ns,os,e("p",null,[t("Ƭ "),ss,t(": "),n(o,{to:"/api/modules/purista_core.html#command"},{default:s(()=>[ls]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#commandresponse"},{default:s(()=>[ds]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[as]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#custommessage"},{default:s(()=>[is]),_:1})]),cs,rs,e("p",null,[e("a",us,[t("core/types/EBMessage.ts:8"),n(l)])]),hs,_s,ps,fs,gs,e("table",null,[ms,e("tbody",null,[e("tr",null,[ys,e("td",bs,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[xs]),_:1})]),vs]),Ss,Ts,ks])]),Cs,e("p",null,[e("a",Ps,[t("core/types/EBMessageAddress.ts:6"),n(l)])]),ws,Ms,Es,Is,Fs,e("table",null,[Ds,e("tbody",null,[Rs,e("tr",null,[Bs,e("td",Ns,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[Ls]),_:1})]),Os]),e("tr",null,[Hs,e("td",As,[n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[js]),_:1})]),Gs]),qs,e("tr",null,[Vs,e("td",zs,[n(o,{to:"/api/modules/purista_core.html#ebmessageid"},{default:s(()=>[Zs]),_:1})]),Us]),Qs,e("tr",null,[Ks,e("td",Ws,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[$s]),_:1})]),Ys]),e("tr",null,[Js,e("td",Xs,[n(o,{to:"/api/modules/purista_core.html#ebmessagesenderaddress"},{default:s(()=>[el]),_:1})]),tl]),nl,e("tr",null,[ol,e("td",sl,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[ll]),_:1})]),dl])])]),al,e("p",null,[e("a",il,[t("core/types/EBMessageBase.ts:11"),n(l)])]),cl,rl,ul,hl,_l,e("p",null,[e("a",pl,[t("core/types/EBMessageId.ts:4"),n(l)])]),fl,gl,e("p",null,[t("Ƭ "),ml,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[yl]),_:1}),t("<"),bl,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[xl]),_:1}),t(", "),vl,t("> & "),Sl,t("<"),Tl,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[kl]),_:1}),t(", "),Cl,t(">>>")]),Pl,wl,e("p",null,[e("a",Ml,[t("core/types/EBMessageSenderAddress.ts:7"),n(l)])]),El,Il,e("p",null,[t("Ƭ "),Fl,t(": <Payload>("),Dl,t(": "),Rl,t(", "),Bl,t(": "),Nl,t(", "),Ll,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[Ol]),_:1}),t(", "),Hl,t(": "),Al,t(") => "),jl,t("<"),Gl,t(">")]),ql,e("table",null,[Vl,e("tbody",null,[zl,Zl,e("tr",null,[Ul,e("td",Ql,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[Kl]),_:1})])]),Wl])]),$l,Yl,Jl,e("p",null,[e("a",Xl,[t("core/types/EmitCustomMessageFunction.ts:10"),n(l)])]),ed,td,nd,od,sd,e("table",null,[ld,e("tbody",null,[dd,ad,e("tr",null,[id,e("td",cd,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[rd]),_:1})]),ud]),e("tr",null,[hd,e("td",_d,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[pd]),_:1})]),fd])])]),gd,e("p",null,[e("a",md,[t("core/types/ErrorResponsePayload.ts:7"),n(l)])]),yd,e("p",null,[e("a",bd,[t("core/EventBridge/types/EventBridgeEvents.ts:42"),n(l)])]),xd,vd,e("p",null,[t("Ƭ "),Sd,t("<"),Td,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[kd]),_:1}),t("<{ "),Cd,t(": "),Pd,t(" ; "),wd,t(": "),Md,t(" ; "),Ed,t(": "),n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[Id]),_:1}),t(" ; "),Fd,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Dd]),_:1}),t(" ; "),Rd,t(": "),Bd,t(" } & "),Nd,t(">")]),Ld,e("p",null,[e("a",Od,[t("core/EventBridge/types/EventBridgeConfig.ts:10"),n(l)])]),Hd,e("p",null,[e("a",Ad,[t("core/EventBridge/types/EventBridgeEvents.ts:37"),n(l)])]),jd,Gd,e("p",null,[t("Ƭ "),qd,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Vd]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#eventbridgeeventsbasic"},{default:s(()=>[zd]),_:1}),t(" & "),n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[Zd]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#eventbridgeadapterevents"},{default:s(()=>[Ud]),_:1}),t(", "),Qd,t("> & "),n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[Kd]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#eventbridgecustomevents"},{default:s(()=>[Wd]),_:1}),t(", "),$d,t(">>")]),Yd,e("p",null,[e("a",Jd,[t("core/EventBridge/types/EventBridgeEvents.ts:47"),n(l)])]),Xd,e("table",null,[ea,e("tbody",null,[e("tr",null,[ta,e("td",na,[t("extends "),n(o,{to:"/api/modules/purista_core.html#eventmap"},{default:s(()=>[oa]),_:1})])])])]),sa,e("p",null,[e("a",la,[t("core/types/GenericEventEmitter.ts:5"),n(l)])]),da,e("p",null,[e("a",aa,[t("core/types/GenericEventEmitter.ts:3"),n(l)])]),ia,ca,e("p",null,[t("Ƭ "),ra,t("<"),ua,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[ha]),_:1}),t("<{ "),_a,t(": "),pa,t(" ; "),fa,t(": { "),ga,t(": "),ma,t(" ; "),ya,t(": "),ba,t(" } ; "),xa,t(": "),va,t(" ; "),Sa,t(": "),Ta,t("<"),ka,t(", "),Ca,t("> ; "),Pa,t(": "),wa,t(" ; "),Ma,t(": "),Ea,t(" ; "),Ia,t(": "),Fa,t(" ; "),Da,t(": "),n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[Ra]),_:1}),t(" ; "),Ba,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Na]),_:1}),t(" ; "),La,t(": "),Oa,t(" ; "),Ha,t(": "),Aa,t(" } & "),ja,t(">")]),Ga,e("p",null,[e("a",qa,[t("HttpClient/types/HttpClientConfig.ts:9"),n(l)])]),Va,e("p",null,[e("a",za,[t("HttpClient/types/HttpClientRequestOptions.ts:4"),n(l)])]),Za,e("p",null,[e("a",Ua,[t("HttpEventBridge/types/HttpEventBridgeConfig.ts:3"),n(l)])]),Qa,Ka,e("p",null,[t("Ƭ "),Wa,t("<"),$a,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Ya]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[Ja]),_:1}),t(" & { "),Xa,t(": { "),ei,t(": { "),ti,t(": "),ni,t(" | "),oi,t(" | "),si,t(" | "),li,t(" | "),di,t(" ; "),ai,t(": { "),ii,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[ci]),_:1}),t("[] ; "),ri,t(": "),ui,t(" ; "),hi,t(": "),_i,t(" ; "),pi,t(": "),fi,t(" ; "),gi,t(": "),n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[mi]),_:1}),t("<"),yi,t(">[] ; "),bi,t(": "),xi,t(" ; "),vi,t(": "),Si,t("[] } ; "),Ti,t(": "),ki,t(" } } }>")]),Ci,e("p",null,[e("a",Pi,[t("core/HttpServer/types/HttpExposedServiceMeta.ts:4"),n(l)])]),wi,Mi,e("p",null,[t("Ƭ "),Ei,t(": { "),Ii,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoinvoketimeout"},{default:s(()=>[Fi]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Di]),_:1})]),Ri,e("p",null,[e("a",Bi,[t("core/types/infoType/InfoInvokeTimeout.ts:22"),n(l)])]),Ni,Li,Oi,Hi,e("table",null,[Ai,e("tbody",null,[e("tr",null,[ji,e("td",Gi,[n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[qi]),_:1})])]),Vi,zi,Zi,Ui,Qi,Ki,Wi,$i,Yi,e("tr",null,[Ji,e("td",Xi,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[ec]),_:1})])])])]),tc,e("p",null,[e("a",nc,[t("core/types/infoType/InfoInvokeTimeout.ts:6"),n(l)])]),oc,sc,e("p",null,[t("Ƭ "),lc,t(": "),n(o,{to:"/api/modules/purista_core.html#infoservicedrain"},{default:s(()=>[dc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoservicefunctionadded"},{default:s(()=>[ac]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoserviceinit"},{default:s(()=>[ic]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoservicenotready"},{default:s(()=>[cc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoserviceready"},{default:s(()=>[rc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoserviceshutdown"},{default:s(()=>[uc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoinvoketimeout"},{default:s(()=>[hc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infosubscriptionerror"},{default:s(()=>[_c]),_:1})]),pc,e("p",null,[e("a",fc,[t("core/types/infoType/InfoMessage.ts:11"),n(l)])]),gc,mc,e("p",null,[t("Ƭ "),yc,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicedrain"},{default:s(()=>[bc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicefunctionadded"},{default:s(()=>[xc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceinit"},{default:s(()=>[vc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicenotready"},{default:s(()=>[Sc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceready"},{default:s(()=>[Tc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceshutdown"},{default:s(()=>[kc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoinvoketimeout"},{default:s(()=>[Cc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infosubscriptionerror"},{default:s(()=>[Pc]),_:1})]),wc,e("p",null,[e("a",Mc,[t("core/types/infoType/InfoMessage.ts:21"),n(l)])]),Ec,Ic,e("p",null,[t("Ƭ "),Fc,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Dc]),_:1}),t("<{ "),Rc,t(": "),Bc,t(" ; "),Nc,t(": "),Lc,t(" ; "),Oc,t(": "),Hc,t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[Ac]),_:1}),t(">")]),jc,e("p",null,[e("a",Gc,[t("core/types/infoType/InfoServiceBase.ts:4"),n(l)])]),qc,Vc,e("p",null,[t("Ƭ "),zc,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Zc]),_:1}),t("<{ "),Uc,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicedrain"},{default:s(()=>[Qc]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Kc]),_:1}),t(">")]),Wc,e("p",null,[e("a",$c,[t("core/types/infoType/InfoServiceDrain.ts:5"),n(l)])]),Yc,Jc,e("p",null,[t("Ƭ "),Xc,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[er]),_:1}),t("<{ "),tr,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicefunctionadded"},{default:s(()=>[nr]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[or]),_:1}),t(">")]),sr,e("p",null,[e("a",lr,[t("core/types/infoType/InfoServiceFunctionAdded.ts:5"),n(l)])]),dr,ar,e("p",null,[t("Ƭ "),ir,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[cr]),_:1}),t("<{ "),rr,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceinit"},{default:s(()=>[ur]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[hr]),_:1}),t(">")]),_r,e("p",null,[e("a",pr,[t("core/types/infoType/InfoServiceInit.ts:5"),n(l)])]),fr,gr,e("p",null,[t("Ƭ "),mr,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[yr]),_:1}),t("<{ "),br,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicenotready"},{default:s(()=>[xr]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[vr]),_:1}),t(">")]),Sr,e("p",null,[e("a",Tr,[t("core/types/infoType/InfoServiceNotReady.ts:5"),n(l)])]),kr,Cr,e("p",null,[t("Ƭ "),Pr,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[wr]),_:1}),t("<{ "),Mr,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceready"},{default:s(()=>[Er]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Ir]),_:1}),t(">")]),Fr,e("p",null,[e("a",Dr,[t("core/types/infoType/InfoServiceReady.ts:5"),n(l)])]),Rr,Br,e("p",null,[t("Ƭ "),Nr,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Lr]),_:1}),t("<{ "),Or,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceshutdown"},{default:s(()=>[Hr]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Ar]),_:1}),t(">")]),jr,e("p",null,[e("a",Gr,[t("core/types/infoType/InfoServiceShutdown.ts:5"),n(l)])]),qr,Vr,e("p",null,[t("Ƭ "),zr,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Zr]),_:1}),t("<{ "),Ur,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infosubscriptionerror"},{default:s(()=>[Qr]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Kr]),_:1}),t(">")]),Wr,e("p",null,[e("a",$r,[t("core/types/infoType/InfoSubscriptionError.ts:5"),n(l)])]),Yr,Jr,Xr,eu,tu,e("p",null,[e("a",nu,[t("core/types/InstanceId.ts:2"),n(l)])]),ou,su,e("p",null,[t("Ƭ "),lu,t(": <InvokeResponseType, PayloadType, ParameterType>("),du,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[au]),_:1}),t(", "),iu,t(": "),cu,t(", "),ru,t(": "),uu,t(") => "),hu,t("<"),_u,t(">")]),pu,e("table",null,[fu,e("tbody",null,[e("tr",null,[gu,e("td",mu,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[yu]),_:1})])]),bu,xu])]),vu,Su,Tu,e("p",null,[e("a",ku,[t("core/types/InvokeFunction.ts:21"),n(l)])]),Cu,e("p",null,[e("a",Pu,[t("core/types/Logger.ts:17"),n(l)])]),wu,e("p",null,[e("a",Mu,[t("core/types/LogLevelName.ts:1"),n(l)])]),Eu,Iu,Fu,Du,e("table",null,[Ru,e("tbody",null,[Bu,e("tr",null,[Nu,e("td",Lu,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[Ou]),_:1})])]),Hu,e("tr",null,[Au,e("td",ju,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[Gu]),_:1})])]),qu,Vu,zu,Zu,e("tr",null,[Uu,e("td",Qu,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[Ku]),_:1})])])])]),Wu,e("p",null,[e("a",$u,[t("core/types/Logger.ts:5"),n(l)])]),Yu,e("p",null,[e("a",Ju,[t("mocks/getLogger.mock.ts:41"),n(l)])]),Xu,eh,e("p",null,[t("Ƭ "),th,t("<"),nh,t(", "),oh,t(">: ("),sh,t(": "),n(o,{to:"/api/modules/purista_core.html#serviceconstructorinput"},{default:s(()=>[lh]),_:1}),t("<"),dh,t(">) => "),ah]),ih,e("table",null,[ch,e("tbody",null,[e("tr",null,[rh,e("td",uh,[n(o,{to:"/api/modules/purista_core.html#serviceconstructorinput"},{default:s(()=>[hh]),_:1}),t("<"),_h,t(">")])])])]),ph,fh,gh,e("p",null,[e("a",mh,[t("ServiceBuilder/ServiceBuilder.impl.ts:28"),n(l)])]),yh,bh,xh,vh,e("table",null,[Sh,e("tbody",null,[e("tr",null,[Th,e("td",kh,[t("("),Ch,t(": "),n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[Ph]),_:1}),t(" | "),n(o,{to:"/api/classes/purista_core.UnhandledError.html"},{default:s(()=>[wh]),_:1}),t(") => "),Mh])]),Eh])]),Ih,e("p",null,[e("a",Fh,[t("DefaultEventBridge/types/PendingInvocations.ts:3"),n(l)])]),Dh,e("p",null,[e("a",Rh,[t("core/types/Prettify.ts:1"),n(l)])]),Bh,Nh,Lh,Oh,Hh,e("p",null,[e("a",Ah,[t("core/types/PrincipalId.ts:2"),n(l)])]),jh,e("p",null,[e("a",Gh,[t("core/HttpServer/types/QueryParameter.ts:1"),n(l)])]),qh,e("table",null,[Vh,e("tbody",null,[e("tr",null,[zh,e("td",Zh,[t("extends "),n(o,{to:"/api/classes/purista_core.HttpEventBridge.html"},{default:s(()=>[Uh]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#httpeventbridgeconfig"},{default:s(()=>[Qh]),_:1}),t("> = "),n(o,{to:"/api/classes/purista_core.HttpEventBridge.html"},{default:s(()=>[Kh]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#httpeventbridgeconfig"},{default:s(()=>[Wh]),_:1}),t(">")])])])]),$h,e("p",null,[e("a",Yh,[t("HttpEventBridge/types/RouterFunction.ts:6"),n(l)])]),Jh,Xh,e("p",null,[t("Ƭ "),e_,t(": "),n(o,{to:"/api/modules/purista_core.html#serviceeventsinternal"},{default:s(()=>[t_]),_:1}),t(" & "),n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[n_]),_:1}),t("<"),o_,t(", "),s_,t("> & "),n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[l_]),_:1}),t("<"),d_,t(", "),a_,t(">")]),i_,c_,r_,e("p",null,[e("a",u_,[t("core/types/ServiceEvents.ts:98"),n(l)])]),h_,e("p",null,[e("a",__,[t("core/types/infoType/ServiceInfoType.ts:4"),n(l)])]),p_,e("p",null,[e("a",f_,[t("helper/types/ShutdownEntry.ts:4"),n(l)])]),g_,m_,e("p",null,[t("Ƭ "),y_,t("<"),b_,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[x_]),_:1}),t("<{ "),v_,t(": "),S_,t(" ; "),T_,t(": "),k_,t(" ; "),C_,t(": "),P_,t(" ; "),w_,t(": "),n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[M_]),_:1}),t(" ; "),E_,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[I_]),_:1}),t(" } & "),F_,t(">")]),D_,e("p",null,[e("a",R_,[t("core/types/StoreBaseConfig.ts:8"),n(l)])]),B_,N_,e("p",null,[t("Ƭ "),L_,t("<"),O_,t(">: "),n(o,{to:"/api/modules/purista_core.html#subscriptiondefinition"},{default:s(()=>[H_]),_:1}),t("<"),A_,t(", "),j_,t(", "),G_,t(", "),q_,t(", "),V_,t(">[]")]),z_,e("table",null,[Z_,e("tbody",null,[e("tr",null,[U_,e("td",Q_,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[K_]),_:1})])])])]),W_,e("p",null,[e("a",$_,[t("core/types/subscription/SubscriptionDefinitionList.ts:11"),n(l)])]),Y_,J_,X_,ep,e("table",null,[tp,e("tbody",null,[e("tr",null,[np,e("td",op,[t("{ "),sp,t(": "),lp,t(" ; "),dp,t(": "),ap,t(" ; "),ip,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[cp]),_:1}),t(" ; "),rp,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[up]),_:1}),t(" ; "),hp,t(": "),_p,t(" ; "),pp,t(": "),fp,t(" ; "),gp,t(": "),mp,t(" }")])]),yp,bp,e("tr",null,[xp,e("td",vp,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[Sp]),_:1})])]),e("tr",null,[Tp,e("td",kp,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[Cp]),_:1})])]),Pp,wp,Mp])]),Ep,e("p",null,[e("a",Ip,[t("core/types/subscription/SubscriptionDefinitionMetadataBase.ts:5"),n(l)])]),Fp,Dp,Rp,Bp,e("table",null,[Np,e("tbody",null,[e("tr",null,[Lp,e("td",Op,[t("("),Hp,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[Ap]),_:1}),t(") => "),jp,t("<"),Gp,t("<"),n(o,{to:"/api/modules/purista_core.html#custommessage"},{default:s(()=>[qp]),_:1}),t(", "),Vp,t(" | "),zp,t("> | "),Zp,t(">")])]),Up,Qp,e("tr",null,[Kp,e("td",Wp,[t("("),$p,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[Yp]),_:1}),t(") => "),Jp])]),Xp,e1,t1,n1,o1,s1,l1,d1,a1])]),i1,e("p",null,[e("a",c1,[t("DefaultEventBridge/types/SubscriptionStorageEntry.ts:3"),n(l)])]),r1,e("p",null,[e("a",u1,[t("core/HttpServer/types/SupportedHttpMethod.ts:2"),n(l)])]),h1,_1,p1,f1,g1,e("p",null,[e("a",m1,[t("core/types/TraceId.ts:4"),n(l)])]),y1,e("p",null,[e("a",b1,[t("helper/getTimeoutPromise.impl.ts:9"),n(l)])]),x1,v1,e("p",null,[t("▸ "),S1,t("("),T1,t("): "),n(o,{to:"/api/classes/purista_core.DefaultConfigStore.html"},{default:s(()=>[k1]),_:1})]),C1,e("table",null,[P1,e("tbody",null,[w1,e("tr",null,[M1,e("td",E1,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[I1]),_:1})])])])]),F1,e("p",null,[n(o,{to:"/api/classes/purista_core.DefaultConfigStore.html"},{default:s(()=>[D1]),_:1})]),R1,e("p",null,[e("a",B1,[t("DefaultConfigStore/initDefaultConfigStore.impl.ts:4"),n(l)])]),N1,L1,e("p",null,[t("▸ "),O1,t("("),H1,t("): "),n(o,{to:"/api/classes/purista_core.DefaultSecretStore.html"},{default:s(()=>[A1]),_:1})]),j1,e("table",null,[G1,e("tbody",null,[q1,e("tr",null,[V1,e("td",z1,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Z1]),_:1})])])])]),U1,e("p",null,[n(o,{to:"/api/classes/purista_core.DefaultSecretStore.html"},{default:s(()=>[Q1]),_:1})]),K1,e("p",null,[e("a",W1,[t("DefaultSecretStore/initDefaultSecretStore.impl.ts:4"),n(l)])]),$1,Y1,e("p",null,[t("▸ "),J1,t("("),X1,t("): "),n(o,{to:"/api/classes/purista_core.DefaultStateStore.html"},{default:s(()=>[ef]),_:1})]),tf,e("table",null,[nf,e("tbody",null,[of,e("tr",null,[sf,e("td",lf,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[df]),_:1})])])])]),af,e("p",null,[n(o,{to:"/api/classes/purista_core.DefaultStateStore.html"},{default:s(()=>[cf]),_:1})]),rf,e("p",null,[e("a",uf,[t("DefaultStateStore/initDefaultStateStore.impl.ts:4"),n(l)])]),hf,_f,e("p",null,[t("▸ "),pf,t("("),ff,t(", "),gf,t("): "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[mf]),_:1})]),yf,bf,e("table",null,[xf,e("tbody",null,[e("tr",null,[vf,e("td",Sf,[n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[Tf]),_:1})])]),kf])]),Cf,e("p",null,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Pf]),_:1})]),wf,e("p",null,[e("a",Mf,[t("DefaultLogger/initLogger.impl.ts:13"),n(l)])]),Ef,If,Ff,Df,Rf,e("table",null,[Bf,e("tbody",null,[e("tr",null,[Nf,e("td",Lf,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[Of]),_:1})]),Hf])])]),Af,jf,Gf,qf,e("p",null,[e("a",Vf,[t("core/types/isCustomMessage.impl.ts:10"),n(l)])]),zf,e("p",null,[e("a",Zf,[t("core/HttpServer/types/isHttpExposedServiceMeta.impl.ts:8"),n(l)])]),Uf,Qf,Kf,Wf,e("table",null,[$f,e("tbody",null,[e("tr",null,[Yf,e("td",Jf,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[Xf]),_:1})])])])]),eg,tg,ng,e("p",null,[e("a",og,[t("core/types/infoType/isInfoMessage.impl.ts:4"),n(l)])]),sg,lg,dg,ag,e("table",null,[ig,e("tbody",null,[e("tr",null,[cg,e("td",rg,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[ug]),_:1})])])])]),hg,_g,pg,e("p",null,[e("a",fg,[t("core/types/infoType/isInfoServiceFunctionAdded.impl.ts:5"),n(l)])]),gg,e("table",null,[mg,e("tbody",null,[e("tr",null,[yg,e("td",bg,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[xg]),_:1})])]),e("tr",null,[vg,e("td",Sg,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[Tg]),_:1})])]),e("tr",null,[kg,e("td",Cg,[n(o,{to:"/api/modules/purista_core.html#subscriptionstorageentry"},{default:s(()=>[Pg]),_:1})])])])]),wg,Mg,Eg,e("p",null,[e("a",Ig,[t("DefaultEventBridge/isMessageMatchingSubscription.impl.ts:4"),n(l)])]),Fg,e("p",null,[e("a",Dg,[t("helper/throwIfNotValidMessage.impl.ts:10"),n(l)])]),Rg,e("table",null,[Bg,e("tbody",null,[e("tr",null,[Ng,e("td",Lg,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[Og]),_:1})])]),Hg,Ag,jg,Gg,qg,Vg])]),zg,e("p",null,[e("a",Zg,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:31"),n(l)])]),Ug,e("p",null,[t("Ƭ "),Qg,t("<"),Kg,t(", "),Wg,t(", "),$g,t(", "),Yg,t(", "),Jg,t(", "),Xg,t(">: ("),em,t(": "),tm,t(", "),nm,t(": "),n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[om]),_:1}),t("<"),sm,t(", "),lm,t(">, "),dm,t(": "),am,t("<"),im,t(">, "),cm,t(": "),rm,t("<"),um,t(">, "),hm,t(": "),_m,t("<"),pm,t(">) => "),fm,t("<"),gm,t(">")]),mm,e("table",null,[ym,e("tbody",null,[e("tr",null,[bm,e("td",xm,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[vm]),_:1})])]),Sm,Tm,km,Cm,Pm])]),wm,e("table",null,[Mm,e("tbody",null,[Em,e("tr",null,[Im,e("td",Fm,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[Dm]),_:1}),t("<"),Rm,t(", "),Bm,t(">")])]),Nm,Lm,Om])]),Hm,Am,jm,e("p",null,[e("a",Gm,[t("core/types/commandType/CommandAfterGuardHook.ts:10"),n(l)])]),qm,Vm,e("p",null,[t("Ƭ "),zm,t("<"),Zm,t(", "),Um,t(", "),Qm,t(", "),Km,t(", "),Wm,t(">: ("),$m,t(": "),Ym,t(", "),Jm,t(": "),n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[Xm]),_:1}),t("<"),ey,t(", "),ty,t(">, "),ny,t(": "),oy,t("<"),sy,t(">, "),ly,t(": "),dy,t("<"),ay,t(">) => "),iy,t("<"),cy,t(">")]),ry,e("table",null,[uy,e("tbody",null,[e("tr",null,[hy,e("td",_y,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[py]),_:1})])]),fy,gy,my,yy])]),by,e("table",null,[xy,e("tbody",null,[vy,e("tr",null,[Sy,e("td",Ty,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[ky]),_:1}),t("<"),Cy,t(", "),Py,t(">")])]),wy,My])]),Ey,Iy,Fy,e("p",null,[e("a",Dy,[t("core/types/commandType/CommandBeforeGuardHook.ts:11"),n(l)])]),Ry,e("table",null,[By,e("tbody",null,[e("tr",null,[Ny,e("td",Ly,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[Oy]),_:1}),t(" = "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[Hy]),_:1})])]),e("tr",null,[Ay,e("td",jy,[n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[Gy]),_:1})])]),qy,Vy,zy,Zy,Uy,Qy])]),Ky,e("table",null,[Wy,e("tbody",null,[e("tr",null,[$y,e("td",Yy,[n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[Jy]),_:1}),t("<"),Xy,t(", "),eb,t(", "),tb,t(", "),nb,t(", "),ob,t(", "),sb,t(">")]),lb]),db,ab,e("tr",null,[ib,e("td",cb,[n(o,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:s(()=>[rb]),_:1})]),ub]),hb,e("tr",null,[_b,e("td",pb,[t("{ "),fb,t(": "),gb,t("<"),mb,t(", "),n(o,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:s(()=>[yb]),_:1}),t("<"),bb,t(", "),xb,t(", "),vb,t(", "),Sb,t(", "),Tb,t(", "),kb,t(">> ; "),Cb,t(": "),Pb,t("<"),wb,t(", "),n(o,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:s(()=>[Mb]),_:1}),t("<"),Eb,t(", "),Ib,t(", "),Fb,t(", "),Db,t(", "),Rb,t(">> ; "),Bb,t(": { "),Nb,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[Lb]),_:1}),t("<"),Ob,t(", "),Hb,t(", "),Ab,t("> ; "),jb,t(": "),Gb,t(" ; "),qb,t(": "),Vb,t(" } ; "),zb,t(": { "),Zb,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[Ub]),_:1}),t("<"),Qb,t(", "),Kb,t(", "),Wb,t(", "),$b,t(", "),Yb,t("> ; "),Jb,t(": "),Xb,t(" } }")]),ex]),e("tr",null,[tx,e("td",nx,[ox,t("<"),sx,t(", "),n(o,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:s(()=>[lx]),_:1}),t("<"),dx,t(", "),ax,t(", "),ix,t(", "),cx,t(", "),rx,t(", "),ux,t(">>")]),hx]),e("tr",null,[_x,e("td",px,[fx,t("<"),gx,t(", "),n(o,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:s(()=>[mx]),_:1}),t("<"),yx,t(", "),bx,t(", "),xx,t(", "),vx,t(", "),Sx,t(">>")]),Tx]),e("tr",null,[kx,e("td",Cx,[t("{ "),Px,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[wx]),_:1}),t("<"),Mx,t(", "),Ex,t(", "),Ix,t("> ; "),Fx,t(": "),Dx,t(" ; "),Rx,t(": "),Bx,t(" }")]),Nx]),e("tr",null,[Lx,e("td",Ox,[n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[Hx]),_:1}),t("<"),Ax,t(", "),jx,t(", "),Gx,t(">")]),qx]),Vx,zx,e("tr",null,[Zx,e("td",Ux,[t("{ "),Qx,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[Kx]),_:1}),t("<"),Wx,t(", "),$x,t(", "),Yx,t(", "),Jx,t(", "),Xx,t("> ; "),e3,t(": "),t3,t(" }")]),n3]),e("tr",null,[o3,e("td",s3,[n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[l3]),_:1}),t("<"),d3,t(", "),a3,t(", "),i3,t(", "),c3,t(", "),r3,t(">")]),u3]),h3,_3])]),p3,e("p",null,[e("a",f3,[t("core/types/commandType/CommandDefinition.ts:17"),n(l)])]),g3,m3,e("p",null,[t("Ƭ "),y3,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[b3]),_:1}),t("<{ "),x3,t(": "),v3,t(" ; "),S3,t(": "),T3,t(" ; "),k3,t(": "),n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[C3]),_:1}),t(" ; "),P3,t(": "),w3,t(" ; "),M3,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[E3]),_:1}),t(" ; "),I3,t(": { "),F3,t(": "),D3,t(" ; "),R3,t(": "),B3,t(" ; "),N3,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[L3]),_:1}),t(" } ; "),O3,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessagesenderaddress"},{default:s(()=>[H3]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[A3]),_:1}),t(">")]),j3,G3,e("p",null,[e("a",q3,[t("core/types/commandType/CommandErrorResponse.ts:13"),n(l)])]),V3,z3,e("p",null,[t("Ƭ "),Z3,t("<"),U3,t(", "),Q3,t(", "),K3,t(", "),W3,t(", "),$3,t(", "),Y3,t(">: ("),J3,t(": "),X3,t(", "),ev,t(": "),n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[tv]),_:1}),t("<"),nv,t(", "),ov,t(">, "),sv,t(": "),lv,t("<"),dv,t(">, "),av,t(": "),iv,t("<"),cv,t(">) => "),rv,t("<"),uv,t(">")]),hv,e("table",null,[_v,e("tbody",null,[e("tr",null,[pv,e("td",fv,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[gv]),_:1})])]),mv,yv,bv,xv,vv])]),Sv,e("table",null,[Tv,e("tbody",null,[kv,e("tr",null,[Cv,e("td",Pv,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[wv]),_:1}),t("<"),Mv,t(", "),Ev,t(">")])]),Iv,Fv])]),Dv,Rv,Bv,e("p",null,[e("a",Nv,[t("core/types/commandType/CommandFunction.ts:9"),n(l)])]),Lv,Ov,e("p",null,[t("Ƭ "),Hv,t("<"),Av,t(", "),jv,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Gv]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[qv]),_:1}),t(" & "),n(o,{to:"/api/modules/purista_core.html#commandfunctioncontextenhancements"},{default:s(()=>[Vv]),_:1}),t("<"),zv,t(", "),Zv,t(">>")]),Uv,e("p",null,[e("a",Qv,[t("core/types/commandType/CommandFunctionContext.ts:47"),n(l)])]),Kv,e("table",null,[Wv,e("tbody",null,[e("tr",null,[$v,e("td",Yv,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[Jv]),_:1})]),Xv]),e("tr",null,[e2,e("td",t2,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[n2]),_:1})]),o2]),e("tr",null,[s2,e("td",l2,[d2,t("<"),n(o,{to:"/api/modules/purista_core.html#command"},{default:s(()=>[a2]),_:1}),t("<"),i2,t(", "),c2,t(">>")]),r2])])]),u2,e("p",null,[e("a",h2,[t("core/types/commandType/CommandFunctionContext.ts:16"),n(l)])]),_2,p2,e("p",null,[t("Ƭ "),f2,t("<"),g2,t(">: "),n(o,{to:"/api/modules/purista_core.html#commandsuccessresponse"},{default:s(()=>[m2]),_:1}),t("<"),y2,t("> | "),n(o,{to:"/api/modules/purista_core.html#commanderrorresponse"},{default:s(()=>[b2]),_:1})]),x2,e("p",null,[e("a",v2,[t("core/types/commandType/CommandResponse.ts:9"),n(l)])]),S2,T2,e("p",null,[t("Ƭ "),k2,t("<"),C2,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[P2]),_:1}),t("<{ "),w2,t(": "),n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[M2]),_:1}),t(" ; "),E2,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[I2]),_:1}),t(" ; "),F2,t(": "),D2,t(" ; "),R2,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessagesenderaddress"},{default:s(()=>[B2]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[N2]),_:1}),t(">")]),L2,e("p",null,[e("a",O2,[t("core/types/commandType/CommandSuccessResponse.ts:13"),n(l)])]),H2,A2,e("p",null,[t("Ƭ "),j2,t("<"),G2,t(", "),q2,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[V2]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[z2]),_:1}),t(" & { "),Z2,t(": "),U2,t("<"),n(o,{to:"/api/modules/purista_core.html#command"},{default:s(()=>[Q2]),_:1}),t("<"),K2,t(", "),W2,t(">> }>")]),$2,e("p",null,[e("a",Y2,[t("core/types/commandType/CommandTransformFunctionContext.ts:8"),n(l)])]),J2,X2,e("p",null,[t("Ƭ "),e4,t("<"),t4,t(", "),n4,t(", "),o4,t(", "),s4,t(", "),l4,t(">: ("),d4,t(": "),a4,t(", "),i4,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[c4]),_:1}),t("<"),r4,t(", "),u4,t(">, "),h4,t(": "),_4,t("<"),p4,t(">, "),f4,t(": "),g4,t("<"),m4,t(">) => "),y4,t("<{ "),b4,t(": "),x4,t("<"),v4,t("> ; "),S4,t(": "),T4,t("<"),k4,t("> }>")]),C4,e("table",null,[P4,e("tbody",null,[w4,e("tr",null,[M4,e("td",E4,[n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[I4]),_:1}),t("<"),F4,t(", "),D4,t(">")])]),R4,B4])]),N4,e("p",null,[e("a",L4,[t("core/types/commandType/CommandTransformInputHook.ts:12"),n(l)])]),O4,H4,e("p",null,[t("Ƭ "),A4,t("<"),j4,t(", "),G4,t(", "),q4,t(", "),V4,t(", "),z4,t(">: ("),Z4,t(": "),U4,t(", "),Q4,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[K4]),_:1}),t("<"),W4,t(", "),$4,t(">, "),Y4,t(": "),J4,t("<"),X4,t(">, "),eS,t(": "),tS,t("<"),nS,t(">) => "),oS,t("<"),sS,t(">")]),lS,e("table",null,[dS,e("tbody",null,[aS,e("tr",null,[iS,e("td",cS,[n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[rS]),_:1}),t("<"),uS,t(", "),hS,t(">")])]),_S,pS])]),fS,gS,mS,e("p",null,[e("a",yS,[t("core/types/commandType/CommandTransformOutputHook.ts:7"),n(l)])]),bS,xS,vS,SS,TS,e("table",null,[kS,e("tbody",null,[e("tr",null,[CS,e("td",PS,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[wS]),_:1})])])])]),MS,ES,IS,FS,e("p",null,[e("a",DS,[t("core/types/commandType/isCommand.impl.ts:12"),n(l)])]),RS,e("p",null,[e("a",BS,[t("core/types/commandType/isCommandErrorResponse.impl.ts:12"),n(l)])]),NS,LS,OS,HS,AS,e("table",null,[jS,e("tbody",null,[e("tr",null,[GS,e("td",qS,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[VS]),_:1})])])])]),zS,ZS,US,QS,e("p",null,[e("a",KS,[t("core/types/commandType/isCommandResponse.impl.ts:12"),n(l)])]),WS,$S,YS,JS,XS,e("table",null,[eT,e("tbody",null,[e("tr",null,[tT,e("td",nT,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[oT]),_:1})])])])]),sT,lT,dT,aT,e("p",null,[e("a",iT,[t("core/types/commandType/isCommandSuccessResponse.impl.ts:12"),n(l)])]),cT,e("p",null,[e("a",rT,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:61"),n(l)])]),uT,e("p",null,[e("a",hT,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:17"),n(l)])]),_T,pT,fT,e("p",null,[e("a",gT,[t("core/EventBridge/types/EventBridge.ts:19"),n(l)])]),mT,yT,bT,xT,e("table",null,[vT,e("tbody",null,[ST,TT,kT,e("tr",null,[CT,e("td",PT,[n(o,{to:"/api/classes/purista_core.UnhandledError.html"},{default:s(()=>[wT]),_:1}),t(" | "),MT]),ET]),IT])]),FT,e("p",null,[e("a",DT,[t("core/EventBridge/types/EventBridgeEvents.ts:20"),n(l)])]),RT,BT,NT,LT,e("table",null,[OT,e("tbody",null,[e("tr",null,[HT,e("td",AT,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[jT]),_:1})])])])]),GT,qT,VT,e("p",null,[e("a",zT,[t("core/helper/getCommandQueueName.impl.ts:10"),n(l)])]),ZT,e("p",null,[e("a",UT,[t("helper/string/convertToCamelCase.impl.ts:9"),n(l)])]),QT,e("p",null,[e("a",KT,[t("helper/string/convertToKebabCase.impl.ts:9"),n(l)])]),WT,e("p",null,[e("a",$T,[t("helper/string/convertToPascalCase.impl.ts:9"),n(l)])]),YT,e("p",null,[e("a",JT,[t("helper/string/convertToSnakeCase.impl.ts:9"),n(l)])]),XT,ek,e("p",null,[t("▸ "),tk,t("("),nk,t(", "),ok,t(", "),sk,t(", "),lk,t("): "),dk,t("<"),ak,t("<{ "),ik,t(": "),ck,t(" ; "),rk,t(": "),uk,t(" ; "),hk,t(": "),_k,t(" ; "),pk,t(": "),fk,t(" ; "),gk,t(": "),mk,t(" ; "),yk,t(": "),bk,t(" ; "),xk,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[vk]),_:1}),t(" ; "),Sk,t(": "),Tk,t(" ; "),kk,t(": { "),Ck,t(": "),Pk,t(" ; "),wk,t(": "),Mk,t(" ; "),Ek,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[Ik]),_:1}),t(" } ; "),Fk,t(": "),Dk,t(" ; "),Rk,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Bk,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Nk,t(": "),Lk,t(" ; "),Ok,t(": "),Hk,t(" }, "),Ak,t(">>")]),jk,Gk,e("table",null,[qk,e("tbody",null,[Vk,e("tr",null,[zk,e("td",Zk,[Uk,t("<{ "),Qk,t(": "),Kk,t(" ; "),Wk,t(": "),$k,t(" ; "),Yk,t(": "),Jk,t(" ; "),Xk,t(": "),e5,t(" ; "),t5,t(": "),n5,t(" ; "),o5,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[s5]),_:1}),t(" ; "),l5,t(": "),d5,t(" ; "),a5,t(": { "),i5,t(": "),c5,t(" ; "),r5,t(": "),u5,t(" } ; "),h5,t(": "),_5,t(" ; "),p5,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[f5]),_:1}),t(" ; "),g5,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),m5,t(": "),y5,t(" ; "),b5,t(": "),x5,t(" }>")]),v5]),e("tr",null,[S5,e("td",T5,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[k5]),_:1})]),C5]),P5])]),w5,e("p",null,[M5,t("<"),E5,t("<{ "),I5,t(": "),F5,t(" ; "),D5,t(": "),R5,t(" ; "),B5,t(": "),N5,t(" ; "),L5,t(": "),O5,t(" ; "),H5,t(": "),A5,t(" ; "),j5,t(": "),G5,t(" ; "),q5,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[V5]),_:1}),t(" ; "),z5,t(": "),Z5,t(" ; "),U5,t(": { "),Q5,t(": "),K5,t(" ; "),W5,t(": "),$5,t(" ; "),Y5,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[J5]),_:1}),t(" } ; "),X5,t(": "),e6,t(" ; "),t6,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),n6,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),o6,t(": "),s6,t(" ; "),l6,t(": "),d6,t(" }, "),a6,t(">>")]),i6,c6,e("p",null,[e("a",r6,[t("core/helper/createErrorResponse.impl.ts:18"),n(l)])]),u6,h6,e("p",null,[t("▸ "),_6,t("("),p6,t(", "),f6,t(", "),g6,t("): "),n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[m6]),_:1})]),y6,e("table",null,[b6,e("tbody",null,[e("tr",null,[x6,e("td",v6,[n(o,{to:"/api/modules/purista_core.html#infomessagetype"},{default:s(()=>[S6]),_:1})]),T6]),k6,C6,P6,w6,M6,e("tr",null,[E6,e("td",I6,[F6,t("<"),n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[D6]),_:1}),t(">")]),R6])])]),B6,e("p",null,[n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[N6]),_:1})]),L6,e("p",null,[e("a",O6,[t("core/helper/createInfoMessage.impl.ts:14"),n(l)])]),H6,A6,e("p",null,[t("▸ "),j6,t("<"),G6,t(">("),q6,t(", "),V6,t(", "),z6,t(", "),Z6,t(", "),U6,t(", "),Q6,t("): "),K6,t("<{ "),W6,t(": "),$6,t(" ; "),Y6,t(": "),J6,t(" ; "),X6,t(": "),e9,t(" ; "),t9,t(": "),n9,t(" ; "),o9,t(": "),s9,t(" ; "),l9,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[d9]),_:1}),t(" ; "),a9,t(": "),i9,t(" ; "),c9,t(": "),r9,t(" ; "),u9,t(": "),h9,t(" ; "),_9,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),p9,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),f9,t(": "),g9,t(" ; "),m9,t(": "),y9,t(" }>")]),b9,e("table",null,[x9,e("tbody",null,[v9,e("tr",null,[S9,e("td",T9,[k9,t("<{ "),C9,t(": "),P9,t(" ; "),w9,t(": "),M9,t(" ; "),E9,t(": "),I9,t(" ; "),F9,t(": "),D9,t(" ; "),R9,t(": "),B9,t(" ; "),N9,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[L9]),_:1}),t(" ; "),O9,t(": "),H9,t(" ; "),A9,t(": { "),j9,t(": "),G9,t(" ; "),q9,t(": "),V9,t(" } ; "),z9,t(": "),Z9,t(" ; "),U9,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Q9]),_:1}),t(" ; "),K9,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),W9,t(": "),$9,t(" ; "),Y9,t(": "),J9,t(" }>")]),X9]),e0,t0,n0,o0])]),s0,e("p",null,[l0,t("<{ "),d0,t(": "),a0,t(" ; "),i0,t(": "),c0,t(" ; "),r0,t(": "),u0,t(" ; "),h0,t(": "),_0,t(" ; "),p0,t(": "),f0,t(" ; "),g0,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[m0]),_:1}),t(" ; "),y0,t(": "),b0,t(" ; "),x0,t(": "),v0,t(" ; "),S0,t(": "),T0,t(" ; "),k0,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),C0,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),P0,t(": "),w0,t(" ; "),M0,t(": "),E0,t(" }>")]),I0,e("p",null,[e("a",F0,[t("core/helper/createSuccessResponse.impl.ts:15"),n(l)])]),D0,e("table",null,[R0,e("tbody",null,[e("tr",null,[B0,e("td",N0,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[L0]),_:1})])]),O0])]),H0,A0,j0,e("p",null,[e("a",G0,[t("core/helper/serializeOtp.impl.ts:26"),n(l)])]),q0,e("table",null,[V0,e("tbody",null,[e("tr",null,[z0,e("td",Z0,[U0,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[Q0]),_:1}),t(">")]),K0]),W0])]),$0,Y0,J0,e("p",null,[e("a",X0,[t("core/helper/getCleanedMessage.impl.ts:15"),n(l)])]),e7,t7,n7,o7,e("table",null,[s7,e("tbody",null,[e("tr",null,[l7,e("td",d7,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[a7]),_:1})])])])]),i7,c7,r7,e("p",null,[e("a",u7,[t("core/helper/getErrorMessageForCode.impl.ts:10"),n(l)])]),h7,e("p",null,[e("a",_7,[t("core/helper/getNewCorrelationId.impl.ts:10"),n(l)])]),p7,e("p",null,[e("a",f7,[t("core/helper/getNewEBMessageId.impl.ts:11"),n(l)])]),g7,e("p",null,[e("a",m7,[t("core/helper/getNewInstanceId.impl.ts:9"),n(l)])]),y7,e("p",null,[e("a",b7,[t("core/helper/getNewTraceId.impl.ts:9"),n(l)])]),x7,v7,S7,T7,e("table",null,[k7,e("tbody",null,[e("tr",null,[C7,e("td",P7,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[w7]),_:1})])])])]),M7,E7,I7,e("p",null,[e("a",F7,[t("core/helper/getSubscriptionQueueName.impl.ts:10"),n(l)])]),D7,e("p",null,[e("a",R7,[t("core/helper/getUniqueId.impl.ts:11"),n(l)])]),B7,e("table",null,[N7,e("tbody",null,[e("tr",null,[L7,e("td",O7,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[H7]),_:1})]),A7,j7]),e("tr",null,[G7,e("td",q7,[n(o,{to:"/api/modules/purista_core.html#shutdownentry"},{default:s(()=>[V7]),_:1}),t("[]")]),z7,Z7]),U7])]),Q7,K7,W7,e("p",null,[e("a",$7,[t("helper/gracefulShutdown.impl.ts:36"),n(l)])]),Y7,e("p",null,[e("a",J7,[t("core/helper/isDevelop.impl.ts:6"),n(l)])]),X7,e("p",null,[e("a",e8,[t("core/helper/serializeOtp.impl.ts:11"),n(l)])]),t8,n8,o8,s8,e("p",null,[e("a",l8,[t("core/types/ServiceEvents.ts:11"),n(l)])]),d8,e("p",null,[e("a",a8,[t("core/Service/Service.impl.ts:74"),n(l)])]),i8,e("table",null,[c8,e("tbody",null,[r8,u8,e("tr",null,[h8,e("td",_8,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[p8]),_:1}),t(" = "),n(o,{to:"/api/classes/purista_core.Service.html"},{default:s(()=>[f8]),_:1}),t("<"),g8,t(">")])])])]),m8,e("p",null,[e("a",y8,[t("ServiceBuilder/ServiceBuilder.impl.ts:38"),n(l)])]),b8,e("p",null,[e("a",x8,[t("core/types/ServiceClass.ts:11"),n(l)])]),v8,e("table",null,[S8,e("tbody",null,[e("tr",null,[T8,e("td",k8,[n(o,{to:"/api/modules/purista_core.html#commanddefinitionlist"},{default:s(()=>[C8]),_:1}),t("<"),P8,t(">")]),w8]),M8,e("tr",null,[E8,e("td",I8,[n(o,{to:"/api/interfaces/purista_core.ConfigStore.html"},{default:s(()=>[F8]),_:1})]),D8]),e("tr",null,[R8,e("td",B8,[n(o,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:s(()=>[N8]),_:1})]),L8]),e("tr",null,[O8,e("td",H8,[n(o,{to:"/api/modules/purista_core.html#serviceinfotype"},{default:s(()=>[A8]),_:1})]),j8]),e("tr",null,[G8,e("td",q8,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[V8]),_:1})]),z8]),e("tr",null,[Z8,e("td",U8,[n(o,{to:"/api/interfaces/purista_core.SecretStore.html"},{default:s(()=>[Q8]),_:1})]),K8]),W8,e("tr",null,[$8,e("td",Y8,[n(o,{to:"/api/interfaces/purista_core.StateStore.html"},{default:s(()=>[J8]),_:1})]),X8]),e("tr",null,[eC,e("td",tC,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinitionlist"},{default:s(()=>[nC]),_:1}),t("<"),oC,t(">")]),sC])])]),lC,e("p",null,[e("a",dC,[t("core/types/ServiceConstructorInput.ts:15"),n(l)])]),aC,e("table",null,[iC,e("tbody",null,[cC,rC,e("tr",null,[uC,e("td",hC,[t("{ "),_C,t(": "),pC,t(" ; "),fC,t(": "),n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[gC]),_:1}),t(" ; "),mC,t(": "),n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[yC]),_:1}),t(" }")]),bC]),xC,e("tr",null,[vC,e("td",SC,[n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[TC]),_:1})]),kC]),e("tr",null,[CC,e("td",PC,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[wC]),_:1})]),MC]),e("tr",null,[EC,e("td",IC,[t("{ "),FC,t(": "),n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[DC]),_:1}),t(" ; "),RC,t(": "),BC,t(" ; "),NC,t(": "),n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[LC]),_:1}),t(" }")]),OC]),e("tr",null,[HC,e("td",AC,[n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[jC]),_:1})]),GC]),qC,e("tr",null,[VC,e("td",zC,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[ZC]),_:1})]),UC]),QC,KC,WC,e("tr",null,[$C,e("td",YC,[t("{ "),JC,t(": "),XC,t(" ; "),eP,t(": "),tP,t(" ; "),nP,t(": "),n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[oP]),_:1}),t(" }")]),sP]),lP,dP,e("tr",null,[aP,e("td",iP,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[cP]),_:1})]),rP]),e("tr",null,[uP,e("td",hP,[t("{ "),_P,t(": "),pP,t(" ; "),fP,t(": "),gP,t(" ; "),mP,t(": "),n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[yP]),_:1}),t(" }")]),bP]),xP,vP,e("tr",null,[SP,e("td",TP,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[kP]),_:1})]),CP])])]),PP,e("p",null,[e("a",wP,[t("core/types/ServiceEvents.ts:54"),n(l)])]),MP,e("p",null,[e("a",EP,[t("core/ConfigStore/ConfigStoreBaseClass.impl.ts:11"),n(l)])]),IP,e("p",null,[e("a",FP,[t("DefaultConfigStore/DefaultConfigStore.impl.ts:25"),n(l)])]),DP,e("p",null,[e("a",RP,[t("DefaultSecretStore/DefaultSecretStore.impl.ts:33"),n(l)])]),BP,NP,LP,e("p",null,[e("a",OP,[t("DefaultStateStore/DefaultStateStore.impl.ts:11"),n(l)])]),HP,e("p",null,[e("a",AP,[t("core/SecretStore/SecretStoreBaseClass.impl.ts:11"),n(l)])]),jP,e("p",null,[e("a",GP,[t("core/StateStore/StateStoreBaseClass.impl.ts:11"),n(l)])]),qP,VP,zP,e("p",null,[e("a",ZP,[t("core/ConfigStore/types/ConfigStore.ts:10"),n(l)])]),UP,QP,KP,e("p",null,[e("a",WP,[t("core/SecretStore/types/SecretStore.ts:9"),n(l)])]),$P,YP,JP,e("p",null,[e("a",XP,[t("core/StateStore/types/StateStore.ts:10"),n(l)])]),ew,e("p",null,[e("a",tw,[t("core/ConfigStore/types/ConfigDeleteFunction.ts:2"),n(l)])]),nw,e("p",null,[e("a",ow,[t("core/ConfigStore/types/ConfigGetterFunction.ts:2"),n(l)])]),sw,e("p",null,[e("a",lw,[t("core/ConfigStore/types/ConfigSetterFunction.ts:2"),n(l)])]),dw,e("p",null,[e("a",aw,[t("core/SecretStore/types/SecretDeleteFunction.ts:2"),n(l)])]),iw,e("p",null,[e("a",cw,[t("core/SecretStore/types/SecretGetterFunction.ts:2"),n(l)])]),rw,e("p",null,[e("a",uw,[t("core/SecretStore/types/SecretSetterFunction.ts:2"),n(l)])]),hw,e("p",null,[e("a",_w,[t("core/StateStore/types/StateDeleteFunction.ts:2"),n(l)])]),pw,e("p",null,[e("a",fw,[t("core/StateStore/types/StateGetterFunction.ts:2"),n(l)])]),gw,e("p",null,[e("a",mw,[t("core/StateStore/types/StateSetterFunction.ts:2"),n(l)])]),yw,e("table",null,[bw,e("tbody",null,[e("tr",null,[xw,e("td",vw,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[Sw]),_:1}),t(" = "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[Tw]),_:1})])]),kw,Cw,Pw,ww,Mw,Ew])]),Iw,e("p",null,[e("a",Fw,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:30"),n(l)])]),Dw,e("table",null,[Rw,e("tbody",null,[Bw,e("tr",null,[Nw,e("td",Lw,[n(o,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:s(()=>[Ow]),_:1})]),Hw]),Aw,e("tr",null,[jw,e("td",Gw,[n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[qw]),_:1})]),Vw]),zw,Zw,Uw,e("tr",null,[Qw,e("td",Kw,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[Ww]),_:1})]),$w]),e("tr",null,[Yw,e("td",Jw,[t("{ "),Xw,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[eM]),_:1}),t(" ; "),tM,t(": "),nM,t(" ; "),oM,t(": "),sM,t(" ; "),lM,t(": "),dM,t(" }")]),aM]),e("tr",null,[iM,e("td",cM,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[rM]),_:1})]),uM]),hM,_M,pM,e("tr",null,[fM,e("td",gM,[t("{ "),mM,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[yM]),_:1}),t(" ; "),bM,t(": "),xM,t(" ; "),vM,t(": "),SM,t(" ; "),TM,t(": "),kM,t(" }")]),CM]),e("tr",null,[PM,e("td",wM,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[MM]),_:1})]),EM]),IM,FM,DM,e("tr",null,[RM,e("td",BM,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[NM]),_:1})]),LM])])]),OM,e("p",null,[e("a",HM,[t("core/types/subscription/Subscription.ts:12"),n(l)])]),AM,jM,e("p",null,[t("Ƭ "),GM,t("<"),qM,t(", "),VM,t(", "),zM,t(", "),ZM,t(">: ("),UM,t(": "),QM,t(", "),KM,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[WM]),_:1}),t(", "),$M,t(": "),YM,t("<"),JM,t(">, "),XM,t(": "),eE,t("<"),tE,t(">, "),nE,t(": "),oE,t("<"),sE,t(">) => "),lE,t("<"),dE,t(">")]),aE,e("table",null,[iE,e("tbody",null,[e("tr",null,[cE,e("td",rE,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[uE]),_:1})])]),hE,_E,pE])]),fE,e("table",null,[gE,e("tbody",null,[mE,e("tr",null,[yE,e("td",bE,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[xE]),_:1})])]),vE,SE,TE])]),kE,CE,PE,e("p",null,[e("a",wE,[t("core/types/subscription/SubscriptionAfterGuardHook.ts:10"),n(l)])]),ME,EE,e("p",null,[t("Ƭ "),IE,t("<"),FE,t(", "),DE,t(", "),RE,t(">: ("),BE,t(": "),NE,t(", "),LE,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[OE]),_:1}),t(", "),HE,t(": "),AE,t("<"),jE,t(">, "),GE,t(": "),qE,t("<"),VE,t(">) => "),zE,t("<"),ZE,t(">")]),UE,e("table",null,[QE,e("tbody",null,[e("tr",null,[KE,e("td",WE,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[$E]),_:1})])]),YE,JE])]),XE,e("table",null,[eI,e("tbody",null,[tI,e("tr",null,[nI,e("td",oI,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[sI]),_:1})])]),lI,dI])]),aI,iI,cI,e("p",null,[e("a",rI,[t("core/types/subscription/SubscriptionBeforeGuardHook.ts:11"),n(l)])]),uI,e("table",null,[hI,e("tbody",null,[e("tr",null,[_I,e("td",pI,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[fI]),_:1}),t(" = "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[gI]),_:1})])]),e("tr",null,[mI,e("td",yI,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinitionmetadatabase"},{default:s(()=>[bI]),_:1})])]),xI,vI,SI,TI,kI,CI])]),PI,e("table",null,[wI,e("tbody",null,[e("tr",null,[MI,e("td",EI,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunction"},{default:s(()=>[II]),_:1}),t("<"),FI,t(", "),DI,t(", "),RI,t(", "),BI,t(", "),NI,t(", "),LI,t(">")]),OI]),HI,e("tr",null,[AI,e("td",jI,[n(o,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:s(()=>[GI]),_:1})]),qI]),VI,e("tr",null,[zI,e("td",ZI,[t("{ "),UI,t(": "),QI,t("<"),KI,t(", "),n(o,{to:"/api/modules/purista_core.html#subscriptionafterguardhook"},{default:s(()=>[WI]),_:1}),t("<"),$I,t(", "),YI,t(", "),JI,t(", "),XI,t(">> ; "),eF,t(": "),tF,t("<"),nF,t(", "),n(o,{to:"/api/modules/purista_core.html#subscriptionbeforeguardhook"},{default:s(()=>[oF]),_:1}),t("<"),sF,t(", "),lF,t(", "),dF,t(">> ; "),aF,t(": { "),iF,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:s(()=>[cF]),_:1}),t("<"),rF,t(", "),uF,t(", "),hF,t("> ; "),_F,t(": "),pF,t(" ; "),fF,t(": "),gF,t(" } ; "),mF,t(": { "),yF,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:s(()=>[bF]),_:1}),t("<"),xF,t(", "),vF,t(", "),SF,t(", "),TF,t("> ; "),kF,t(": "),CF,t(" } }")]),PF]),e("tr",null,[wF,e("td",MF,[EF,t("<"),IF,t(", "),n(o,{to:"/api/modules/purista_core.html#subscriptionafterguardhook"},{default:s(()=>[FF]),_:1}),t("<"),DF,t(", "),RF,t(", "),BF,t(", "),NF,t(">>")]),LF]),e("tr",null,[OF,e("td",HF,[AF,t("<"),jF,t(", "),n(o,{to:"/api/modules/purista_core.html#subscriptionbeforeguardhook"},{default:s(()=>[GF]),_:1}),t("<"),qF,t(", "),VF,t(", "),zF,t(">>")]),ZF]),e("tr",null,[UF,e("td",QF,[t("{ "),KF,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:s(()=>[WF]),_:1}),t("<"),$F,t(", "),YF,t(", "),JF,t("> ; "),XF,t(": "),eD,t(" ; "),tD,t(": "),nD,t(" }")]),oD]),e("tr",null,[sD,e("td",lD,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:s(()=>[dD]),_:1}),t("<"),aD,t(", "),iD,t(", "),cD,t(">")]),rD]),uD,hD,e("tr",null,[_D,e("td",pD,[t("{ "),fD,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:s(()=>[gD]),_:1}),t("<"),mD,t(", "),yD,t(", "),bD,t(", "),xD,t("> ; "),vD,t(": "),SD,t(" }")]),TD]),e("tr",null,[kD,e("td",CD,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:s(()=>[PD]),_:1}),t("<"),wD,t(", "),MD,t(", "),ED,t(", "),ID,t(">")]),FD]),DD,e("tr",null,[RD,e("td",BD,[n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[ND]),_:1})]),LD]),OD,e("tr",null,[HD,e("td",AD,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[jD]),_:1})]),GD]),e("tr",null,[qD,e("td",VD,[t("{ "),zD,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[ZD]),_:1}),t(" ; "),UD,t(": "),QD,t(" ; "),KD,t(": "),WD,t(" ; "),$D,t(": "),YD,t(" }")]),JD]),e("tr",null,[XD,e("td",eR,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[tR]),_:1})]),nR]),oR,sR,lR,e("tr",null,[dR,e("td",aR,[t("{ "),iR,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[cR]),_:1}),t(" ; "),rR,t(": "),uR,t(" ; "),hR,t(": "),_R,t(" ; "),pR,t(": "),fR,t(" }")]),gR]),e("tr",null,[mR,e("td",yR,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[bR]),_:1})]),xR]),vR,SR,TR,kR,CR])]),PR,e("p",null,[e("a",wR,[t("core/types/subscription/SubscriptionDefinition.ts:20"),n(l)])]),MR,ER,e("p",null,[t("Ƭ "),IR,t("<"),FR,t(", "),DR,t(", "),RR,t(", "),BR,t(", "),NR,t(", "),LR,t(">: ("),OR,t(": "),HR,t(", "),AR,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[jR]),_:1}),t(", "),GR,t(": "),qR,t("<"),VR,t(">, "),zR,t(": "),ZR,t("<"),UR,t(">) => "),QR,t("<"),KR,t(">")]),WR,e("table",null,[$R,e("tbody",null,[e("tr",null,[YR,e("td",JR,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[XR]),_:1})])]),eB,tB,nB,oB,sB])]),lB,e("table",null,[dB,e("tbody",null,[aB,e("tr",null,[iB,e("td",cB,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[rB]),_:1})])]),uB,hB])]),_B,pB,fB,e("p",null,[e("a",gB,[t("core/types/subscription/SubscriptionFunction.ts:8"),n(l)])]),mB,yB,e("p",null,[t("Ƭ "),bB,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[xB]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[vB]),_:1}),t(" & "),n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontextenhancements"},{default:s(()=>[SB]),_:1}),t(">")]),TB,kB,e("p",null,[e("a",CB,[t("core/types/subscription/SubscriptionFunctionContext.ts:47"),n(l)])]),PB,e("table",null,[wB,e("tbody",null,[e("tr",null,[MB,e("td",EB,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[IB]),_:1})]),FB]),e("tr",null,[DB,e("td",RB,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[BB]),_:1})]),NB]),e("tr",null,[LB,e("td",OB,[HB,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[AB]),_:1}),t(">")]),jB])])]),GB,e("p",null,[e("a",qB,[t("core/types/subscription/SubscriptionFunctionContext.ts:16"),n(l)])]),VB,zB,e("p",null,[t("Ƭ "),ZB,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[UB]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[QB]),_:1}),t(" & { "),KB,t(": "),WB,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[$B]),_:1}),t("> }>")]),YB,e("p",null,[e("a",JB,[t("core/types/subscription/SubscriptionTransformFunctionContext.ts:8"),n(l)])]),XB,eN,e("p",null,[t("Ƭ "),tN,t("<"),nN,t(", "),oN,t(", "),sN,t(", "),lN,t(", "),dN,t(">: ("),aN,t(": "),iN,t(", "),cN,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[rN]),_:1}),t(", "),uN,t(": "),hN,t("<"),_N,t(">, "),pN,t(": "),fN,t("<"),gN,t(">) => "),mN,t("<{ "),yN,t(": "),bN,t("<"),xN,t("> ; "),vN,t(": "),SN,t("<"),TN,t("> }>")]),kN,e("table",null,[CN,e("tbody",null,[PN,e("tr",null,[wN,e("td",MN,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[EN]),_:1})])]),IN,FN])]),DN,e("p",null,[e("a",RN,[t("core/types/subscription/SubscriptionTransformInputHook.ts:6"),n(l)])]),BN,NN,e("p",null,[t("Ƭ "),LN,t("<"),ON,t(", "),HN,t(", "),AN,t(", "),jN,t(">: ("),GN,t(": "),qN,t(", "),VN,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[zN]),_:1}),t(", "),ZN,t(": "),UN,t("<"),QN,t(">, "),KN,t(": "),WN,t("<"),$N,t(">) => "),YN,t("<"),JN,t(">")]),XN,e("table",null,[eL,e("tbody",null,[tL,e("tr",null,[nL,e("td",oL,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[sL]),_:1})])]),lL,dL])]),aL,iL,cL,e("p",null,[e("a",rL,[t("core/types/subscription/SubscriptionTransformOutputHook.ts:8"),n(l)])]),uL,e("table",null,[hL,e("tbody",null,[e("tr",null,[_L,e("td",pL,[t("{ "),fL,t(": { "),gL,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[mL]),_:1}),t(" ; "),yL,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[bL]),_:1}),t(" ; "),xL,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[vL]),_:1}),t(" } ; "),SL,t(": "),n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[TL]),_:1}),t(" ; "),kL,t(": "),n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[CL]),_:1}),t(" ; "),PL,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[wL]),_:1}),t(" ; "),ML,t(": "),EL,t("<{ messageType: EBMessageType.Command; correlationId: string; receiver: EBMessageAddress; payload: { parameter: MessageParamsType; payload: MessagePayloadType; }; ... 8 more ...; sender: { ...; }; }> ; "),IL,t(": { "),FL,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[DL]),_:1}),t(" ; "),RL,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[BL]),_:1}),t(" ; "),NL,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[LL]),_:1}),t(" } ; "),OL,t(": <F>("),HL,t(": "),AL,t(", "),jL,t(": "),GL,t(", "),qL,t(": "),VL,t(" | "),zL,t(", "),ZL,t(": ("),UL,t(": "),QL,t(") => "),KL,t("<"),WL,t(">) => "),$L,t("<"),YL,t("> ; "),JL,t(": { "),XL,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[eO]),_:1}),t(" ; "),tO,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[nO]),_:1}),t(" ; "),oO,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[sO]),_:1}),t(" } ; "),lO,t(": <F>("),dO,t(": "),aO,t(", "),iO,t(": "),cO,t(", "),rO,t(": ("),uO,t(": "),hO,t(") => "),_O,t("<"),pO,t(">, "),fO,t(": "),gO,t(") => "),mO,t("<"),yO,t("> }")])]),e("tr",null,[bO,e("td",xO,[t("{ "),vO,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[SO]),_:1}),t(" ; "),TO,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[kO]),_:1}),t(" ; "),CO,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[PO]),_:1}),t(" }")])]),e("tr",null,[wO,e("td",MO,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[EO]),_:1})])]),e("tr",null,[IO,e("td",FO,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[DO]),_:1})])]),e("tr",null,[RO,e("td",BO,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[NO]),_:1})])]),e("tr",null,[LO,e("td",OO,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[HO]),_:1})])]),e("tr",null,[AO,e("td",jO,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[GO]),_:1})])]),e("tr",null,[qO,e("td",VO,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[zO]),_:1})])]),ZO,e("tr",null,[UO,e("td",QO,[t("{ "),KO,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[WO]),_:1}),t(" ; "),$O,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[YO]),_:1}),t(" ; "),JO,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[XO]),_:1}),t(" }")])]),e("tr",null,[eH,e("td",tH,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[nH]),_:1})])]),e("tr",null,[oH,e("td",sH,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[lH]),_:1})])]),e("tr",null,[dH,e("td",aH,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[iH]),_:1})])]),cH,e("tr",null,[rH,e("td",uH,[t("{ "),hH,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[_H]),_:1}),t(" ; "),pH,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[fH]),_:1}),t(" ; "),gH,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[mH]),_:1}),t(" }")])]),e("tr",null,[yH,e("td",bH,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[xH]),_:1})])]),e("tr",null,[vH,e("td",SH,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[TH]),_:1})])]),e("tr",null,[kH,e("td",CH,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[PH]),_:1})])]),wH,MH,EH,IH,FH,DH,RH,BH,NH,LH,OH,HH,AH,jH,GH,qH,VH,zH,ZH,UH,QH,KH])]),WH,e("p",null,[e("a",$H,[t("mocks/getCommandContext.mock.ts:12"),n(l)])]),YH,JH,e("p",null,[t("▸ "),XH,t("("),eA,t(", "),tA,t(", "),nA,t("): "),oA,t("<{ "),sA,t(": "),lA,t(" ; "),dA,t(": "),aA,t(" ; "),iA,t(": "),cA,t(" ; "),rA,t(": "),uA,t(" ; "),hA,t(": "),_A,t(" ; "),pA,t(": "),fA,t(" ; "),gA,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[mA]),_:1}),t(" ; "),yA,t(": "),bA,t(" ; "),xA,t(": { "),vA,t(": "),SA,t(" ; "),TA,t(": "),kA,t(" ; "),CA,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[PA]),_:1}),t(" } ; "),wA,t(": "),MA,t(" ; "),EA,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),IA,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),FA,t(": "),DA,t(" ; "),RA,t(": "),BA,t(" }>")]),NA,LA,e("table",null,[OA,e("tbody",null,[e("tr",null,[HA,e("td",AA,[n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[jA]),_:1}),t(" | "),n(o,{to:"/api/classes/purista_core.UnhandledError.html"},{default:s(()=>[GA]),_:1})]),qA]),e("tr",null,[VA,e("td",zA,[ZA,t("<{ "),UA,t(": "),QA,t(" ; "),KA,t(": "),WA,t(" ; "),$A,t(": "),YA,t(" ; "),JA,t(": "),XA,t(" ; "),ej,t(": "),tj,t(" ; "),nj,t(": "),oj,t(" ; "),sj,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[lj]),_:1}),t(" ; "),dj,t(": "),aj,t(" ; "),ij,t(": { "),cj,t(": "),rj,t(" ; "),uj,t(": "),hj,t(" ; "),_j,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[pj]),_:1}),t(" } ; "),fj,t(": "),gj,t(" ; "),mj,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),yj,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),bj,t(": "),xj,t(" ; "),vj,t(": "),Sj,t(" }>")]),Tj]),kj,Cj,Pj,wj,Mj,Ej,e("tr",null,[Ij,e("td",Fj,[n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[Dj]),_:1})]),Rj]),Bj,Nj,Lj,Oj,Hj,e("tr",null,[Aj,e("td",jj,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Gj]),_:1})]),qj]),Vj,zj,Zj])]),Uj,e("p",null,[Qj,t("<{ "),Kj,t(": "),Wj,t(" ; "),$j,t(": "),Yj,t(" ; "),Jj,t(": "),Xj,t(" ; "),eG,t(": "),tG,t(" ; "),nG,t(": "),oG,t(" ; "),sG,t(": "),lG,t(" ; "),dG,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[aG]),_:1}),t(" ; "),iG,t(": "),cG,t(" ; "),rG,t(": { "),uG,t(": "),hG,t(" ; "),_G,t(": "),pG,t(" ; "),fG,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[gG]),_:1}),t(" } ; "),mG,t(": "),yG,t(" ; "),bG,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),xG,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),vG,t(": "),SG,t(" ; "),TG,t(": "),kG,t(" }>")]),CG,e("p",null,[e("a",PG,[t("mocks/messages/getCommandErrorMessage.mock.ts:16"),n(l)])]),wG,MG,e("p",null,[t("▸ "),EG,t("<"),IG,t(", "),FG,t(">("),DG,t("): "),RG,t("<{ "),BG,t(": "),NG,t(" ; "),LG,t(": "),OG,t(" ; "),HG,t(": "),AG,t(" ; "),jG,t(": "),GG,t(" ; "),qG,t(": "),VG,t(" ; "),zG,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[ZG]),_:1}),t(" ; "),UG,t(": "),QG,t(" ; "),KG,t(": { "),WG,t(": "),$G,t(" ; "),YG,t(": "),JG,t(" } ; "),XG,t(": "),eq,t(" ; "),tq,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[nq]),_:1}),t(" ; "),oq,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),sq,t(": "),lq,t(" ; "),dq,t(": "),aq,t(" }>")]),iq,e("table",null,[cq,e("tbody",null,[e("tr",null,[rq,e("td",uq,[hq,t("<{ "),_q,t(": "),pq,t(" ; "),fq,t(": "),gq,t(" ; "),mq,t(": "),yq,t(" ; "),bq,t(": "),xq,t(" ; "),vq,t(": "),Sq,t(" ; "),Tq,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[kq]),_:1}),t(" ; "),Cq,t(": "),Pq,t(" ; "),wq,t(": { "),Mq,t(": "),Eq,t(" ; "),Iq,t(": "),Fq,t(" } ; "),Dq,t(": "),Rq,t(" ; "),Bq,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Nq]),_:1}),t(" ; "),Lq,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Oq,t(": "),Hq,t(" ; "),Aq,t(": "),jq,t(" }> & { "),Gq,t(": { "),qq,t(": "),Vq,t(" ; "),zq,t(": "),Zq,t(" } }")])])])]),Uq,e("p",null,[Qq,t("<{ "),Kq,t(": "),Wq,t(" ; "),$q,t(": "),Yq,t(" ; "),Jq,t(": "),Xq,t(" ; "),eV,t(": "),tV,t(" ; "),nV,t(": "),oV,t(" ; "),sV,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[lV]),_:1}),t(" ; "),dV,t(": "),aV,t(" ; "),iV,t(": { "),cV,t(": "),rV,t(" ; "),uV,t(": "),hV,t(" } ; "),_V,t(": "),pV,t(" ; "),fV,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[gV]),_:1}),t(" ; "),mV,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),yV,t(": "),bV,t(" ; "),xV,t(": "),vV,t(" }>")]),SV,e("p",null,[e("a",TV,[t("mocks/messages/getCommandMessage.mock.ts:15"),n(l)])]),kV,CV,e("p",null,[t("▸ "),PV,t("<"),wV,t(">("),MV,t(", "),EV,t(", "),IV,t("): "),FV,t("<{ "),DV,t(": "),RV,t(" ; "),BV,t(": "),NV,t(" ; "),LV,t(": "),OV,t(" ; "),HV,t(": "),AV,t(" ; "),jV,t(": "),GV,t(" ; "),qV,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[VV]),_:1}),t(" ; "),zV,t(": "),ZV,t(" ; "),UV,t(": "),QV,t(" ; "),KV,t(": "),WV,t(" ; "),$V,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),YV,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),JV,t(": "),XV,t(" ; "),ez,t(": "),tz,t(" }>")]),nz,e("table",null,[oz,e("tbody",null,[sz,e("tr",null,[lz,e("td",dz,[az,t("<{ "),iz,t(": "),cz,t(" ; "),rz,t(": "),uz,t(" ; "),hz,t(": "),_z,t(" ; "),pz,t(": "),fz,t(" ; "),gz,t(": "),mz,t(" ; "),yz,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[bz]),_:1}),t(" ; "),xz,t(": "),vz,t(" ; "),Sz,t(": "),Tz,t(" ; "),kz,t(": "),Cz,t(" ; "),Pz,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),wz,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Mz,t(": "),Ez,t(" ; "),Iz,t(": "),Fz,t(" }>")]),Dz]),Rz,Bz,Nz,Lz,Oz,Hz,e("tr",null,[Az,e("td",jz,[n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[Gz]),_:1})]),qz]),Vz,zz,Zz,Uz,Qz,e("tr",null,[Kz,e("td",Wz,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[$z]),_:1})]),Yz]),Jz,Xz,eZ])]),tZ,e("p",null,[nZ,t("<{ "),oZ,t(": "),sZ,t(" ; "),lZ,t(": "),dZ,t(" ; "),aZ,t(": "),iZ,t(" ; "),cZ,t(": "),rZ,t(" ; "),uZ,t(": "),hZ,t(" ; "),_Z,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[pZ]),_:1}),t(" ; "),fZ,t(": "),gZ,t(" ; "),mZ,t(": "),yZ,t(" ; "),bZ,t(": "),xZ,t(" ; "),vZ,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),SZ,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),TZ,t(": "),kZ,t(" ; "),CZ,t(": "),PZ,t(" }>")]),wZ,e("p",null,[e("a",MZ,[t("mocks/messages/getCommandSuccessMessage.mock.ts:9"),n(l)])]),EZ,e("table",null,[IZ,e("tbody",null,[e("tr",null,[FZ,e("td",DZ,[t("{ "),RZ,t(": { "),BZ,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[NZ]),_:1}),t(" ; "),LZ,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[OZ]),_:1}),t(" ; "),HZ,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[AZ]),_:1}),t(" } ; "),jZ,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[GZ]),_:1}),t(" ; "),qZ,t(": "),VZ,t("<{ messageType: EBMessageType.Command; correlationId: string; receiver: EBMessageAddress; payload: { parameter: MessageParamsType; payload: MessagePayloadType; }; ... 8 more ...; sender: { ...; }; }> ; "),zZ,t(": { "),ZZ,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[UZ]),_:1}),t(" ; "),QZ,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[KZ]),_:1}),t(" ; "),WZ,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[$Z]),_:1}),t(" } ; "),YZ,t(": <F>("),JZ,t(": "),XZ,t(", "),eU,t(": "),tU,t(", "),nU,t(": "),oU,t(" | "),sU,t(", "),lU,t(": ("),dU,t(": "),aU,t(") => "),iU,t("<"),cU,t(">) => "),rU,t("<"),uU,t("> ; "),hU,t(": { "),_U,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[pU]),_:1}),t(" ; "),fU,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[gU]),_:1}),t(" ; "),mU,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[yU]),_:1}),t(" } ; "),bU,t(": <F>("),xU,t(": "),vU,t(", "),SU,t(": "),TU,t(", "),kU,t(": ("),CU,t(": "),PU,t(") => "),wU,t("<"),MU,t(">, "),EU,t(": "),IU,t(") => "),FU,t("<"),DU,t("> }")])]),e("tr",null,[RU,e("td",BU,[t("{ "),NU,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[LU]),_:1}),t(" ; "),OU,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[HU]),_:1}),t(" ; "),AU,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[jU]),_:1}),t(" }")])]),e("tr",null,[GU,e("td",qU,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[VU]),_:1})])]),e("tr",null,[zU,e("td",ZU,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[UU]),_:1})])]),e("tr",null,[QU,e("td",KU,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[WU]),_:1})])]),e("tr",null,[$U,e("td",YU,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[JU]),_:1})])]),XU,e("tr",null,[eQ,e("td",tQ,[t("{ "),nQ,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[oQ]),_:1}),t(" ; "),sQ,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[lQ]),_:1}),t(" ; "),dQ,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[aQ]),_:1}),t(" }")])]),e("tr",null,[iQ,e("td",cQ,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[rQ]),_:1})])]),e("tr",null,[uQ,e("td",hQ,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[_Q]),_:1})])]),e("tr",null,[pQ,e("td",fQ,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[gQ]),_:1})])]),mQ,e("tr",null,[yQ,e("td",bQ,[t("{ "),xQ,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[vQ]),_:1}),t(" ; "),SQ,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[TQ]),_:1}),t(" ; "),kQ,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[CQ]),_:1}),t(" }")])]),e("tr",null,[PQ,e("td",wQ,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[MQ]),_:1})])]),e("tr",null,[EQ,e("td",IQ,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[FQ]),_:1})])]),e("tr",null,[DQ,e("td",RQ,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[BQ]),_:1})])]),NQ,LQ,OQ,HQ,AQ,jQ,GQ,qQ,VQ,zQ,ZQ,UQ,QQ,KQ,WQ,$Q,YQ,JQ,XQ,eK])]),tK,e("p",null,[e("a",nK,[t("mocks/getCommandTransformContext.mock.ts:12"),n(l)])]),oK,sK,e("p",null,[t("▸ "),lK,t("<"),dK,t(">("),aK,t(", "),iK,t(", "),cK,t("): "),rK,t("<{ "),uK,t(": "),hK,t(" ; "),_K,t(": "),pK,t(" ; "),fK,t(": "),gK,t(" ; "),mK,t(": "),yK,t(" ; "),bK,t(": "),xK,t(" ; "),vK,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:s(()=>[SK]),_:1}),t(" ; "),TK,t(": "),kK,t(" ; "),CK,t(": "),PK,t(" ; "),wK,t(": "),MK,t(" ; "),EK,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[IK]),_:1}),t(" ; "),FK,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),DK,t(": "),RK,t(" ; "),BK,t(": "),NK,t(" }>")]),LK,e("table",null,[OK,e("tbody",null,[HK,AK,e("tr",null,[jK,e("td",GK,[qK,t("<{ "),VK,t(": "),zK,t(" ; "),ZK,t(": "),UK,t(" ; "),QK,t(": "),KK,t(" ; "),WK,t(": "),$K,t(" ; "),YK,t(": "),JK,t(" ; "),XK,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:s(()=>[eW]),_:1}),t(" ; "),tW,t(": "),nW,t(" ; "),oW,t(": "),sW,t(" ; "),lW,t(": "),dW,t(" ; "),aW,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[iW]),_:1}),t(" ; "),cW,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),rW,t(": "),uW,t(" ; "),hW,t(": "),_W,t(" }>")])])])]),pW,e("p",null,[fW,t("<{ "),gW,t(": "),mW,t(" ; "),yW,t(": "),bW,t(" ; "),xW,t(": "),vW,t(" ; "),SW,t(": "),TW,t(" ; "),kW,t(": "),CW,t(" ; "),PW,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:s(()=>[wW]),_:1}),t(" ; "),MW,t(": "),EW,t(" ; "),IW,t(": "),FW,t(" ; "),DW,t(": "),RW,t(" ; "),BW,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[NW]),_:1}),t(" ; "),LW,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),OW,t(": "),HW,t(" ; "),AW,t(": "),jW,t(" }>")]),GW,e("p",null,[e("a",qW,[t("mocks/messages/getCustomMessage.mock.ts:15"),n(l)])]),VW,e("table",null,[zW,e("tbody",null,[e("tr",null,[ZW,e("td",UW,[n(o,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:s(()=>[QW]),_:1})])]),KW])]),WW,e("p",null,[e("a",$W,[t("mocks/getEventBridge.mock.ts:10"),n(l)])]),YW,e("table",null,[JW,e("tbody",null,[e("tr",null,[XW,e("td",e$,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[t$]),_:1})])]),n$,o$,s$,l$,d$,a$,i$])]),c$,e("p",null,[e("a",r$,[t("mocks/getLogger.mock.ts:10"),n(l)])]),u$,e("table",null,[h$,e("tbody",null,[e("tr",null,[_$,e("td",p$,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[f$]),_:1})])]),g$])]),m$,y$,e("table",null,[b$,e("tbody",null,[e("tr",null,[x$,e("td",v$,[t("{ "),S$,t(": { "),T$,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[k$]),_:1}),t(" ; "),C$,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[P$]),_:1}),t(" ; "),w$,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[M$]),_:1}),t(" } ; "),E$,t(": "),n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[I$]),_:1}),t(" ; "),F$,t(": "),n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[D$]),_:1}),t(" ; "),R$,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[B$]),_:1}),t(" ; "),N$,t(": "),L$,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[O$]),_:1}),t("> ; "),H$,t(": { "),A$,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[j$]),_:1}),t(" ; "),G$,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[q$]),_:1}),t(" ; "),V$,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[z$]),_:1}),t(" } ; "),Z$,t(": <F>("),U$,t(": "),Q$,t(", "),K$,t(": "),W$,t(", "),$$,t(": "),Y$,t(" | "),J$,t(", "),X$,t(": ("),eY,t(": "),tY,t(") => "),nY,t("<"),oY,t(">) => "),sY,t("<"),lY,t("> ; "),dY,t(": { "),aY,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[iY]),_:1}),t(" ; "),cY,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[rY]),_:1}),t(" ; "),uY,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[hY]),_:1}),t(" } ; "),_Y,t(": <F>("),pY,t(": "),fY,t(", "),gY,t(": "),mY,t(", "),yY,t(": ("),bY,t(": "),xY,t(") => "),vY,t("<"),SY,t(">, "),TY,t(": "),kY,t(") => "),CY,t("<"),PY,t("> }")])]),e("tr",null,[wY,e("td",MY,[t("{ "),EY,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[IY]),_:1}),t(" ; "),FY,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[DY]),_:1}),t(" ; "),RY,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[BY]),_:1}),t(" }")])]),e("tr",null,[NY,e("td",LY,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[OY]),_:1})])]),e("tr",null,[HY,e("td",AY,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[jY]),_:1})])]),e("tr",null,[GY,e("td",qY,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[VY]),_:1})])]),e("tr",null,[zY,e("td",ZY,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[UY]),_:1})])]),e("tr",null,[QY,e("td",KY,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[WY]),_:1})])]),e("tr",null,[$Y,e("td",YY,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[JY]),_:1})])]),e("tr",null,[XY,e("td",eJ,[tJ,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[nJ]),_:1}),t(">")])]),e("tr",null,[oJ,e("td",sJ,[t("{ "),lJ,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[dJ]),_:1}),t(" ; "),aJ,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[iJ]),_:1}),t(" ; "),cJ,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[rJ]),_:1}),t(" }")])]),e("tr",null,[uJ,e("td",hJ,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[_J]),_:1})])]),e("tr",null,[pJ,e("td",fJ,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[gJ]),_:1})])]),e("tr",null,[mJ,e("td",yJ,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[bJ]),_:1})])]),xJ,e("tr",null,[vJ,e("td",SJ,[t("{ "),TJ,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[kJ]),_:1}),t(" ; "),CJ,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[PJ]),_:1}),t(" ; "),wJ,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[MJ]),_:1}),t(" }")])]),e("tr",null,[EJ,e("td",IJ,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[FJ]),_:1})])]),e("tr",null,[DJ,e("td",RJ,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[BJ]),_:1})])]),e("tr",null,[NJ,e("td",LJ,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[OJ]),_:1})])]),HJ,AJ,jJ,GJ,qJ,VJ,zJ,ZJ,UJ,QJ,KJ,WJ,$J,YJ,JJ,XJ,eX,tX,nX,oX,sX,lX])]),dX,e("p",null,[e("a",aX,[t("mocks/getSubscriptionContext.mock.ts:11"),n(l)])]),iX,e("table",null,[cX,e("tbody",null,[e("tr",null,[rX,e("td",uX,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[hX]),_:1})])]),_X])]),pX,fX,e("table",null,[gX,e("tbody",null,[e("tr",null,[mX,e("td",yX,[t("{ "),bX,t(": { "),xX,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[vX]),_:1}),t(" ; "),SX,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[TX]),_:1}),t(" ; "),kX,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[CX]),_:1}),t(" } ; "),PX,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[wX]),_:1}),t(" ; "),MX,t(": "),EX,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[IX]),_:1}),t("> ; "),FX,t(": { "),DX,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[RX]),_:1}),t(" ; "),BX,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[NX]),_:1}),t(" ; "),LX,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[OX]),_:1}),t(" } ; "),HX,t(": <F>("),AX,t(": "),jX,t(", "),GX,t(": "),qX,t(", "),VX,t(": "),zX,t(" | "),ZX,t(", "),UX,t(": ("),QX,t(": "),KX,t(") => "),WX,t("<"),$X,t(">) => "),YX,t("<"),JX,t("> ; "),XX,t(": { "),eee,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[tee]),_:1}),t(" ; "),nee,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[oee]),_:1}),t(" ; "),see,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[lee]),_:1}),t(" } ; "),dee,t(": <F>("),aee,t(": "),iee,t(", "),cee,t(": "),ree,t(", "),uee,t(": ("),hee,t(": "),_ee,t(") => "),pee,t("<"),fee,t(">, "),gee,t(": "),mee,t(") => "),yee,t("<"),bee,t("> }")])]),e("tr",null,[xee,e("td",vee,[t("{ "),See,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[Tee]),_:1}),t(" ; "),kee,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[Cee]),_:1}),t(" ; "),Pee,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[wee]),_:1}),t(" }")])]),e("tr",null,[Mee,e("td",Eee,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[Iee]),_:1})])]),e("tr",null,[Fee,e("td",Dee,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[Ree]),_:1})])]),e("tr",null,[Bee,e("td",Nee,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[Lee]),_:1})])]),e("tr",null,[Oee,e("td",Hee,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Aee]),_:1})])]),e("tr",null,[jee,e("td",Gee,[qee,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[Vee]),_:1}),t(">")])]),e("tr",null,[zee,e("td",Zee,[t("{ "),Uee,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[Qee]),_:1}),t(" ; "),Kee,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[Wee]),_:1}),t(" ; "),$ee,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[Yee]),_:1}),t(" }")])]),e("tr",null,[Jee,e("td",Xee,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[ete]),_:1})])]),e("tr",null,[tte,e("td",nte,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[ote]),_:1})])]),e("tr",null,[ste,e("td",lte,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[dte]),_:1})])]),ate,e("tr",null,[ite,e("td",cte,[t("{ "),rte,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[ute]),_:1}),t(" ; "),hte,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[_te]),_:1}),t(" ; "),pte,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[fte]),_:1}),t(" }")])]),e("tr",null,[gte,e("td",mte,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[yte]),_:1})])]),e("tr",null,[bte,e("td",xte,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[vte]),_:1})])]),e("tr",null,[Ste,e("td",Tte,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[kte]),_:1})])]),Cte,Pte,wte,Mte,Ete,Ite,Fte,Dte,Rte,Bte,Nte,Lte,Ote,Hte,Ate,jte,Gte,qte,Vte,zte])]),Zte,e("p",null,[e("a",Ute,[t("mocks/getSubscriptionTransformContext.mock.ts:11"),n(l)])])])}const Jte=i(u,[["render",Qte],["__file","purista_core.html.vue"]]);export{Jte as default};
