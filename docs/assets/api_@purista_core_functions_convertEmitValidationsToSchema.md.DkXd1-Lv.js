import{_ as t,c as a,o,ag as r}from"./chunks/framework.U_AETC1W.js";const p=JSON.parse('{"title":"Function: convertEmitValidationsToSchema()","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/core/functions/convertEmitValidationsToSchema.md","filePath":"api/@purista/core/functions/convertEmitValidationsToSchema.md","lastUpdated":1739900666000}'),i={name:"api/@purista/core/functions/convertEmitValidationsToSchema.md"};function c(s,e,n,m,d,l){return o(),a("div",null,e[0]||(e[0]=[r('<p><a href="./../README.html"><strong>@purista/core v1.11.0</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/core</a> / convertEmitValidationsToSchema</p><h1 id="function-convertemitvalidationstoschema" tabindex="-1">Function: convertEmitValidationsToSchema() <a class="header-anchor" href="#function-convertemitvalidationstoschema" aria-label="Permalink to &quot;Function: convertEmitValidationsToSchema()&quot;">​</a></h1><blockquote><p><strong>convertEmitValidationsToSchema</strong>&lt;<code>T</code>&gt;(<code>emits</code>): <code>Promise</code>&lt;<a href="./../type-aliases/FromEmitToOtherType.html"><code>FromEmitToOtherType</code></a>&lt;<code>T</code>, <code>SchemaObject</code>&gt;&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/helper/convertEmitValidationsToSchema.impl.ts#L11" target="_blank" rel="noreferrer">packages/core/src/helper/convertEmitValidationsToSchema.impl.ts:11</a></p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>T</strong> <em>extends</em> <code>InputType</code></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="emits" tabindex="-1">emits <a class="header-anchor" href="#emits" aria-label="Permalink to &quot;emits&quot;">​</a></h3><p><code>T</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Promise</code>&lt;<a href="./../type-aliases/FromEmitToOtherType.html"><code>FromEmitToOtherType</code></a>&lt;<code>T</code>, <code>SchemaObject</code>&gt;&gt;</p>',13)]))}const u=t(i,[["render",c]]);export{p as __pageData,u as default};
