import{_ as a,c as t,o as s,ag as r}from"./chunks/framework.U_AETC1W.js";const m=JSON.parse('{"title":"Class: InfisicalSecretStore","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/infisical-secret-store/classes/InfisicalSecretStore.md","filePath":"api/@purista/infisical-secret-store/classes/InfisicalSecretStore.md","lastUpdated":1739900666000}'),o={name:"api/@purista/infisical-secret-store/classes/InfisicalSecretStore.md"};function c(l,e,n,i,d,h){return s(),t("div",null,e[0]||(e[0]=[r(`<p><a href="./../README.html"><strong>@purista/infisical-secret-store v1.11.0</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/infisical-secret-store</a> / InfisicalSecretStore</p><h1 id="class-infisicalsecretstore" tabindex="-1">Class: InfisicalSecretStore <a class="header-anchor" href="#class-infisicalsecretstore" aria-label="Permalink to &quot;Class: InfisicalSecretStore&quot;">​</a></h1><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/infisical-secret-store/src/InfisicalSecretStore.impl.ts#L39" target="_blank" rel="noreferrer">infisical-secret-store/src/InfisicalSecretStore.impl.ts:39</a></p><p>A secret store for using <a href="https://infisical.com/" target="_blank" rel="noreferrer">Infisical</a> as storage.</p><p>For performance reasons, and to reduce costs, the secret values are cached in memory after first fetch.</p><p>You can disable the whole caching via config by setting enableCache to false.<br> If the cache is enabled, you can set the ttl for cached secret values via config cacheTtl (in ms).</p><p>This will return the cached secret if available and if ttl is not exceeded.<br> If a secret value exceeds the ttl, it does not automatically get removed from cache.<br> It will be removed/overwritten on next get request.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`\`\`typescript</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const config = {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  baseUrl: &#39;http://example.com&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const store = new InfisicalSecretStore( config )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">await store.setSecret(&#39;mySecret&#39;, &#39;value&#39;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">let value = await store.getSecret(&#39;mySecret&#39;)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">console.log(value) // outputs: { mySecret: &#39;value&#39; }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">await store.removeSecret(&#39;mySecret&#39;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value = await store.getSecret(&#39;mySecret&#39;)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">console.log(value) // outputs: undefined</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>## Extends</span></span>
<span class="line"><span></span></span>
<span class="line"><span>- [\`SecretStoreBaseClass\`](../../core/classes/SecretStoreBaseClass.md)\\&lt;[\`InfisicalSecretConfig\`](../type-aliases/InfisicalSecretConfig.md)\\&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## Constructors</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### new InfisicalSecretStore()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; **new InfisicalSecretStore**(\`config\`): [\`InfisicalSecretStore\`](InfisicalSecretStore.md)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Defined in: [infisical-secret-store/src/InfisicalSecretStore.impl.ts:42](https://github.com/puristajs/purista/blob/master/packages/infisical-secret-store/src/InfisicalSecretStore.impl.ts#L42)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### Parameters</span></span>
<span class="line"><span></span></span>
<span class="line"><span>##### config</span></span>
<span class="line"><span></span></span>
<span class="line"><span>###### baseUrl</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`string\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>the base url to be used</span></span>
<span class="line"><span></span></span>
<span class="line"><span>**Example**</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`\`\`typescript</span></span>
<span class="line"><span>const config = {</span></span>
<span class="line"><span>  baseUrl: &#39;http://localhost/api\`</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>// each request will be below http://localhost/api</span></span>
<span class="line"><span>// get(&#39;v1/orders&#39;) will call http://localhost/api/v1/orders</span></span></code></pre></div><h6 id="basicauth" tabindex="-1">basicAuth? <a class="header-anchor" href="#basicauth" aria-label="Permalink to &quot;basicAuth?&quot;">​</a></h6><p>{ <code>password</code>: <code>string</code>; <code>username</code>: <code>string</code>; }</p><p>Basic-Auth information</p><h6 id="basicauth-password" tabindex="-1">basicAuth.password <a class="header-anchor" href="#basicauth-password" aria-label="Permalink to &quot;basicAuth.password&quot;">​</a></h6><p><code>string</code></p><p>Basic-Auth password</p><h6 id="basicauth-username" tabindex="-1">basicAuth.username <a class="header-anchor" href="#basicauth-username" aria-label="Permalink to &quot;basicAuth.username&quot;">​</a></h6><p><code>string</code></p><p>Basic-Auth username</p><h6 id="bearertoken" tabindex="-1">bearerToken <a class="header-anchor" href="#bearertoken" aria-label="Permalink to &quot;bearerToken&quot;">​</a></h6><p><code>string</code></p><p>Auth-Bearer token</p><h6 id="cachettl" tabindex="-1">cacheTtl? <a class="header-anchor" href="#cachettl" aria-label="Permalink to &quot;cacheTtl?&quot;">​</a></h6><p><code>number</code></p><p>Cache time to live in ms</p><h6 id="defaultheaders" tabindex="-1">defaultHeaders? <a class="header-anchor" href="#defaultheaders" aria-label="Permalink to &quot;defaultHeaders?&quot;">​</a></h6><p><code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</p><p>Add your default headers here These headers will be part of every request. They can be overwritten per request option</p><h6 id="defaulttimeout" tabindex="-1">defaultTimeout? <a class="header-anchor" href="#defaulttimeout" aria-label="Permalink to &quot;defaultTimeout?&quot;">​</a></h6><p><code>number</code></p><p>set global timeout for requests in ms</p><p><strong>Default</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30000</span></span></code></pre></div><h6 id="enablecache" tabindex="-1">enableCache? <a class="header-anchor" href="#enablecache" aria-label="Permalink to &quot;enableCache?&quot;">​</a></h6><p><code>boolean</code></p><p>Enable cache</p><h6 id="enableget" tabindex="-1">enableGet? <a class="header-anchor" href="#enableget" aria-label="Permalink to &quot;enableGet?&quot;">​</a></h6><p><code>boolean</code></p><p>Enable generally get method</p><h6 id="enableopentelemetry" tabindex="-1">enableOpentelemetry? <a class="header-anchor" href="#enableopentelemetry" aria-label="Permalink to &quot;enableOpentelemetry?&quot;">​</a></h6><p><code>boolean</code></p><p>enable Opentelemetry tracing. The client will be handled as own resource.</p><h6 id="enableremove" tabindex="-1">enableRemove? <a class="header-anchor" href="#enableremove" aria-label="Permalink to &quot;enableRemove?&quot;">​</a></h6><p><code>boolean</code></p><p>Enable generally remove method</p><h6 id="enableset" tabindex="-1">enableSet? <a class="header-anchor" href="#enableset" aria-label="Permalink to &quot;enableSet?&quot;">​</a></h6><p><code>boolean</code></p><p>Enable generally set method</p><h6 id="iskeepalive" tabindex="-1">isKeepAlive? <a class="header-anchor" href="#iskeepalive" aria-label="Permalink to &quot;isKeepAlive?&quot;">​</a></h6><p><code>boolean</code></p><p>If set to false, the HTTP client will not reuse the same connection for multiple requests. Default is true.</p><h6 id="logger" tabindex="-1">logger? <a class="header-anchor" href="#logger" aria-label="Permalink to &quot;logger?&quot;">​</a></h6><p><a href="./../../core/classes/Logger.html"><code>Logger</code></a></p><p>A logger instance</p><h6 id="loglevel" tabindex="-1">logLevel? <a class="header-anchor" href="#loglevel" aria-label="Permalink to &quot;logLevel?&quot;">​</a></h6><p><a href="./../../core/type-aliases/LogLevelName.html"><code>LogLevelName</code></a></p><p>A log level for new logger if logger is not set</p><h6 id="name" tabindex="-1">name? <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name?&quot;">​</a></h6><p><code>string</code></p><p>Name of the client</p><h6 id="spanprocessor" tabindex="-1">spanProcessor? <a class="header-anchor" href="#spanprocessor" aria-label="Permalink to &quot;spanProcessor?&quot;">​</a></h6><p><code>SpanProcessor</code></p><p>Opentelemetry span processor</p><h6 id="traceid" tabindex="-1">traceId? <a class="header-anchor" href="#traceid" aria-label="Permalink to &quot;traceId?&quot;">​</a></h6><p><code>string</code></p><p>Custom trace Id</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./InfisicalSecretStore.html"><code>InfisicalSecretStore</code></a></p><h4 id="overrides" tabindex="-1">Overrides <a class="header-anchor" href="#overrides" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./../../core/classes/SecretStoreBaseClass.html"><code>SecretStoreBaseClass</code></a>.<a href="./../../core/classes/SecretStoreBaseClass.html#constructors"><code>constructor</code></a></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="cache" tabindex="-1">cache <a class="header-anchor" href="#cache" aria-label="Permalink to &quot;cache&quot;">​</a></h3><blockquote><p><strong>cache</strong>: <a href="./../../core/type-aliases/SecretStoreCacheMap.html"><code>SecretStoreCacheMap</code></a></p></blockquote><p>Defined in: core/dist/commonjs/core/SecretStore/SecretStoreBaseClass.impl.d.ts:20</p><h4 id="inherited-from" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./../../core/classes/SecretStoreBaseClass.html"><code>SecretStoreBaseClass</code></a>.<a href="./../../core/classes/SecretStoreBaseClass.html#cache"><code>cache</code></a></p><hr><h3 id="client" tabindex="-1">client <a class="header-anchor" href="#client" aria-label="Permalink to &quot;client&quot;">​</a></h3><blockquote><p><strong>client</strong>: <a href="./InfisicalClient.html"><code>InfisicalClient</code></a></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/infisical-secret-store/src/InfisicalSecretStore.impl.ts#L40" target="_blank" rel="noreferrer">infisical-secret-store/src/InfisicalSecretStore.impl.ts:40</a></p><hr><h3 id="config" tabindex="-1">config <a class="header-anchor" href="#config" aria-label="Permalink to &quot;config&quot;">​</a></h3><blockquote><p><strong>config</strong>: <code>object</code></p></blockquote><p>Defined in: core/dist/commonjs/core/SecretStore/SecretStoreBaseClass.impl.d.ts:18</p><h4 id="baseurl" tabindex="-1">baseUrl <a class="header-anchor" href="#baseurl" aria-label="Permalink to &quot;baseUrl&quot;">​</a></h4><blockquote><p><strong>baseUrl</strong>: <code>string</code></p></blockquote><p>the base url to be used</p><h5 id="example-1" tabindex="-1">Example <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;Example&quot;">​</a></h5><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  baseUrl: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://localhost/api</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// each request will be below http://localhost/api</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// get(&#39;v1/orders&#39;) will call http://localhost/api/v1/orders</span></span></code></pre></div><h4 id="basicauth-1" tabindex="-1">basicAuth? <a class="header-anchor" href="#basicauth-1" aria-label="Permalink to &quot;basicAuth?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>basicAuth</strong>: <code>object</code></p></blockquote><p>Basic-Auth information</p><h5 id="basicauth-password-1" tabindex="-1">basicAuth.password <a class="header-anchor" href="#basicauth-password-1" aria-label="Permalink to &quot;basicAuth.password&quot;">​</a></h5><blockquote><p><strong>basicAuth.password</strong>: <code>string</code></p></blockquote><p>Basic-Auth password</p><h5 id="basicauth-username-1" tabindex="-1">basicAuth.username <a class="header-anchor" href="#basicauth-username-1" aria-label="Permalink to &quot;basicAuth.username&quot;">​</a></h5><blockquote><p><strong>basicAuth.username</strong>: <code>string</code></p></blockquote><p>Basic-Auth username</p><h4 id="bearertoken-1" tabindex="-1">bearerToken <a class="header-anchor" href="#bearertoken-1" aria-label="Permalink to &quot;bearerToken&quot;">​</a></h4><blockquote><p><strong>bearerToken</strong>: <code>string</code></p></blockquote><p>Auth-Bearer token</p><h4 id="cachettl-1" tabindex="-1">cacheTtl? <a class="header-anchor" href="#cachettl-1" aria-label="Permalink to &quot;cacheTtl?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>cacheTtl</strong>: <code>number</code></p></blockquote><p>Cache time to live in ms</p><h4 id="defaultheaders-1" tabindex="-1">defaultHeaders? <a class="header-anchor" href="#defaultheaders-1" aria-label="Permalink to &quot;defaultHeaders?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>defaultHeaders</strong>: <code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</p></blockquote><p>Add your default headers here These headers will be part of every request. They can be overwritten per request option</p><h4 id="defaulttimeout-1" tabindex="-1">defaultTimeout? <a class="header-anchor" href="#defaulttimeout-1" aria-label="Permalink to &quot;defaultTimeout?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>defaultTimeout</strong>: <code>number</code></p></blockquote><p>set global timeout for requests in ms</p><h5 id="default" tabindex="-1">Default <a class="header-anchor" href="#default" aria-label="Permalink to &quot;Default&quot;">​</a></h5><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30000</span></span></code></pre></div><h4 id="enablecache-1" tabindex="-1">enableCache? <a class="header-anchor" href="#enablecache-1" aria-label="Permalink to &quot;enableCache?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>enableCache</strong>: <code>boolean</code></p></blockquote><p>Enable cache</p><h4 id="enableget-1" tabindex="-1">enableGet? <a class="header-anchor" href="#enableget-1" aria-label="Permalink to &quot;enableGet?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>enableGet</strong>: <code>boolean</code></p></blockquote><p>Enable generally get method</p><h4 id="enableopentelemetry-1" tabindex="-1">enableOpentelemetry? <a class="header-anchor" href="#enableopentelemetry-1" aria-label="Permalink to &quot;enableOpentelemetry?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>enableOpentelemetry</strong>: <code>boolean</code></p></blockquote><p>enable Opentelemetry tracing. The client will be handled as own resource.</p><h4 id="enableremove-1" tabindex="-1">enableRemove? <a class="header-anchor" href="#enableremove-1" aria-label="Permalink to &quot;enableRemove?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>enableRemove</strong>: <code>boolean</code></p></blockquote><p>Enable generally remove method</p><h4 id="enableset-1" tabindex="-1">enableSet? <a class="header-anchor" href="#enableset-1" aria-label="Permalink to &quot;enableSet?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>enableSet</strong>: <code>boolean</code></p></blockquote><p>Enable generally set method</p><h4 id="iskeepalive-1" tabindex="-1">isKeepAlive? <a class="header-anchor" href="#iskeepalive-1" aria-label="Permalink to &quot;isKeepAlive?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>isKeepAlive</strong>: <code>boolean</code></p></blockquote><p>If set to false, the HTTP client will not reuse the same connection for multiple requests. Default is true.</p><h4 id="logger-1" tabindex="-1">logger? <a class="header-anchor" href="#logger-1" aria-label="Permalink to &quot;logger?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>logger</strong>: <a href="./../../core/classes/Logger.html"><code>Logger</code></a></p></blockquote><p>A logger instance</p><h4 id="loglevel-1" tabindex="-1">logLevel? <a class="header-anchor" href="#loglevel-1" aria-label="Permalink to &quot;logLevel?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>logLevel</strong>: <a href="./../../core/type-aliases/LogLevelName.html"><code>LogLevelName</code></a></p></blockquote><p>A log level for new logger if logger is not set</p><h4 id="name-1" tabindex="-1">name? <a class="header-anchor" href="#name-1" aria-label="Permalink to &quot;name?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>name</strong>: <code>string</code></p></blockquote><p>Name of the client</p><h4 id="spanprocessor-1" tabindex="-1">spanProcessor? <a class="header-anchor" href="#spanprocessor-1" aria-label="Permalink to &quot;spanProcessor?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>spanProcessor</strong>: <code>SpanProcessor</code></p></blockquote><p>Opentelemetry span processor</p><h4 id="traceid-1" tabindex="-1">traceId? <a class="header-anchor" href="#traceid-1" aria-label="Permalink to &quot;traceId?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>traceId</strong>: <code>string</code></p></blockquote><p>Custom trace Id</p><h4 id="inherited-from-1" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-1" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./../../core/classes/SecretStoreBaseClass.html"><code>SecretStoreBaseClass</code></a>.<a href="./../../core/classes/SecretStoreBaseClass.html#config-1"><code>config</code></a></p><hr><h3 id="logger-2" tabindex="-1">logger <a class="header-anchor" href="#logger-2" aria-label="Permalink to &quot;logger&quot;">​</a></h3><blockquote><p><strong>logger</strong>: <a href="./../../core/classes/Logger.html"><code>Logger</code></a></p></blockquote><p>Defined in: core/dist/commonjs/core/SecretStore/SecretStoreBaseClass.impl.d.ts:17</p><h4 id="inherited-from-2" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-2" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./../../core/classes/SecretStoreBaseClass.html"><code>SecretStoreBaseClass</code></a>.<a href="./../../core/classes/SecretStoreBaseClass.html#logger"><code>logger</code></a></p><hr><h3 id="name-2" tabindex="-1">name <a class="header-anchor" href="#name-2" aria-label="Permalink to &quot;name&quot;">​</a></h3><blockquote><p><strong>name</strong>: <code>string</code></p></blockquote><p>Defined in: core/dist/commonjs/core/SecretStore/SecretStoreBaseClass.impl.d.ts:19</p><h4 id="inherited-from-3" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-3" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./../../core/classes/SecretStoreBaseClass.html"><code>SecretStoreBaseClass</code></a>.<a href="./../../core/classes/SecretStoreBaseClass.html#name-1"><code>name</code></a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="destroy" tabindex="-1">destroy() <a class="header-anchor" href="#destroy" aria-label="Permalink to &quot;destroy()&quot;">​</a></h3><blockquote><p><strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: core/dist/commonjs/core/SecretStore/SecretStoreBaseClass.impl.d.ts:28</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="inherited-from-4" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-4" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./../../core/classes/SecretStoreBaseClass.html"><code>SecretStoreBaseClass</code></a>.<a href="./../../core/classes/SecretStoreBaseClass.html#destroy"><code>destroy</code></a></p><hr><h3 id="getsecret" tabindex="-1">getSecret() <a class="header-anchor" href="#getsecret" aria-label="Permalink to &quot;getSecret()&quot;">​</a></h3><blockquote><p><strong>getSecret</strong>&lt;<code>SecretNames</code>&gt;(...<code>secretNames</code>): <code>Promise</code>&lt;<a href="./../../core/type-aliases/ObjectWithKeysFromStringArray.html"><code>ObjectWithKeysFromStringArray</code></a>&lt;<code>SecretNames</code>, <code>undefined</code> | <code>string</code>&gt;&gt;</p></blockquote><p>Defined in: core/dist/commonjs/core/SecretStore/SecretStoreBaseClass.impl.d.ts:23</p><h4 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p>• <strong>SecretNames</strong> <em>extends</em> <code>string</code>[]</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="secretnames" tabindex="-1">secretNames <a class="header-anchor" href="#secretnames" aria-label="Permalink to &quot;secretNames&quot;">​</a></h5><p>...<code>SecretNames</code></p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<a href="./../../core/type-aliases/ObjectWithKeysFromStringArray.html"><code>ObjectWithKeysFromStringArray</code></a>&lt;<code>SecretNames</code>, <code>undefined</code> | <code>string</code>&gt;&gt;</p><h4 id="inherited-from-5" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-5" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./../../core/classes/SecretStoreBaseClass.html"><code>SecretStoreBaseClass</code></a>.<a href="./../../core/classes/SecretStoreBaseClass.html#getsecret"><code>getSecret</code></a></p><hr><h3 id="getsecretimpl" tabindex="-1">getSecretImpl() <a class="header-anchor" href="#getsecretimpl" aria-label="Permalink to &quot;getSecretImpl()&quot;">​</a></h3><blockquote><p><code>protected</code> <strong>getSecretImpl</strong>&lt;<code>SecretNames</code>&gt;(...<code>secretNames</code>): <code>Promise</code>&lt;<a href="./../../core/type-aliases/ObjectWithKeysFromStringArray.html"><code>ObjectWithKeysFromStringArray</code></a>&lt;<code>SecretNames</code>, <code>undefined</code> | <code>string</code>&gt;&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/infisical-secret-store/src/InfisicalSecretStore.impl.ts#L51" target="_blank" rel="noreferrer">infisical-secret-store/src/InfisicalSecretStore.impl.ts:51</a></p><h4 id="type-parameters-1" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p>• <strong>SecretNames</strong> <em>extends</em> <code>string</code>[]</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="secretnames-1" tabindex="-1">secretNames <a class="header-anchor" href="#secretnames-1" aria-label="Permalink to &quot;secretNames&quot;">​</a></h5><p>...<code>SecretNames</code></p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<a href="./../../core/type-aliases/ObjectWithKeysFromStringArray.html"><code>ObjectWithKeysFromStringArray</code></a>&lt;<code>SecretNames</code>, <code>undefined</code> | <code>string</code>&gt;&gt;</p><h4 id="overrides-1" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-1" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./../../core/classes/SecretStoreBaseClass.html"><code>SecretStoreBaseClass</code></a>.<a href="./../../core/classes/SecretStoreBaseClass.html#getsecretimpl"><code>getSecretImpl</code></a></p><hr><h3 id="removesecret" tabindex="-1">removeSecret() <a class="header-anchor" href="#removesecret" aria-label="Permalink to &quot;removeSecret()&quot;">​</a></h3><blockquote><p><strong>removeSecret</strong>(<code>secretName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: core/dist/commonjs/core/SecretStore/SecretStoreBaseClass.impl.d.ts:25</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="secretname" tabindex="-1">secretName <a class="header-anchor" href="#secretname" aria-label="Permalink to &quot;secretName&quot;">​</a></h5><p><code>string</code></p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="inherited-from-6" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-6" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./../../core/classes/SecretStoreBaseClass.html"><code>SecretStoreBaseClass</code></a>.<a href="./../../core/classes/SecretStoreBaseClass.html#removesecret"><code>removeSecret</code></a></p><hr><h3 id="removesecretimpl" tabindex="-1">removeSecretImpl() <a class="header-anchor" href="#removesecretimpl" aria-label="Permalink to &quot;removeSecretImpl()&quot;">​</a></h3><blockquote><p><code>protected</code> <strong>removeSecretImpl</strong>(<code>secretName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/infisical-secret-store/src/InfisicalSecretStore.impl.ts#L67" target="_blank" rel="noreferrer">infisical-secret-store/src/InfisicalSecretStore.impl.ts:67</a></p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="secretname-1" tabindex="-1">secretName <a class="header-anchor" href="#secretname-1" aria-label="Permalink to &quot;secretName&quot;">​</a></h5><p><code>string</code></p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="overrides-2" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-2" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./../../core/classes/SecretStoreBaseClass.html"><code>SecretStoreBaseClass</code></a>.<a href="./../../core/classes/SecretStoreBaseClass.html#removesecretimpl"><code>removeSecretImpl</code></a></p><hr><h3 id="setsecret" tabindex="-1">setSecret() <a class="header-anchor" href="#setsecret" aria-label="Permalink to &quot;setSecret()&quot;">​</a></h3><blockquote><p><strong>setSecret</strong>(<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: core/dist/commonjs/core/SecretStore/SecretStoreBaseClass.impl.d.ts:27</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="secretname-2" tabindex="-1">secretName <a class="header-anchor" href="#secretname-2" aria-label="Permalink to &quot;secretName&quot;">​</a></h5><p><code>string</code></p><h5 id="secretvalue" tabindex="-1">secretValue <a class="header-anchor" href="#secretvalue" aria-label="Permalink to &quot;secretValue&quot;">​</a></h5><p><code>string</code></p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="inherited-from-7" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-7" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./../../core/classes/SecretStoreBaseClass.html"><code>SecretStoreBaseClass</code></a>.<a href="./../../core/classes/SecretStoreBaseClass.html#setsecret"><code>setSecret</code></a></p><hr><h3 id="setsecretimpl" tabindex="-1">setSecretImpl() <a class="header-anchor" href="#setsecretimpl" aria-label="Permalink to &quot;setSecretImpl()&quot;">​</a></h3><blockquote><p><code>protected</code> <strong>setSecretImpl</strong>(<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/infisical-secret-store/src/InfisicalSecretStore.impl.ts#L77" target="_blank" rel="noreferrer">infisical-secret-store/src/InfisicalSecretStore.impl.ts:77</a></p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="secretname-3" tabindex="-1">secretName <a class="header-anchor" href="#secretname-3" aria-label="Permalink to &quot;secretName&quot;">​</a></h5><p><code>string</code></p><h5 id="secretvalue-1" tabindex="-1">secretValue <a class="header-anchor" href="#secretvalue-1" aria-label="Permalink to &quot;secretValue&quot;">​</a></h5><p><code>string</code></p><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="overrides-3" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-3" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./../../core/classes/SecretStoreBaseClass.html"><code>SecretStoreBaseClass</code></a>.<a href="./../../core/classes/SecretStoreBaseClass.html#setsecretimpl"><code>setSecretImpl</code></a></p>`,243)]))}const u=a(o,[["render",c]]);export{m as __pageData,u as default};
