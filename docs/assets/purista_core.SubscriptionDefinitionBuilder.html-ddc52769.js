import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o as r,c,b as e,e as n,w as o,d as t,a as l}from"./app-7e2ebe05.js";const u={},h=e("h1",{id:"class-subscriptiondefinitionbuilder-serviceclasstype-messagepayloadtype-messageparamstype-messageresulttype-functionpayloadtype-functionparamstype-functionresulttype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-subscriptiondefinitionbuilder-serviceclasstype-messagepayloadtype-messageparamstype-messageresulttype-functionpayloadtype-functionparamstype-functionresulttype","aria-hidden":"true"},"#"),t(" Class: SubscriptionDefinitionBuilder<ServiceClassType, MessagePayloadType, MessageParamsType, MessageResultType, FunctionPayloadType, FunctionParamsType, FunctionResultType>")],-1),p=e("p",null,"Subscription definition builder is a helper to create and define a subscriptions for a service. It helps to set all needed filters.",-1),_=e("p",null,"A working schema definition needs at least a subscription name, a short description and the subscription implementation.",-1),f=e("h2",{id:"type-parameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters","aria-hidden":"true"},"#"),t(" Type parameters")],-1),y=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),b=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),m={style:{"text-align":"left"}},g=e("code",null,"ServiceClass",-1),T=e("code",null,"ServiceClass",-1),x=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),S=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),D=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),B=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),P=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),v=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType"),t(" | "),e("code",null,"void"),t(" | "),e("code",null,"undefined")])],-1),k=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),F=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),M=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),R=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),C=l('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new SubscriptionDefinitionBuilder</strong>&lt;<code>ServiceClassType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;(<code>subscriptionName</code>, <code>subscriptionDescription</code>)</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4>',4),w=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),I=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),O={style:{"text-align":"left"}},N=e("code",null,"ServiceClass",-1),L=e("code",null,"unknown",-1),E=e("code",null,"ServiceClass",-1),Z=e("code",null,"unknown",-1),A=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),H=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),G=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),V=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),j=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),U=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined"),t(" | "),e("code",null,"void"),t(" | "),e("code",null,"MessageResultType")])],-1),q=l('<h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>subscriptionName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>subscriptionDescription</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',3),W={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L105",target:"_blank",rel:"noopener noreferrer"},Q=l('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="autoacknowledge" tabindex="-1"><a class="header-anchor" href="#autoacknowledge" aria-hidden="true">#</a> autoacknowledge</h3><p>• <code>Private</code> <strong>autoacknowledge</strong>: <code>boolean</code> = <code>false</code></p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4>',4),z={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L102",target:"_blank",rel:"noopener noreferrer"},J=l('<hr><h3 id="durable" tabindex="-1"><a class="header-anchor" href="#durable" aria-hidden="true">#</a> durable</h3><p>• <code>Private</code> <strong>durable</strong>: <code>boolean</code> = <code>true</code></p><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4>',4),K={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L99",target:"_blank",rel:"noopener noreferrer"},X=l('<hr><h3 id="emiteventname" tabindex="-1"><a class="header-anchor" href="#emiteventname" aria-hidden="true">#</a> emitEventName</h3><p>• <code>Private</code> <code>Optional</code> <strong>emitEventName</strong>: <code>string</code></p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4>',4),Y={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L95",target:"_blank",rel:"noopener noreferrer"},$=l('<hr><h3 id="eventname" tabindex="-1"><a class="header-anchor" href="#eventname" aria-hidden="true">#</a> eventName</h3><p>• <code>Private</code> <code>Optional</code> <strong>eventName</strong>: <code>string</code></p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4>',4),ee={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L94",target:"_blank",rel:"noopener noreferrer"},te=e("hr",null,null,-1),ne=e("h3",{id:"fn",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#fn","aria-hidden":"true"},"#"),t(" fn")],-1),ie=e("code",null,"Private",-1),oe=e("code",null,"Optional",-1),se=e("strong",null,"fn",-1),le=e("code",null,"SubscriptionFunction",-1),de=e("code",null,"ServiceClassType",-1),ae=e("code",null,"MessagePayloadType",-1),re=e("code",null,"MessageParamsType",-1),ce=e("code",null,"FunctionPayloadType",-1),ue=e("code",null,"FunctionParamsType",-1),he=e("code",null,"FunctionResultType",-1),pe=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),_e={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L85",target:"_blank",rel:"noopener noreferrer"},fe=e("hr",null,null,-1),ye=e("h3",{id:"hooks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hooks","aria-hidden":"true"},"#"),t(" hooks")],-1),be=e("p",null,[t("• "),e("code",null,"Private"),t(),e("strong",null,"hooks"),t(": "),e("code",null,"Object")],-1),me=e("h4",{id:"type-declaration",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration","aria-hidden":"true"},"#"),t(" Type declaration")],-1),ge=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Te=e("td",{style:{"text-align":"left"}},[e("code",null,"afterGuard")],-1),xe={style:{"text-align":"left"}},Se=e("code",null,"Record",-1),De=e("code",null,"string",-1),Be=e("code",null,"SubscriptionAfterGuardHook",-1),Pe=e("code",null,"ServiceClassType",-1),ve=e("code",null,"FunctionResultType",-1),ke=e("code",null,"FunctionPayloadType",-1),Fe=e("code",null,"FunctionParamsType",-1),Me=e("td",{style:{"text-align":"left"}},[e("code",null,"beforeGuard")],-1),Re={style:{"text-align":"left"}},Ce=e("code",null,"Record",-1),we=e("code",null,"string",-1),Ie=e("code",null,"SubscriptionBeforeGuardHook",-1),Oe=e("code",null,"ServiceClassType",-1),Ne=e("code",null,"FunctionPayloadType",-1),Le=e("code",null,"FunctionParamsType",-1),Ee=e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput?")],-1),Ze={style:{"text-align":"left"}},Ae=e("code",null,"transformFunction",-1),He=e("code",null,"SubscriptionTransformInputHook",-1),Ge=e("code",null,"ServiceClassType",-1),Ve=e("code",null,"any",-1),je=e("code",null,"any",-1),Ue=e("code",null,"any",-1),qe=e("code",null,"any",-1),We=e("code",null,"transformInputSchema",-1),Qe=e("code",null,"ZodType",-1),ze=e("code",null,"any",-1),Je=e("code",null,"ZodTypeDef",-1),Ke=e("code",null,"any",-1),Xe=e("code",null,"transformParameterSchema",-1),Ye=e("code",null,"ZodType",-1),$e=e("code",null,"any",-1),et=e("code",null,"ZodTypeDef",-1),tt=e("code",null,"any",-1),nt=e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput.transformFunction")],-1),it={style:{"text-align":"left"}},ot=e("code",null,"SubscriptionTransformInputHook",-1),st=e("code",null,"ServiceClassType",-1),lt=e("code",null,"any",-1),dt=e("code",null,"any",-1),at=e("code",null,"any",-1),rt=e("code",null,"any",-1),ct=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput.transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"any"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"any"),t(">")])],-1),ut=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput.transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"any"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"any"),t(">")])],-1),ht=e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutput?")],-1),pt={style:{"text-align":"left"}},_t=e("code",null,"transformFunction",-1),ft=e("code",null,"SubscriptionTransformOutputHook",-1),yt=e("code",null,"ServiceClassType",-1),bt=e("code",null,"FunctionResultType",-1),mt=e("code",null,"FunctionParamsType",-1),gt=e("code",null,"any",-1),Tt=e("code",null,"transformOutputSchema",-1),xt=e("code",null,"ZodType",-1),St=e("code",null,"any",-1),Dt=e("code",null,"ZodTypeDef",-1),Bt=e("code",null,"any",-1),Pt=e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutput.transformFunction")],-1),vt={style:{"text-align":"left"}},kt=e("code",null,"SubscriptionTransformOutputHook",-1),Ft=e("code",null,"ServiceClassType",-1),Mt=e("code",null,"FunctionResultType",-1),Rt=e("code",null,"FunctionParamsType",-1),Ct=e("code",null,"any",-1),wt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutput.transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"any"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"any"),t(">")])],-1),It=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ot={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L49",target:"_blank",rel:"noopener noreferrer"},Nt=l('<hr><h3 id="inputcontentencoding" tabindex="-1"><a class="header-anchor" href="#inputcontentencoding" aria-hidden="true">#</a> inputContentEncoding</h3><p>• <code>Private</code> <strong>inputContentEncoding</strong>: <code>undefined</code> | <code>string</code></p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>',4),Lt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L43",target:"_blank",rel:"noopener noreferrer"},Et=l('<hr><h3 id="inputcontenttype" tabindex="-1"><a class="header-anchor" href="#inputcontenttype" aria-hidden="true">#</a> inputContentType</h3><p>• <code>Private</code> <strong>inputContentType</strong>: <code>undefined</code> | <code>string</code></p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4>',4),Zt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L42",target:"_blank",rel:"noopener noreferrer"},At=l('<hr><h3 id="inputschema" tabindex="-1"><a class="header-anchor" href="#inputschema" aria-hidden="true">#</a> inputSchema</h3><p>• <code>Private</code> <code>Optional</code> <strong>inputSchema</strong>: <code>ZodTypeAny</code></p><h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4>',4),Ht={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L41",target:"_blank",rel:"noopener noreferrer"},Gt=e("hr",null,null,-1),Vt=e("h3",{id:"messagetype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#messagetype","aria-hidden":"true"},"#"),t(" messageType")],-1),jt=e("code",null,"Private",-1),Ut=e("strong",null,"messageType",-1),qt=e("code",null,"undefined",-1),Wt=e("code",null,"EBMessageType",-1),Qt=e("h4",{id:"defined-in-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-10","aria-hidden":"true"},"#"),t(" Defined in")],-1),zt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L39",target:"_blank",rel:"noopener noreferrer"},Jt=l('<hr><h3 id="outputcontentencoding" tabindex="-1"><a class="header-anchor" href="#outputcontentencoding" aria-hidden="true">#</a> outputContentEncoding</h3><p>• <code>Private</code> <strong>outputContentEncoding</strong>: <code>undefined</code> | <code>string</code></p><h4 id="defined-in-11" tabindex="-1"><a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a> Defined in</h4>',4),Kt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L46",target:"_blank",rel:"noopener noreferrer"},Xt=l('<hr><h3 id="outputcontenttype" tabindex="-1"><a class="header-anchor" href="#outputcontenttype" aria-hidden="true">#</a> outputContentType</h3><p>• <code>Private</code> <strong>outputContentType</strong>: <code>undefined</code> | <code>string</code></p><h4 id="defined-in-12" tabindex="-1"><a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a> Defined in</h4>',4),Yt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L45",target:"_blank",rel:"noopener noreferrer"},$t=l('<hr><h3 id="outputschema" tabindex="-1"><a class="header-anchor" href="#outputschema" aria-hidden="true">#</a> outputSchema</h3><p>• <code>Private</code> <strong>outputSchema</strong>: <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;</p><h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4>',4),en={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L44",target:"_blank",rel:"noopener noreferrer"},tn=l('<hr><h3 id="parameterschema" tabindex="-1"><a class="header-anchor" href="#parameterschema" aria-hidden="true">#</a> parameterSchema</h3><p>• <code>Private</code> <code>Optional</code> <strong>parameterSchema</strong>: <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;</p><h4 id="defined-in-14" tabindex="-1"><a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a> Defined in</h4>',4),nn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L47",target:"_blank",rel:"noopener noreferrer"},on=l('<hr><h3 id="principalid" tabindex="-1"><a class="header-anchor" href="#principalid" aria-hidden="true">#</a> principalId</h3><p>• <code>Private</code> <code>Optional</code> <strong>principalId</strong>: <code>string</code></p><h4 id="defined-in-15" tabindex="-1"><a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a> Defined in</h4>',4),sn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L97",target:"_blank",rel:"noopener noreferrer"},ln=l('<hr><h3 id="receiver" tabindex="-1"><a class="header-anchor" href="#receiver" aria-hidden="true">#</a> receiver</h3><p>• <code>Private</code> <code>Optional</code> <strong>receiver</strong>: <code>Object</code></p><h4 id="type-declaration-1" tabindex="-1"><a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>instanceId?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>serviceName?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>serviceTarget?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>serviceVersion?</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="defined-in-16" tabindex="-1"><a class="header-anchor" href="#defined-in-16" aria-hidden="true">#</a> Defined in</h4>',6),dn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L78",target:"_blank",rel:"noopener noreferrer"},an=l('<hr><h3 id="sender" tabindex="-1"><a class="header-anchor" href="#sender" aria-hidden="true">#</a> sender</h3><p>• <code>Private</code> <code>Optional</code> <strong>sender</strong>: <code>Object</code></p><h4 id="type-declaration-2" tabindex="-1"><a class="header-anchor" href="#type-declaration-2" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>instanceId?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>serviceName?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>serviceTarget?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>serviceVersion?</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="defined-in-17" tabindex="-1"><a class="header-anchor" href="#defined-in-17" aria-hidden="true">#</a> Defined in</h4>',6),rn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L71",target:"_blank",rel:"noopener noreferrer"},cn=l('<hr><h3 id="shared" tabindex="-1"><a class="header-anchor" href="#shared" aria-hidden="true">#</a> shared</h3><p>• <code>Private</code> <strong>shared</strong>: <code>boolean</code> = <code>true</code></p><h4 id="defined-in-18" tabindex="-1"><a class="header-anchor" href="#defined-in-18" aria-hidden="true">#</a> Defined in</h4>',4),un={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L101",target:"_blank",rel:"noopener noreferrer"},hn=e("hr",null,null,-1),pn=e("h3",{id:"subscriptiondescription",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiondescription","aria-hidden":"true"},"#"),t(" subscriptionDescription")],-1),_n=e("p",null,[t("• "),e("code",null,"Private"),t(),e("strong",null,"subscriptionDescription"),t(": "),e("code",null,"string")],-1),fn=e("h4",{id:"defined-in-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-19","aria-hidden":"true"},"#"),t(" Defined in")],-1),yn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L105",target:"_blank",rel:"noopener noreferrer"},bn=e("hr",null,null,-1),mn=e("h3",{id:"subscriptionname",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionname","aria-hidden":"true"},"#"),t(" subscriptionName")],-1),gn=e("p",null,[t("• "),e("code",null,"Private"),t(),e("strong",null,"subscriptionName"),t(": "),e("code",null,"string")],-1),Tn=e("h4",{id:"defined-in-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-20","aria-hidden":"true"},"#"),t(" Defined in")],-1),xn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L105",target:"_blank",rel:"noopener noreferrer"},Sn=e("h2",{id:"methods-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods-1","aria-hidden":"true"},"#"),t(" Methods")],-1),Dn=e("h3",{id:"addoutputschema",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addoutputschema","aria-hidden":"true"},"#"),t(" addOutputSchema")],-1),Bn=e("strong",null,"addOutputSchema",-1),Pn=e("code",null,"I",-1),vn=e("code",null,"D",-1),kn=e("code",null,"O",-1),Fn=e("code",null,"eventName",-1),Mn=e("code",null,"outputSchema",-1),Rn=e("code",null,"outputContentType?",-1),Cn=e("code",null,"outputContentEncoding?",-1),wn=e("code",null,"SubscriptionDefinitionBuilder",-1),In=e("code",null,"ServiceClassType",-1),On=e("code",null,"MessagePayloadType",-1),Nn=e("code",null,"MessageParamsType",-1),Ln=e("code",null,"O",-1),En=e("code",null,"FunctionPayloadType",-1),Zn=e("code",null,"FunctionParamsType",-1),An=e("code",null,"I",-1),Hn=l('<p>Add a schema for output payload validation. Types for payload of message and function payload output are generated from given schema.</p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>I</code></td><td style="text-align:left;"><code>I</code></td></tr><tr><td style="text-align:left;"><code>D</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>O</code></td><td style="text-align:left;"><code>O</code></td></tr></tbody></table><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">the event name to be used when the subscription result is emitted as custom event</td></tr><tr><td style="text-align:left;"><code>outputSchema</code></td><td style="text-align:left;"><code>ZodType</code>&lt;<code>O</code>, <code>D</code>, <code>I</code>&gt;</td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">the validation schema for the output payload</td></tr><tr><td style="text-align:left;"><code>outputContentType</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>&#39;application/json&#39;</code></td><td style="text-align:left;">optional the content type of payload</td></tr><tr><td style="text-align:left;"><code>outputContentEncoding</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>&#39;utf-8&#39;</code></td><td style="text-align:left;">optional the content encoding</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4>',6),Gn=e("code",null,"SubscriptionDefinitionBuilder",-1),Vn=e("code",null,"ServiceClassType",-1),jn=e("code",null,"MessagePayloadType",-1),Un=e("code",null,"MessageParamsType",-1),qn=e("code",null,"O",-1),Wn=e("code",null,"FunctionPayloadType",-1),Qn=e("code",null,"FunctionParamsType",-1),zn=e("code",null,"I",-1),Jn=e("p",null,"SubscriptionDefinitionBuilder",-1),Kn=e("h4",{id:"defined-in-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-21","aria-hidden":"true"},"#"),t(" Defined in")],-1),Xn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L303",target:"_blank",rel:"noopener noreferrer"},Yn=e("hr",null,null,-1),$n=e("h3",{id:"addparameterschema",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addparameterschema","aria-hidden":"true"},"#"),t(" addParameterSchema")],-1),ei=e("strong",null,"addParameterSchema",-1),ti=e("code",null,"I",-1),ni=e("code",null,"D",-1),ii=e("code",null,"O",-1),oi=e("code",null,"parameterSchema",-1),si=e("code",null,"SubscriptionDefinitionBuilder",-1),li=e("code",null,"ServiceClassType",-1),di=e("code",null,"MessagePayloadType",-1),ai=e("code",null,"I",-1),ri=e("code",null,"MessageResultType",-1),ci=e("code",null,"FunctionPayloadType",-1),ui=e("code",null,"O",-1),hi=e("code",null,"FunctionResultType",-1),pi=l('<p>Add a schema for output parameter validation. Types for parameter of message and function parameter output are generated from given schema.</p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>I</code></td><td style="text-align:left;"><code>I</code></td></tr><tr><td style="text-align:left;"><code>D</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>O</code></td><td style="text-align:left;"><code>O</code></td></tr></tbody></table><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>parameterSchema</code></td><td style="text-align:left;"><code>ZodType</code>&lt;<code>O</code>, <code>D</code>, <code>I</code>&gt;</td><td style="text-align:left;">the validation schema for output parameter</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4>',6),_i=e("code",null,"SubscriptionDefinitionBuilder",-1),fi=e("code",null,"ServiceClassType",-1),yi=e("code",null,"MessagePayloadType",-1),bi=e("code",null,"I",-1),mi=e("code",null,"MessageResultType",-1),gi=e("code",null,"FunctionPayloadType",-1),Ti=e("code",null,"O",-1),xi=e("code",null,"FunctionResultType",-1),Si=e("p",null,"SubscriptionDefinitionBuilder",-1),Di=e("h4",{id:"defined-in-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-22","aria-hidden":"true"},"#"),t(" Defined in")],-1),Bi={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L330",target:"_blank",rel:"noopener noreferrer"},Pi=e("hr",null,null,-1),vi=e("h3",{id:"addpayloadschema",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addpayloadschema","aria-hidden":"true"},"#"),t(" addPayloadSchema")],-1),ki=e("strong",null,"addPayloadSchema",-1),Fi=e("code",null,"I",-1),Mi=e("code",null,"D",-1),Ri=e("code",null,"O",-1),Ci=e("code",null,"inputSchema",-1),wi=e("code",null,"inputContentType?",-1),Ii=e("code",null,"inputContentEncoding?",-1),Oi=e("code",null,"SubscriptionDefinitionBuilder",-1),Ni=e("code",null,"ServiceClassType",-1),Li=e("code",null,"I",-1),Ei=e("code",null,"MessageParamsType",-1),Zi=e("code",null,"MessageResultType",-1),Ai=e("code",null,"O",-1),Hi=e("code",null,"FunctionParamsType",-1),Gi=e("code",null,"FunctionResultType",-1),Vi=l('<p>Add a schema for input payload validation. Types for payload of message and function payload input are generated from given schema.</p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>I</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>D</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code> = <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>O</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>inputSchema</code></td><td style="text-align:left;"><code>ZodType</code>&lt;<code>O</code>, <code>D</code>, <code>I</code>&gt;</td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">the validation schema for input payload</td></tr><tr><td style="text-align:left;"><code>inputContentType</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>&#39;application/json&#39;</code></td><td style="text-align:left;">optional the content type of payload</td></tr><tr><td style="text-align:left;"><code>inputContentEncoding</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>&#39;utf-8&#39;</code></td><td style="text-align:left;">optional the content encoding</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4>',6),ji=e("code",null,"SubscriptionDefinitionBuilder",-1),Ui=e("code",null,"ServiceClassType",-1),qi=e("code",null,"I",-1),Wi=e("code",null,"MessageParamsType",-1),Qi=e("code",null,"MessageResultType",-1),zi=e("code",null,"O",-1),Ji=e("code",null,"FunctionParamsType",-1),Ki=e("code",null,"FunctionResultType",-1),Xi=e("p",null,"SubscriptionDefinitionBuilder",-1),Yi=e("h4",{id:"defined-in-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-23","aria-hidden":"true"},"#"),t(" Defined in")],-1),$i={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L274",target:"_blank",rel:"noopener noreferrer"},eo=e("hr",null,null,-1),to=e("h3",{id:"adviceautoacknowledgemessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#adviceautoacknowledgemessage","aria-hidden":"true"},"#"),t(" adviceAutoacknowledgeMessage")],-1),no=e("strong",null,"adviceAutoacknowledgeMessage",-1),io=e("code",null,"acknowledge?",-1),oo=e("code",null,"SubscriptionDefinitionBuilder",-1),so=e("code",null,"ServiceClassType",-1),lo=e("code",null,"MessagePayloadType",-1),ao=e("code",null,"MessageParamsType",-1),ro=e("code",null,"MessageResultType",-1),co=e("code",null,"FunctionPayloadType",-1),uo=e("code",null,"FunctionParamsType",-1),ho=e("code",null,"FunctionResultType",-1),po=l('<p>Instruct the event bridge message broker to autoacknowledge messages as soon as they arrive. This means, a message will not be resent, if the subscription execution fails unexpected.</p><p>If set to false, the message will be resent from message broker to eventbridge, if:</p><ul><li>the underlaying message broker supports it</li><li>if the subscription execution fails unexpected</li><li>if sending of optional subscription response failed</li></ul><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>acknowledge</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>true</code></td><td style="text-align:left;">Enable (true) and disable (false)</td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4>',6),_o=e("code",null,"SubscriptionDefinitionBuilder",-1),fo=e("code",null,"ServiceClassType",-1),yo=e("code",null,"MessagePayloadType",-1),bo=e("code",null,"MessageParamsType",-1),mo=e("code",null,"MessageResultType",-1),go=e("code",null,"FunctionPayloadType",-1),To=e("code",null,"FunctionParamsType",-1),xo=e("code",null,"FunctionResultType",-1),So=e("p",null,"SubscriptionDefinition",-1),Do=e("h4",{id:"defined-in-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-24","aria-hidden":"true"},"#"),t(" Defined in")],-1),Bo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L154",target:"_blank",rel:"noopener noreferrer"},Po=e("hr",null,null,-1),vo=e("h3",{id:"advicedurable",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#advicedurable","aria-hidden":"true"},"#"),t(" adviceDurable")],-1),ko=e("strong",null,"adviceDurable",-1),Fo=e("code",null,"durable",-1),Mo=e("code",null,"SubscriptionDefinitionBuilder",-1),Ro=e("code",null,"ServiceClassType",-1),Co=e("code",null,"MessagePayloadType",-1),wo=e("code",null,"MessageParamsType",-1),Io=e("code",null,"MessageResultType",-1),Oo=e("code",null,"FunctionPayloadType",-1),No=e("code",null,"FunctionParamsType",-1),Lo=e("code",null,"FunctionResultType",-1),Eo=l('<p>False: defines the subscription as a live-subscription, which is only able to process messages while the subscription itself is running.</p><p>True: Advises the event bridge (like rabbitMQ) to store all messages if the subscription is not running. As soon as the subscription is back again, all missed messages will be sent first, before it starts working like a live-subscription.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>durable</code></td><td style="text-align:left;"><code>boolean</code></td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4>',5),Zo=e("code",null,"SubscriptionDefinitionBuilder",-1),Ao=e("code",null,"ServiceClassType",-1),Ho=e("code",null,"MessagePayloadType",-1),Go=e("code",null,"MessageParamsType",-1),Vo=e("code",null,"MessageResultType",-1),jo=e("code",null,"FunctionPayloadType",-1),Uo=e("code",null,"FunctionParamsType",-1),qo=e("code",null,"FunctionResultType",-1),Wo=e("h4",{id:"defined-in-25",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-25","aria-hidden":"true"},"#"),t(" Defined in")],-1),Qo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L179",target:"_blank",rel:"noopener noreferrer"},zo=e("hr",null,null,-1),Jo=e("h3",{id:"filterformessagetype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#filterformessagetype","aria-hidden":"true"},"#"),t(" filterForMessageType")],-1),Ko=e("strong",null,"filterForMessageType",-1),Xo=e("code",null,"messageType",-1),Yo=e("code",null,"SubscriptionDefinitionBuilder",-1),$o=e("code",null,"ServiceClassType",-1),es=e("code",null,"MessagePayloadType",-1),ts=e("code",null,"MessageParamsType",-1),ns=e("code",null,"MessageResultType",-1),is=e("code",null,"FunctionPayloadType",-1),os=e("code",null,"FunctionParamsType",-1),ss=e("code",null,"FunctionResultType",-1),ls=e("p",null,"Adds a filter to match specific message type.",-1),ds=e("p",null,[t("Common message types are "),e("code",null,"Command"),t(", "),e("code",null,"CommandSuccessResponse"),t(" and "),e("code",null,"CommandErrorResponse"),t(".")],-1),as=e("p",null,"See EBMessageType for full available list.",-1),rs=e("h4",{id:"parameters-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-6","aria-hidden":"true"},"#"),t(" Parameters")],-1),cs=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),us=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType")],-1),hs={style:{"text-align":"left"}},ps=e("code",null,"EBMessageType",-1),_s=e("td",{style:{"text-align":"left"}},"the type of message",-1),fs=e("h4",{id:"returns-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-5","aria-hidden":"true"},"#"),t(" Returns")],-1),ys=e("code",null,"SubscriptionDefinitionBuilder",-1),bs=e("code",null,"ServiceClassType",-1),ms=e("code",null,"MessagePayloadType",-1),gs=e("code",null,"MessageParamsType",-1),Ts=e("code",null,"MessageResultType",-1),xs=e("code",null,"FunctionPayloadType",-1),Ss=e("code",null,"FunctionParamsType",-1),Ds=e("code",null,"FunctionResultType",-1),Bs=e("h4",{id:"defined-in-26",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-26","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ps={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L260",target:"_blank",rel:"noopener noreferrer"},vs=e("hr",null,null,-1),ks=e("h3",{id:"filterinstanceid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#filterinstanceid","aria-hidden":"true"},"#"),t(" filterInstanceId")],-1),Fs=e("strong",null,"filterInstanceId",-1),Ms=e("code",null,"instanceId",-1),Rs=e("code",null,"SubscriptionDefinitionBuilder",-1),Cs=e("code",null,"ServiceClassType",-1),ws=e("code",null,"MessagePayloadType",-1),Is=e("code",null,"MessageParamsType",-1),Os=e("code",null,"MessageResultType",-1),Ns=e("code",null,"FunctionPayloadType",-1),Ls=e("code",null,"FunctionParamsType",-1),Es=e("code",null,"FunctionResultType",-1),Zs=l('<p>Filter messages only from instance id</p><p><strong><code>Deprecated</code></strong></p><p>Use filterSentFrom or filterReceivedBy</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>instanceId</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the instance id to subscribe</td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4>',6),As=e("code",null,"SubscriptionDefinitionBuilder",-1),Hs=e("code",null,"ServiceClassType",-1),Gs=e("code",null,"MessagePayloadType",-1),Vs=e("code",null,"MessageParamsType",-1),js=e("code",null,"MessageResultType",-1),Us=e("code",null,"FunctionPayloadType",-1),qs=e("code",null,"FunctionParamsType",-1),Ws=e("code",null,"FunctionResultType",-1),Qs=e("h4",{id:"defined-in-27",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-27","aria-hidden":"true"},"#"),t(" Defined in")],-1),zs={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L126",target:"_blank",rel:"noopener noreferrer"},Js=e("hr",null,null,-1),Ks=e("h3",{id:"filterprincipalid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#filterprincipalid","aria-hidden":"true"},"#"),t(" filterPrincipalId")],-1),Xs=e("strong",null,"filterPrincipalId",-1),Ys=e("code",null,"principalId",-1),$s=e("code",null,"SubscriptionDefinitionBuilder",-1),el=e("code",null,"ServiceClassType",-1),tl=e("code",null,"MessagePayloadType",-1),nl=e("code",null,"MessageParamsType",-1),il=e("code",null,"MessageResultType",-1),ol=e("code",null,"FunctionPayloadType",-1),sl=e("code",null,"FunctionParamsType",-1),ll=e("code",null,"FunctionResultType",-1),dl=l('<p>Filter messages only for principalId</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>principalId</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the principal id to subscribe</td></tr></tbody></table><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4>',4),al=e("code",null,"SubscriptionDefinitionBuilder",-1),rl=e("code",null,"ServiceClassType",-1),cl=e("code",null,"MessagePayloadType",-1),ul=e("code",null,"MessageParamsType",-1),hl=e("code",null,"MessageResultType",-1),pl=e("code",null,"FunctionPayloadType",-1),_l=e("code",null,"FunctionParamsType",-1),fl=e("code",null,"FunctionResultType",-1),yl=e("h4",{id:"defined-in-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-28","aria-hidden":"true"},"#"),t(" Defined in")],-1),bl={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L137",target:"_blank",rel:"noopener noreferrer"},ml=e("hr",null,null,-1),gl=e("h3",{id:"filterreceivedby",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#filterreceivedby","aria-hidden":"true"},"#"),t(" filterReceivedBy")],-1),Tl=e("strong",null,"filterReceivedBy",-1),xl=e("code",null,"serviceName",-1),Sl=e("code",null,"serviceVersion",-1),Dl=e("code",null,"serviceTarget",-1),Bl=e("code",null,"instanceId",-1),Pl=e("code",null,"SubscriptionDefinitionBuilder",-1),vl=e("code",null,"ServiceClassType",-1),kl=e("code",null,"MessagePayloadType",-1),Fl=e("code",null,"MessageParamsType",-1),Ml=e("code",null,"MessageResultType",-1),Rl=e("code",null,"FunctionPayloadType",-1),Cl=e("code",null,"FunctionParamsType",-1),wl=e("code",null,"FunctionResultType",-1),Il=l(`<p>Add filter to only match messages received by given service function &amp; version. Set one or more parameters to undefined means &quot;do not filter by this criteria&quot;. For example:</p><p>This will filter for all messages send to function testFunction of service UserService. This will include messages from all versions of this function.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">receivedBy</span><span class="token punctuation">(</span><span class="token string">&#39;UserService&#39;</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token string">&#39;testFunction&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>serviceName</code></td><td style="text-align:left;"><code>undefined</code> | <code>string</code></td><td style="text-align:left;">the name of the service that consumes the message</td></tr><tr><td style="text-align:left;"><code>serviceVersion</code></td><td style="text-align:left;"><code>undefined</code> | <code>string</code></td><td style="text-align:left;">the version of the service that consumes the message</td></tr><tr><td style="text-align:left;"><code>serviceTarget</code></td><td style="text-align:left;"><code>undefined</code> | <code>string</code></td><td style="text-align:left;">the command or subscription name of the service that consumes the message</td></tr><tr><td style="text-align:left;"><code>instanceId</code></td><td style="text-align:left;"><code>undefined</code> | <code>string</code></td><td style="text-align:left;">the event bridge instance id which should receive the message</td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4>`,6),Ol=e("code",null,"SubscriptionDefinitionBuilder",-1),Nl=e("code",null,"ServiceClassType",-1),Ll=e("code",null,"MessagePayloadType",-1),El=e("code",null,"MessageParamsType",-1),Zl=e("code",null,"MessageResultType",-1),Al=e("code",null,"FunctionPayloadType",-1),Hl=e("code",null,"FunctionParamsType",-1),Gl=e("code",null,"FunctionResultType",-1),Vl=e("h4",{id:"defined-in-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-29","aria-hidden":"true"},"#"),t(" Defined in")],-1),jl={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L235",target:"_blank",rel:"noopener noreferrer"},Ul=e("hr",null,null,-1),ql=e("h3",{id:"filtersentfrom",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#filtersentfrom","aria-hidden":"true"},"#"),t(" filterSentFrom")],-1),Wl=e("strong",null,"filterSentFrom",-1),Ql=e("code",null,"serviceName",-1),zl=e("code",null,"serviceVersion",-1),Jl=e("code",null,"serviceTarget",-1),Kl=e("code",null,"instanceId",-1),Xl=e("code",null,"SubscriptionDefinitionBuilder",-1),Yl=e("code",null,"ServiceClassType",-1),$l=e("code",null,"MessagePayloadType",-1),ed=e("code",null,"MessageParamsType",-1),td=e("code",null,"MessageResultType",-1),nd=e("code",null,"FunctionPayloadType",-1),id=e("code",null,"FunctionParamsType",-1),od=e("code",null,"FunctionResultType",-1),sd=l(`<p>Add filter to only match messages send by given service function &amp; version. Set one or more parameters to undefined means &quot;do not filter by this criteria&quot;. For example:</p><p>This will filter for all messages send from function testFunction of service UserService. This will include messages from all versions of this function.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">sentFrom</span><span class="token punctuation">(</span><span class="token string">&#39;UserService&#39;</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token string">&#39;testFunction&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>serviceName</code></td><td style="text-align:left;"><code>undefined</code> | <code>string</code></td><td style="text-align:left;">the name of the service that produces the message</td></tr><tr><td style="text-align:left;"><code>serviceVersion</code></td><td style="text-align:left;"><code>undefined</code> | <code>string</code></td><td style="text-align:left;">the version of the service that produces the message</td></tr><tr><td style="text-align:left;"><code>serviceTarget</code></td><td style="text-align:left;"><code>undefined</code> | <code>string</code></td><td style="text-align:left;">the command or subscription name of the service that produces the message</td></tr><tr><td style="text-align:left;"><code>instanceId</code></td><td style="text-align:left;"><code>undefined</code> | <code>string</code></td><td style="text-align:left;">the event bridge instance id which was publishing the message</td></tr></tbody></table><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9" aria-hidden="true">#</a> Returns</h4>`,6),ld=e("code",null,"SubscriptionDefinitionBuilder",-1),dd=e("code",null,"ServiceClassType",-1),ad=e("code",null,"MessagePayloadType",-1),rd=e("code",null,"MessageParamsType",-1),cd=e("code",null,"MessageResultType",-1),ud=e("code",null,"FunctionPayloadType",-1),hd=e("code",null,"FunctionParamsType",-1),pd=e("code",null,"FunctionResultType",-1),_d=e("h4",{id:"defined-in-30",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-30","aria-hidden":"true"},"#"),t(" Defined in")],-1),fd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L202",target:"_blank",rel:"noopener noreferrer"},yd=e("hr",null,null,-1),bd=e("h3",{id:"getdefinition",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getdefinition","aria-hidden":"true"},"#"),t(" getDefinition")],-1),md=e("strong",null,"getDefinition",-1),gd=e("code",null,"SubscriptionDefinition",-1),Td=e("code",null,"ServiceClassType",-1),xd=e("code",null,"SubscriptionDefinitionMetadataBase",-1),Sd=e("code",null,"MessagePayloadType",-1),Dd=e("code",null,"MessageParamsType",-1),Bd=e("code",null,"MessageResultType",-1),Pd=e("code",null,"FunctionPayloadType",-1),vd=e("code",null,"FunctionParamsType",-1),kd=e("code",null,"FunctionResultType",-1),Fd=e("p",null,"Returns the final subscription definition which will be passed into the service class.",-1),Md=e("h4",{id:"returns-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-10","aria-hidden":"true"},"#"),t(" Returns")],-1),Rd=e("code",null,"SubscriptionDefinition",-1),Cd=e("code",null,"ServiceClassType",-1),wd=e("code",null,"SubscriptionDefinitionMetadataBase",-1),Id=e("code",null,"MessagePayloadType",-1),Od=e("code",null,"MessageParamsType",-1),Nd=e("code",null,"MessageResultType",-1),Ld=e("code",null,"FunctionPayloadType",-1),Ed=e("code",null,"FunctionParamsType",-1),Zd=e("code",null,"FunctionResultType",-1),Ad=e("p",null,"SubscriptionDefinition",-1),Hd=e("h4",{id:"defined-in-31",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-31","aria-hidden":"true"},"#"),t(" Defined in")],-1),Gd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L586",target:"_blank",rel:"noopener noreferrer"},Vd=e("hr",null,null,-1),jd=e("h3",{id:"getsubscriptionfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getsubscriptionfunction","aria-hidden":"true"},"#"),t(" getSubscriptionFunction")],-1),Ud=e("strong",null,"getSubscriptionFunction",-1),qd=e("code",null,"SubscriptionFunction",-1),Wd=e("code",null,"ServiceClassType",-1),Qd=e("code",null,"MessagePayloadType",-1),zd=e("code",null,"MessageParamsType",-1),Jd=e("code",null,"FunctionPayloadType",-1),Kd=e("code",null,"FunctionParamsType",-1),Xd=e("code",null,"FunctionResultType",-1),Yd=e("p",null,"Get the function implementation",-1),$d=e("h4",{id:"returns-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-11","aria-hidden":"true"},"#"),t(" Returns")],-1),ea=e("code",null,"SubscriptionFunction",-1),ta=e("code",null,"ServiceClassType",-1),na=e("code",null,"MessagePayloadType",-1),ia=e("code",null,"MessageParamsType",-1),oa=e("code",null,"FunctionPayloadType",-1),sa=e("code",null,"FunctionParamsType",-1),la=e("code",null,"FunctionResultType",-1),da=e("p",null,"the subscription function",-1),aa=e("h4",{id:"defined-in-32",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-32","aria-hidden":"true"},"#"),t(" Defined in")],-1),ra={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L557",target:"_blank",rel:"noopener noreferrer"},ca=e("hr",null,null,-1),ua=e("h3",{id:"gettransforminputfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#gettransforminputfunction","aria-hidden":"true"},"#"),t(" getTransformInputFunction")],-1),ha=e("strong",null,"getTransformInputFunction",-1),pa=e("code",null,"undefined",-1),_a=e("code",null,"SubscriptionTransformInputHook",-1),fa=e("code",null,"ServiceClassType",-1),ya=e("code",null,"FunctionPayloadType",-1),ba=e("code",null,"FunctionParamsType",-1),ma=e("code",null,"MessagePayloadType",-1),ga=e("code",null,"MessageParamsType",-1),Ta=e("p",null,"Return the transform input function",-1),xa=e("h4",{id:"returns-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-12","aria-hidden":"true"},"#"),t(" Returns")],-1),Sa=e("code",null,"undefined",-1),Da=e("code",null,"SubscriptionTransformInputHook",-1),Ba=e("code",null,"ServiceClassType",-1),Pa=e("code",null,"FunctionPayloadType",-1),va=e("code",null,"FunctionParamsType",-1),ka=e("code",null,"MessagePayloadType",-1),Fa=e("code",null,"MessageParamsType",-1),Ma=e("p",null,"the input transform function if defined",-1),Ra=e("h4",{id:"defined-in-33",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-33","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ca={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L397",target:"_blank",rel:"noopener noreferrer"},wa=e("hr",null,null,-1),Ia=e("h3",{id:"gettransformoutputfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#gettransformoutputfunction","aria-hidden":"true"},"#"),t(" getTransformOutputFunction")],-1),Oa=e("strong",null,"getTransformOutputFunction",-1),Na=e("code",null,"undefined",-1),La=e("code",null,"SubscriptionTransformOutputHook",-1),Ea=e("code",null,"ServiceClassType",-1),Za=e("code",null,"FunctionResultType",-1),Aa=e("code",null,"FunctionParamsType",-1),Ha=e("code",null,"FunctionResultType",-1),Ga=e("p",null,"Return the transform output function",-1),Va=e("h4",{id:"returns-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-13","aria-hidden":"true"},"#"),t(" Returns")],-1),ja=e("code",null,"undefined",-1),Ua=e("code",null,"SubscriptionTransformOutputHook",-1),qa=e("code",null,"ServiceClassType",-1),Wa=e("code",null,"FunctionResultType",-1),Qa=e("code",null,"FunctionParamsType",-1),za=e("code",null,"FunctionResultType",-1),Ja=e("p",null,"the transform output function if defined",-1),Ka=e("h4",{id:"defined-in-34",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-34","aria-hidden":"true"},"#"),t(" Defined in")],-1),Xa={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L454",target:"_blank",rel:"noopener noreferrer"},Ya=e("hr",null,null,-1),$a=e("h3",{id:"receivemessageoneveryinstance",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#receivemessageoneveryinstance","aria-hidden":"true"},"#"),t(" receiveMessageOnEveryInstance")],-1),er=e("strong",null,"receiveMessageOnEveryInstance",-1),tr=e("code",null,"enforce?",-1),nr=e("code",null,"SubscriptionDefinitionBuilder",-1),ir=e("code",null,"ServiceClassType",-1),or=e("code",null,"MessagePayloadType",-1),sr=e("code",null,"MessageParamsType",-1),lr=e("code",null,"MessageResultType",-1),dr=e("code",null,"FunctionPayloadType",-1),ar=e("code",null,"FunctionParamsType",-1),rr=e("code",null,"FunctionResultType",-1),cr=l('<p>Instruct the event bridge message broker to send the matching message to every running instance. The underlaying message broker must support this functionality.</p><p>In serverless environments, this flag should not have any effect</p><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th></tr></thead><tbody><tr><td style="text-align:left;"><code>enforce</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>true</code></td></tr></tbody></table><h4 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14" aria-hidden="true">#</a> Returns</h4>',5),ur=e("code",null,"SubscriptionDefinitionBuilder",-1),hr=e("code",null,"ServiceClassType",-1),pr=e("code",null,"MessagePayloadType",-1),_r=e("code",null,"MessageParamsType",-1),fr=e("code",null,"MessageResultType",-1),yr=e("code",null,"FunctionPayloadType",-1),br=e("code",null,"FunctionParamsType",-1),mr=e("code",null,"FunctionResultType",-1),gr=e("p",null,"SubscriptionDefinition",-1),Tr=e("h4",{id:"defined-in-35",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-35","aria-hidden":"true"},"#"),t(" Defined in")],-1),xr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L168",target:"_blank",rel:"noopener noreferrer"},Sr=e("hr",null,null,-1),Dr=e("h3",{id:"setafterguardhooks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setafterguardhooks","aria-hidden":"true"},"#"),t(" setAfterGuardHooks")],-1),Br=e("strong",null,"setAfterGuardHooks",-1),Pr=e("code",null,"afterGuards",-1),vr=e("code",null,"SubscriptionDefinitionBuilder",-1),kr=e("code",null,"ServiceClassType",-1),Fr=e("code",null,"MessagePayloadType",-1),Mr=e("code",null,"MessageParamsType",-1),Rr=e("code",null,"MessageResultType",-1),Cr=e("code",null,"FunctionPayloadType",-1),wr=e("code",null,"FunctionParamsType",-1),Ir=e("code",null,"FunctionResultType",-1),Or=e("p",null,"Set one or more after guard hook(s). If there are multiple after guard hooks, they are executed in parallel",-1),Nr=e("h4",{id:"parameters-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-12","aria-hidden":"true"},"#"),t(" Parameters")],-1),Lr=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Er=e("td",{style:{"text-align":"left"}},[e("code",null,"afterGuards")],-1),Zr={style:{"text-align":"left"}},Ar=e("code",null,"Record",-1),Hr=e("code",null,"string",-1),Gr=e("code",null,"SubscriptionAfterGuardHook",-1),Vr=e("code",null,"ServiceClassType",-1),jr=e("code",null,"FunctionResultType",-1),Ur=e("code",null,"FunctionPayloadType",-1),qr=e("code",null,"FunctionParamsType",-1),Wr=e("h4",{id:"returns-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-15","aria-hidden":"true"},"#"),t(" Returns")],-1),Qr=e("code",null,"SubscriptionDefinitionBuilder",-1),zr=e("code",null,"ServiceClassType",-1),Jr=e("code",null,"MessagePayloadType",-1),Kr=e("code",null,"MessageParamsType",-1),Xr=e("code",null,"MessageResultType",-1),Yr=e("code",null,"FunctionPayloadType",-1),$r=e("code",null,"FunctionParamsType",-1),ec=e("code",null,"FunctionResultType",-1),tc=e("p",null,"SubscriptionDefinitionBuilder",-1),nc=e("h4",{id:"defined-in-36",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-36","aria-hidden":"true"},"#"),t(" Defined in")],-1),ic={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L489",target:"_blank",rel:"noopener noreferrer"},oc=e("hr",null,null,-1),sc=e("h3",{id:"setbeforeguardhooks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setbeforeguardhooks","aria-hidden":"true"},"#"),t(" setBeforeGuardHooks")],-1),lc=e("strong",null,"setBeforeGuardHooks",-1),dc=e("code",null,"beforeGuards",-1),ac=e("code",null,"SubscriptionDefinitionBuilder",-1),rc=e("code",null,"ServiceClassType",-1),cc=e("code",null,"MessagePayloadType",-1),uc=e("code",null,"MessageParamsType",-1),hc=e("code",null,"MessageResultType",-1),pc=e("code",null,"FunctionPayloadType",-1),_c=e("code",null,"FunctionParamsType",-1),fc=e("code",null,"FunctionResultType",-1),yc=e("p",null,"Set one or more before guard hook(s). If there are multiple before guard hooks, they are executed in parallel",-1),bc=e("h4",{id:"parameters-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-13","aria-hidden":"true"},"#"),t(" Parameters")],-1),mc=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),gc=e("td",{style:{"text-align":"left"}},[e("code",null,"beforeGuards")],-1),Tc={style:{"text-align":"left"}},xc=e("code",null,"Record",-1),Sc=e("code",null,"string",-1),Dc=e("code",null,"SubscriptionBeforeGuardHook",-1),Bc=e("code",null,"ServiceClassType",-1),Pc=e("code",null,"FunctionPayloadType",-1),vc=e("code",null,"FunctionParamsType",-1),kc=e("td",{style:{"text-align":"left"}},"Object of key = name of guard, value = function",-1),Fc=e("h4",{id:"returns-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-16","aria-hidden":"true"},"#"),t(" Returns")],-1),Mc=e("code",null,"SubscriptionDefinitionBuilder",-1),Rc=e("code",null,"ServiceClassType",-1),Cc=e("code",null,"MessagePayloadType",-1),wc=e("code",null,"MessageParamsType",-1),Ic=e("code",null,"MessageResultType",-1),Oc=e("code",null,"FunctionPayloadType",-1),Nc=e("code",null,"FunctionParamsType",-1),Lc=e("code",null,"FunctionResultType",-1),Ec=e("p",null,"SubscriptionDefinitionBuilder",-1),Zc=e("h4",{id:"defined-in-37",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-37","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ac={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L473",target:"_blank",rel:"noopener noreferrer"},Hc=e("hr",null,null,-1),Gc=e("h3",{id:"setsubscriptionfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setsubscriptionfunction","aria-hidden":"true"},"#"),t(" setSubscriptionFunction")],-1),Vc=e("strong",null,"setSubscriptionFunction",-1),jc=e("code",null,"fn",-1),Uc=e("code",null,"SubscriptionDefinitionBuilder",-1),qc=e("code",null,"ServiceClassType",-1),Wc=e("code",null,"MessagePayloadType",-1),Qc=e("code",null,"MessageParamsType",-1),zc=e("code",null,"MessageResultType",-1),Jc=e("code",null,"FunctionPayloadType",-1),Kc=e("code",null,"FunctionParamsType",-1),Xc=e("code",null,"FunctionResultType",-1),Yc=l(`<p>Required: Set the function implementation. The types should be automatically set as soon as schemas previously defined. As the function will be a a function of a service class you need to implement as function declaration. Anonymous functions do not have access to the <code>this</code> scope.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> parameter<span class="token punctuation">)</span> <span class="token punctuation">{</span>

   <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">the result output payload</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14" aria-hidden="true">#</a> Parameters</h4>`,4),$c=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),eu=e("td",{style:{"text-align":"left"}},[e("code",null,"fn")],-1),tu={style:{"text-align":"left"}},nu=e("code",null,"SubscriptionFunction",-1),iu=e("code",null,"ServiceClassType",-1),ou=e("code",null,"MessagePayloadType",-1),su=e("code",null,"MessageParamsType",-1),lu=e("code",null,"FunctionPayloadType",-1),du=e("code",null,"FunctionParamsType",-1),au=e("code",null,"FunctionResultType",-1),ru=e("td",{style:{"text-align":"left"}},"the function implementation",-1),cu=e("h4",{id:"returns-17",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-17","aria-hidden":"true"},"#"),t(" Returns")],-1),uu=e("code",null,"SubscriptionDefinitionBuilder",-1),hu=e("code",null,"ServiceClassType",-1),pu=e("code",null,"MessagePayloadType",-1),_u=e("code",null,"MessageParamsType",-1),fu=e("code",null,"MessageResultType",-1),yu=e("code",null,"FunctionPayloadType",-1),bu=e("code",null,"FunctionParamsType",-1),mu=e("code",null,"FunctionResultType",-1),gu=e("p",null,"SubscriptionDefinitionBuilder",-1),Tu=e("h4",{id:"defined-in-38",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-38","aria-hidden":"true"},"#"),t(" Defined in")],-1),xu={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L515",target:"_blank",rel:"noopener noreferrer"},Su=e("hr",null,null,-1),Du=e("h3",{id:"settransforminput",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#settransforminput","aria-hidden":"true"},"#"),t(" setTransformInput")],-1),Bu=e("strong",null,"setTransformInput",-1),Pu=e("code",null,"PayloadIn",-1),vu=e("code",null,"ParamsIn",-1),ku=e("code",null,"PayloadOut",-1),Fu=e("code",null,"ParamsOut",-1),Mu=e("code",null,"PayloadD",-1),Ru=e("code",null,"ParamsD",-1),Cu=e("code",null,"transformInputSchema",-1),wu=e("code",null,"transformParameterSchema",-1),Iu=e("code",null,"transformFunction",-1),Ou=e("code",null,"inputContentType?",-1),Nu=e("code",null,"inputContentEncoding?",-1),Lu=e("code",null,"SubscriptionDefinitionBuilder",-1),Eu=e("code",null,"ServiceClassType",-1),Zu=e("code",null,"PayloadIn",-1),Au=e("code",null,"ParamsIn",-1),Hu=e("code",null,"MessageResultType",-1),Gu=e("code",null,"FunctionPayloadType",-1),Vu=e("code",null,"FunctionParamsType",-1),ju=e("code",null,"FunctionResultType",-1),Uu=l('<p>Set a transform input hook which will encode or transform the input payload and parameters. Will be executed as first step before input validation, before guard and the function itself. This will change the type of input message payload and input message parameter.</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadIn</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>ParamsIn</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>PayloadOut</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>ParamsOut</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>PayloadD</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code> = <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>ParamsD</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code> = <code>ZodTypeDef</code></td></tr></tbody></table><h4 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15" aria-hidden="true">#</a> Parameters</h4>',4),qu=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Wu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"PayloadOut"),t(", "),e("code",null,"PayloadD"),t(", "),e("code",null,"PayloadIn"),t(">")]),e("td",{style:{"text-align":"left"}},"Input payload validation schema")],-1),Qu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"ParamsOut"),t(", "),e("code",null,"ParamsD"),t(", "),e("code",null,"ParamsIn"),t(">")]),e("td",{style:{"text-align":"left"}},"Input parameter validation schema")],-1),zu=e("td",{style:{"text-align":"left"}},[e("code",null,"transformFunction")],-1),Ju={style:{"text-align":"left"}},Ku=e("code",null,"SubscriptionTransformInputHook",-1),Xu=e("code",null,"ServiceClassType",-1),Yu=e("code",null,"FunctionPayloadType",-1),$u=e("code",null,"FunctionParamsType",-1),eh=e("code",null,"PayloadIn",-1),th=e("code",null,"ParamsIn",-1),nh=e("td",{style:{"text-align":"left"}},"the transform input function",-1),ih=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"inputContentType?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"optional the content type of payload")],-1),oh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"inputContentEncoding?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"optional the content encoding")],-1),sh=e("h4",{id:"returns-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-18","aria-hidden":"true"},"#"),t(" Returns")],-1),lh=e("code",null,"SubscriptionDefinitionBuilder",-1),dh=e("code",null,"ServiceClassType",-1),ah=e("code",null,"PayloadIn",-1),rh=e("code",null,"ParamsIn",-1),ch=e("code",null,"MessageResultType",-1),uh=e("code",null,"FunctionPayloadType",-1),hh=e("code",null,"FunctionParamsType",-1),ph=e("code",null,"FunctionResultType",-1),_h=e("p",null,"SubscriptionDefinitionBuilder",-1),fh=e("h4",{id:"defined-in-39",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-39","aria-hidden":"true"},"#"),t(" Defined in")],-1),yh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L354",target:"_blank",rel:"noopener noreferrer"},bh=e("hr",null,null,-1),mh=e("h3",{id:"settransformoutput",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#settransformoutput","aria-hidden":"true"},"#"),t(" setTransformOutput")],-1),gh=e("strong",null,"setTransformOutput",-1),Th=e("code",null,"PayloadOut",-1),xh=e("code",null,"PayloadD",-1),Sh=e("code",null,"PayloadIn",-1),Dh=e("code",null,"transformOutputSchema",-1),Bh=e("code",null,"transformFunction",-1),Ph=e("code",null,"outputContentType?",-1),vh=e("code",null,"outputContentEncoding?",-1),kh=e("code",null,"SubscriptionDefinitionBuilder",-1),Fh=e("code",null,"ServiceClassType",-1),Mh=e("code",null,"MessagePayloadType",-1),Rh=e("code",null,"MessageParamsType",-1),Ch=e("code",null,"PayloadOut",-1),wh=e("code",null,"FunctionPayloadType",-1),Ih=e("code",null,"FunctionParamsType",-1),Oh=e("code",null,"FunctionResultType",-1),Nh=l('<p>Set a transform output hook which will encode or transform the response payload. Will be executed at very last step after function execution, output validation and after guard hooks. This will change the type of output message payload.</p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadOut</code></td><td style="text-align:left;"><code>PayloadOut</code></td></tr><tr><td style="text-align:left;"><code>PayloadD</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>PayloadIn</code></td><td style="text-align:left;"><code>PayloadIn</code></td></tr></tbody></table><h4 id="parameters-16" tabindex="-1"><a class="header-anchor" href="#parameters-16" aria-hidden="true">#</a> Parameters</h4>',4),Lh=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Eh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"PayloadOut"),t(", "),e("code",null,"PayloadD"),t(", "),e("code",null,"PayloadIn"),t(">")]),e("td",{style:{"text-align":"left"}},"The output validation schema")],-1),Zh=e("td",{style:{"text-align":"left"}},[e("code",null,"transformFunction")],-1),Ah={style:{"text-align":"left"}},Hh=e("code",null,"SubscriptionTransformOutputHook",-1),Gh=e("code",null,"ServiceClassType",-1),Vh=e("code",null,"FunctionResultType",-1),jh=e("code",null,"FunctionParamsType",-1),Uh=e("code",null,"PayloadIn",-1),qh=e("td",{style:{"text-align":"left"}},"the transform output function",-1),Wh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"outputContentType?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"optional the content type of payload")],-1),Qh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"outputContentEncoding?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"optional the content encoding")],-1),zh=e("h4",{id:"returns-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-19","aria-hidden":"true"},"#"),t(" Returns")],-1),Jh=e("code",null,"SubscriptionDefinitionBuilder",-1),Kh=e("code",null,"ServiceClassType",-1),Xh=e("code",null,"MessagePayloadType",-1),Yh=e("code",null,"MessageParamsType",-1),$h=e("code",null,"PayloadOut",-1),ep=e("code",null,"FunctionPayloadType",-1),tp=e("code",null,"FunctionParamsType",-1),np=e("code",null,"FunctionResultType",-1),ip=e("p",null,"SubscriptionDefinitionBuilder",-1),op=e("h4",{id:"defined-in-40",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-40","aria-hidden":"true"},"#"),t(" Defined in")],-1),sp={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L421",target:"_blank",rel:"noopener noreferrer"},lp=e("hr",null,null,-1),dp=e("h3",{id:"subscribetoevent",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscribetoevent","aria-hidden":"true"},"#"),t(" subscribeToEvent")],-1),ap=e("strong",null,"subscribeToEvent",-1),rp=e("code",null,"eventName",-1),cp=e("code",null,"serviceVersion?",-1),up=e("code",null,"SubscriptionDefinitionBuilder",-1),hp=e("code",null,"ServiceClassType",-1),pp=e("code",null,"MessagePayloadType",-1),_p=e("code",null,"MessageParamsType",-1),fp=e("code",null,"MessageResultType",-1),yp=e("code",null,"FunctionPayloadType",-1),bp=e("code",null,"FunctionParamsType",-1),mp=e("code",null,"FunctionResultType",-1),gp=l('<p>Add a filter to only subscribe to messages with matching event name</p><h4 id="parameters-17" tabindex="-1"><a class="header-anchor" href="#parameters-17" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The name of event to subscribe</td></tr><tr><td style="text-align:left;"><code>serviceVersion?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the version of the service that produces the event</td></tr></tbody></table><h4 id="returns-20" tabindex="-1"><a class="header-anchor" href="#returns-20" aria-hidden="true">#</a> Returns</h4>',4),Tp=e("code",null,"SubscriptionDefinitionBuilder",-1),xp=e("code",null,"ServiceClassType",-1),Sp=e("code",null,"MessagePayloadType",-1),Dp=e("code",null,"MessageParamsType",-1),Bp=e("code",null,"MessageResultType",-1),Pp=e("code",null,"FunctionPayloadType",-1),vp=e("code",null,"FunctionParamsType",-1),kp=e("code",null,"FunctionResultType",-1),Fp=e("p",null,"SubscriptionDefinitionBuilder",-1),Mp=e("h4",{id:"defined-in-41",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-41","aria-hidden":"true"},"#"),t(" Defined in")],-1),Rp={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L113",target:"_blank",rel:"noopener noreferrer"};function Cp(wp,Ip){const i=d("RouterLink"),s=d("ExternalLinkIcon");return r(),c("div",null,[e("p",null,[n(i,{to:"/api/"},{default:o(()=>[t("PURISTA API")]),_:1}),t(" / "),n(i,{to:"/api/modules.html"},{default:o(()=>[t("Modules")]),_:1}),t(" / "),n(i,{to:"/api/modules/purista_core.html"},{default:o(()=>[t("@purista/core")]),_:1}),t(" / SubscriptionDefinitionBuilder")]),h,e("p",null,[n(i,{to:"/api/modules/purista_core.html"},{default:o(()=>[t("@purista/core")]),_:1}),t(".SubscriptionDefinitionBuilder")]),p,_,f,e("table",null,[y,e("tbody",null,[e("tr",null,[b,e("td",m,[t("extends "),n(i,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:o(()=>[g]),_:1}),t(" = "),n(i,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:o(()=>[T]),_:1})])]),x,S,D,B,P,v])]),k,F,e("ul",null,[e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#constructor"},{default:o(()=>[t("constructor")]),_:1})])]),M,e("ul",null,[e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#autoacknowledge"},{default:o(()=>[t("autoacknowledge")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#durable"},{default:o(()=>[t("durable")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#emiteventname"},{default:o(()=>[t("emitEventName")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#eventname"},{default:o(()=>[t("eventName")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#fn"},{default:o(()=>[t("fn")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#hooks"},{default:o(()=>[t("hooks")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#inputcontentencoding"},{default:o(()=>[t("inputContentEncoding")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#inputcontenttype"},{default:o(()=>[t("inputContentType")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#inputschema"},{default:o(()=>[t("inputSchema")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#messagetype"},{default:o(()=>[t("messageType")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#outputcontentencoding"},{default:o(()=>[t("outputContentEncoding")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#outputcontenttype"},{default:o(()=>[t("outputContentType")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#outputschema"},{default:o(()=>[t("outputSchema")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#parameterschema"},{default:o(()=>[t("parameterSchema")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#principalid"},{default:o(()=>[t("principalId")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#receiver"},{default:o(()=>[t("receiver")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#sender"},{default:o(()=>[t("sender")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#shared"},{default:o(()=>[t("shared")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#subscriptiondescription"},{default:o(()=>[t("subscriptionDescription")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#subscriptionname"},{default:o(()=>[t("subscriptionName")]),_:1})])]),R,e("ul",null,[e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#addoutputschema"},{default:o(()=>[t("addOutputSchema")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#addparameterschema"},{default:o(()=>[t("addParameterSchema")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#addpayloadschema"},{default:o(()=>[t("addPayloadSchema")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#adviceautoacknowledgemessage"},{default:o(()=>[t("adviceAutoacknowledgeMessage")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#advicedurable"},{default:o(()=>[t("adviceDurable")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#filterformessagetype"},{default:o(()=>[t("filterForMessageType")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#filterinstanceid"},{default:o(()=>[t("filterInstanceId")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#filterprincipalid"},{default:o(()=>[t("filterPrincipalId")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#filterreceivedby"},{default:o(()=>[t("filterReceivedBy")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#filtersentfrom"},{default:o(()=>[t("filterSentFrom")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#getdefinition"},{default:o(()=>[t("getDefinition")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#getsubscriptionfunction"},{default:o(()=>[t("getSubscriptionFunction")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#gettransforminputfunction"},{default:o(()=>[t("getTransformInputFunction")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#gettransformoutputfunction"},{default:o(()=>[t("getTransformOutputFunction")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#receivemessageoneveryinstance"},{default:o(()=>[t("receiveMessageOnEveryInstance")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#setafterguardhooks"},{default:o(()=>[t("setAfterGuardHooks")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#setbeforeguardhooks"},{default:o(()=>[t("setBeforeGuardHooks")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#setsubscriptionfunction"},{default:o(()=>[t("setSubscriptionFunction")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#settransforminput"},{default:o(()=>[t("setTransformInput")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#settransformoutput"},{default:o(()=>[t("setTransformOutput")]),_:1})]),e("li",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html#subscribetoevent"},{default:o(()=>[t("subscribeToEvent")]),_:1})])]),C,e("table",null,[w,e("tbody",null,[e("tr",null,[I,e("td",O,[t("extends "),n(i,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:o(()=>[N]),_:1}),t("<"),L,t("> = "),n(i,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:o(()=>[E]),_:1}),t("<"),Z,t(">")])]),A,H,G,V,j,U])]),q,e("p",null,[e("a",W,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:105"),n(s)])]),Q,e("p",null,[e("a",z,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:102"),n(s)])]),J,e("p",null,[e("a",K,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:99"),n(s)])]),X,e("p",null,[e("a",Y,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:95"),n(s)])]),$,e("p",null,[e("a",ee,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:94"),n(s)])]),te,ne,e("p",null,[t("• "),ie,t(),oe,t(),se,t(": "),n(i,{to:"/api/modules/purista_core.html#subscriptionfunction"},{default:o(()=>[le]),_:1}),t("<"),de,t(", "),ae,t(", "),re,t(", "),ce,t(", "),ue,t(", "),he,t(">")]),pe,e("p",null,[e("a",_e,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:85"),n(s)])]),fe,ye,be,me,e("table",null,[ge,e("tbody",null,[e("tr",null,[Te,e("td",xe,[Se,t("<"),De,t(", "),n(i,{to:"/api/modules/purista_core.html#subscriptionafterguardhook"},{default:o(()=>[Be]),_:1}),t("<"),Pe,t(", "),ve,t(", "),ke,t(", "),Fe,t(">>")])]),e("tr",null,[Me,e("td",Re,[Ce,t("<"),we,t(", "),n(i,{to:"/api/modules/purista_core.html#subscriptionbeforeguardhook"},{default:o(()=>[Ie]),_:1}),t("<"),Oe,t(", "),Ne,t(", "),Le,t(">>")])]),e("tr",null,[Ee,e("td",Ze,[t("{ "),Ae,t(": "),n(i,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:o(()=>[He]),_:1}),t("<"),Ge,t(", "),Ve,t(", "),je,t(", "),Ue,t(", "),qe,t("> ; "),We,t(": "),Qe,t("<"),ze,t(", "),Je,t(", "),Ke,t("> ; "),Xe,t(": "),Ye,t("<"),$e,t(", "),et,t(", "),tt,t("> }")])]),e("tr",null,[nt,e("td",it,[n(i,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:o(()=>[ot]),_:1}),t("<"),st,t(", "),lt,t(", "),dt,t(", "),at,t(", "),rt,t(">")])]),ct,ut,e("tr",null,[ht,e("td",pt,[t("{ "),_t,t(": "),n(i,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:o(()=>[ft]),_:1}),t("<"),yt,t(", "),bt,t(", "),mt,t(", "),gt,t("> ; "),Tt,t(": "),xt,t("<"),St,t(", "),Dt,t(", "),Bt,t("> }")])]),e("tr",null,[Pt,e("td",vt,[n(i,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:o(()=>[kt]),_:1}),t("<"),Ft,t(", "),Mt,t(", "),Rt,t(", "),Ct,t(">")])]),wt])]),It,e("p",null,[e("a",Ot,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:49"),n(s)])]),Nt,e("p",null,[e("a",Lt,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:43"),n(s)])]),Et,e("p",null,[e("a",Zt,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:42"),n(s)])]),At,e("p",null,[e("a",Ht,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:41"),n(s)])]),Gt,Vt,e("p",null,[t("• "),jt,t(),Ut,t(": "),qt,t(" | "),n(i,{to:"/api/enums/purista_core.EBMessageType.html"},{default:o(()=>[Wt]),_:1})]),Qt,e("p",null,[e("a",zt,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:39"),n(s)])]),Jt,e("p",null,[e("a",Kt,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:46"),n(s)])]),Xt,e("p",null,[e("a",Yt,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:45"),n(s)])]),$t,e("p",null,[e("a",en,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:44"),n(s)])]),tn,e("p",null,[e("a",nn,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:47"),n(s)])]),on,e("p",null,[e("a",sn,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:97"),n(s)])]),ln,e("p",null,[e("a",dn,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:78"),n(s)])]),an,e("p",null,[e("a",rn,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:71"),n(s)])]),cn,e("p",null,[e("a",un,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:101"),n(s)])]),hn,pn,_n,fn,e("p",null,[e("a",yn,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:105"),n(s)])]),bn,mn,gn,Tn,e("p",null,[e("a",xn,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:105"),n(s)])]),Sn,Dn,e("p",null,[t("▸ "),Bn,t("<"),Pn,t(", "),vn,t(", "),kn,t(">("),Fn,t(", "),Mn,t(", "),Rn,t(", "),Cn,t("): "),n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[wn]),_:1}),t("<"),In,t(", "),On,t(", "),Nn,t(", "),Ln,t(", "),En,t(", "),Zn,t(", "),An,t(">")]),Hn,e("p",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[Gn]),_:1}),t("<"),Vn,t(", "),jn,t(", "),Un,t(", "),qn,t(", "),Wn,t(", "),Qn,t(", "),zn,t(">")]),Jn,Kn,e("p",null,[e("a",Xn,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:303"),n(s)])]),Yn,$n,e("p",null,[t("▸ "),ei,t("<"),ti,t(", "),ni,t(", "),ii,t(">("),oi,t("): "),n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[si]),_:1}),t("<"),li,t(", "),di,t(", "),ai,t(", "),ri,t(", "),ci,t(", "),ui,t(", "),hi,t(">")]),pi,e("p",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[_i]),_:1}),t("<"),fi,t(", "),yi,t(", "),bi,t(", "),mi,t(", "),gi,t(", "),Ti,t(", "),xi,t(">")]),Si,Di,e("p",null,[e("a",Bi,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:330"),n(s)])]),Pi,vi,e("p",null,[t("▸ "),ki,t("<"),Fi,t(", "),Mi,t(", "),Ri,t(">("),Ci,t(", "),wi,t(", "),Ii,t("): "),n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[Oi]),_:1}),t("<"),Ni,t(", "),Li,t(", "),Ei,t(", "),Zi,t(", "),Ai,t(", "),Hi,t(", "),Gi,t(">")]),Vi,e("p",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[ji]),_:1}),t("<"),Ui,t(", "),qi,t(", "),Wi,t(", "),Qi,t(", "),zi,t(", "),Ji,t(", "),Ki,t(">")]),Xi,Yi,e("p",null,[e("a",$i,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:274"),n(s)])]),eo,to,e("p",null,[t("▸ "),no,t("("),io,t("): "),n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[oo]),_:1}),t("<"),so,t(", "),lo,t(", "),ao,t(", "),ro,t(", "),co,t(", "),uo,t(", "),ho,t(">")]),po,e("p",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[_o]),_:1}),t("<"),fo,t(", "),yo,t(", "),bo,t(", "),mo,t(", "),go,t(", "),To,t(", "),xo,t(">")]),So,Do,e("p",null,[e("a",Bo,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:154"),n(s)])]),Po,vo,e("p",null,[t("▸ "),ko,t("("),Fo,t("): "),n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[Mo]),_:1}),t("<"),Ro,t(", "),Co,t(", "),wo,t(", "),Io,t(", "),Oo,t(", "),No,t(", "),Lo,t(">")]),Eo,e("p",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[Zo]),_:1}),t("<"),Ao,t(", "),Ho,t(", "),Go,t(", "),Vo,t(", "),jo,t(", "),Uo,t(", "),qo,t(">")]),Wo,e("p",null,[e("a",Qo,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:179"),n(s)])]),zo,Jo,e("p",null,[t("▸ "),Ko,t("("),Xo,t("): "),n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[Yo]),_:1}),t("<"),$o,t(", "),es,t(", "),ts,t(", "),ns,t(", "),is,t(", "),os,t(", "),ss,t(">")]),ls,ds,as,rs,e("table",null,[cs,e("tbody",null,[e("tr",null,[us,e("td",hs,[n(i,{to:"/api/enums/purista_core.EBMessageType.html"},{default:o(()=>[ps]),_:1})]),_s])])]),fs,e("p",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[ys]),_:1}),t("<"),bs,t(", "),ms,t(", "),gs,t(", "),Ts,t(", "),xs,t(", "),Ss,t(", "),Ds,t(">")]),Bs,e("p",null,[e("a",Ps,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:260"),n(s)])]),vs,ks,e("p",null,[t("▸ "),Fs,t("("),Ms,t("): "),n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[Rs]),_:1}),t("<"),Cs,t(", "),ws,t(", "),Is,t(", "),Os,t(", "),Ns,t(", "),Ls,t(", "),Es,t(">")]),Zs,e("p",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[As]),_:1}),t("<"),Hs,t(", "),Gs,t(", "),Vs,t(", "),js,t(", "),Us,t(", "),qs,t(", "),Ws,t(">")]),Qs,e("p",null,[e("a",zs,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:126"),n(s)])]),Js,Ks,e("p",null,[t("▸ "),Xs,t("("),Ys,t("): "),n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[$s]),_:1}),t("<"),el,t(", "),tl,t(", "),nl,t(", "),il,t(", "),ol,t(", "),sl,t(", "),ll,t(">")]),dl,e("p",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[al]),_:1}),t("<"),rl,t(", "),cl,t(", "),ul,t(", "),hl,t(", "),pl,t(", "),_l,t(", "),fl,t(">")]),yl,e("p",null,[e("a",bl,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:137"),n(s)])]),ml,gl,e("p",null,[t("▸ "),Tl,t("("),xl,t(", "),Sl,t(", "),Dl,t(", "),Bl,t("): "),n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[Pl]),_:1}),t("<"),vl,t(", "),kl,t(", "),Fl,t(", "),Ml,t(", "),Rl,t(", "),Cl,t(", "),wl,t(">")]),Il,e("p",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[Ol]),_:1}),t("<"),Nl,t(", "),Ll,t(", "),El,t(", "),Zl,t(", "),Al,t(", "),Hl,t(", "),Gl,t(">")]),Vl,e("p",null,[e("a",jl,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:235"),n(s)])]),Ul,ql,e("p",null,[t("▸ "),Wl,t("("),Ql,t(", "),zl,t(", "),Jl,t(", "),Kl,t("): "),n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[Xl]),_:1}),t("<"),Yl,t(", "),$l,t(", "),ed,t(", "),td,t(", "),nd,t(", "),id,t(", "),od,t(">")]),sd,e("p",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[ld]),_:1}),t("<"),dd,t(", "),ad,t(", "),rd,t(", "),cd,t(", "),ud,t(", "),hd,t(", "),pd,t(">")]),_d,e("p",null,[e("a",fd,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:202"),n(s)])]),yd,bd,e("p",null,[t("▸ "),md,t("(): "),n(i,{to:"/api/modules/purista_core.html#subscriptiondefinition"},{default:o(()=>[gd]),_:1}),t("<"),Td,t(", "),n(i,{to:"/api/modules/purista_core.html#subscriptiondefinitionmetadatabase"},{default:o(()=>[xd]),_:1}),t(", "),Sd,t(", "),Dd,t(", "),Bd,t(", "),Pd,t(", "),vd,t(", "),kd,t(">")]),Fd,Md,e("p",null,[n(i,{to:"/api/modules/purista_core.html#subscriptiondefinition"},{default:o(()=>[Rd]),_:1}),t("<"),Cd,t(", "),n(i,{to:"/api/modules/purista_core.html#subscriptiondefinitionmetadatabase"},{default:o(()=>[wd]),_:1}),t(", "),Id,t(", "),Od,t(", "),Nd,t(", "),Ld,t(", "),Ed,t(", "),Zd,t(">")]),Ad,Hd,e("p",null,[e("a",Gd,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:586"),n(s)])]),Vd,jd,e("p",null,[t("▸ "),Ud,t("(): "),n(i,{to:"/api/modules/purista_core.html#subscriptionfunction"},{default:o(()=>[qd]),_:1}),t("<"),Wd,t(", "),Qd,t(", "),zd,t(", "),Jd,t(", "),Kd,t(", "),Xd,t(">")]),Yd,$d,e("p",null,[n(i,{to:"/api/modules/purista_core.html#subscriptionfunction"},{default:o(()=>[ea]),_:1}),t("<"),ta,t(", "),na,t(", "),ia,t(", "),oa,t(", "),sa,t(", "),la,t(">")]),da,aa,e("p",null,[e("a",ra,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:557"),n(s)])]),ca,ua,e("p",null,[t("▸ "),ha,t("(): "),pa,t(" | "),n(i,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:o(()=>[_a]),_:1}),t("<"),fa,t(", "),ya,t(", "),ba,t(", "),ma,t(", "),ga,t(">")]),Ta,xa,e("p",null,[Sa,t(" | "),n(i,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:o(()=>[Da]),_:1}),t("<"),Ba,t(", "),Pa,t(", "),va,t(", "),ka,t(", "),Fa,t(">")]),Ma,Ra,e("p",null,[e("a",Ca,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:397"),n(s)])]),wa,Ia,e("p",null,[t("▸ "),Oa,t("(): "),Na,t(" | "),n(i,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:o(()=>[La]),_:1}),t("<"),Ea,t(", "),Za,t(", "),Aa,t(", "),Ha,t(">")]),Ga,Va,e("p",null,[ja,t(" | "),n(i,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:o(()=>[Ua]),_:1}),t("<"),qa,t(", "),Wa,t(", "),Qa,t(", "),za,t(">")]),Ja,Ka,e("p",null,[e("a",Xa,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:454"),n(s)])]),Ya,$a,e("p",null,[t("▸ "),er,t("("),tr,t("): "),n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[nr]),_:1}),t("<"),ir,t(", "),or,t(", "),sr,t(", "),lr,t(", "),dr,t(", "),ar,t(", "),rr,t(">")]),cr,e("p",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[ur]),_:1}),t("<"),hr,t(", "),pr,t(", "),_r,t(", "),fr,t(", "),yr,t(", "),br,t(", "),mr,t(">")]),gr,Tr,e("p",null,[e("a",xr,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:168"),n(s)])]),Sr,Dr,e("p",null,[t("▸ "),Br,t("("),Pr,t("): "),n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[vr]),_:1}),t("<"),kr,t(", "),Fr,t(", "),Mr,t(", "),Rr,t(", "),Cr,t(", "),wr,t(", "),Ir,t(">")]),Or,Nr,e("table",null,[Lr,e("tbody",null,[e("tr",null,[Er,e("td",Zr,[Ar,t("<"),Hr,t(", "),n(i,{to:"/api/modules/purista_core.html#subscriptionafterguardhook"},{default:o(()=>[Gr]),_:1}),t("<"),Vr,t(", "),jr,t(", "),Ur,t(", "),qr,t(">>")])])])]),Wr,e("p",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[Qr]),_:1}),t("<"),zr,t(", "),Jr,t(", "),Kr,t(", "),Xr,t(", "),Yr,t(", "),$r,t(", "),ec,t(">")]),tc,nc,e("p",null,[e("a",ic,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:489"),n(s)])]),oc,sc,e("p",null,[t("▸ "),lc,t("("),dc,t("): "),n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[ac]),_:1}),t("<"),rc,t(", "),cc,t(", "),uc,t(", "),hc,t(", "),pc,t(", "),_c,t(", "),fc,t(">")]),yc,bc,e("table",null,[mc,e("tbody",null,[e("tr",null,[gc,e("td",Tc,[xc,t("<"),Sc,t(", "),n(i,{to:"/api/modules/purista_core.html#subscriptionbeforeguardhook"},{default:o(()=>[Dc]),_:1}),t("<"),Bc,t(", "),Pc,t(", "),vc,t(">>")]),kc])])]),Fc,e("p",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[Mc]),_:1}),t("<"),Rc,t(", "),Cc,t(", "),wc,t(", "),Ic,t(", "),Oc,t(", "),Nc,t(", "),Lc,t(">")]),Ec,Zc,e("p",null,[e("a",Ac,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:473"),n(s)])]),Hc,Gc,e("p",null,[t("▸ "),Vc,t("("),jc,t("): "),n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[Uc]),_:1}),t("<"),qc,t(", "),Wc,t(", "),Qc,t(", "),zc,t(", "),Jc,t(", "),Kc,t(", "),Xc,t(">")]),Yc,e("table",null,[$c,e("tbody",null,[e("tr",null,[eu,e("td",tu,[n(i,{to:"/api/modules/purista_core.html#subscriptionfunction"},{default:o(()=>[nu]),_:1}),t("<"),iu,t(", "),ou,t(", "),su,t(", "),lu,t(", "),du,t(", "),au,t(">")]),ru])])]),cu,e("p",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[uu]),_:1}),t("<"),hu,t(", "),pu,t(", "),_u,t(", "),fu,t(", "),yu,t(", "),bu,t(", "),mu,t(">")]),gu,Tu,e("p",null,[e("a",xu,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:515"),n(s)])]),Su,Du,e("p",null,[t("▸ "),Bu,t("<"),Pu,t(", "),vu,t(", "),ku,t(", "),Fu,t(", "),Mu,t(", "),Ru,t(">("),Cu,t(", "),wu,t(", "),Iu,t(", "),Ou,t(", "),Nu,t("): "),n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[Lu]),_:1}),t("<"),Eu,t(", "),Zu,t(", "),Au,t(", "),Hu,t(", "),Gu,t(", "),Vu,t(", "),ju,t(">")]),Uu,e("table",null,[qu,e("tbody",null,[Wu,Qu,e("tr",null,[zu,e("td",Ju,[n(i,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:o(()=>[Ku]),_:1}),t("<"),Xu,t(", "),Yu,t(", "),$u,t(", "),eh,t(", "),th,t(">")]),nh]),ih,oh])]),sh,e("p",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[lh]),_:1}),t("<"),dh,t(", "),ah,t(", "),rh,t(", "),ch,t(", "),uh,t(", "),hh,t(", "),ph,t(">")]),_h,fh,e("p",null,[e("a",yh,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:354"),n(s)])]),bh,mh,e("p",null,[t("▸ "),gh,t("<"),Th,t(", "),xh,t(", "),Sh,t(">("),Dh,t(", "),Bh,t(", "),Ph,t(", "),vh,t("): "),n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[kh]),_:1}),t("<"),Fh,t(", "),Mh,t(", "),Rh,t(", "),Ch,t(", "),wh,t(", "),Ih,t(", "),Oh,t(">")]),Nh,e("table",null,[Lh,e("tbody",null,[Eh,e("tr",null,[Zh,e("td",Ah,[n(i,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:o(()=>[Hh]),_:1}),t("<"),Gh,t(", "),Vh,t(", "),jh,t(", "),Uh,t(">")]),qh]),Wh,Qh])]),zh,e("p",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[Jh]),_:1}),t("<"),Kh,t(", "),Xh,t(", "),Yh,t(", "),$h,t(", "),ep,t(", "),tp,t(", "),np,t(">")]),ip,op,e("p",null,[e("a",sp,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:421"),n(s)])]),lp,dp,e("p",null,[t("▸ "),ap,t("("),rp,t(", "),cp,t("): "),n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[up]),_:1}),t("<"),hp,t(", "),pp,t(", "),_p,t(", "),fp,t(", "),yp,t(", "),bp,t(", "),mp,t(">")]),gp,e("p",null,[n(i,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:o(()=>[Tp]),_:1}),t("<"),xp,t(", "),Sp,t(", "),Dp,t(", "),Bp,t(", "),Pp,t(", "),vp,t(", "),kp,t(">")]),Fp,Mp,e("p",null,[e("a",Rp,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:113"),n(s)])])])}const Lp=a(u,[["render",Cp],["__file","purista_core.SubscriptionDefinitionBuilder.html.vue"]]);export{Lp as default};
