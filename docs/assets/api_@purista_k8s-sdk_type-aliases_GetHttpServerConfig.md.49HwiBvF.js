import{_ as a,c as t,o,ag as s}from"./chunks/framework.U_AETC1W.js";const u=JSON.parse('{"title":"Type Alias: GetHttpServerConfig","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/k8s-sdk/type-aliases/GetHttpServerConfig.md","filePath":"api/@purista/k8s-sdk/type-aliases/GetHttpServerConfig.md","lastUpdated":1739900666000}'),r={name:"api/@purista/k8s-sdk/type-aliases/GetHttpServerConfig.md"};function i(n,e,l,p,c,d){return o(),t("div",null,e[0]||(e[0]=[s('<p><a href="./../README.html"><strong>@purista/k8s-sdk v2.0.0</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/k8s-sdk</a> / GetHttpServerConfig</p><h1 id="type-alias-gethttpserverconfig" tabindex="-1">Type Alias: GetHttpServerConfig <a class="header-anchor" href="#type-alias-gethttpserverconfig" aria-label="Permalink to &quot;Type Alias: GetHttpServerConfig&quot;">​</a></h1><blockquote><p><strong>GetHttpServerConfig</strong>: <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/k8s-sdk/src/types.ts#L6" target="_blank" rel="noreferrer">types.ts:6</a></p><p>The configuration object for creating the k8s http server</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="apimountpath" tabindex="-1">apiMountPath? <a class="header-anchor" href="#apimountpath" aria-label="Permalink to &quot;apiMountPath?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>apiMountPath</strong>: <code>string</code></p></blockquote><p>the api mount path</p><h4 id="default" tabindex="-1">Default <a class="header-anchor" href="#default" aria-label="Permalink to &quot;Default&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api</span></span></code></pre></div><h3 id="disableendpointexposing" tabindex="-1">disableEndpointExposing? <a class="header-anchor" href="#disableendpointexposing" aria-label="Permalink to &quot;disableEndpointExposing?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>disableEndpointExposing</strong>: <code>boolean</code></p></blockquote><p>disables adding of all endpoints for commands which are marked to be exposed as http endpoints</p><h3 id="enablehttpcompression" tabindex="-1">enableHttpCompression? <a class="header-anchor" href="#enablehttpcompression" aria-label="Permalink to &quot;enableHttpCompression?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>enableHttpCompression</strong>: <code>boolean</code></p></blockquote><p>enable HTTP compression in web server</p><h4 id="default-1" tabindex="-1">Default <a class="header-anchor" href="#default-1" aria-label="Permalink to &quot;Default&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><h3 id="healthfn" tabindex="-1">healthFn() <a class="header-anchor" href="#healthfn" aria-label="Permalink to &quot;healthFn()&quot;">​</a></h3><blockquote><p><strong>healthFn</strong>: () =&gt; <code>Promise</code>&lt;<code>boolean</code>&gt;</p></blockquote><p>health function to be executed on health check</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><h3 id="hostname" tabindex="-1">hostname? <a class="header-anchor" href="#hostname" aria-label="Permalink to &quot;hostname?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>hostname</strong>: <code>string</code></p></blockquote><p>hostname used in tracing and logging</p><h3 id="logger" tabindex="-1">logger <a class="header-anchor" href="#logger" aria-label="Permalink to &quot;logger&quot;">​</a></h3><blockquote><p><strong>logger</strong>: <a href="./../../core/classes/Logger.html"><code>Logger</code></a></p></blockquote><p>a logger instance</p><h3 id="services" tabindex="-1">services? <a class="header-anchor" href="#services" aria-label="Permalink to &quot;services?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>services</strong>: <a href="./../../core/classes/Service.html"><code>Service</code></a> | <a href="./../../core/classes/Service.html"><code>Service</code></a>[]</p></blockquote><p>service or array of services which should expose their commands as endpoints if defined</p>',35)]))}const g=a(r,[["render",i]]);export{u as __pageData,g as default};
