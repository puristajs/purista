import{_ as a,c as o,o as t,ag as r}from"./chunks/framework.U_AETC1W.js";const u=JSON.parse('{"title":"Type Alias: CommandDefinitionBuilderTypes<PayloadSchema, ParamsSchema, OutputSchema, TransformInputPayloadSchema, TransformInputParamsSchema, TransformOutputSchema, Resources, Invokes, EmitList>","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/core/type-aliases/CommandDefinitionBuilderTypes.md","filePath":"api/@purista/core/type-aliases/CommandDefinitionBuilderTypes.md","lastUpdated":1739900666000}'),s={name:"api/@purista/core/type-aliases/CommandDefinitionBuilderTypes.md"};function c(m,e,n,d,i,p){return t(),o("div",null,e[0]||(e[0]=[r('<p><a href="./../README.html"><strong>@purista/core v1.11.0</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/core</a> / CommandDefinitionBuilderTypes</p><h1 id="type-alias-commanddefinitionbuildertypes-payloadschema-paramsschema-outputschema-transforminputpayloadschema-transforminputparamsschema-transformoutputschema-resources-invokes-emitlist" tabindex="-1">Type Alias: CommandDefinitionBuilderTypes&lt;PayloadSchema, ParamsSchema, OutputSchema, TransformInputPayloadSchema, TransformInputParamsSchema, TransformOutputSchema, Resources, Invokes, EmitList&gt; <a class="header-anchor" href="#type-alias-commanddefinitionbuildertypes-payloadschema-paramsschema-outputschema-transforminputpayloadschema-transforminputparamsschema-transformoutputschema-resources-invokes-emitlist" aria-label="Permalink to &quot;Type Alias: CommandDefinitionBuilderTypes\\&lt;PayloadSchema, ParamsSchema, OutputSchema, TransformInputPayloadSchema, TransformInputParamsSchema, TransformOutputSchema, Resources, Invokes, EmitList\\&gt;&quot;">​</a></h1><blockquote><p><strong>CommandDefinitionBuilderTypes</strong>&lt;<code>PayloadSchema</code>, <code>ParamsSchema</code>, <code>OutputSchema</code>, <code>TransformInputPayloadSchema</code>, <code>TransformInputParamsSchema</code>, <code>TransformOutputSchema</code>, <code>Resources</code>, <code>Invokes</code>, <code>EmitList</code>&gt;: <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilderTypes.ts#L4" target="_blank" rel="noreferrer">packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilderTypes.ts:4</a></p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>PayloadSchema</strong> <em>extends</em> <code>Schema</code> = <code>Schema</code></p><p>• <strong>ParamsSchema</strong> <em>extends</em> <code>Schema</code> = <code>Schema</code></p><p>• <strong>OutputSchema</strong> <em>extends</em> <code>Schema</code> = <code>Schema</code></p><p>• <strong>TransformInputPayloadSchema</strong> <em>extends</em> <code>Schema</code> = <code>Schema</code></p><p>• <strong>TransformInputParamsSchema</strong> <em>extends</em> <code>Schema</code> = <code>Schema</code></p><p>• <strong>TransformOutputSchema</strong> <em>extends</em> <code>Schema</code> = <code>Schema</code></p><p>• <strong>Resources</strong> <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; = <a href="./EmptyObject.html"><code>EmptyObject</code></a></p><p>• <strong>Invokes</strong> <em>extends</em> <a href="./InvokeList.html"><code>InvokeList</code></a> = <a href="./InvokeList.html"><code>InvokeList</code></a></p><p>• <strong>EmitList</strong> <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>Schema</code>&gt; = <code>Record</code>&lt;<code>string</code>, <code>Schema</code>&gt;</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="emitlist" tabindex="-1">EmitList <a class="header-anchor" href="#emitlist" aria-label="Permalink to &quot;EmitList&quot;">​</a></h3><blockquote><p><strong>EmitList</strong>: <code>EmitList</code></p></blockquote><h3 id="invokes" tabindex="-1">Invokes <a class="header-anchor" href="#invokes" aria-label="Permalink to &quot;Invokes&quot;">​</a></h3><blockquote><p><strong>Invokes</strong>: <code>Invokes</code></p></blockquote><h3 id="outputschema" tabindex="-1">OutputSchema <a class="header-anchor" href="#outputschema" aria-label="Permalink to &quot;OutputSchema&quot;">​</a></h3><blockquote><p><strong>OutputSchema</strong>: <code>OutputSchema</code></p></blockquote><h3 id="paramsschema" tabindex="-1">ParamsSchema <a class="header-anchor" href="#paramsschema" aria-label="Permalink to &quot;ParamsSchema&quot;">​</a></h3><blockquote><p><strong>ParamsSchema</strong>: <code>ParamsSchema</code></p></blockquote><h3 id="payloadschema" tabindex="-1">PayloadSchema <a class="header-anchor" href="#payloadschema" aria-label="Permalink to &quot;PayloadSchema&quot;">​</a></h3><blockquote><p><strong>PayloadSchema</strong>: <code>PayloadSchema</code></p></blockquote><h3 id="resources" tabindex="-1">Resources <a class="header-anchor" href="#resources" aria-label="Permalink to &quot;Resources&quot;">​</a></h3><blockquote><p><strong>Resources</strong>: <code>Resources</code></p></blockquote><h3 id="transforminputparamsschema" tabindex="-1">TransformInputParamsSchema <a class="header-anchor" href="#transforminputparamsschema" aria-label="Permalink to &quot;TransformInputParamsSchema&quot;">​</a></h3><blockquote><p><strong>TransformInputParamsSchema</strong>: <code>TransformInputParamsSchema</code></p></blockquote><h3 id="transforminputpayloadschema" tabindex="-1">TransformInputPayloadSchema <a class="header-anchor" href="#transforminputpayloadschema" aria-label="Permalink to &quot;TransformInputPayloadSchema&quot;">​</a></h3><blockquote><p><strong>TransformInputPayloadSchema</strong>: <code>TransformInputPayloadSchema</code></p></blockquote><h3 id="transformoutputschema" tabindex="-1">TransformOutputSchema <a class="header-anchor" href="#transformoutputschema" aria-label="Permalink to &quot;TransformOutputSchema&quot;">​</a></h3><blockquote><p><strong>TransformOutputSchema</strong>: <code>TransformOutputSchema</code></p></blockquote>',35)]))}const l=a(s,[["render",c]]);export{u as __pageData,l as default};
