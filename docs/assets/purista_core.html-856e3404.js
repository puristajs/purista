import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as c,c as r,b as e,e as n,w as s,d as t,a as d}from"./app-9aedf0b4.js";const u={},h=e("h1",{id:"module-purista-core",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#module-purista-core","aria-hidden":"true"},"#"),t(" Module: @purista/core")],-1),_=e("p",null,"This is the main package of PURISTA.",-1),p=e("p",null,"A backend framework for building message based domain services.",-1),f=e("p",null,"This framework adapts and combines a wide range of different patters from domain driven design, cqrs, microservice, event sourcing and lambda functions.",-1),g=e("p",null,"It is build from ground up in typescript and highly focuses on schema, and auto generation of types, input-output-validation, OpenApi documentation (swagger).",-1),m={href:"https://jestjs.io",target:"_blank",rel:"noopener noreferrer"},y={href:"https://sinonjs.org",target:"_blank",rel:"noopener noreferrer"},b={href:"https://purista.dev",target:"_blank",rel:"noopener noreferrer"},x=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),v=e("h3",{id:"enumerations",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#enumerations","aria-hidden":"true"},"#"),t(" Enumerations")],-1),S=e("h3",{id:"classes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#classes","aria-hidden":"true"},"#"),t(" Classes")],-1),T=e("h3",{id:"interfaces",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#interfaces","aria-hidden":"true"},"#"),t(" Interfaces")],-1),k=e("h3",{id:"type-aliases",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),t(" Type Aliases")],-1),C=e("h3",{id:"variables",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#variables","aria-hidden":"true"},"#"),t(" Variables")],-1),P=e("h3",{id:"functions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#functions","aria-hidden":"true"},"#"),t(" Functions")],-1),w=e("h3",{id:"command",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#command","aria-hidden":"true"},"#"),t(" Command")],-1),M=e("h3",{id:"event-bridge",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#event-bridge","aria-hidden":"true"},"#"),t(" Event bridge")],-1),I=e("h3",{id:"helper",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#helper","aria-hidden":"true"},"#"),t(" Helper")],-1),E=e("h3",{id:"service",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#service","aria-hidden":"true"},"#"),t(" Service")],-1),F=e("h3",{id:"store",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#store","aria-hidden":"true"},"#"),t(" Store")],-1),D=e("h3",{id:"subscription",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscription","aria-hidden":"true"},"#"),t(" Subscription")],-1),R=e("h3",{id:"unit-test-helper",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#unit-test-helper","aria-hidden":"true"},"#"),t(" Unit test helper")],-1),B=d('<h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="authcredentials" tabindex="-1"><a class="header-anchor" href="#authcredentials" aria-hidden="true">#</a> AuthCredentials</h3><p>Ƭ <strong>AuthCredentials</strong>: <code>Object</code></p><p>HTTP authentication information</p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>basicAuth?</code></td><td style="text-align:left;">{ <code>password</code>: <code>string</code> ; <code>username</code>: <code>string</code> }</td><td style="text-align:left;">Basic-Auth information</td></tr><tr><td style="text-align:left;"><code>basicAuth.password</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Basic-Auth password</td></tr><tr><td style="text-align:left;"><code>basicAuth.username</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Basic-Auth username</td></tr><tr><td style="text-align:left;"><code>bearerToken?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Bearer token header</td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',7),N={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpClient/types/AuthCredentials.ts#L4",target:"_blank",rel:"noopener noreferrer"},L=e("hr",null,null,-1),O=e("h3",{id:"brokerheadercommandmsg",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#brokerheadercommandmsg","aria-hidden":"true"},"#"),t(" BrokerHeaderCommandMsg")],-1),A=e("strong",null,"BrokerHeaderCommandMsg",-1),H=e("code",null,"Prettify",-1),j=e("code",null,"BrokerHeaderCustomMsg",-1),G=e("code",null,"receiverInstanceId?",-1),q=e("code",null,"InstanceId",-1),V=e("code",null,"receiverServiceName",-1),z=e("code",null,"string",-1),Z=e("code",null,"receiverServiceTarget",-1),U=e("code",null,"string",-1),Q=e("code",null,"receiverServiceVersion",-1),K=e("code",null,"string",-1),W=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),$={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/BrokerHeaderCommandMsg.ts#L5",target:"_blank",rel:"noopener noreferrer"},Y=e("hr",null,null,-1),J=e("h3",{id:"brokerheadercommandresponsemsg",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#brokerheadercommandresponsemsg","aria-hidden":"true"},"#"),t(" BrokerHeaderCommandResponseMsg")],-1),X=e("strong",null,"BrokerHeaderCommandResponseMsg",-1),ee=e("code",null,"Prettify",-1),te=e("code",null,"BrokerHeaderCommandMsg",-1),ne=e("code",null,"receiverInstanceId",-1),oe=e("code",null,"InstanceId",-1),se=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),le={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/BrokerHeaderCommandResponseMsg.ts#L5",target:"_blank",rel:"noopener noreferrer"},de=e("hr",null,null,-1),ae=e("h3",{id:"brokerheadercustommsg",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#brokerheadercustommsg","aria-hidden":"true"},"#"),t(" BrokerHeaderCustomMsg")],-1),ie=e("p",null,[t("Ƭ "),e("strong",null,"BrokerHeaderCustomMsg"),t(": "),e("code",null,"Object")],-1),ce=e("h4",{id:"type-declaration-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-1","aria-hidden":"true"},"#"),t(" Type declaration")],-1),re=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ue=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),he=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType")],-1),_e={style:{"text-align":"left"}},pe=e("code",null,"EBMessageType",-1),fe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),ge=e("td",{style:{"text-align":"left"}},[e("code",null,"senderInstanceId")],-1),me={style:{"text-align":"left"}},ye=e("code",null,"InstanceId",-1),be=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"senderServiceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),xe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"senderServiceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),ve=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"senderServiceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Se=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),Te={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/BrokerHeaderCustomMsg.ts#L4",target:"_blank",rel:"noopener noreferrer"},ke=e("hr",null,null,-1),Ce=e("h3",{id:"command-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#command-1","aria-hidden":"true"},"#"),t(" Command")],-1),Pe=e("strong",null,"Command",-1),we=e("code",null,"PayloadType",-1),Me=e("code",null,"ParameterType",-1),Ie=e("code",null,"Prettify",-1),Ee=e("code",null,"correlationId",-1),Fe=e("code",null,"CorrelationId",-1),De=e("code",null,"messageType",-1),Re=e("code",null,"Command",-1),Be=e("code",null,"payload",-1),Ne=e("code",null,"parameter",-1),Le=e("code",null,"ParameterType",-1),Oe=e("code",null,"payload",-1),Ae=e("code",null,"PayloadType",-1),He=e("code",null,"receiver",-1),je=e("code",null,"EBMessageAddress",-1),Ge=e("code",null,"EBMessageBase",-1),qe=d('<p>Command is a event bridge message, which is emitted by sender to event bridge. The event bridge dispatches the event to the receiver. A command expects to get a response message from receiver back to sender.</p><p>Also if there are subscriptions which are matching given command, the event bridge also dispatches the command message to the subscriber(s).</p><p>BE AWARE: Subscribers should not respond with command responses if they are &quot;silent&quot; subscribers/listeners.</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4>',6),Ve={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/Command.ts#L18",target:"_blank",rel:"noopener noreferrer"},ze=e("hr",null,null,-1),Ze=e("h3",{id:"commanddefinitionlist",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commanddefinitionlist","aria-hidden":"true"},"#"),t(" CommandDefinitionList")],-1),Ue=e("strong",null,"CommandDefinitionList",-1),Qe=e("code",null,"ServiceClassType",-1),Ke=e("code",null,"CommandDefinition",-1),We=e("code",null,"ServiceClassType",-1),$e=e("code",null,"CommandDefinitionMetadataBase",-1),Ye=e("code",null,"any",-1),Je=e("code",null,"any",-1),Xe=e("code",null,"any",-1),et=e("code",null,"any",-1),tt=e("code",null,"any",-1),nt=e("code",null,"any",-1),ot=d(`<p>Helper type for creating list of service commands to be passed as input to service class</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> userServiceCommands<span class="token operator">:</span> CommandDefinitionList<span class="token operator">&lt;</span>UserService<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span>signUp<span class="token punctuation">.</span><span class="token function">getDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4>`,3),st=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),lt=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),dt={style:{"text-align":"left"}},at=e("code",null,"ServiceClass",-1),it=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),ct={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandDefinitionList.ts#L12",target:"_blank",rel:"noopener noreferrer"},rt=e("hr",null,null,-1),ut=e("h3",{id:"commanddefinitionmetadatabase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commanddefinitionmetadatabase","aria-hidden":"true"},"#"),t(" CommandDefinitionMetadataBase")],-1),ht=e("p",null,[t("Ƭ "),e("strong",null,"CommandDefinitionMetadataBase"),t(": "),e("code",null,"Object")],-1),_t=e("h4",{id:"type-declaration-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-2","aria-hidden":"true"},"#"),t(" Type declaration")],-1),pt=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ft=e("td",{style:{"text-align":"left"}},[e("code",null,"expose")],-1),gt={style:{"text-align":"left"}},mt=e("code",null,"contentEncodingRequest?",-1),yt=e("code",null,"string",-1),bt=e("code",null,"contentEncodingResponse?",-1),xt=e("code",null,"string",-1),vt=e("code",null,"contentTypeRequest?",-1),St=e("code",null,"ContentType",-1),Tt=e("code",null,"contentTypeResponse?",-1),kt=e("code",null,"ContentType",-1),Ct=e("code",null,"deprecated?",-1),Pt=e("code",null,"boolean",-1),wt=e("code",null,"inputPayload?",-1),Mt=e("code",null,"SchemaObject",-1),It=e("code",null,"outputPayload?",-1),Et=e("code",null,"SchemaObject",-1),Ft=e("code",null,"parameter?",-1),Dt=e("code",null,"SchemaObject",-1),Rt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingRequest?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Bt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingResponse?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Nt=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeRequest?")],-1),Lt={style:{"text-align":"left"}},Ot=e("code",null,"ContentType",-1),At=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeResponse?")],-1),Ht={style:{"text-align":"left"}},jt=e("code",null,"ContentType",-1),Gt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.deprecated?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")])],-1),qt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.inputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Vt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.outputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),zt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.parameter?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Zt=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ut={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandDefinitionMetadataBase.ts#L5",target:"_blank",rel:"noopener noreferrer"},Qt=d(`<hr><h3 id="complete" tabindex="-1"><a class="header-anchor" href="#complete" aria-hidden="true">#</a> Complete</h3><p>Ƭ <strong>Complete</strong>&lt;<code>T</code>&gt;: { [P in keyof Required&lt;T&gt;]: Pick&lt;T, P&gt; extends Required&lt;Pick&lt;T, P&gt;&gt; ? T[P] : T[P] | undefined }</p><p>A helper which forces to provide all object keys, even if they are optional.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
 one<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
 two<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
 three<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">// without:</span>
<span class="token keyword">const</span> x<span class="token operator">:</span><span class="token constant">A</span> <span class="token operator">=</span> <span class="token punctuation">{</span> three<span class="token operator">:</span> <span class="token string">&#39;will work&#39;</span><span class="token punctuation">}</span>

<span class="token comment">// this will fail</span>
<span class="token keyword">const</span> y<span class="token operator">:</span>Complete<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span> three<span class="token operator">:</span> <span class="token string">&#39;will complain that one and two is missing&#39;</span><span class="token punctuation">}</span>
<span class="token comment">// needs to be like this:</span>
<span class="token keyword">const</span> z<span class="token operator">:</span>Complete<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span> one<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> two<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> three<span class="token operator">:</span> <span class="token string">&#39;will work&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>`,9),Kt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/Complete.ts#L20",target:"_blank",rel:"noopener noreferrer"},Wt=d('<hr><h3 id="compressionmethod" tabindex="-1"><a class="header-anchor" href="#compressionmethod" aria-hidden="true">#</a> CompressionMethod</h3><p>Ƭ <strong>CompressionMethod</strong>: <code>&quot;gzip&quot;</code> | <code>&quot;deflat&quot;</code> | <code>&quot;br&quot;</code> | <code>undefined</code></p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4>',4),$t={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/CompressionMethod.ts#L1",target:"_blank",rel:"noopener noreferrer"},Yt=d('<hr><h3 id="contenttype" tabindex="-1"><a class="header-anchor" href="#contenttype" aria-hidden="true">#</a> ContentType</h3><p>Ƭ <strong>ContentType</strong>: <code>&quot;application/json&quot;</code> | <code>&quot;application/javascript&quot;</code> | <code>&quot;text/csv&quot;</code> | <code>&quot;text/css&quot;</code> | <code>&quot;text/html&quot;</code> | <code>&quot;text/javascript&quot;</code> | <code>&quot;text/markdown&quot;</code> | <code>&quot;text/plain&quot;</code> | <code>&quot;text/xml&quot;</code> | <code>string</code></p><p>List of content types for message payloads. If the content type is other than <code>application/json</code>, the message payload must be a string. It is up to the implementation to extract the content type from the original message and to convert or transform data.</p><h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4>',5),Jt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ContentType.ts#L6",target:"_blank",rel:"noopener noreferrer"},Xt=e("hr",null,null,-1),en=e("h3",{id:"contextbase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#contextbase","aria-hidden":"true"},"#"),t(" ContextBase")],-1),tn=e("p",null,[t("Ƭ "),e("strong",null,"ContextBase"),t(": "),e("code",null,"Object")],-1),nn=e("p",null,"The ContextBase provides is a basic type. Each context for command function, subscription function and all Hooks and transformers will have at least the properties of this type.",-1),on=e("h4",{id:"type-declaration-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-3","aria-hidden":"true"},"#"),t(" Type declaration")],-1),sn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),ln=e("td",{style:{"text-align":"left"}},[e("code",null,"configs")],-1),dn={style:{"text-align":"left"}},an=e("code",null,"getConfig",-1),cn=e("code",null,"ConfigGetterFunction",-1),rn=e("code",null,"removeConfig",-1),un=e("code",null,"ConfigDeleteFunction",-1),hn=e("code",null,"setConfig",-1),_n=e("code",null,"ConfigSetterFunction",-1),pn=e("td",{style:{"text-align":"left"}},"the config store",-1),fn=e("td",{style:{"text-align":"left"}},[e("code",null,"configs.getConfig")],-1),gn={style:{"text-align":"left"}},mn=e("code",null,"ConfigGetterFunction",-1),yn=e("td",{style:{"text-align":"left"}},"get a config value from the config store",-1),bn=e("td",{style:{"text-align":"left"}},[e("code",null,"configs.removeConfig")],-1),xn={style:{"text-align":"left"}},vn=e("code",null,"ConfigDeleteFunction",-1),Sn=e("td",{style:{"text-align":"left"}},"delete a config value from the config store",-1),Tn=e("td",{style:{"text-align":"left"}},[e("code",null,"configs.setConfig")],-1),kn={style:{"text-align":"left"}},Cn=e("code",null,"ConfigSetterFunction",-1),Pn=e("td",{style:{"text-align":"left"}},"set a config value in the config store",-1),wn=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),Mn={style:{"text-align":"left"}},In=e("code",null,"Logger",-1),En=e("td",{style:{"text-align":"left"}},"the logger instance",-1),Fn=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets")],-1),Dn={style:{"text-align":"left"}},Rn=e("code",null,"getSecret",-1),Bn=e("code",null,"SecretGetterFunction",-1),Nn=e("code",null,"removeSecret",-1),Ln=e("code",null,"SecretDeleteFunction",-1),On=e("code",null,"setSecret",-1),An=e("code",null,"SecretSetterFunction",-1),Hn=e("td",{style:{"text-align":"left"}},"the secret store",-1),jn=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets.getSecret")],-1),Gn={style:{"text-align":"left"}},qn=e("code",null,"SecretGetterFunction",-1),Vn=e("td",{style:{"text-align":"left"}},"get a secret from the secret store",-1),zn=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets.removeSecret")],-1),Zn={style:{"text-align":"left"}},Un=e("code",null,"SecretDeleteFunction",-1),Qn=e("td",{style:{"text-align":"left"}},"delete a secret from the secret store",-1),Kn=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets.setSecret")],-1),Wn={style:{"text-align":"left"}},$n=e("code",null,"SecretSetterFunction",-1),Yn=e("td",{style:{"text-align":"left"}},"set a secret in the secret store",-1),Jn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"Context"),t(" | "),e("code",null,"undefined"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")]),e("td",{style:{"text-align":"left"}},"wrap given function in an opentelemetry active span")],-1),Xn=e("td",{style:{"text-align":"left"}},[e("code",null,"states")],-1),eo={style:{"text-align":"left"}},to=e("code",null,"getState",-1),no=e("code",null,"StateGetterFunction",-1),oo=e("code",null,"removeState",-1),so=e("code",null,"StateDeleteFunction",-1),lo=e("code",null,"setState",-1),ao=e("code",null,"StateSetterFunction",-1),io=e("td",{style:{"text-align":"left"}},"the state store",-1),co=e("td",{style:{"text-align":"left"}},[e("code",null,"states.getState")],-1),ro={style:{"text-align":"left"}},uo=e("code",null,"StateGetterFunction",-1),ho=e("td",{style:{"text-align":"left"}},"get a state value from the state store",-1),_o=e("td",{style:{"text-align":"left"}},[e("code",null,"states.removeState")],-1),po={style:{"text-align":"left"}},fo=e("code",null,"StateDeleteFunction",-1),go=e("td",{style:{"text-align":"left"}},"delete a state value from the state store",-1),mo=e("td",{style:{"text-align":"left"}},[e("code",null,"states.setState")],-1),yo={style:{"text-align":"left"}},bo=e("code",null,"StateSetterFunction",-1),xo=e("td",{style:{"text-align":"left"}},"set a state value in the state store",-1),vo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")]),e("td",{style:{"text-align":"left"}},"wrap given function in an opentelemetry span")],-1),So=e("h4",{id:"defined-in-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-10","aria-hidden":"true"},"#"),t(" Defined in")],-1),To={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ContextBase.ts#L12",target:"_blank",rel:"noopener noreferrer"},ko=e("hr",null,null,-1),Co=e("h3",{id:"correlationid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#correlationid","aria-hidden":"true"},"#"),t(" CorrelationId")],-1),Po=e("p",null,[t("Ƭ "),e("strong",null,"CorrelationId"),t(": "),e("code",null,"string")],-1),wo=e("p",null,"the correlation id links the command invocation message with the command response message",-1),Mo=e("h4",{id:"defined-in-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-11","aria-hidden":"true"},"#"),t(" Defined in")],-1),Io={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/CorrelationId.ts#L2",target:"_blank",rel:"noopener noreferrer"},Eo=e("hr",null,null,-1),Fo=e("h3",{id:"custommessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#custommessage","aria-hidden":"true"},"#"),t(" CustomMessage")],-1),Do=e("strong",null,"CustomMessage",-1),Ro=e("code",null,"Payload",-1),Bo=e("code",null,"Prettify",-1),No=e("code",null,"eventName",-1),Lo=e("code",null,"string",-1),Oo=e("code",null,"messageType",-1),Ao=e("code",null,"CustomMessage",-1),Ho=e("code",null,"payload?",-1),jo=e("code",null,"Payload",-1),Go=e("code",null,"receiver?",-1),qo=e("code",null,"EBMessageAddress",-1),Vo=e("code",null,"EBMessageBase",-1),zo=d('<p>A custom message is a message which can be used to pass business information. The producer emits the message without knowledge about any consumer. The producer does not expect a response from a consumer.</p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-12" tabindex="-1"><a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a> Defined in</h4>',4),Zo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/CustomMessage.ts#L11",target:"_blank",rel:"noopener noreferrer"},Uo=d('<hr><h3 id="defaultconfigstoreconfig" tabindex="-1"><a class="header-anchor" href="#defaultconfigstoreconfig" aria-hidden="true">#</a> DefaultConfigStoreConfig</h3><p>Ƭ <strong>DefaultConfigStoreConfig</strong>: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4>',4),Qo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultConfigStore/types/DefaultConfigStoreConfig.ts#L1",target:"_blank",rel:"noopener noreferrer"},Ko=d('<hr><h3 id="defaulteventbridgeconfig" tabindex="-1"><a class="header-anchor" href="#defaulteventbridgeconfig" aria-hidden="true">#</a> DefaultEventBridgeConfig</h3><p>Ƭ <strong>DefaultEventBridgeConfig</strong>: <code>Object</code></p><p>The configuration for the DefaultEventBridge.</p><h4 id="type-declaration-4" tabindex="-1"><a class="header-anchor" href="#type-declaration-4" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>emitMessagesAsEventBridgeEvents?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Emit messages which have an event name set as javascript events on the event bridge instance</td></tr><tr><td style="text-align:left;"><code>logWarnOnMessagesWithoutReceiver?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Log warnings on messages which are emitted, but could not delivered to at least one receiver</td></tr></tbody></table><h4 id="defined-in-14" tabindex="-1"><a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a> Defined in</h4>',7),Wo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/types/DefaultEventBridgeConfig.ts#L4",target:"_blank",rel:"noopener noreferrer"},$o=d('<hr><h3 id="defaultsecretstoreconfig" tabindex="-1"><a class="header-anchor" href="#defaultsecretstoreconfig" aria-hidden="true">#</a> DefaultSecretStoreConfig</h3><p>Ƭ <strong>DefaultSecretStoreConfig</strong>: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><h4 id="defined-in-15" tabindex="-1"><a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a> Defined in</h4>',4),Yo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultSecretStore/types/DefaultSecretStoreConfig.ts#L1",target:"_blank",rel:"noopener noreferrer"},Jo=d('<hr><h3 id="defaultstatestoreconfig" tabindex="-1"><a class="header-anchor" href="#defaultstatestoreconfig" aria-hidden="true">#</a> DefaultStateStoreConfig</h3><p>Ƭ <strong>DefaultStateStoreConfig</strong>: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><h4 id="defined-in-16" tabindex="-1"><a class="header-anchor" href="#defined-in-16" aria-hidden="true">#</a> Defined in</h4>',4),Xo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultStateStore/types/DefaultStateStoreConfig.ts#L1",target:"_blank",rel:"noopener noreferrer"},es=d('<hr><h3 id="definitioneventbridgeconfig" tabindex="-1"><a class="header-anchor" href="#definitioneventbridgeconfig" aria-hidden="true">#</a> DefinitionEventBridgeConfig</h3><p>Ƭ <strong>DefinitionEventBridgeConfig</strong>: <code>Object</code></p><p>Settings and advices for the event bridge, which are set in the command or subscription builder. The properties are advices and hints. It depends on the used event bridge implementation and underlaying message broker, if a specific property can be respected.</p><h4 id="type-declaration-5" tabindex="-1"><a class="header-anchor" href="#type-declaration-5" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>autoacknowledge</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Send the acknowledge to message broker as soon as the message arrives - defaults to true for commands - defaults to false for subscriptions</td></tr><tr><td style="text-align:left;"><code>durable</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Advise the underlaying message broker to store messages if no consumer is available. Messages will be send as soon as the service is able to consume.</td></tr><tr><td style="text-align:left;"><code>shared</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">If set to true, the event bridge is adviced to deliver one message to at least one consumer instance. True is the default value. If set to false, the event bridge is adviced to deliver one message to all consumer instances. Use case: Receiving Info of message, which need to be passed to all instance to keep information in sync. In serverless environments, this flag should not have any effect <strong><code>Default</code></strong> <code>ts true </code></td></tr></tbody></table><h4 id="defined-in-17" tabindex="-1"><a class="header-anchor" href="#defined-in-17" aria-hidden="true">#</a> Defined in</h4>',7),ts={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/DefinitionEventBridgeConfig.ts#L6",target:"_blank",rel:"noopener noreferrer"},ns=e("hr",null,null,-1),os=e("h3",{id:"ebmessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessage","aria-hidden":"true"},"#"),t(" EBMessage")],-1),ss=e("strong",null,"EBMessage",-1),ls=e("code",null,"Command",-1),ds=e("code",null,"CommandResponse",-1),as=e("code",null,"InfoMessage",-1),is=e("code",null,"CustomMessage",-1),cs=e("p",null,"EBMessage is some message which is handled by the event bridge.",-1),rs=e("h4",{id:"defined-in-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-18","aria-hidden":"true"},"#"),t(" Defined in")],-1),us={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessage.ts#L8",target:"_blank",rel:"noopener noreferrer"},hs=e("hr",null,null,-1),_s=e("h3",{id:"ebmessageaddress",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessageaddress","aria-hidden":"true"},"#"),t(" EBMessageAddress")],-1),ps=e("p",null,[t("Ƭ "),e("strong",null,"EBMessageAddress"),t(": "),e("code",null,"Object")],-1),fs=e("p",null,"A event bridge message address describes the sender or receiver of a message.",-1),gs=e("h4",{id:"type-declaration-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-6","aria-hidden":"true"},"#"),t(" Type declaration")],-1),ms=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),ys=e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId?")],-1),bs={style:{"text-align":"left"}},xs=e("code",null,"InstanceId",-1),vs=e("td",{style:{"text-align":"left"}},"instance id of eventbridge",-1),Ss=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the service")],-1),Ts=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the command or subscription")],-1),ks=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the version of the service")],-1),Cs=e("h4",{id:"defined-in-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-19","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ps={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessageAddress.ts#L6",target:"_blank",rel:"noopener noreferrer"},ws=e("hr",null,null,-1),Ms=e("h3",{id:"ebmessagebase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessagebase","aria-hidden":"true"},"#"),t(" EBMessageBase")],-1),Is=e("p",null,[t("Ƭ "),e("strong",null,"EBMessageBase"),t(": "),e("code",null,"Object")],-1),Es=e("p",null,"Default fields which are part of any purista message",-1),Fs=e("h4",{id:"type-declaration-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-7","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Ds=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Rs=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content encoding of message payload")],-1),Bs=e("td",{style:{"text-align":"left"}},[e("code",null,"contentType")],-1),Ns={style:{"text-align":"left"}},Ls=e("code",null,"ContentType",-1),Os=e("td",{style:{"text-align":"left"}},"content type of message payload",-1),As=e("td",{style:{"text-align":"left"}},[e("code",null,"correlationId?")],-1),Hs={style:{"text-align":"left"}},js=e("code",null,"CorrelationId",-1),Gs=e("td",{style:{"text-align":"left"}},"correlation id to know which command response referrs to which command",-1),qs=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name for this message")],-1),Vs=e("td",{style:{"text-align":"left"}},[e("code",null,"id")],-1),zs={style:{"text-align":"left"}},Zs=e("code",null,"EBMessageId",-1),Us=e("td",{style:{"text-align":"left"}},"global unique id of message",-1),Qs=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"otp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"stringified Opentelemetry parent trace id")],-1),Ks=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),Ws={style:{"text-align":"left"}},$s=e("code",null,"PrincipalId",-1),Ys=e("td",{style:{"text-align":"left"}},"principal id",-1),Js=e("td",{style:{"text-align":"left"}},[e("code",null,"sender")],-1),Xs={style:{"text-align":"left"}},el=e("code",null,"EBMessageSenderAddress",-1),tl=e("td",{style:{"text-align":"left"}},"-",-1),nl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"timestamp of message creation time")],-1),ol=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId?")],-1),sl={style:{"text-align":"left"}},ll=e("code",null,"TraceId",-1),dl=e("td",{style:{"text-align":"left"}},"trace id of message",-1),al=e("h4",{id:"defined-in-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-20","aria-hidden":"true"},"#"),t(" Defined in")],-1),il={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessageBase.ts#L11",target:"_blank",rel:"noopener noreferrer"},cl=e("hr",null,null,-1),rl=e("h3",{id:"ebmessageid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessageid","aria-hidden":"true"},"#"),t(" EBMessageId")],-1),ul=e("p",null,[t("Ƭ "),e("strong",null,"EBMessageId"),t(": "),e("code",null,"string")],-1),hl=e("p",null,"Unique id of the event bridge message",-1),_l=e("h4",{id:"defined-in-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-21","aria-hidden":"true"},"#"),t(" Defined in")],-1),pl={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessageId.ts#L4",target:"_blank",rel:"noopener noreferrer"},fl=e("hr",null,null,-1),gl=e("h3",{id:"ebmessagesenderaddress",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessagesenderaddress","aria-hidden":"true"},"#"),t(" EBMessageSenderAddress")],-1),ml=e("strong",null,"EBMessageSenderAddress",-1),yl=e("code",null,"Prettify",-1),bl=e("code",null,"Omit",-1),xl=e("code",null,"EBMessageAddress",-1),vl=e("code",null,'"instanceId"',-1),Sl=e("code",null,"Required",-1),Tl=e("code",null,"Pick",-1),kl=e("code",null,"EBMessageAddress",-1),Cl=e("code",null,'"instanceId"',-1),Pl=e("p",null,"A event bridge message address describes the sender or receiver of a message.",-1),wl=e("h4",{id:"defined-in-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-22","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ml={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessageSenderAddress.ts#L7",target:"_blank",rel:"noopener noreferrer"},Il=e("hr",null,null,-1),El=e("h3",{id:"emitcustommessagefunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#emitcustommessagefunction","aria-hidden":"true"},"#"),t(" EmitCustomMessageFunction")],-1),Fl=e("strong",null,"EmitCustomMessageFunction",-1),Dl=e("code",null,"eventName",-1),Rl=e("code",null,"string",-1),Bl=e("code",null,"payload?",-1),Nl=e("code",null,"Payload",-1),Ll=e("code",null,"contentType?",-1),Ol=e("code",null,"ContentType",-1),Al=e("code",null,"contentEncoding?",-1),Hl=e("code",null,"string",-1),jl=e("code",null,"Promise",-1),Gl=e("code",null,"void",-1),ql=d(`<h4 id="type-declaration-8" tabindex="-1"><a class="header-anchor" href="#type-declaration-8" aria-hidden="true">#</a> Type declaration</h4><p>▸ &lt;<code>Payload</code>&gt;(<code>eventName</code>, <code>payload?</code>, <code>contentType?</code>, <code>contentEncoding?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Emits the given payload as custom message with the given event name.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">await</span> <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;my-custom-event-name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> the<span class="token operator">:</span> <span class="token string">&#39;payload&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h5>`,8),Vl=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),zl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Zl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Payload")])],-1),Ul=e("td",{style:{"text-align":"left"}},[e("code",null,"contentType?")],-1),Ql={style:{"text-align":"left"}},Kl=e("code",null,"ContentType",-1),Wl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),$l=e("h5",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns","aria-hidden":"true"},"#"),t(" Returns")],-1),Yl=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),Jl=e("h4",{id:"defined-in-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-23","aria-hidden":"true"},"#"),t(" Defined in")],-1),Xl={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EmitCustomMessageFunction.ts#L10",target:"_blank",rel:"noopener noreferrer"},ed=e("hr",null,null,-1),td=e("h3",{id:"errorresponsepayload",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#errorresponsepayload","aria-hidden":"true"},"#"),t(" ErrorResponsePayload")],-1),nd=e("p",null,[t("Ƭ "),e("strong",null,"ErrorResponsePayload"),t(": "),e("code",null,"Object")],-1),od=e("p",null,"Error message payload",-1),sd=e("h4",{id:"type-declaration-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-9","aria-hidden":"true"},"#"),t(" Type declaration")],-1),ld=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),dd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"data?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"addition data")],-1),ad=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"message")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"a human readable error message")],-1),id=e("td",{style:{"text-align":"left"}},[e("code",null,"status")],-1),cd={style:{"text-align":"left"}},rd=e("code",null,"StatusCode",-1),ud=e("td",{style:{"text-align":"left"}},"the error status code",-1),hd=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId?")],-1),_d={style:{"text-align":"left"}},pd=e("code",null,"TraceId",-1),fd=e("td",{style:{"text-align":"left"}},"the trace if of the request",-1),gd=e("h4",{id:"defined-in-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-24","aria-hidden":"true"},"#"),t(" Defined in")],-1),md={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ErrorResponsePayload.ts#L7",target:"_blank",rel:"noopener noreferrer"},yd=d('<hr><h3 id="eventbridgeadapterevents" tabindex="-1"><a class="header-anchor" href="#eventbridgeadapterevents" aria-hidden="true">#</a> EventBridgeAdapterEvents</h3><p>Ƭ <strong>EventBridgeAdapterEvents</strong>: <code>Object</code></p><h4 id="index-signature" tabindex="-1"><a class="header-anchor" href="#index-signature" aria-hidden="true">#</a> Index signature</h4><p>▪ [key: <code>string</code>]: <code>unknown</code></p><h4 id="defined-in-25" tabindex="-1"><a class="header-anchor" href="#defined-in-25" aria-hidden="true">#</a> Defined in</h4>',6),bd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeEvents.ts#L42",target:"_blank",rel:"noopener noreferrer"},xd=e("hr",null,null,-1),vd=e("h3",{id:"eventbridgeconfig",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#eventbridgeconfig","aria-hidden":"true"},"#"),t(" EventBridgeConfig")],-1),Sd=e("strong",null,"EventBridgeConfig",-1),Td=e("code",null,"CustomConfig",-1),kd=e("code",null,"Prettify",-1),Cd=e("code",null,"defaultCommandTimeout?",-1),Pd=e("code",null,"number",-1),wd=e("code",null,"instanceId?",-1),Md=e("code",null,"string",-1),Id=e("code",null,"logLevel?",-1),Ed=e("code",null,"LogLevelName",-1),Fd=e("code",null,"logger?",-1),Dd=e("code",null,"Logger",-1),Rd=e("code",null,"spanProcessor?",-1),Bd=e("code",null,"SpanProcessor",-1),Nd=e("code",null,"CustomConfig",-1),Ld=d('<p>The config object for an event bridge. Every event bridge implementation must use this type for configuration.</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>CustomConfig</code></td></tr></tbody></table><h4 id="defined-in-26" tabindex="-1"><a class="header-anchor" href="#defined-in-26" aria-hidden="true">#</a> Defined in</h4>',4),Od={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeConfig.ts#L10",target:"_blank",rel:"noopener noreferrer"},Ad=d('<hr><h3 id="eventbridgecustomevents" tabindex="-1"><a class="header-anchor" href="#eventbridgecustomevents" aria-hidden="true">#</a> EventBridgeCustomEvents</h3><p>Ƭ <strong>EventBridgeCustomEvents</strong>: <code>Object</code></p><h4 id="index-signature-1" tabindex="-1"><a class="header-anchor" href="#index-signature-1" aria-hidden="true">#</a> Index signature</h4><p>▪ [key: <code>string</code>]: <code>unknown</code></p><h4 id="defined-in-27" tabindex="-1"><a class="header-anchor" href="#defined-in-27" aria-hidden="true">#</a> Defined in</h4>',6),Hd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeEvents.ts#L37",target:"_blank",rel:"noopener noreferrer"},jd=e("hr",null,null,-1),Gd=e("h3",{id:"eventbridgeevents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#eventbridgeevents","aria-hidden":"true"},"#"),t(" EventBridgeEvents")],-1),qd=e("strong",null,"EventBridgeEvents",-1),Vd=e("code",null,"Prettify",-1),zd=e("code",null,"EventBridgeEventsBasic",-1),Zd=e("code",null,"addPrefixToObject",-1),Ud=e("code",null,"EventBridgeAdapterEvents",-1),Qd=e("code",null,'"adapter-"',-1),Kd=e("code",null,"addPrefixToObject",-1),Wd=e("code",null,"EventBridgeCustomEvents",-1),$d=e("code",null,'"custom-"',-1),Yd=e("h4",{id:"defined-in-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-28","aria-hidden":"true"},"#"),t(" Defined in")],-1),Jd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeEvents.ts#L47",target:"_blank",rel:"noopener noreferrer"},Xd=d('<hr><h3 id="eventkey" tabindex="-1"><a class="header-anchor" href="#eventkey" aria-hidden="true">#</a> EventKey</h3><p>Ƭ <strong>EventKey</strong>&lt;<code>T</code>&gt;: <code>string</code> &amp; keyof <code>T</code></p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4>',4),ea=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ta=e("td",{style:{"text-align":"left"}},[e("code",null,"T")],-1),na={style:{"text-align":"left"}},oa=e("code",null,"EventMap",-1),sa=e("h4",{id:"defined-in-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-29","aria-hidden":"true"},"#"),t(" Defined in")],-1),la={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L5",target:"_blank",rel:"noopener noreferrer"},da=d('<hr><h3 id="eventmap" tabindex="-1"><a class="header-anchor" href="#eventmap" aria-hidden="true">#</a> EventMap</h3><p>Ƭ <strong>EventMap</strong>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p><h4 id="defined-in-30" tabindex="-1"><a class="header-anchor" href="#defined-in-30" aria-hidden="true">#</a> Defined in</h4>',4),aa={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L3",target:"_blank",rel:"noopener noreferrer"},ia=e("hr",null,null,-1),ca=e("h3",{id:"httpclientconfig",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#httpclientconfig","aria-hidden":"true"},"#"),t(" HttpClientConfig")],-1),ra=e("strong",null,"HttpClientConfig",-1),ua=e("code",null,"CustomConfig",-1),ha=e("code",null,"Prettify",-1),_a=e("code",null,"baseUrl",-1),pa=e("code",null,"string",-1),fa=e("code",null,"basicAuth?",-1),ga=e("code",null,"password",-1),ma=e("code",null,"string",-1),ya=e("code",null,"username",-1),ba=e("code",null,"string",-1),xa=e("code",null,"bearerToken?",-1),va=e("code",null,"string",-1),Sa=e("code",null,"defaultHeaders?",-1),Ta=e("code",null,"Record",-1),ka=e("code",null,"string",-1),Ca=e("code",null,"string",-1),Pa=e("code",null,"defaultTimeout?",-1),wa=e("code",null,"number",-1),Ma=e("code",null,"enableOpentelemetry?",-1),Ia=e("code",null,"boolean",-1),Ea=e("code",null,"isKeepAlive?",-1),Fa=e("code",null,"boolean",-1),Da=e("code",null,"logLevel?",-1),Ra=e("code",null,"LogLevelName",-1),Ba=e("code",null,"logger?",-1),Na=e("code",null,"Logger",-1),La=e("code",null,"name?",-1),Oa=e("code",null,"string",-1),Aa=e("code",null,"spanProcessor?",-1),Ha=e("code",null,"SpanProcessor",-1),ja=e("code",null,"CustomConfig",-1),Ga=d('<p>Tha basic configuration for a HTTPClient Requires as least a <code>baseUrl</code></p><h4 id="type-parameters-7" tabindex="-1"><a class="header-anchor" href="#type-parameters-7" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>CustomConfig</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</td></tr></tbody></table><h4 id="defined-in-31" tabindex="-1"><a class="header-anchor" href="#defined-in-31" aria-hidden="true">#</a> Defined in</h4>',4),qa={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpClient/types/HttpClientConfig.ts#L9",target:"_blank",rel:"noopener noreferrer"},Va=d('<hr><h3 id="httpclientrequestoptions" tabindex="-1"><a class="header-anchor" href="#httpclientrequestoptions" aria-hidden="true">#</a> HttpClientRequestOptions</h3><p>Ƭ <strong>HttpClientRequestOptions</strong>: <code>Object</code></p><p>Options for a single request</p><h4 id="type-declaration-10" tabindex="-1"><a class="header-anchor" href="#type-declaration-10" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>hash?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">url hash @example: http://example.com/index.html#hash</td></tr><tr><td style="text-align:left;"><code>headers?</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</td><td style="text-align:left;">additional headers</td></tr><tr><td style="text-align:left;"><code>query?</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</td><td style="text-align:left;">query/search string parameter</td></tr><tr><td style="text-align:left;"><code>timeout?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Timeout for the request in ms <strong><code>Default</code></strong> <code>ts 30000 </code></td></tr></tbody></table><h4 id="defined-in-32" tabindex="-1"><a class="header-anchor" href="#defined-in-32" aria-hidden="true">#</a> Defined in</h4>',7),za={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpClient/types/HttpClientRequestOptions.ts#L4",target:"_blank",rel:"noopener noreferrer"},Za=e("hr",null,null,-1),Ua=e("h3",{id:"httpexposedservicemeta",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#httpexposedservicemeta","aria-hidden":"true"},"#"),t(" HttpExposedServiceMeta")],-1),Qa=e("strong",null,"HttpExposedServiceMeta",-1),Ka=e("code",null,"ParameterType",-1),Wa=e("code",null,"Prettify",-1),$a=e("code",null,"CommandDefinitionMetadataBase",-1),Ya=e("code",null,"expose",-1),Ja=e("code",null,"http",-1),Xa=e("code",null,"method",-1),ei=e("code",null,'"GET"',-1),ti=e("code",null,'"POST"',-1),ni=e("code",null,'"PATCH"',-1),oi=e("code",null,'"PUT"',-1),si=e("code",null,'"DELETE"',-1),li=e("code",null,"openApi?",-1),di=e("code",null,"additionalStatusCodes?",-1),ai=e("code",null,"StatusCode",-1),ii=e("code",null,"description",-1),ci=e("code",null,"string",-1),ri=e("code",null,"isSecure",-1),ui=e("code",null,"boolean",-1),hi=e("code",null,"operationId?",-1),_i=e("code",null,"string",-1),pi=e("code",null,"query?",-1),fi=e("code",null,"QueryParameter",-1),gi=e("code",null,"ParameterType",-1),mi=e("code",null,"summary",-1),yi=e("code",null,"string",-1),bi=e("code",null,"tags?",-1),xi=e("code",null,"string",-1),vi=e("code",null,"path",-1),Si=e("code",null,"string",-1),Ti=d('<h4 id="type-parameters-8" tabindex="-1"><a class="header-anchor" href="#type-parameters-8" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;">{}</td></tr></tbody></table><h4 id="defined-in-33" tabindex="-1"><a class="header-anchor" href="#defined-in-33" aria-hidden="true">#</a> Defined in</h4>',3),ki={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/HttpExposedServiceMeta.ts#L4",target:"_blank",rel:"noopener noreferrer"},Ci=e("hr",null,null,-1),Pi=e("h3",{id:"infoinvoketimeout",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoinvoketimeout","aria-hidden":"true"},"#"),t(" InfoInvokeTimeout")],-1),wi=e("strong",null,"InfoInvokeTimeout",-1),Mi=e("code",null,"messageType",-1),Ii=e("code",null,"InfoInvokeTimeout",-1),Ei=e("code",null,"InfoServiceBase",-1),Fi=e("h4",{id:"defined-in-34",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-34","aria-hidden":"true"},"#"),t(" Defined in")],-1),Di={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoInvokeTimeout.ts#L22",target:"_blank",rel:"noopener noreferrer"},Ri=e("hr",null,null,-1),Bi=e("h3",{id:"infoinvoketimeoutpayload",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoinvoketimeoutpayload","aria-hidden":"true"},"#"),t(" InfoInvokeTimeoutPayload")],-1),Ni=e("p",null,[t("Ƭ "),e("strong",null,"InfoInvokeTimeoutPayload"),t(": "),e("code",null,"Object")],-1),Li=e("h4",{id:"type-declaration-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-11","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Oi=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ai=e("td",{style:{"text-align":"left"}},[e("code",null,"correlationId")],-1),Hi={style:{"text-align":"left"}},ji=e("code",null,"CorrelationId",-1),Gi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"serviceName"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceTarget"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceVersion"),t(": "),e("code",null,"string"),t(" }")])],-1),qi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Vi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),zi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Zi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"serviceName"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceTarget"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceVersion"),t(": "),e("code",null,"string"),t(" }")])],-1),Ui=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Qi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Ki=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Wi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")])],-1),$i=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId")],-1),Yi={style:{"text-align":"left"}},Ji=e("code",null,"TraceId",-1),Xi=e("h4",{id:"defined-in-35",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-35","aria-hidden":"true"},"#"),t(" Defined in")],-1),ec={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoInvokeTimeout.ts#L6",target:"_blank",rel:"noopener noreferrer"},tc=e("hr",null,null,-1),nc=e("h3",{id:"infomessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infomessage","aria-hidden":"true"},"#"),t(" InfoMessage")],-1),oc=e("strong",null,"InfoMessage",-1),sc=e("code",null,"InfoServiceDrain",-1),lc=e("code",null,"InfoServiceFunctionAdded",-1),dc=e("code",null,"InfoServiceInit",-1),ac=e("code",null,"InfoServiceNotReady",-1),ic=e("code",null,"InfoServiceReady",-1),cc=e("code",null,"InfoServiceShutdown",-1),rc=e("code",null,"InfoInvokeTimeout",-1),uc=e("code",null,"InfoSubscriptionError",-1),hc=e("h4",{id:"defined-in-36",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-36","aria-hidden":"true"},"#"),t(" Defined in")],-1),_c={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoMessage.ts#L11",target:"_blank",rel:"noopener noreferrer"},pc=e("hr",null,null,-1),fc=e("h3",{id:"infomessagetype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infomessagetype","aria-hidden":"true"},"#"),t(" InfoMessageType")],-1),gc=e("strong",null,"InfoMessageType",-1),mc=e("code",null,"InfoServiceDrain",-1),yc=e("code",null,"InfoServiceFunctionAdded",-1),bc=e("code",null,"InfoServiceInit",-1),xc=e("code",null,"InfoServiceNotReady",-1),vc=e("code",null,"InfoServiceReady",-1),Sc=e("code",null,"InfoServiceShutdown",-1),Tc=e("code",null,"InfoInvokeTimeout",-1),kc=e("code",null,"InfoSubscriptionError",-1),Cc=e("h4",{id:"defined-in-37",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-37","aria-hidden":"true"},"#"),t(" Defined in")],-1),Pc={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoMessage.ts#L21",target:"_blank",rel:"noopener noreferrer"},wc=e("hr",null,null,-1),Mc=e("h3",{id:"infoservicebase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicebase","aria-hidden":"true"},"#"),t(" InfoServiceBase")],-1),Ic=e("strong",null,"InfoServiceBase",-1),Ec=e("code",null,"Prettify",-1),Fc=e("code",null,"contentEncoding",-1),Dc=e("code",null,'"utf-8"',-1),Rc=e("code",null,"contentType",-1),Bc=e("code",null,'"application/json"',-1),Nc=e("code",null,"payload?",-1),Lc=e("code",null,"unknown",-1),Oc=e("code",null,"EBMessageBase",-1),Ac=e("h4",{id:"defined-in-38",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-38","aria-hidden":"true"},"#"),t(" Defined in")],-1),Hc={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceBase.ts#L4",target:"_blank",rel:"noopener noreferrer"},jc=e("hr",null,null,-1),Gc=e("h3",{id:"infoservicedrain",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicedrain","aria-hidden":"true"},"#"),t(" InfoServiceDrain")],-1),qc=e("strong",null,"InfoServiceDrain",-1),Vc=e("code",null,"Prettify",-1),zc=e("code",null,"messageType",-1),Zc=e("code",null,"InfoServiceDrain",-1),Uc=e("code",null,"InfoServiceBase",-1),Qc=e("h4",{id:"defined-in-39",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-39","aria-hidden":"true"},"#"),t(" Defined in")],-1),Kc={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceDrain.ts#L5",target:"_blank",rel:"noopener noreferrer"},Wc=e("hr",null,null,-1),$c=e("h3",{id:"infoservicefunctionadded",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicefunctionadded","aria-hidden":"true"},"#"),t(" InfoServiceFunctionAdded")],-1),Yc=e("strong",null,"InfoServiceFunctionAdded",-1),Jc=e("code",null,"Prettify",-1),Xc=e("code",null,"messageType",-1),er=e("code",null,"InfoServiceFunctionAdded",-1),tr=e("code",null,"InfoServiceBase",-1),nr=e("h4",{id:"defined-in-40",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-40","aria-hidden":"true"},"#"),t(" Defined in")],-1),or={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceFunctionAdded.ts#L5",target:"_blank",rel:"noopener noreferrer"},sr=e("hr",null,null,-1),lr=e("h3",{id:"infoserviceinit",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoserviceinit","aria-hidden":"true"},"#"),t(" InfoServiceInit")],-1),dr=e("strong",null,"InfoServiceInit",-1),ar=e("code",null,"Prettify",-1),ir=e("code",null,"messageType",-1),cr=e("code",null,"InfoServiceInit",-1),rr=e("code",null,"InfoServiceBase",-1),ur=e("h4",{id:"defined-in-41",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-41","aria-hidden":"true"},"#"),t(" Defined in")],-1),hr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceInit.ts#L5",target:"_blank",rel:"noopener noreferrer"},_r=e("hr",null,null,-1),pr=e("h3",{id:"infoservicenotready",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicenotready","aria-hidden":"true"},"#"),t(" InfoServiceNotReady")],-1),fr=e("strong",null,"InfoServiceNotReady",-1),gr=e("code",null,"Prettify",-1),mr=e("code",null,"messageType",-1),yr=e("code",null,"InfoServiceNotReady",-1),br=e("code",null,"InfoServiceBase",-1),xr=e("h4",{id:"defined-in-42",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-42","aria-hidden":"true"},"#"),t(" Defined in")],-1),vr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceNotReady.ts#L5",target:"_blank",rel:"noopener noreferrer"},Sr=e("hr",null,null,-1),Tr=e("h3",{id:"infoserviceready",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoserviceready","aria-hidden":"true"},"#"),t(" InfoServiceReady")],-1),kr=e("strong",null,"InfoServiceReady",-1),Cr=e("code",null,"Prettify",-1),Pr=e("code",null,"messageType",-1),wr=e("code",null,"InfoServiceReady",-1),Mr=e("code",null,"InfoServiceBase",-1),Ir=e("h4",{id:"defined-in-43",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-43","aria-hidden":"true"},"#"),t(" Defined in")],-1),Er={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceReady.ts#L5",target:"_blank",rel:"noopener noreferrer"},Fr=e("hr",null,null,-1),Dr=e("h3",{id:"infoserviceshutdown",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoserviceshutdown","aria-hidden":"true"},"#"),t(" InfoServiceShutdown")],-1),Rr=e("strong",null,"InfoServiceShutdown",-1),Br=e("code",null,"Prettify",-1),Nr=e("code",null,"messageType",-1),Lr=e("code",null,"InfoServiceShutdown",-1),Or=e("code",null,"InfoServiceBase",-1),Ar=e("h4",{id:"defined-in-44",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-44","aria-hidden":"true"},"#"),t(" Defined in")],-1),Hr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceShutdown.ts#L5",target:"_blank",rel:"noopener noreferrer"},jr=e("hr",null,null,-1),Gr=e("h3",{id:"infosubscriptionerror",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infosubscriptionerror","aria-hidden":"true"},"#"),t(" InfoSubscriptionError")],-1),qr=e("strong",null,"InfoSubscriptionError",-1),Vr=e("code",null,"Prettify",-1),zr=e("code",null,"messageType",-1),Zr=e("code",null,"InfoSubscriptionError",-1),Ur=e("code",null,"InfoServiceBase",-1),Qr=e("h4",{id:"defined-in-45",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-45","aria-hidden":"true"},"#"),t(" Defined in")],-1),Kr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoSubscriptionError.ts#L5",target:"_blank",rel:"noopener noreferrer"},Wr=e("hr",null,null,-1),$r=e("h3",{id:"instanceid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#instanceid","aria-hidden":"true"},"#"),t(" InstanceId")],-1),Yr=e("p",null,[t("Ƭ "),e("strong",null,"InstanceId"),t(": "),e("code",null,"string")],-1),Jr=e("p",null,"the instance id of the event bridge",-1),Xr=e("h4",{id:"defined-in-46",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-46","aria-hidden":"true"},"#"),t(" Defined in")],-1),eu={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/InstanceId.ts#L2",target:"_blank",rel:"noopener noreferrer"},tu=e("hr",null,null,-1),nu=e("h3",{id:"invokefunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#invokefunction","aria-hidden":"true"},"#"),t(" InvokeFunction")],-1),ou=e("strong",null,"InvokeFunction",-1),su=e("code",null,"address",-1),lu=e("code",null,"EBMessageAddress",-1),du=e("code",null,"payload",-1),au=e("code",null,"PayloadType",-1),iu=e("code",null,"parameter",-1),cu=e("code",null,"ParameterType",-1),ru=e("code",null,"Promise",-1),uu=e("code",null,"InvokeResponseType",-1),hu=d(`<h4 id="type-declaration-12" tabindex="-1"><a class="header-anchor" href="#type-declaration-12" aria-hidden="true">#</a> Type declaration</h4><p>▸ &lt;<code>InvokeResponseType</code>, <code>PayloadType</code>, <code>ParameterType</code>&gt;(<code>address</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>InvokeResponseType</code>&gt;</p><p>Invokes a command and returns the result. It is recommended to validate the result against a schema which only contains the data you actually need.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>
<span class="token keyword">const</span> address<span class="token operator">:</span> EBMessageAddress <span class="token operator">=</span> <span class="token punctuation">{</span>
  serviceName<span class="token operator">:</span> <span class="token string">&#39;name-of-service-to-invoke&#39;</span><span class="token punctuation">,</span>
  serviceVersion<span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>
  serviceTarget<span class="token operator">:</span> <span class="token string">&#39;command-name-to-invoke&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> inputPayload <span class="token operator">=</span> <span class="token punctuation">{</span> my<span class="token operator">:</span> <span class="token string">&#39;input&#39;</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> inputParameter <span class="token operator">=</span> <span class="token punctuation">{</span> search<span class="token operator">:</span> <span class="token string">&#39;for_me&#39;</span> <span class="token punctuation">}</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token generic-function"><span class="token function">invoke</span><span class="token generic class-name"><span class="token operator">&lt;</span>MyResultType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>address<span class="token punctuation">,</span> inputPayload inputParameter <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="type-parameters-9" tabindex="-1"><a class="header-anchor" href="#type-parameters-9" aria-hidden="true">#</a> Type parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>InvokeResponseType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h5>`,8),_u=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),pu=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),fu={style:{"text-align":"left"}},gu=e("code",null,"EBMessageAddress",-1),mu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")])],-1),yu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ParameterType")])],-1),bu=e("h5",{id:"returns-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-1","aria-hidden":"true"},"#"),t(" Returns")],-1),xu=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"InvokeResponseType"),t(">")],-1),vu=e("h4",{id:"defined-in-47",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-47","aria-hidden":"true"},"#"),t(" Defined in")],-1),Su={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/InvokeFunction.ts#L21",target:"_blank",rel:"noopener noreferrer"},Tu=d('<hr><h3 id="logfnparamtype" tabindex="-1"><a class="header-anchor" href="#logfnparamtype" aria-hidden="true">#</a> LogFnParamType</h3><p>Ƭ <strong>LogFnParamType</strong>: [<code>unknown</code>, string?, ...any] | [<code>string</code>, ...any]</p><h4 id="defined-in-48" tabindex="-1"><a class="header-anchor" href="#defined-in-48" aria-hidden="true">#</a> Defined in</h4>',4),ku={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/Logger.ts#L17",target:"_blank",rel:"noopener noreferrer"},Cu=d('<hr><h3 id="loglevelname" tabindex="-1"><a class="header-anchor" href="#loglevelname" aria-hidden="true">#</a> LogLevelName</h3><p>Ƭ <strong>LogLevelName</strong>: <code>&quot;info&quot;</code> | <code>&quot;error&quot;</code> | <code>&quot;warn&quot;</code> | <code>&quot;debug&quot;</code> | <code>&quot;trace&quot;</code> | <code>&quot;fatal&quot;</code></p><h4 id="defined-in-49" tabindex="-1"><a class="header-anchor" href="#defined-in-49" aria-hidden="true">#</a> Defined in</h4>',4),Pu={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/LogLevelName.ts#L1",target:"_blank",rel:"noopener noreferrer"},wu=e("hr",null,null,-1),Mu=e("h3",{id:"loggeroptions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#loggeroptions","aria-hidden":"true"},"#"),t(" LoggerOptions")],-1),Iu=e("p",null,[t("Ƭ "),e("strong",null,"LoggerOptions"),t(": "),e("code",null,"Object")],-1),Eu=e("h4",{id:"type-declaration-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-13","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Fu=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Du=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hostname?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Ru=e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId?")],-1),Bu={style:{"text-align":"left"}},Nu=e("code",null,"InstanceId",-1),Lu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"name?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Ou=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),Au={style:{"text-align":"left"}},Hu=e("code",null,"PrincipalId",-1),ju=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"puristaVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Gu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),qu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Vu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),zu=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId?")],-1),Zu={style:{"text-align":"left"}},Uu=e("code",null,"TraceId",-1),Qu=e("h4",{id:"defined-in-50",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-50","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ku={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/Logger.ts#L5",target:"_blank",rel:"noopener noreferrer"},Wu=d('<hr><h3 id="loggerstubs" tabindex="-1"><a class="header-anchor" href="#loggerstubs" aria-hidden="true">#</a> LoggerStubs</h3><p>Ƭ <strong>LoggerStubs</strong>: <code>Object</code></p><h4 id="type-declaration-14" tabindex="-1"><a class="header-anchor" href="#type-declaration-14" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>debug</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>error</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>info</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>trace</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>warn</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr></tbody></table><h4 id="defined-in-51" tabindex="-1"><a class="header-anchor" href="#defined-in-51" aria-hidden="true">#</a> Defined in</h4>',6),$u={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getLogger.mock.ts#L41",target:"_blank",rel:"noopener noreferrer"},Yu=e("hr",null,null,-1),Ju=e("h3",{id:"newable",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#newable","aria-hidden":"true"},"#"),t(" Newable")],-1),Xu=e("strong",null,"Newable",-1),eh=e("code",null,"T",-1),th=e("code",null,"ConfigType",-1),nh=e("code",null,"config",-1),oh=e("code",null,"ServiceConstructorInput",-1),sh=e("code",null,"ConfigType",-1),lh=e("code",null,"T",-1),dh=d('<h4 id="type-parameters-10" tabindex="-1"><a class="header-anchor" href="#type-parameters-10" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="type-declaration-15" tabindex="-1"><a class="header-anchor" href="#type-declaration-15" aria-hidden="true">#</a> Type declaration</h4><p>• <strong>new Newable</strong>(<code>config</code>): <code>T</code></p><h5 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h5>',5),ah=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ih=e("td",{style:{"text-align":"left"}},[e("code",null,"config")],-1),ch={style:{"text-align":"left"}},rh=e("code",null,"ServiceConstructorInput",-1),uh=e("code",null,"ConfigType",-1),hh=e("h5",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),t(" Returns")],-1),_h=e("p",null,[e("code",null,"T")],-1),ph=e("h4",{id:"defined-in-52",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-52","aria-hidden":"true"},"#"),t(" Defined in")],-1),fh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L28",target:"_blank",rel:"noopener noreferrer"},gh=e("hr",null,null,-1),mh=e("h3",{id:"pendiginvocation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pendiginvocation","aria-hidden":"true"},"#"),t(" PendigInvocation")],-1),yh=e("p",null,[t("Ƭ "),e("strong",null,"PendigInvocation"),t(": "),e("code",null,"Object")],-1),bh=e("h4",{id:"type-declaration-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-16","aria-hidden":"true"},"#"),t(" Type declaration")],-1),xh=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),vh=e("td",{style:{"text-align":"left"}},[e("code",null,"reject")],-1),Sh={style:{"text-align":"left"}},Th=e("code",null,"error",-1),kh=e("code",null,"HandledError",-1),Ch=e("code",null,"UnhandledError",-1),Ph=e("code",null,"void",-1),wh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"resolve")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"responsePayload"),t(": "),e("code",null,"unknown"),t(") => "),e("code",null,"void")])],-1),Mh=e("h4",{id:"defined-in-53",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-53","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ih={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/types/PendingInvocations.ts#L3",target:"_blank",rel:"noopener noreferrer"},Eh=d('<hr><h3 id="prettify" tabindex="-1"><a class="header-anchor" href="#prettify" aria-hidden="true">#</a> Prettify</h3><p>Ƭ <strong>Prettify</strong>&lt;<code>T</code>&gt;: { [K in keyof T]: T[K] } &amp; {}</p><h4 id="type-parameters-11" tabindex="-1"><a class="header-anchor" href="#type-parameters-11" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="defined-in-54" tabindex="-1"><a class="header-anchor" href="#defined-in-54" aria-hidden="true">#</a> Defined in</h4>',6),Fh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/Prettify.ts#L1",target:"_blank",rel:"noopener noreferrer"},Dh=e("hr",null,null,-1),Rh=e("h3",{id:"principalid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#principalid","aria-hidden":"true"},"#"),t(" PrincipalId")],-1),Bh=e("p",null,[t("Ƭ "),e("strong",null,"PrincipalId"),t(": "),e("code",null,"string")],-1),Nh=e("p",null,"the principal id",-1),Lh=e("h4",{id:"defined-in-55",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-55","aria-hidden":"true"},"#"),t(" Defined in")],-1),Oh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/PrincipalId.ts#L2",target:"_blank",rel:"noopener noreferrer"},Ah=d('<hr><h3 id="queryparameter" tabindex="-1"><a class="header-anchor" href="#queryparameter" aria-hidden="true">#</a> QueryParameter</h3><p>Ƭ <strong>QueryParameter</strong>&lt;<code>ParameterType</code>&gt;: <code>Object</code></p><h4 id="type-parameters-12" tabindex="-1"><a class="header-anchor" href="#type-parameters-12" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;">{}</td></tr></tbody></table><h4 id="type-declaration-17" tabindex="-1"><a class="header-anchor" href="#type-declaration-17" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;">keyof <code>ParameterType</code></td></tr><tr><td style="text-align:left;"><code>required</code></td><td style="text-align:left;"><code>boolean</code></td></tr></tbody></table><h4 id="defined-in-56" tabindex="-1"><a class="header-anchor" href="#defined-in-56" aria-hidden="true">#</a> Defined in</h4>',8),Hh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/QueryParameter.ts#L1",target:"_blank",rel:"noopener noreferrer"},jh=e("hr",null,null,-1),Gh=e("h3",{id:"serviceevents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#serviceevents","aria-hidden":"true"},"#"),t(" ServiceEvents")],-1),qh=e("strong",null,"ServiceEvents",-1),Vh=e("code",null,"ServiceEventsInternal",-1),zh=e("code",null,"addPrefixToObject",-1),Zh=e("code",null,"CustomEvents",-1),Uh=e("code",null,'"custom-"',-1),Qh=e("code",null,"addPrefixToObject",-1),Kh=e("code",null,"CustomEvents",-1),Wh=e("code",null,'"misc-"',-1),$h=e("p",null,"ServiceEvents are plain javascript events sent by the service. There are three types:",-1),Yh=e("ul",null,[e("li",null,[t("technical events when a services starts, stops, an error occurs and so on are prefixed with "),e("code",null,"service-")]),e("li",null,[t("response messages, which have a event name assigned, are prefixed with "),e("code",null,"custom-")]),e("li",null,[t("additional events, free defined by developer are prefixed with "),e("code",null,"misc-")])],-1),Jh=e("h4",{id:"defined-in-57",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-57","aria-hidden":"true"},"#"),t(" Defined in")],-1),Xh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceEvents.ts#L98",target:"_blank",rel:"noopener noreferrer"},e_=d('<hr><h3 id="serviceinfotype" tabindex="-1"><a class="header-anchor" href="#serviceinfotype" aria-hidden="true">#</a> ServiceInfoType</h3><p>Ƭ <strong>ServiceInfoType</strong>: <code>Object</code></p><p>General service information</p><h4 id="type-declaration-18" tabindex="-1"><a class="header-anchor" href="#type-declaration-18" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>serviceDescription</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>serviceName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>serviceVersion</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="defined-in-58" tabindex="-1"><a class="header-anchor" href="#defined-in-58" aria-hidden="true">#</a> Defined in</h4>',7),t_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/ServiceInfoType.ts#L4",target:"_blank",rel:"noopener noreferrer"},n_=d('<hr><h3 id="shutdownentry" tabindex="-1"><a class="header-anchor" href="#shutdownentry" aria-hidden="true">#</a> ShutdownEntry</h3><p>Ƭ <strong>ShutdownEntry</strong>: <code>Object</code></p><p>Entry of thing you like to shutdown gracefully</p><h4 id="type-declaration-19" tabindex="-1"><a class="header-anchor" href="#type-declaration-19" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>destroy</code></td><td style="text-align:left;">() =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</td><td style="text-align:left;">a async function that is called during shutdown</td></tr><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the name</td></tr></tbody></table><h4 id="defined-in-59" tabindex="-1"><a class="header-anchor" href="#defined-in-59" aria-hidden="true">#</a> Defined in</h4>',7),o_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/types/ShutdownEntry.ts#L4",target:"_blank",rel:"noopener noreferrer"},s_=e("hr",null,null,-1),l_=e("h3",{id:"storebaseconfig",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#storebaseconfig","aria-hidden":"true"},"#"),t(" StoreBaseConfig")],-1),d_=e("strong",null,"StoreBaseConfig",-1),a_=e("code",null,"Config",-1),i_=e("code",null,"Prettify",-1),c_=e("code",null,"enableGet?",-1),r_=e("code",null,"boolean",-1),u_=e("code",null,"enableRemove?",-1),h_=e("code",null,"boolean",-1),__=e("code",null,"enableSet?",-1),p_=e("code",null,"boolean",-1),f_=e("code",null,"logLevel?",-1),g_=e("code",null,"LogLevelName",-1),m_=e("code",null,"logger?",-1),y_=e("code",null,"Logger",-1),b_=e("code",null,"Config",-1),x_=d('<p>Basic configuration object which is used by any store</p><h4 id="type-parameters-13" tabindex="-1"><a class="header-anchor" href="#type-parameters-13" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Config</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</td></tr></tbody></table><h4 id="defined-in-60" tabindex="-1"><a class="header-anchor" href="#defined-in-60" aria-hidden="true">#</a> Defined in</h4>',4),v_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/StoreBaseConfig.ts#L8",target:"_blank",rel:"noopener noreferrer"},S_=e("hr",null,null,-1),T_=e("h3",{id:"subscriptiondefinitionlist",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiondefinitionlist","aria-hidden":"true"},"#"),t(" SubscriptionDefinitionList")],-1),k_=e("strong",null,"SubscriptionDefinitionList",-1),C_=e("code",null,"ServiceClassType",-1),P_=e("code",null,"SubscriptionDefinition",-1),w_=e("code",null,"ServiceClassType",-1),M_=e("code",null,"any",-1),I_=e("code",null,"any",-1),E_=e("code",null,"any",-1),F_=e("code",null,"any",-1),D_=d(`<p>Helper type for creating list of service commands to be passed as input to service class</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> userServiceCommands<span class="token operator">:</span> SubscriptionDefinitionList<span class="token operator">&lt;</span>UserService<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span>signUp<span class="token punctuation">.</span><span class="token function">getDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="type-parameters-14" tabindex="-1"><a class="header-anchor" href="#type-parameters-14" aria-hidden="true">#</a> Type parameters</h4>`,3),R_=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),B_=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),N_={style:{"text-align":"left"}},L_=e("code",null,"ServiceClass",-1),O_=e("h4",{id:"defined-in-61",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-61","aria-hidden":"true"},"#"),t(" Defined in")],-1),A_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionDefinitionList.ts#L11",target:"_blank",rel:"noopener noreferrer"},H_=e("hr",null,null,-1),j_=e("h3",{id:"subscriptiondefinitionmetadatabase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiondefinitionmetadatabase","aria-hidden":"true"},"#"),t(" SubscriptionDefinitionMetadataBase")],-1),G_=e("p",null,[t("Ƭ "),e("strong",null,"SubscriptionDefinitionMetadataBase"),t(": "),e("code",null,"Object")],-1),q_=e("h4",{id:"type-declaration-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-20","aria-hidden":"true"},"#"),t(" Type declaration")],-1),V_=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),z_=e("td",{style:{"text-align":"left"}},[e("code",null,"expose")],-1),Z_={style:{"text-align":"left"}},U_=e("code",null,"contentEncodingRequest?",-1),Q_=e("code",null,"string",-1),K_=e("code",null,"contentEncodingResponse?",-1),W_=e("code",null,"string",-1),$_=e("code",null,"contentTypeRequest?",-1),Y_=e("code",null,"ContentType",-1),J_=e("code",null,"contentTypeResponse?",-1),X_=e("code",null,"ContentType",-1),ep=e("code",null,"inputPayload?",-1),tp=e("code",null,"SchemaObject",-1),np=e("code",null,"outputPayload?",-1),op=e("code",null,"SchemaObject",-1),sp=e("code",null,"parameter?",-1),lp=e("code",null,"SchemaObject",-1),dp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingRequest?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),ap=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingResponse?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),ip=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeRequest?")],-1),cp={style:{"text-align":"left"}},rp=e("code",null,"ContentType",-1),up=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeResponse?")],-1),hp={style:{"text-align":"left"}},_p=e("code",null,"ContentType",-1),pp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.inputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),fp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.outputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),gp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.parameter?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),mp=e("h4",{id:"defined-in-62",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-62","aria-hidden":"true"},"#"),t(" Defined in")],-1),yp={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionDefinitionMetadataBase.ts#L5",target:"_blank",rel:"noopener noreferrer"},bp=e("hr",null,null,-1),xp=e("h3",{id:"subscriptionstorageentry",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionstorageentry","aria-hidden":"true"},"#"),t(" SubscriptionStorageEntry")],-1),vp=e("p",null,[t("Ƭ "),e("strong",null,"SubscriptionStorageEntry"),t(": "),e("code",null,"Object")],-1),Sp=e("h4",{id:"type-declaration-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-21","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Tp=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),kp=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),Cp={style:{"text-align":"left"}},Pp=e("code",null,"message",-1),wp=e("code",null,"EBMessage",-1),Mp=e("code",null,"Promise",-1),Ip=e("code",null,"Omit",-1),Ep=e("code",null,"CustomMessage",-1),Fp=e("code",null,'"id"',-1),Dp=e("code",null,'"timestamp"',-1),Rp=e("code",null,"undefined",-1),Bp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"emitEventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Np=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingEventName")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),Lp=e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingMessageType")],-1),Op={style:{"text-align":"left"}},Ap=e("code",null,"input",-1),Hp=e("code",null,"EBMessageType",-1),jp=e("code",null,"boolean",-1),Gp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingPrincipalId")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),qp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingReceiverInstanceId")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),Vp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingReceiverServiceName")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),zp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingReceiverServiceTarget")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),Zp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingReceiverServiceVersion")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),Up=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingSenderInstanceId")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),Qp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingSenderServiceName")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),Kp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingSenderServiceTarget")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),Wp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingSenderServiceVersion")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),$p=e("h4",{id:"defined-in-63",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-63","aria-hidden":"true"},"#"),t(" Defined in")],-1),Yp={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/types/SubscriptionStorageEntry.ts#L3",target:"_blank",rel:"noopener noreferrer"},Jp=d('<hr><h3 id="supportedhttpmethod" tabindex="-1"><a class="header-anchor" href="#supportedhttpmethod" aria-hidden="true">#</a> SupportedHttpMethod</h3><p>Ƭ <strong>SupportedHttpMethod</strong>: <code>&quot;GET&quot;</code> | <code>&quot;POST&quot;</code> | <code>&quot;PATCH&quot;</code> | <code>&quot;PUT&quot;</code> | <code>&quot;DELETE&quot;</code></p><p>Supported HTTP-Methods for defining endpoints</p><h4 id="defined-in-64" tabindex="-1"><a class="header-anchor" href="#defined-in-64" aria-hidden="true">#</a> Defined in</h4>',5),Xp={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/SupportedHttpMethod.ts#L2",target:"_blank",rel:"noopener noreferrer"},e1=e("hr",null,null,-1),t1=e("h3",{id:"traceid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#traceid","aria-hidden":"true"},"#"),t(" TraceId")],-1),n1=e("p",null,[t("Ƭ "),e("strong",null,"TraceId"),t(": "),e("code",null,"string")],-1),o1=e("p",null,"The trace id which will be passed through all commands, invocations and subscriptions",-1),s1=e("h4",{id:"defined-in-65",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-65","aria-hidden":"true"},"#"),t(" Defined in")],-1),l1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/TraceId.ts#L4",target:"_blank",rel:"noopener noreferrer"},d1=d('<hr><h3 id="addprefixtoobject" tabindex="-1"><a class="header-anchor" href="#addprefixtoobject" aria-hidden="true">#</a> addPrefixToObject</h3><p>Ƭ <strong>addPrefixToObject</strong>&lt;<code>T</code>, <code>P</code>&gt;: { [K in keyof T as K extends string ? `${P}${K}` : never]: T[K] }</p><p>Helper for better typescript type. All keys of given object must start with the given prefix. Otherwise Typescript will complain.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `T` | `T` |\n| `P` | extends `string` |\n\n#### Defined in\n\n[core/types/addPrefixToObject.ts:7](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/addPrefixToObject.ts#L7)\n\n## Variables\n\n### MIN\\_CONTENT\\_SIZE\\_FOR\\_COMPRESSION\n\n• `Const` **MIN\\_CONTENT\\_SIZE\\_FOR\\_COMPRESSION**: ``1024``\n\n#### Defined in\n\n[core/HttpServer/MinContentSizeForCompression.const.ts:1](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/MinContentSizeForCompression.const.ts#L1)\n\n___\n\n### ServiceInfoValidator\n\n• `Const` **ServiceInfoValidator**: `Object`\n\n#### Type declaration\n\n| Name | Type |\n| :------ | :------ |\n| `set` | (`obj`: [`ServiceInfoType`](purista_core.md#serviceinfotype), `prop`: keyof [`ServiceInfoType`](purista_core.md#serviceinfotype), `value`: `string`) =&gt; `boolean` |\n\n#### Defined in\n\n[core/Service/ServiceInfoValidator.impl.ts:5](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/Service/ServiceInfoValidator.impl.ts#L5)\n\n___\n\n### infoMessageTypes\n\n• `Const` **infoMessageTypes**: [`EBMessageType`](../enums/purista_core.EBMessageType.md)[]\n\n#### Defined in\n\n[core/types/infoType/InfoMessage.ts:30](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoMessage.ts#L30)\n\n___\n\n### puristaVersion\n\n• `Const` **puristaVersion**: ``&quot;1.7.0&quot;``\n\n#### Defined in\n\n[version.ts:1](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/version.ts#L1)\n\n## Functions\n\n### extendApi\n\n▸ **extendApi**&lt;`T`\\&gt;(`schema`, `SchemaObject?`): `T`\n\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `T` | extends [`OpenApiZodAny`](../interfaces/purista_core.OpenApiZodAny.md)&lt;`T`\\&gt; |\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `schema` | `T` |\n| `SchemaObject` | `SchemaObject` |\n\n#### Returns\n\n`T`\n\n#### Defined in\n\n[zodOpenApi/zodOpenApi.impl.ts:25](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/zodOpenApi/zodOpenApi.impl.ts#L25)\n\n___\n\n### generateSchema\n\n▸ **generateSchema**(`zodRef`, `useOutput?`): `SchemaObject`\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `zodRef` | [`OpenApiZodAny`](../interfaces/purista_core.OpenApiZodAny.md) |\n| `useOutput?` | `boolean` |\n\n#### Returns\n\n`SchemaObject`\n\n#### Defined in\n\n[zodOpenApi/zodOpenApi.impl.ts:414](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/zodOpenApi/zodOpenApi.impl.ts#L414)\n\n___\n\n### getCommandFunctionWithValidation\n\n▸ **getCommandFunctionWithValidation**&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `MessageResultType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;(`fn`, `inputPayloadSchema`, `inputParameterSchema`, `outputPayloadSchema`, `beforeGuards?`): [`CommandFunction`](purista_core.md#commandfunction)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;\n\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `ServiceClassType` | extends [`ServiceClass`](../interfaces/purista_core.ServiceClass.md)&lt;`unknown`, `ServiceClassType`\\&gt; |\n| `MessagePayloadType` | `unknown` |\n| `MessageParamsType` | `unknown` |\n| `MessageResultType` | `unknown` |\n| `FunctionPayloadType` | `MessagePayloadType` |\n| `FunctionParamsType` | `MessageParamsType` |\n| `FunctionResultType` | `MessageResultType` |\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `fn` | [`CommandFunction`](purista_core.md#commandfunction)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt; |\n| `inputPayloadSchema` | `undefined` \\| `ZodType`&lt;`FunctionPayloadType`, `ZodTypeDef`, `MessagePayloadType`\\&gt; |\n| `inputParameterSchema` | `undefined` \\| `ZodType`&lt;`FunctionParamsType`, `ZodTypeDef`, `MessageParamsType`\\&gt; |\n| `outputPayloadSchema` | `undefined` \\| `ZodType`&lt;`MessageResultType`, `ZodTypeDef`, `FunctionResultType`\\&gt; |\n| `beforeGuards` | `Record`&lt;`string`, [`CommandBeforeGuardHook`](purista_core.md#commandbeforeguardhook)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`\\&gt;\\&gt; |\n\n#### Returns\n\n[`CommandFunction`](purista_core.md#commandfunction)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;\n\n#### Defined in\n\n[CommandDefinitionBuilder/getCommandFunctionWithValidation.impl.ts:13](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/getCommandFunctionWithValidation.impl.ts#L13)\n\n___\n\n### getDefaultEventBridgeConfig\n\n▸ **getDefaultEventBridgeConfig**(): [`Complete`](purista_core.md#complete)&lt;[`DefaultEventBridgeConfig`](purista_core.md#defaulteventbridgeconfig)\\&gt;\n\n#### Returns\n\n[`Complete`](purista_core.md#complete)&lt;[`DefaultEventBridgeConfig`](purista_core.md#defaulteventbridgeconfig)\\&gt;\n\n#### Defined in\n\n[DefaultEventBridge/getDefaultEventBridgeConfig.impl.ts:4](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/getDefaultEventBridgeConfig.impl.ts#L4)\n\n___\n\n### getDefaultLogLevel\n\n▸ **getDefaultLogLevel**(): [`LogLevelName`](purista_core.md#loglevelname)\n\n#### Returns\n\n[`LogLevelName`](purista_core.md#loglevelname)\n\n#### Defined in\n\n[DefaultLogger/getDefaultLogLevel.ts:4](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultLogger/getDefaultLogLevel.ts#L4)\n\n___\n\n### getNewSubscriptionStorageEntry\n\n▸ **getNewSubscriptionStorageEntry**(`subscription`, `cb`): [`SubscriptionStorageEntry`](purista_core.md#subscriptionstorageentry)\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `subscription` | [`Subscription`](purista_core.md#subscription) |\n| `cb` | (`message`: [`EBMessage`](purista_core.md#ebmessage)) =&gt; `Promise`&lt;`undefined` \\| `Omit`&lt;{ `contentEncoding`: `string` ; `contentType`: `string` ; `correlationId?`: `string` ; `eventName`: `string` ; `id`: `string` ; `messageType`: [`CustomMessage`](../enums/purista_core.EBMessageType.md#custommessage) ; `otp?`: `string` ; `payload?`: `unknown` ; `principalId?`: `string` ; `receiver?`: [`EBMessageAddress`](purista_core.md#ebmessageaddress) ; `sender`: { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; `timestamp`: `number` ; `traceId?`: `string`  }, ``&quot;id&quot;`` \\| ``&quot;timestamp&quot;``\\&gt;\\&gt; |\n\n#### Returns\n\n[`SubscriptionStorageEntry`](purista_core.md#subscriptionstorageentry)\n\n#### Defined in\n\n[DefaultEventBridge/getNewSubscriptionStorageEntry.impl.ts:4](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/getNewSubscriptionStorageEntry.impl.ts#L4)\n\n___\n\n### getSubscriptionFunctionWithValidation\n\n▸ **getSubscriptionFunctionWithValidation**&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `MessageResultType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;(`fn`, `inputPayloadSchema`, `inputParameterSchema`, `outputPayloadSchema`, `beforeGuards?`): [`SubscriptionFunction`](purista_core.md#subscriptionfunction)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;\n\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `ServiceClassType` | extends [`ServiceClass`](../interfaces/purista_core.ServiceClass.md)&lt;`unknown`, `ServiceClassType`\\&gt; |\n| `MessagePayloadType` | `unknown` |\n| `MessageParamsType` | `unknown` |\n| `MessageResultType` | `unknown` |\n| `FunctionPayloadType` | `MessagePayloadType` |\n| `FunctionParamsType` | `MessageParamsType` |\n| `FunctionResultType` | `MessageResultType` |\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `fn` | [`SubscriptionFunction`](purista_core.md#subscriptionfunction)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt; |\n| `inputPayloadSchema` | `undefined` \\| `ZodType`&lt;`FunctionPayloadType`, `ZodTypeDef`, `MessagePayloadType`\\&gt; |\n| `inputParameterSchema` | `undefined` \\| `ZodType`&lt;`FunctionParamsType`, `ZodTypeDef`, `MessageParamsType`\\&gt; |\n| `outputPayloadSchema` | `undefined` \\| `ZodType`&lt;`MessageResultType`, `ZodTypeDef`, `FunctionResultType`\\&gt; |\n| `beforeGuards` | `Record`&lt;`string`, [`SubscriptionBeforeGuardHook`](purista_core.md#subscriptionbeforeguardhook)&lt;`ServiceClassType`, `FunctionPayloadType`, `FunctionParamsType`\\&gt;\\&gt; |\n\n#### Returns\n\n[`SubscriptionFunction`](purista_core.md#subscriptionfunction)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;\n\n#### Defined in\n\n[SubscriptionDefinitionBuilder/getSubscriptionFunctionWithValidation.impl.ts:13](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/getSubscriptionFunctionWithValidation.impl.ts#L13)\n\n___\n\n### getTimeoutPromise\n\n▸ **getTimeoutPromise**&lt;`T`\\&gt;(`fn`, `ttl?`): `Promise`&lt;`T`\\&gt;\n\n**`Default`**\n\n```ts\n30000\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="type-parameters-15" tabindex="-1"><a class="header-anchor" href="#type-parameters-15" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;"><code>Promise</code>&lt;<code>T</code>&gt;</td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">the promise which should get a timeout</td></tr><tr><td style="text-align:left;"><code>ttl</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;"><code>30000</code></td><td style="text-align:left;">the timeout in ms</td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>T</code>&gt;</p><h4 id="defined-in-66" tabindex="-1"><a class="header-anchor" href="#defined-in-66" aria-hidden="true">#</a> Defined in</h4>',12),a1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/getTimeoutPromise.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},i1=e("hr",null,null,-1),c1=e("h3",{id:"initdefaultconfigstore",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initdefaultconfigstore","aria-hidden":"true"},"#"),t(" initDefaultConfigStore")],-1),r1=e("strong",null,"initDefaultConfigStore",-1),u1=e("code",null,"options",-1),h1=e("code",null,"DefaultConfigStore",-1),_1=e("h4",{id:"parameters-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-4","aria-hidden":"true"},"#"),t(" Parameters")],-1),p1=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),f1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"options")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")])],-1),g1=e("td",{style:{"text-align":"left"}},[e("code",null,"options.logger")],-1),m1={style:{"text-align":"left"}},y1=e("code",null,"Logger",-1),b1=e("h4",{id:"returns-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-4","aria-hidden":"true"},"#"),t(" Returns")],-1),x1=e("code",null,"DefaultConfigStore",-1),v1=e("h4",{id:"defined-in-67",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-67","aria-hidden":"true"},"#"),t(" Defined in")],-1),S1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultConfigStore/initDefaultConfigStore.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},T1=e("hr",null,null,-1),k1=e("h3",{id:"initdefaultsecretstore",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initdefaultsecretstore","aria-hidden":"true"},"#"),t(" initDefaultSecretStore")],-1),C1=e("strong",null,"initDefaultSecretStore",-1),P1=e("code",null,"options",-1),w1=e("code",null,"DefaultSecretStore",-1),M1=e("h4",{id:"parameters-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-5","aria-hidden":"true"},"#"),t(" Parameters")],-1),I1=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),E1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"options")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")])],-1),F1=e("td",{style:{"text-align":"left"}},[e("code",null,"options.logger")],-1),D1={style:{"text-align":"left"}},R1=e("code",null,"Logger",-1),B1=e("h4",{id:"returns-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-5","aria-hidden":"true"},"#"),t(" Returns")],-1),N1=e("code",null,"DefaultSecretStore",-1),L1=e("h4",{id:"defined-in-68",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-68","aria-hidden":"true"},"#"),t(" Defined in")],-1),O1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultSecretStore/initDefaultSecretStore.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},A1=e("hr",null,null,-1),H1=e("h3",{id:"initdefaultstatestore",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initdefaultstatestore","aria-hidden":"true"},"#"),t(" initDefaultStateStore")],-1),j1=e("strong",null,"initDefaultStateStore",-1),G1=e("code",null,"options",-1),q1=e("code",null,"DefaultStateStore",-1),V1=e("h4",{id:"parameters-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-6","aria-hidden":"true"},"#"),t(" Parameters")],-1),z1=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Z1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"options")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")])],-1),U1=e("td",{style:{"text-align":"left"}},[e("code",null,"options.logger")],-1),Q1={style:{"text-align":"left"}},K1=e("code",null,"Logger",-1),W1=e("h4",{id:"returns-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-6","aria-hidden":"true"},"#"),t(" Returns")],-1),$1=e("code",null,"DefaultStateStore",-1),Y1=e("h4",{id:"defined-in-69",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-69","aria-hidden":"true"},"#"),t(" Defined in")],-1),J1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultStateStore/initDefaultStateStore.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},X1=e("hr",null,null,-1),ef=e("h3",{id:"initlogger",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initlogger","aria-hidden":"true"},"#"),t(" initLogger")],-1),tf=e("strong",null,"initLogger",-1),nf=e("code",null,"level?",-1),of=e("code",null,"opt?",-1),sf=e("code",null,"Logger",-1),lf=e("p",null,"Create a new logger with the given minimum log level",-1),df=e("h4",{id:"parameters-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-7","aria-hidden":"true"},"#"),t(" Parameters")],-1),af=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),cf=e("td",{style:{"text-align":"left"}},[e("code",null,"level")],-1),rf={style:{"text-align":"left"}},uf=e("code",null,"LogLevelName",-1),hf=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"opt?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"LoggerOptions")])],-1),_f=e("h4",{id:"returns-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-7","aria-hidden":"true"},"#"),t(" Returns")],-1),pf=e("code",null,"Logger",-1),ff=e("h4",{id:"defined-in-70",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-70","aria-hidden":"true"},"#"),t(" Defined in")],-1),gf={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultLogger/initLogger.impl.ts#L13",target:"_blank",rel:"noopener noreferrer"},mf=e("hr",null,null,-1),yf=e("h3",{id:"iscustommessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscustommessage","aria-hidden":"true"},"#"),t(" isCustomMessage")],-1),bf=e("p",null,[t("▸ "),e("strong",null,"isCustomMessage"),t("("),e("code",null,"message"),t("): message is Object")],-1),xf=e("p",null,"Checks if a PURISTA message is type of custom message",-1),vf=e("h4",{id:"parameters-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-8","aria-hidden":"true"},"#"),t(" Parameters")],-1),Sf=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Tf=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),kf={style:{"text-align":"left"}},Cf=e("code",null,"EBMessage",-1),Pf=e("td",{style:{"text-align":"left"}},"any PURISTA message",-1),wf=e("h4",{id:"returns-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-8","aria-hidden":"true"},"#"),t(" Returns")],-1),Mf=e("p",null,"message is Object",-1),If=e("p",null,"true if message is type of custom message",-1),Ef=e("h4",{id:"defined-in-71",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-71","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ff={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/isCustomMessage.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},Df=d('<hr><h3 id="ishttpexposedservicemeta" tabindex="-1"><a class="header-anchor" href="#ishttpexposedservicemeta" aria-hidden="true">#</a> isHttpExposedServiceMeta</h3><p>▸ <strong>isHttpExposedServiceMeta</strong>(<code>input?</code>): input is Object</p><p>Checks if given input is type of HttpExposedServiceMeta</p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input?</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9" aria-hidden="true">#</a> Returns</h4><p>input is Object</p><p>boolean - true if input is type of HttpExposedServiceMeta</p><h4 id="defined-in-72" tabindex="-1"><a class="header-anchor" href="#defined-in-72" aria-hidden="true">#</a> Defined in</h4>',10),Rf={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/isHttpExposedServiceMeta.impl.ts#L8",target:"_blank",rel:"noopener noreferrer"},Bf=e("hr",null,null,-1),Nf=e("h3",{id:"isinfomessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#isinfomessage","aria-hidden":"true"},"#"),t(" isInfoMessage")],-1),Lf=e("p",null,[t("▸ "),e("strong",null,"isInfoMessage"),t("("),e("code",null,"message"),t("): message is InfoMessage")],-1),Of=e("h4",{id:"parameters-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-10","aria-hidden":"true"},"#"),t(" Parameters")],-1),Af=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Hf=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),jf={style:{"text-align":"left"}},Gf=e("code",null,"EBMessage",-1),qf=e("h4",{id:"returns-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-10","aria-hidden":"true"},"#"),t(" Returns")],-1),Vf=e("p",null,"message is InfoMessage",-1),zf=e("h4",{id:"defined-in-73",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-73","aria-hidden":"true"},"#"),t(" Defined in")],-1),Zf={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/isInfoMessage.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},Uf=e("hr",null,null,-1),Qf=e("h3",{id:"isinfoservicefunctionadded",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#isinfoservicefunctionadded","aria-hidden":"true"},"#"),t(" isInfoServiceFunctionAdded")],-1),Kf=e("p",null,[t("▸ "),e("strong",null,"isInfoServiceFunctionAdded"),t("("),e("code",null,"message"),t("): message is Object")],-1),Wf=e("h4",{id:"parameters-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-11","aria-hidden":"true"},"#"),t(" Parameters")],-1),$f=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Yf=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),Jf={style:{"text-align":"left"}},Xf=e("code",null,"EBMessage",-1),eg=e("h4",{id:"returns-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-11","aria-hidden":"true"},"#"),t(" Returns")],-1),tg=e("p",null,"message is Object",-1),ng=e("h4",{id:"defined-in-74",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-74","aria-hidden":"true"},"#"),t(" Defined in")],-1),og={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/isInfoServiceFunctionAdded.impl.ts#L5",target:"_blank",rel:"noopener noreferrer"},sg=d('<hr><h3 id="ismessagematchingsubscription" tabindex="-1"><a class="header-anchor" href="#ismessagematchingsubscription" aria-hidden="true">#</a> isMessageMatchingSubscription</h3><p>▸ <strong>isMessageMatchingSubscription</strong>(<code>_log</code>, <code>message</code>, <code>subscription</code>): <code>boolean</code></p><h4 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12" aria-hidden="true">#</a> Parameters</h4>',4),lg=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),dg=e("td",{style:{"text-align":"left"}},[e("code",null,"_log")],-1),ag={style:{"text-align":"left"}},ig=e("code",null,"Logger",-1),cg=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),rg={style:{"text-align":"left"}},ug=e("code",null,"EBMessage",-1),hg=e("td",{style:{"text-align":"left"}},[e("code",null,"subscription")],-1),_g={style:{"text-align":"left"}},pg=e("code",null,"SubscriptionStorageEntry",-1),fg=e("h4",{id:"returns-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-12","aria-hidden":"true"},"#"),t(" Returns")],-1),gg=e("p",null,[e("code",null,"boolean")],-1),mg=e("h4",{id:"defined-in-75",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-75","aria-hidden":"true"},"#"),t(" Defined in")],-1),yg={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/isMessageMatchingSubscription.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},bg=d('<hr><h3 id="throwifnotvalidmessage" tabindex="-1"><a class="header-anchor" href="#throwifnotvalidmessage" aria-hidden="true">#</a> throwIfNotValidMessage</h3><p>▸ <strong>throwIfNotValidMessage</strong>(<code>input</code>): <code>void</code></p><p>Validates if the given input might be valid event bridge message It only checks for &quot;technically possible&quot;</p><h4 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="defined-in-76" tabindex="-1"><a class="header-anchor" href="#defined-in-76" aria-hidden="true">#</a> Defined in</h4>',9),xg={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/throwIfNotValidMessage.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},vg=d('<h2 id="command-2" tabindex="-1"><a class="header-anchor" href="#command-2" aria-hidden="true">#</a> Command</h2><p>• <strong>CommandDefinitionBuilder</strong>&lt;<code>ServiceClassType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>Command definition builder is a helper to create and define a command for a service. It helps to set all needed information like schemas and hooks. With these information, the types are automatically set and extended.</p><p>A working schema definition needs at least a command name, a short description and the function implementation.</p><h4 id="type-parameters-16" tabindex="-1"><a class="header-anchor" href="#type-parameters-16" aria-hidden="true">#</a> Type parameters</h4>',5),Sg=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Tg=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),kg={style:{"text-align":"left"}},Cg=e("code",null,"ServiceClass",-1),Pg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),wg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),Mg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),Ig=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),Eg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),Fg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),Dg=e("h4",{id:"defined-in-77",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-77","aria-hidden":"true"},"#"),t(" Defined in")],-1),Rg={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L31",target:"_blank",rel:"noopener noreferrer"},Bg=e("h3",{id:"commandafterguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandafterguardhook","aria-hidden":"true"},"#"),t(" CommandAfterGuardHook")],-1),Ng=e("strong",null,"CommandAfterGuardHook",-1),Lg=e("code",null,"ServiceClassType",-1),Og=e("code",null,"MessagePayloadType",-1),Ag=e("code",null,"MessageParamsType",-1),Hg=e("code",null,"FunctionResultType",-1),jg=e("code",null,"FunctionPayloadType",-1),Gg=e("code",null,"FunctionParamsType",-1),qg=e("code",null,"this",-1),Vg=e("code",null,"ServiceClassType",-1),zg=e("code",null,"context",-1),Zg=e("code",null,"CommandFunctionContext",-1),Ug=e("code",null,"MessagePayloadType",-1),Qg=e("code",null,"MessageParamsType",-1),Kg=e("code",null,"result",-1),Wg=e("code",null,"Readonly",-1),$g=e("code",null,"FunctionResultType",-1),Yg=e("code",null,"input",-1),Jg=e("code",null,"Readonly",-1),Xg=e("code",null,"FunctionPayloadType",-1),em=e("code",null,"parameter",-1),tm=e("code",null,"Readonly",-1),nm=e("code",null,"FunctionParamsType",-1),om=e("code",null,"Promise",-1),sm=e("code",null,"void",-1),lm=e("h4",{id:"type-parameters-17",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-17","aria-hidden":"true"},"#"),t(" Type parameters")],-1),dm=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),am=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),im={style:{"text-align":"left"}},cm=e("code",null,"ServiceClass",-1),rm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),um=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),hm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),_m=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),pm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),fm=d('<h4 id="type-declaration-22" tabindex="-1"><a class="header-anchor" href="#type-declaration-22" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>result</code>, <code>input</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Definition of after guard hook functions. This guard is called after function successfully returns and after output validation.</p><h5 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14" aria-hidden="true">#</a> Parameters</h5>',4),gm=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),mm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),ym=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),bm={style:{"text-align":"left"}},xm=e("code",null,"CommandFunctionContext",-1),vm=e("code",null,"MessagePayloadType",-1),Sm=e("code",null,"MessageParamsType",-1),Tm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"result")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionResultType"),t(">")])],-1),km=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"input")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),Cm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),Pm=e("h5",{id:"returns-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-14","aria-hidden":"true"},"#"),t(" Returns")],-1),wm=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),Mm=e("h4",{id:"defined-in-78",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-78","aria-hidden":"true"},"#"),t(" Defined in")],-1),Im={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandAfterGuardHook.ts#L10",target:"_blank",rel:"noopener noreferrer"},Em=e("hr",null,null,-1),Fm=e("h3",{id:"commandbeforeguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandbeforeguardhook","aria-hidden":"true"},"#"),t(" CommandBeforeGuardHook")],-1),Dm=e("strong",null,"CommandBeforeGuardHook",-1),Rm=e("code",null,"ServiceClassType",-1),Bm=e("code",null,"MessagePayloadType",-1),Nm=e("code",null,"MessageParamsType",-1),Lm=e("code",null,"FunctionPayloadType",-1),Om=e("code",null,"FunctionParamsType",-1),Am=e("code",null,"this",-1),Hm=e("code",null,"ServiceClassType",-1),jm=e("code",null,"context",-1),Gm=e("code",null,"CommandFunctionContext",-1),qm=e("code",null,"MessagePayloadType",-1),Vm=e("code",null,"MessageParamsType",-1),zm=e("code",null,"payload",-1),Zm=e("code",null,"Readonly",-1),Um=e("code",null,"FunctionPayloadType",-1),Qm=e("code",null,"parameter",-1),Km=e("code",null,"Readonly",-1),Wm=e("code",null,"FunctionParamsType",-1),$m=e("code",null,"Promise",-1),Ym=e("code",null,"void",-1),Jm=e("h4",{id:"type-parameters-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-18","aria-hidden":"true"},"#"),t(" Type parameters")],-1),Xm=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ey=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),ty={style:{"text-align":"left"}},ny=e("code",null,"ServiceClass",-1),oy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),sy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),ly=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),dy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),ay=d('<h4 id="type-declaration-23" tabindex="-1"><a class="header-anchor" href="#type-declaration-23" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Guard is called after command function input validation and before executing the command function. The guard is usefull to separate for example auth checks from business logic. It should throw HandledError or return void.</p><h5 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15" aria-hidden="true">#</a> Parameters</h5>',4),iy=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),cy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),ry=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),uy={style:{"text-align":"left"}},hy=e("code",null,"CommandFunctionContext",-1),_y=e("code",null,"MessagePayloadType",-1),py=e("code",null,"MessageParamsType",-1),fy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),gy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),my=e("h5",{id:"returns-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-15","aria-hidden":"true"},"#"),t(" Returns")],-1),yy=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),by=e("h4",{id:"defined-in-79",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-79","aria-hidden":"true"},"#"),t(" Defined in")],-1),xy={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandBeforeGuardHook.ts#L11",target:"_blank",rel:"noopener noreferrer"},vy=d('<hr><h3 id="commanddefinition" tabindex="-1"><a class="header-anchor" href="#commanddefinition" aria-hidden="true">#</a> CommandDefinition</h3><p>Ƭ <strong>CommandDefinition</strong>&lt;<code>ServiceClassType</code>, <code>MetadataType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>The definition for a command provided by some service.</p><h4 id="type-parameters-19" tabindex="-1"><a class="header-anchor" href="#type-parameters-19" aria-hidden="true">#</a> Type parameters</h4>',5),Sy=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ty=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),ky={style:{"text-align":"left"}},Cy=e("code",null,"ServiceClass",-1),Py=e("code",null,"ServiceClass",-1),wy=e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")],-1),My={style:{"text-align":"left"}},Iy=e("code",null,"CommandDefinitionMetadataBase",-1),Ey=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Fy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Dy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Ry=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),By=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),Ny=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Ly=e("h4",{id:"type-declaration-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-24","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Oy=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Ay=e("td",{style:{"text-align":"left"}},[e("code",null,"call")],-1),Hy={style:{"text-align":"left"}},jy=e("code",null,"CommandFunction",-1),Gy=e("code",null,"ServiceClassType",-1),qy=e("code",null,"MessagePayloadType",-1),Vy=e("code",null,"MessageParamsType",-1),zy=e("code",null,"FunctionPayloadType",-1),Zy=e("code",null,"FunctionParamsType",-1),Uy=e("code",null,"FunctionResultType",-1),Qy=e("td",{style:{"text-align":"left"}},"the command function",-1),Ky=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandDescription")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the description of the command")],-1),Wy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the command")],-1),$y=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),Yy={style:{"text-align":"left"}},Jy=e("code",null,"DefinitionEventBridgeConfig",-1),Xy=e("td",{style:{"text-align":"left"}},"config information for event bridge",-1),eb=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the eventName for the command response")],-1),tb=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks")],-1),nb={style:{"text-align":"left"}},ob=e("code",null,"afterGuard?",-1),sb=e("code",null,"Record",-1),lb=e("code",null,"string",-1),db=e("code",null,"CommandAfterGuardHook",-1),ab=e("code",null,"ServiceClassType",-1),ib=e("code",null,"MessagePayloadType",-1),cb=e("code",null,"MessageParamsType",-1),rb=e("code",null,"FunctionResultType",-1),ub=e("code",null,"FunctionPayloadType",-1),hb=e("code",null,"FunctionParamsType",-1),_b=e("code",null,"beforeGuard?",-1),pb=e("code",null,"Record",-1),fb=e("code",null,"string",-1),gb=e("code",null,"CommandBeforeGuardHook",-1),mb=e("code",null,"ServiceClassType",-1),yb=e("code",null,"MessagePayloadType",-1),bb=e("code",null,"MessageParamsType",-1),xb=e("code",null,"FunctionPayloadType",-1),vb=e("code",null,"FunctionParamsType",-1),Sb=e("code",null,"transformInput?",-1),Tb=e("code",null,"transformFunction",-1),kb=e("code",null,"CommandTransformInputHook",-1),Cb=e("code",null,"ServiceClassType",-1),Pb=e("code",null,"MessagePayloadType",-1),wb=e("code",null,"MessageParamsType",-1),Mb=e("code",null,"transformInputSchema",-1),Ib=e("code",null,"z.ZodType",-1),Eb=e("code",null,"transformParameterSchema",-1),Fb=e("code",null,"z.ZodType",-1),Db=e("code",null,"transformOutput?",-1),Rb=e("code",null,"transformFunction",-1),Bb=e("code",null,"CommandTransformOutputHook",-1),Nb=e("code",null,"ServiceClassType",-1),Lb=e("code",null,"MessagePayloadType",-1),Ob=e("code",null,"MessageResultType",-1),Ab=e("code",null,"FunctionParamsType",-1),Hb=e("code",null,"unknown",-1),jb=e("code",null,"transformOutputSchema",-1),Gb=e("code",null,"z.ZodType",-1),qb=e("td",{style:{"text-align":"left"}},"hooks of command",-1),Vb=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.afterGuard?")],-1),zb={style:{"text-align":"left"}},Zb=e("code",null,"Record",-1),Ub=e("code",null,"string",-1),Qb=e("code",null,"CommandAfterGuardHook",-1),Kb=e("code",null,"ServiceClassType",-1),Wb=e("code",null,"MessagePayloadType",-1),$b=e("code",null,"MessageParamsType",-1),Yb=e("code",null,"FunctionResultType",-1),Jb=e("code",null,"FunctionPayloadType",-1),Xb=e("code",null,"FunctionParamsType",-1),ex=e("td",{style:{"text-align":"left"}},"-",-1),tx=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.beforeGuard?")],-1),nx={style:{"text-align":"left"}},ox=e("code",null,"Record",-1),sx=e("code",null,"string",-1),lx=e("code",null,"CommandBeforeGuardHook",-1),dx=e("code",null,"ServiceClassType",-1),ax=e("code",null,"MessagePayloadType",-1),ix=e("code",null,"MessageParamsType",-1),cx=e("code",null,"FunctionPayloadType",-1),rx=e("code",null,"FunctionParamsType",-1),ux=e("td",{style:{"text-align":"left"}},"-",-1),hx=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput?")],-1),_x={style:{"text-align":"left"}},px=e("code",null,"transformFunction",-1),fx=e("code",null,"CommandTransformInputHook",-1),gx=e("code",null,"ServiceClassType",-1),mx=e("code",null,"MessagePayloadType",-1),yx=e("code",null,"MessageParamsType",-1),bx=e("code",null,"transformInputSchema",-1),xx=e("code",null,"z.ZodType",-1),vx=e("code",null,"transformParameterSchema",-1),Sx=e("code",null,"z.ZodType",-1),Tx=e("td",{style:{"text-align":"left"}},"-",-1),kx=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformFunction")],-1),Cx={style:{"text-align":"left"}},Px=e("code",null,"CommandTransformInputHook",-1),wx=e("code",null,"ServiceClassType",-1),Mx=e("code",null,"MessagePayloadType",-1),Ix=e("code",null,"MessageParamsType",-1),Ex=e("td",{style:{"text-align":"left"}},"-",-1),Fx=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),Dx=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),Rx=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput?")],-1),Bx={style:{"text-align":"left"}},Nx=e("code",null,"transformFunction",-1),Lx=e("code",null,"CommandTransformOutputHook",-1),Ox=e("code",null,"ServiceClassType",-1),Ax=e("code",null,"MessagePayloadType",-1),Hx=e("code",null,"MessageResultType",-1),jx=e("code",null,"FunctionParamsType",-1),Gx=e("code",null,"unknown",-1),qx=e("code",null,"transformOutputSchema",-1),Vx=e("code",null,"z.ZodType",-1),zx=e("td",{style:{"text-align":"left"}},"-",-1),Zx=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformFunction")],-1),Ux={style:{"text-align":"left"}},Qx=e("code",null,"CommandTransformOutputHook",-1),Kx=e("code",null,"ServiceClassType",-1),Wx=e("code",null,"MessagePayloadType",-1),$x=e("code",null,"MessageResultType",-1),Yx=e("code",null,"FunctionParamsType",-1),Jx=e("code",null,"unknown",-1),Xx=e("td",{style:{"text-align":"left"}},"-",-1),e3=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),t3=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"metadata")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")]),e("td",{style:{"text-align":"left"}},"the metadata of the command")],-1),n3=e("h4",{id:"defined-in-80",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-80","aria-hidden":"true"},"#"),t(" Defined in")],-1),o3={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandDefinition.ts#L17",target:"_blank",rel:"noopener noreferrer"},s3=e("hr",null,null,-1),l3=e("h3",{id:"commanderrorresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commanderrorresponse","aria-hidden":"true"},"#"),t(" CommandErrorResponse")],-1),d3=e("strong",null,"CommandErrorResponse",-1),a3=e("code",null,"Prettify",-1),i3=e("code",null,"contentEncoding",-1),c3=e("code",null,'"utf-8"',-1),r3=e("code",null,"contentType",-1),u3=e("code",null,'"application/json"',-1),h3=e("code",null,"correlationId",-1),_3=e("code",null,"CorrelationId",-1),p3=e("code",null,"isHandledError",-1),f3=e("code",null,"boolean",-1),g3=e("code",null,"messageType",-1),m3=e("code",null,"CommandErrorResponse",-1),y3=e("code",null,"payload",-1),b3=e("code",null,"data?",-1),x3=e("code",null,"unknown",-1),v3=e("code",null,"message",-1),S3=e("code",null,"string",-1),T3=e("code",null,"status",-1),k3=e("code",null,"StatusCode",-1),C3=e("code",null,"receiver",-1),P3=e("code",null,"EBMessageSenderAddress",-1),w3=e("code",null,"EBMessageBase",-1),M3=e("p",null,"CommandErrorResponse is a response to a specific previously received command which indicates some failure.",-1),I3=e("h4",{id:"defined-in-81",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-81","aria-hidden":"true"},"#"),t(" Defined in")],-1),E3={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandErrorResponse.ts#L13",target:"_blank",rel:"noopener noreferrer"},F3=e("hr",null,null,-1),D3=e("h3",{id:"commandfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandfunction","aria-hidden":"true"},"#"),t(" CommandFunction")],-1),R3=e("strong",null,"CommandFunction",-1),B3=e("code",null,"ServiceClassType",-1),N3=e("code",null,"MessagePayloadType",-1),L3=e("code",null,"MessageParamsType",-1),O3=e("code",null,"FunctionPayloadType",-1),A3=e("code",null,"FunctionParamsType",-1),H3=e("code",null,"FunctionResultType",-1),j3=e("code",null,"this",-1),G3=e("code",null,"ServiceClassType",-1),q3=e("code",null,"context",-1),V3=e("code",null,"CommandFunctionContext",-1),z3=e("code",null,"MessagePayloadType",-1),Z3=e("code",null,"MessageParamsType",-1),U3=e("code",null,"payload",-1),Q3=e("code",null,"Readonly",-1),K3=e("code",null,"FunctionPayloadType",-1),W3=e("code",null,"parameter",-1),$3=e("code",null,"Readonly",-1),Y3=e("code",null,"FunctionParamsType",-1),J3=e("code",null,"Promise",-1),X3=e("code",null,"FunctionResultType",-1),ev=e("h4",{id:"type-parameters-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-20","aria-hidden":"true"},"#"),t(" Type parameters")],-1),tv=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),nv=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),ov={style:{"text-align":"left"}},sv=e("code",null,"ServiceClass",-1),lv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),dv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),av=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),iv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),cv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),rv=d('<h4 id="type-declaration-25" tabindex="-1"><a class="header-anchor" href="#type-declaration-25" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>FunctionResultType</code>&gt;</p><p>CommandFunction is a function which will be triggered when a matching event bridge message is received by the service</p><h5 id="parameters-16" tabindex="-1"><a class="header-anchor" href="#parameters-16" aria-hidden="true">#</a> Parameters</h5>',4),uv=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),hv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),_v=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),pv={style:{"text-align":"left"}},fv=e("code",null,"CommandFunctionContext",-1),gv=e("code",null,"MessagePayloadType",-1),mv=e("code",null,"MessageParamsType",-1),yv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),bv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),xv=e("h5",{id:"returns-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-16","aria-hidden":"true"},"#"),t(" Returns")],-1),vv=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"FunctionResultType"),t(">")],-1),Sv=e("h4",{id:"defined-in-82",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-82","aria-hidden":"true"},"#"),t(" Defined in")],-1),Tv={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandFunction.ts#L9",target:"_blank",rel:"noopener noreferrer"},kv=e("hr",null,null,-1),Cv=e("h3",{id:"commandfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandfunctioncontext","aria-hidden":"true"},"#"),t(" CommandFunctionContext")],-1),Pv=e("strong",null,"CommandFunctionContext",-1),wv=e("code",null,"MessagePayloadType",-1),Mv=e("code",null,"MessageParamsType",-1),Iv=e("code",null,"Prettify",-1),Ev=e("code",null,"ContextBase",-1),Fv=e("code",null,"CommandFunctionContextEnhancements",-1),Dv=e("code",null,"MessagePayloadType",-1),Rv=e("code",null,"MessageParamsType",-1),Bv=d('<p>The command function context which will be passed into command function.</p><h4 id="type-parameters-21" tabindex="-1"><a class="header-anchor" href="#type-parameters-21" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-83" tabindex="-1"><a class="header-anchor" href="#defined-in-83" aria-hidden="true">#</a> Defined in</h4>',4),Nv={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandFunctionContext.ts#L47",target:"_blank",rel:"noopener noreferrer"},Lv=d('<hr><h3 id="commandfunctioncontextenhancements" tabindex="-1"><a class="header-anchor" href="#commandfunctioncontextenhancements" aria-hidden="true">#</a> CommandFunctionContextEnhancements</h3><p>Ƭ <strong>CommandFunctionContextEnhancements</strong>&lt;<code>MessagePayloadType</code>, <code>MessageParamsType</code>&gt;: <code>Object</code></p><p>It provides the original command message with types for payload and parameter. Also, the methods:</p><ul><li><code>emit</code> which allows to emit custom events to the event bridge</li><li><code>invoke</code> which allows to call other commands</li></ul><h4 id="type-parameters-22" tabindex="-1"><a class="header-anchor" href="#type-parameters-22" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-26" tabindex="-1"><a class="header-anchor" href="#type-declaration-26" aria-hidden="true">#</a> Type declaration</h4>',8),Ov=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Av=e("td",{style:{"text-align":"left"}},[e("code",null,"emit")],-1),Hv={style:{"text-align":"left"}},jv=e("code",null,"EmitCustomMessageFunction",-1),Gv=e("td",{style:{"text-align":"left"}},"emit a custom message",-1),qv=e("td",{style:{"text-align":"left"}},[e("code",null,"invoke")],-1),Vv={style:{"text-align":"left"}},zv=e("code",null,"InvokeFunction",-1),Zv=e("td",{style:{"text-align":"left"}},[t("Invokes a command and returns the result. It is recommended to validate the result against a schema which only contains the data you actually need. "),e("strong",null,[e("code",null,"Example")]),t(),e("code",null,"typescript const address: EBMessageAddress = { serviceName: 'name-of-service-to-invoke', serviceVersion: '1', serviceTarget: 'command-name-to-invoke', } const inputPayload = { my: 'input' } const inputParameter = { search: 'for_me' } const result = await invoke<MyResultType>(address, inputPayload inputParameter ) ")],-1),Uv=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),Qv={style:{"text-align":"left"}},Kv=e("code",null,"Readonly",-1),Wv=e("code",null,"Command",-1),$v=e("code",null,"MessagePayloadType",-1),Yv=e("code",null,"MessageParamsType",-1),Jv=e("td",{style:{"text-align":"left"}},"the original message",-1),Xv=e("h4",{id:"defined-in-84",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-84","aria-hidden":"true"},"#"),t(" Defined in")],-1),e2={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandFunctionContext.ts#L16",target:"_blank",rel:"noopener noreferrer"},t2=e("hr",null,null,-1),n2=e("h3",{id:"commandresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandresponse","aria-hidden":"true"},"#"),t(" CommandResponse")],-1),o2=e("strong",null,"CommandResponse",-1),s2=e("code",null,"T",-1),l2=e("code",null,"CommandSuccessResponse",-1),d2=e("code",null,"T",-1),a2=e("code",null,"CommandErrorResponse",-1),i2=d('<p>CommandResponse is a response to a specific previously received command which can be either a success or failure</p><h4 id="type-parameters-23" tabindex="-1"><a class="header-anchor" href="#type-parameters-23" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-85" tabindex="-1"><a class="header-anchor" href="#defined-in-85" aria-hidden="true">#</a> Defined in</h4>',4),c2={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandResponse.ts#L9",target:"_blank",rel:"noopener noreferrer"},r2=e("hr",null,null,-1),u2=e("h3",{id:"commandsuccessresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandsuccessresponse","aria-hidden":"true"},"#"),t(" CommandSuccessResponse")],-1),h2=e("strong",null,"CommandSuccessResponse",-1),_2=e("code",null,"PayloadType",-1),p2=e("code",null,"Prettify",-1),f2=e("code",null,"correlationId",-1),g2=e("code",null,"CorrelationId",-1),m2=e("code",null,"messageType",-1),y2=e("code",null,"CommandSuccessResponse",-1),b2=e("code",null,"payload",-1),x2=e("code",null,"PayloadType",-1),v2=e("code",null,"receiver",-1),S2=e("code",null,"EBMessageSenderAddress",-1),T2=e("code",null,"EBMessageBase",-1),k2=d('<p>CommandSuccessResponse is a response to a specific previously received command. It indicates that the command was executed successfully and contains the result payload</p><h4 id="type-parameters-24" tabindex="-1"><a class="header-anchor" href="#type-parameters-24" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-86" tabindex="-1"><a class="header-anchor" href="#defined-in-86" aria-hidden="true">#</a> Defined in</h4>',4),C2={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandSuccessResponse.ts#L13",target:"_blank",rel:"noopener noreferrer"},P2=e("hr",null,null,-1),w2=e("h3",{id:"commandtransformfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandtransformfunctioncontext","aria-hidden":"true"},"#"),t(" CommandTransformFunctionContext")],-1),M2=e("strong",null,"CommandTransformFunctionContext",-1),I2=e("code",null,"PayloadType",-1),E2=e("code",null,"ParameterType",-1),F2=e("code",null,"Prettify",-1),D2=e("code",null,"ContextBase",-1),R2=e("code",null,"message",-1),B2=e("code",null,"Readonly",-1),N2=e("code",null,"Command",-1),L2=e("code",null,"PayloadType",-1),O2=e("code",null,"ParameterType",-1),A2=d('<h4 id="type-parameters-25" tabindex="-1"><a class="header-anchor" href="#type-parameters-25" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td></tr></tbody></table><h4 id="defined-in-87" tabindex="-1"><a class="header-anchor" href="#defined-in-87" aria-hidden="true">#</a> Defined in</h4>',3),H2={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandTransformFunctionContext.ts#L8",target:"_blank",rel:"noopener noreferrer"},j2=e("hr",null,null,-1),G2=e("h3",{id:"commandtransforminputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandtransforminputhook","aria-hidden":"true"},"#"),t(" CommandTransformInputHook")],-1),q2=e("strong",null,"CommandTransformInputHook",-1),V2=e("code",null,"ServiceClassType",-1),z2=e("code",null,"PayloadOutput",-1),Z2=e("code",null,"ParamsOutput",-1),U2=e("code",null,"PayloadInput",-1),Q2=e("code",null,"ParamsInput",-1),K2=e("code",null,"this",-1),W2=e("code",null,"ServiceClassType",-1),$2=e("code",null,"context",-1),Y2=e("code",null,"CommandTransformFunctionContext",-1),J2=e("code",null,"PayloadInput",-1),X2=e("code",null,"ParamsInput",-1),e4=e("code",null,"payload",-1),t4=e("code",null,"Readonly",-1),n4=e("code",null,"PayloadInput",-1),o4=e("code",null,"parameter",-1),s4=e("code",null,"Readonly",-1),l4=e("code",null,"ParamsInput",-1),d4=e("code",null,"Promise",-1),a4=e("code",null,"parameter",-1),i4=e("code",null,"Readonly",-1),c4=e("code",null,"ParamsOutput",-1),r4=e("code",null,"payload",-1),u4=e("code",null,"Readonly",-1),h4=e("code",null,"PayloadOutput",-1),_4=d('<h4 id="type-parameters-26" tabindex="-1"><a class="header-anchor" href="#type-parameters-26" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>PayloadOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>PayloadInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-27" tabindex="-1"><a class="header-anchor" href="#type-declaration-27" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><p>The command transform gets the raw message payload and parameter input, which is validated against the transform input schemas. The command transform function is called before guard hooks and before the actual command function.</p><p>It should throw HandledError or return an object with the transformed payload and parameter. The type of returned payload and parameter must match the command function input for payload and parameter</p><h5 id="parameters-17" tabindex="-1"><a class="header-anchor" href="#parameters-17" aria-hidden="true">#</a> Parameters</h5>',7),p4=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),f4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),g4=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),m4={style:{"text-align":"left"}},y4=e("code",null,"CommandTransformFunctionContext",-1),b4=e("code",null,"PayloadInput",-1),x4=e("code",null,"ParamsInput",-1),v4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"PayloadInput"),t(">")])],-1),S4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"ParamsInput"),t(">")])],-1),T4=d('<h5 id="returns-17" tabindex="-1"><a class="header-anchor" href="#returns-17" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><h4 id="defined-in-88" tabindex="-1"><a class="header-anchor" href="#defined-in-88" aria-hidden="true">#</a> Defined in</h4>',3),k4={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandTransformInputHook.ts#L12",target:"_blank",rel:"noopener noreferrer"},C4=e("hr",null,null,-1),P4=e("h3",{id:"commandtransformoutputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandtransformoutputhook","aria-hidden":"true"},"#"),t(" CommandTransformOutputHook")],-1),w4=e("strong",null,"CommandTransformOutputHook",-1),M4=e("code",null,"ServiceClassType",-1),I4=e("code",null,"MessagePayloadType",-1),E4=e("code",null,"MessageResultType",-1),F4=e("code",null,"MessageParamsType",-1),D4=e("code",null,"ResponseOutput",-1),R4=e("code",null,"this",-1),B4=e("code",null,"ServiceClassType",-1),N4=e("code",null,"context",-1),L4=e("code",null,"CommandTransformFunctionContext",-1),O4=e("code",null,"MessagePayloadType",-1),A4=e("code",null,"MessageParamsType",-1),H4=e("code",null,"payload",-1),j4=e("code",null,"Readonly",-1),G4=e("code",null,"MessageResultType",-1),q4=e("code",null,"parameter",-1),V4=e("code",null,"Readonly",-1),z4=e("code",null,"MessageParamsType",-1),Z4=e("code",null,"Promise",-1),U4=e("code",null,"ResponseOutput",-1),Q4=d('<h4 id="type-parameters-27" tabindex="-1"><a class="header-anchor" href="#type-parameters-27" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>MessageResultType</code></td><td style="text-align:left;"><code>MessageResultType</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>ResponseOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-28" tabindex="-1"><a class="header-anchor" href="#type-declaration-28" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>ResponseOutput</code>&gt;</p><p>This transform hook is executed after function output validation and AfterGuardHooks.</p><h5 id="parameters-18" tabindex="-1"><a class="header-anchor" href="#parameters-18" aria-hidden="true">#</a> Parameters</h5>',6),K4=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),W4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),$4=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),Y4={style:{"text-align":"left"}},J4=e("code",null,"CommandTransformFunctionContext",-1),X4=e("code",null,"MessagePayloadType",-1),eS=e("code",null,"MessageParamsType",-1),tS=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageResultType"),t(">")])],-1),nS=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageParamsType"),t(">")])],-1),oS=e("h5",{id:"returns-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-18","aria-hidden":"true"},"#"),t(" Returns")],-1),sS=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"ResponseOutput"),t(">")],-1),lS=e("h4",{id:"defined-in-89",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-89","aria-hidden":"true"},"#"),t(" Defined in")],-1),dS={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandTransformOutputHook.ts#L7",target:"_blank",rel:"noopener noreferrer"},aS=e("hr",null,null,-1),iS=e("h3",{id:"iscommand",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscommand","aria-hidden":"true"},"#"),t(" isCommand")],-1),cS=e("p",null,[t("▸ "),e("strong",null,"isCommand"),t("("),e("code",null,"message"),t("): message is Object")],-1),rS=e("p",null,"Checks if given message is type of Command",-1),uS=e("h4",{id:"parameters-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-19","aria-hidden":"true"},"#"),t(" Parameters")],-1),hS=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),_S=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),pS={style:{"text-align":"left"}},fS=e("code",null,"EBMessage",-1),gS=e("h4",{id:"returns-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-19","aria-hidden":"true"},"#"),t(" Returns")],-1),mS=e("p",null,"message is Object",-1),yS=e("p",null,"boolean",-1),bS=e("h4",{id:"defined-in-90",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-90","aria-hidden":"true"},"#"),t(" Defined in")],-1),xS={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/isCommand.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},vS=d('<hr><h3 id="iscommanderrorresponse" tabindex="-1"><a class="header-anchor" href="#iscommanderrorresponse" aria-hidden="true">#</a> isCommandErrorResponse</h3><p>▸ <strong>isCommandErrorResponse</strong>(<code>message</code>): message is Object</p><p>Checks if given message is type of CommandErrorResponse</p><h4 id="parameters-20" tabindex="-1"><a class="header-anchor" href="#parameters-20" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>message</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="returns-20" tabindex="-1"><a class="header-anchor" href="#returns-20" aria-hidden="true">#</a> Returns</h4><p>message is Object</p><p>boolean</p><h4 id="defined-in-91" tabindex="-1"><a class="header-anchor" href="#defined-in-91" aria-hidden="true">#</a> Defined in</h4>',10),SS={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/isCommandErrorResponse.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},TS=e("hr",null,null,-1),kS=e("h3",{id:"iscommandresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscommandresponse","aria-hidden":"true"},"#"),t(" isCommandResponse")],-1),CS=e("p",null,[t("▸ "),e("strong",null,"isCommandResponse"),t("("),e("code",null,"message"),t("): message is CommandResponse")],-1),PS=e("p",null,"Checks if given message is type of CommandResponse (success or error)",-1),wS=e("h4",{id:"parameters-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-21","aria-hidden":"true"},"#"),t(" Parameters")],-1),MS=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),IS=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),ES={style:{"text-align":"left"}},FS=e("code",null,"EBMessage",-1),DS=e("h4",{id:"returns-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-21","aria-hidden":"true"},"#"),t(" Returns")],-1),RS=e("p",null,"message is CommandResponse",-1),BS=e("p",null,"boolean",-1),NS=e("h4",{id:"defined-in-92",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-92","aria-hidden":"true"},"#"),t(" Defined in")],-1),LS={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/isCommandResponse.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},OS=e("hr",null,null,-1),AS=e("h3",{id:"iscommandsuccessresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscommandsuccessresponse","aria-hidden":"true"},"#"),t(" isCommandSuccessResponse")],-1),HS=e("p",null,[t("▸ "),e("strong",null,"isCommandSuccessResponse"),t("("),e("code",null,"message"),t("): message is Object")],-1),jS=e("p",null,"Checks if given message is type of CommandSuccessResponse",-1),GS=e("h4",{id:"parameters-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-22","aria-hidden":"true"},"#"),t(" Parameters")],-1),qS=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),VS=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),zS={style:{"text-align":"left"}},ZS=e("code",null,"EBMessage",-1),US=e("h4",{id:"returns-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-22","aria-hidden":"true"},"#"),t(" Returns")],-1),QS=e("p",null,"message is Object",-1),KS=e("p",null,"boolean",-1),WS=e("h4",{id:"defined-in-93",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-93","aria-hidden":"true"},"#"),t(" Defined in")],-1),$S={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/isCommandSuccessResponse.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},YS=d(`<h2 id="event-bridge-1" tabindex="-1"><a class="header-anchor" href="#event-bridge-1" aria-hidden="true">#</a> Event bridge</h2><p>• <strong>DefaultEventBridge</strong>: <code>Object</code></p><p>Simple implementation of some simple in-memory event bridge. Does not support threads and does not need any external databases.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> DefaultEventBridge <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@purista/core&#39;</span>

<span class="token keyword">const</span> eventBridge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultEventBridge</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> eventBridge<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// add your services</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-94" tabindex="-1"><a class="header-anchor" href="#defined-in-94" aria-hidden="true">#</a> Defined in</h4>`,6),JS={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L61",target:"_blank",rel:"noopener noreferrer"},XS=d('<p>• <strong>EventBridgeBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>The base class to be extended by event bridge implementations</p><h4 id="type-parameters-28" tabindex="-1"><a class="header-anchor" href="#type-parameters-28" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="defined-in-95" tabindex="-1"><a class="header-anchor" href="#defined-in-95" aria-hidden="true">#</a> Defined in</h4>',5),eT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L17",target:"_blank",rel:"noopener noreferrer"},tT=e("p",null,[t("• "),e("strong",null,"EventBridge"),t(": "),e("code",null,"Object")],-1),nT=e("p",null,"Event bridge interface The event bridge must implement this interface.",-1),oT=e("h4",{id:"defined-in-96",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-96","aria-hidden":"true"},"#"),t(" Defined in")],-1),sT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L19",target:"_blank",rel:"noopener noreferrer"},lT=e("h3",{id:"eventbridgeeventsbasic",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#eventbridgeeventsbasic","aria-hidden":"true"},"#"),t(" EventBridgeEventsBasic")],-1),dT=e("p",null,[t("Ƭ "),e("strong",null,"EventBridgeEventsBasic"),t(": "),e("code",null,"Object")],-1),aT=e("p",null,"Events which can be emitted by a event bridge",-1),iT=e("h4",{id:"type-declaration-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-29","aria-hidden":"true"},"#"),t(" Type declaration")],-1),cT=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),rT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-connected")]),e("td",{style:{"text-align":"left"}},[e("code",null,"never")]),e("td",{style:{"text-align":"left"}},"emitted when then connection to event bridge is established")],-1),uT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-connection-error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined"),t(" | "),e("code",null,"unknown"),t(" | "),e("code",null,"Error")]),e("td",{style:{"text-align":"left"}},"emitted when the connection to event bridge can not be established or a connection has issues or gets closed unexpectedly")],-1),hT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-disconnected")]),e("td",{style:{"text-align":"left"}},[e("code",null,"never")]),e("td",{style:{"text-align":"left"}},"emitted when the connection to event bridge closed")],-1),_T=e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-error")],-1),pT={style:{"text-align":"left"}},fT=e("code",null,"UnhandledError",-1),gT=e("code",null,"unknown",-1),mT=e("td",{style:{"text-align":"left"}},"emitted on internal event bridge error",-1),yT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-reconnecting")]),e("td",{style:{"text-align":"left"}},[e("code",null,"never")]),e("td",{style:{"text-align":"left"}},"emitted on retry to connect to event bridge")],-1),bT=e("h4",{id:"defined-in-97",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-97","aria-hidden":"true"},"#"),t(" Defined in")],-1),xT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeEvents.ts#L20",target:"_blank",rel:"noopener noreferrer"},vT=e("hr",null,null,-1),ST=e("h3",{id:"getcommandqueuename",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommandqueuename","aria-hidden":"true"},"#"),t(" getCommandQueueName")],-1),TT=e("p",null,[t("▸ "),e("strong",null,"getCommandQueueName"),t("("),e("code",null,"address"),t("): "),e("code",null,"string")],-1),kT=e("h4",{id:"parameters-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-23","aria-hidden":"true"},"#"),t(" Parameters")],-1),CT=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),PT=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),wT={style:{"text-align":"left"}},MT=e("code",null,"EBMessageAddress",-1),IT=e("h4",{id:"returns-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-23","aria-hidden":"true"},"#"),t(" Returns")],-1),ET=e("p",null,[e("code",null,"string")],-1),FT=e("h4",{id:"defined-in-98",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-98","aria-hidden":"true"},"#"),t(" Defined in")],-1),DT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getCommandQueueName.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},RT=d('<h2 id="helper-1" tabindex="-1"><a class="header-anchor" href="#helper-1" aria-hidden="true">#</a> Helper</h2><h3 id="converttocamelcase" tabindex="-1"><a class="header-anchor" href="#converttocamelcase" aria-hidden="true">#</a> convertToCamelCase</h3><p>▸ <strong>convertToCamelCase</strong>(<code>str</code>): <code>string</code></p><p>Converts a string into camelCase</p><p><strong><code>Link</code></strong></p><p>https://github.com/30-seconds/30-seconds-of-code</p><h4 id="parameters-24" tabindex="-1"><a class="header-anchor" href="#parameters-24" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">string</td></tr></tbody></table><h4 id="returns-24" tabindex="-1"><a class="header-anchor" href="#returns-24" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>string converted to camelCase</p><h4 id="defined-in-99" tabindex="-1"><a class="header-anchor" href="#defined-in-99" aria-hidden="true">#</a> Defined in</h4>',12),BT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/string/convertToCamelCase.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},NT=d('<hr><h3 id="converttokebabcase" tabindex="-1"><a class="header-anchor" href="#converttokebabcase" aria-hidden="true">#</a> convertToKebabCase</h3><p>▸ <strong>convertToKebabCase</strong>(<code>str</code>): <code>string</code></p><p>Converts a string into kebab-case</p><p><strong><code>Link</code></strong></p><p>https://github.com/30-seconds/30-seconds-of-code</p><h4 id="parameters-25" tabindex="-1"><a class="header-anchor" href="#parameters-25" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">string</td></tr></tbody></table><h4 id="returns-25" tabindex="-1"><a class="header-anchor" href="#returns-25" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>string converted to kebab-case</p><h4 id="defined-in-100" tabindex="-1"><a class="header-anchor" href="#defined-in-100" aria-hidden="true">#</a> Defined in</h4>',12),LT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/string/convertToKebabCase.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},OT=d('<hr><h3 id="converttopascalcase" tabindex="-1"><a class="header-anchor" href="#converttopascalcase" aria-hidden="true">#</a> convertToPascalCase</h3><p>▸ <strong>convertToPascalCase</strong>(<code>str</code>): <code>string</code></p><p>Converts a string into PascalCase</p><p><strong><code>Link</code></strong></p><p>https://github.com/30-seconds/30-seconds-of-code</p><h4 id="parameters-26" tabindex="-1"><a class="header-anchor" href="#parameters-26" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">string</td></tr></tbody></table><h4 id="returns-26" tabindex="-1"><a class="header-anchor" href="#returns-26" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>string converted to PascalCase</p><h4 id="defined-in-101" tabindex="-1"><a class="header-anchor" href="#defined-in-101" aria-hidden="true">#</a> Defined in</h4>',12),AT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/string/convertToPascalCase.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},HT=d('<hr><h3 id="converttosnakecase" tabindex="-1"><a class="header-anchor" href="#converttosnakecase" aria-hidden="true">#</a> convertToSnakeCase</h3><p>▸ <strong>convertToSnakeCase</strong>(<code>str</code>): <code>string</code></p><p>Converts a string into snake_case</p><p><strong><code>Link</code></strong></p><p>https://github.com/30-seconds/30-seconds-of-code</p><h4 id="parameters-27" tabindex="-1"><a class="header-anchor" href="#parameters-27" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">string</td></tr></tbody></table><h4 id="returns-27" tabindex="-1"><a class="header-anchor" href="#returns-27" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>string converted to snake_case</p><h4 id="defined-in-102" tabindex="-1"><a class="header-anchor" href="#defined-in-102" aria-hidden="true">#</a> Defined in</h4>',12),jT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/string/convertToSnakeCase.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},GT=e("hr",null,null,-1),qT=e("h3",{id:"createerrorresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#createerrorresponse","aria-hidden":"true"},"#"),t(" createErrorResponse")],-1),VT=e("strong",null,"createErrorResponse",-1),zT=e("code",null,"instanceId",-1),ZT=e("code",null,"originalEBMessage",-1),UT=e("code",null,"statusCode?",-1),QT=e("code",null,"error?",-1),KT=e("code",null,"Readonly",-1),WT=e("code",null,"Omit",-1),$T=e("code",null,"contentEncoding",-1),YT=e("code",null,'"utf-8"',-1),JT=e("code",null,"contentType",-1),XT=e("code",null,'"application/json"',-1),e5=e("code",null,"correlationId",-1),t5=e("code",null,"string",-1),n5=e("code",null,"eventName?",-1),o5=e("code",null,"string",-1),s5=e("code",null,"id",-1),l5=e("code",null,"string",-1),d5=e("code",null,"isHandledError",-1),a5=e("code",null,"boolean",-1),i5=e("code",null,"messageType",-1),c5=e("code",null,"CommandErrorResponse",-1),r5=e("code",null,"otp?",-1),u5=e("code",null,"string",-1),h5=e("code",null,"payload",-1),_5=e("code",null,"data?",-1),p5=e("code",null,"unknown",-1),f5=e("code",null,"message",-1),g5=e("code",null,"string",-1),m5=e("code",null,"status",-1),y5=e("code",null,"StatusCode",-1),b5=e("code",null,"principalId?",-1),x5=e("code",null,"string",-1),v5=e("code",null,"receiver",-1),S5=e("code",null,"sender",-1),T5=e("code",null,"timestamp",-1),k5=e("code",null,"number",-1),C5=e("code",null,"traceId?",-1),P5=e("code",null,"string",-1),w5=e("code",null,'"instanceId"',-1),M5=e("p",null,"Creates a error response object based on original command Toggles sender and receiver",-1),I5=e("h4",{id:"parameters-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-28","aria-hidden":"true"},"#"),t(" Parameters")],-1),E5=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value")])],-1),F5=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),D5=e("td",{style:{"text-align":"left"}},[e("code",null,"originalEBMessage")],-1),R5={style:{"text-align":"left"}},B5=e("code",null,"Readonly",-1),N5=e("code",null,"contentEncoding",-1),L5=e("code",null,"string",-1),O5=e("code",null,"contentType",-1),A5=e("code",null,"string",-1),H5=e("code",null,"correlationId",-1),j5=e("code",null,"string",-1),G5=e("code",null,"eventName?",-1),q5=e("code",null,"string",-1),V5=e("code",null,"id",-1),z5=e("code",null,"string",-1),Z5=e("code",null,"messageType",-1),U5=e("code",null,"Command",-1),Q5=e("code",null,"otp?",-1),K5=e("code",null,"string",-1),W5=e("code",null,"payload",-1),$5=e("code",null,"parameter",-1),Y5=e("code",null,"unknown",-1),J5=e("code",null,"payload",-1),X5=e("code",null,"unknown",-1),ek=e("code",null,"principalId?",-1),tk=e("code",null,"string",-1),nk=e("code",null,"receiver",-1),ok=e("code",null,"EBMessageAddress",-1),sk=e("code",null,"sender",-1),lk=e("code",null,"timestamp",-1),dk=e("code",null,"number",-1),ak=e("code",null,"traceId?",-1),ik=e("code",null,"string",-1),ck=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),rk=e("td",{style:{"text-align":"left"}},[e("code",null,"statusCode")],-1),uk={style:{"text-align":"left"}},hk=e("code",null,"StatusCode",-1),_k=e("td",{style:{"text-align":"left"}},[e("code",null,"StatusCode.InternalServerError")],-1),pk=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"error?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),fk=e("h4",{id:"returns-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-28","aria-hidden":"true"},"#"),t(" Returns")],-1),gk=e("code",null,"Readonly",-1),mk=e("code",null,"Omit",-1),yk=e("code",null,"contentEncoding",-1),bk=e("code",null,'"utf-8"',-1),xk=e("code",null,"contentType",-1),vk=e("code",null,'"application/json"',-1),Sk=e("code",null,"correlationId",-1),Tk=e("code",null,"string",-1),kk=e("code",null,"eventName?",-1),Ck=e("code",null,"string",-1),Pk=e("code",null,"id",-1),wk=e("code",null,"string",-1),Mk=e("code",null,"isHandledError",-1),Ik=e("code",null,"boolean",-1),Ek=e("code",null,"messageType",-1),Fk=e("code",null,"CommandErrorResponse",-1),Dk=e("code",null,"otp?",-1),Rk=e("code",null,"string",-1),Bk=e("code",null,"payload",-1),Nk=e("code",null,"data?",-1),Lk=e("code",null,"unknown",-1),Ok=e("code",null,"message",-1),Ak=e("code",null,"string",-1),Hk=e("code",null,"status",-1),jk=e("code",null,"StatusCode",-1),Gk=e("code",null,"principalId?",-1),qk=e("code",null,"string",-1),Vk=e("code",null,"receiver",-1),zk=e("code",null,"sender",-1),Zk=e("code",null,"timestamp",-1),Uk=e("code",null,"number",-1),Qk=e("code",null,"traceId?",-1),Kk=e("code",null,"string",-1),Wk=e("code",null,'"instanceId"',-1),$k=e("p",null,"CommandErrorResponse message object",-1),Yk=e("h4",{id:"defined-in-103",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-103","aria-hidden":"true"},"#"),t(" Defined in")],-1),Jk={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/createErrorResponse.impl.ts#L18",target:"_blank",rel:"noopener noreferrer"},Xk=e("hr",null,null,-1),e6=e("h3",{id:"createinfomessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#createinfomessage","aria-hidden":"true"},"#"),t(" createInfoMessage")],-1),t6=e("strong",null,"createInfoMessage",-1),n6=e("code",null,"messageType",-1),o6=e("code",null,"sender",-1),s6=e("code",null,"additional?",-1),l6=e("code",null,"InfoMessage",-1),d6=e("h4",{id:"parameters-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-29","aria-hidden":"true"},"#"),t(" Parameters")],-1),a6=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),i6=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType")],-1),c6={style:{"text-align":"left"}},r6=e("code",null,"InfoMessageType",-1),u6=e("td",{style:{"text-align":"left"}},"-",-1),h6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),_6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.instanceId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"instance id of eventbridge")],-1),p6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the service")],-1),f6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the command or subscription")],-1),g6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the version of the service")],-1),m6=e("td",{style:{"text-align":"left"}},[e("code",null,"additional?")],-1),y6={style:{"text-align":"left"}},b6=e("code",null,"Partial",-1),x6=e("code",null,"InfoMessage",-1),v6=e("td",{style:{"text-align":"left"}},"-",-1),S6=e("h4",{id:"returns-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-29","aria-hidden":"true"},"#"),t(" Returns")],-1),T6=e("code",null,"InfoMessage",-1),k6=e("h4",{id:"defined-in-104",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-104","aria-hidden":"true"},"#"),t(" Defined in")],-1),C6={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/createInfoMessage.impl.ts#L14",target:"_blank",rel:"noopener noreferrer"},P6=e("hr",null,null,-1),w6=e("h3",{id:"createsuccessresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#createsuccessresponse","aria-hidden":"true"},"#"),t(" createSuccessResponse")],-1),M6=e("strong",null,"createSuccessResponse",-1),I6=e("code",null,"T",-1),E6=e("code",null,"instanceId",-1),F6=e("code",null,"originalEBMessage",-1),D6=e("code",null,"payload",-1),R6=e("code",null,"eventName?",-1),B6=e("code",null,"contentType?",-1),N6=e("code",null,"contentEncoding?",-1),L6=e("code",null,"Readonly",-1),O6=e("code",null,"contentEncoding",-1),A6=e("code",null,"string",-1),H6=e("code",null,"contentType",-1),j6=e("code",null,"string",-1),G6=e("code",null,"correlationId",-1),q6=e("code",null,"string",-1),V6=e("code",null,"eventName?",-1),z6=e("code",null,"string",-1),Z6=e("code",null,"id",-1),U6=e("code",null,"string",-1),Q6=e("code",null,"messageType",-1),K6=e("code",null,"CommandSuccessResponse",-1),W6=e("code",null,"otp?",-1),$6=e("code",null,"string",-1),Y6=e("code",null,"payload",-1),J6=e("code",null,"T",-1),X6=e("code",null,"principalId?",-1),e9=e("code",null,"string",-1),t9=e("code",null,"receiver",-1),n9=e("code",null,"sender",-1),o9=e("code",null,"timestamp",-1),s9=e("code",null,"number",-1),l9=e("code",null,"traceId?",-1),d9=e("code",null,"string",-1),a9=d('<h4 id="type-parameters-29" tabindex="-1"><a class="header-anchor" href="#type-parameters-29" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-30" tabindex="-1"><a class="header-anchor" href="#parameters-30" aria-hidden="true">#</a> Parameters</h4>',3),i9=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value")])],-1),c9=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),r9=e("td",{style:{"text-align":"left"}},[e("code",null,"originalEBMessage")],-1),u9={style:{"text-align":"left"}},h9=e("code",null,"Readonly",-1),_9=e("code",null,"contentEncoding",-1),p9=e("code",null,"string",-1),f9=e("code",null,"contentType",-1),g9=e("code",null,"string",-1),m9=e("code",null,"correlationId",-1),y9=e("code",null,"string",-1),b9=e("code",null,"eventName?",-1),x9=e("code",null,"string",-1),v9=e("code",null,"id",-1),S9=e("code",null,"string",-1),T9=e("code",null,"messageType",-1),k9=e("code",null,"Command",-1),C9=e("code",null,"otp?",-1),P9=e("code",null,"string",-1),w9=e("code",null,"payload",-1),M9=e("code",null,"parameter",-1),I9=e("code",null,"unknown",-1),E9=e("code",null,"payload",-1),F9=e("code",null,"unknown",-1),D9=e("code",null,"principalId?",-1),R9=e("code",null,"string",-1),B9=e("code",null,"receiver",-1),N9=e("code",null,"EBMessageAddress",-1),L9=e("code",null,"sender",-1),O9=e("code",null,"timestamp",-1),A9=e("code",null,"number",-1),H9=e("code",null,"traceId?",-1),j9=e("code",null,"string",-1),G9=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),q9=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"T")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),V9=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),z9=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"'application/json'")])],-1),Z9=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"'utf-8'")])],-1),U9=e("h4",{id:"returns-30",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-30","aria-hidden":"true"},"#"),t(" Returns")],-1),Q9=e("code",null,"Readonly",-1),K9=e("code",null,"contentEncoding",-1),W9=e("code",null,"string",-1),$9=e("code",null,"contentType",-1),Y9=e("code",null,"string",-1),J9=e("code",null,"correlationId",-1),X9=e("code",null,"string",-1),e0=e("code",null,"eventName?",-1),t0=e("code",null,"string",-1),n0=e("code",null,"id",-1),o0=e("code",null,"string",-1),s0=e("code",null,"messageType",-1),l0=e("code",null,"CommandSuccessResponse",-1),d0=e("code",null,"otp?",-1),a0=e("code",null,"string",-1),i0=e("code",null,"payload",-1),c0=e("code",null,"T",-1),r0=e("code",null,"principalId?",-1),u0=e("code",null,"string",-1),h0=e("code",null,"receiver",-1),_0=e("code",null,"sender",-1),p0=e("code",null,"timestamp",-1),f0=e("code",null,"number",-1),g0=e("code",null,"traceId?",-1),m0=e("code",null,"string",-1),y0=e("h4",{id:"defined-in-105",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-105","aria-hidden":"true"},"#"),t(" Defined in")],-1),b0={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/createSuccessResponse.impl.ts#L15",target:"_blank",rel:"noopener noreferrer"},x0=d('<hr><h3 id="deserializeotp" tabindex="-1"><a class="header-anchor" href="#deserializeotp" aria-hidden="true">#</a> deserializeOtp</h3><p>▸ <strong>deserializeOtp</strong>(<code>logger</code>, <code>otp?</code>): <code>undefined</code> | <code>Context</code></p><h4 id="parameters-31" tabindex="-1"><a class="header-anchor" href="#parameters-31" aria-hidden="true">#</a> Parameters</h4>',4),v0=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),S0=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),T0={style:{"text-align":"left"}},k0=e("code",null,"Logger",-1),C0=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"otp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),P0=e("h4",{id:"returns-31",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-31","aria-hidden":"true"},"#"),t(" Returns")],-1),w0=e("p",null,[e("code",null,"undefined"),t(" | "),e("code",null,"Context")],-1),M0=e("h4",{id:"defined-in-106",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-106","aria-hidden":"true"},"#"),t(" Defined in")],-1),I0={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/serializeOtp.impl.ts#L26",target:"_blank",rel:"noopener noreferrer"},E0=d('<hr><h3 id="getcleanedmessage" tabindex="-1"><a class="header-anchor" href="#getcleanedmessage" aria-hidden="true">#</a> getCleanedMessage</h3><p>▸ <strong>getCleanedMessage</strong>(<code>message</code>, <code>stripeOutContent?</code>): <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><p>Helper function for logging. Returns a message object, where fields which might contain sensitive data, are overwritten with string values. For command messages, parameter and payload are overwritten with string values.</p><p>For command success responses, the response field is overwritten.</p><p>Command error responses are not changed.</p><h4 id="parameters-32" tabindex="-1"><a class="header-anchor" href="#parameters-32" aria-hidden="true">#</a> Parameters</h4>',7),F0=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value")])],-1),D0=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),R0={style:{"text-align":"left"}},B0=e("code",null,"Readonly",-1),N0=e("code",null,"EBMessage",-1),L0=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),O0=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stripeOutContent")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},[e("code",null,"!isDevelop()")])],-1),A0=e("h4",{id:"returns-32",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-32","aria-hidden":"true"},"#"),t(" Returns")],-1),H0=e("p",null,[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"unknown"),t(">")],-1),j0=e("h4",{id:"defined-in-107",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-107","aria-hidden":"true"},"#"),t(" Defined in")],-1),G0={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getCleanedMessage.impl.ts#L15",target:"_blank",rel:"noopener noreferrer"},q0=e("hr",null,null,-1),V0=e("h3",{id:"geterrormessageforcode",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#geterrormessageforcode","aria-hidden":"true"},"#"),t(" getErrorMessageForCode")],-1),z0=e("p",null,[t("▸ "),e("strong",null,"getErrorMessageForCode"),t("("),e("code",null,"code"),t("): "),e("code",null,"string")],-1),Z0=e("h4",{id:"parameters-33",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-33","aria-hidden":"true"},"#"),t(" Parameters")],-1),U0=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Q0=e("td",{style:{"text-align":"left"}},[e("code",null,"code")],-1),K0={style:{"text-align":"left"}},W0=e("code",null,"StatusCode",-1),$0=e("h4",{id:"returns-33",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-33","aria-hidden":"true"},"#"),t(" Returns")],-1),Y0=e("p",null,[e("code",null,"string")],-1),J0=e("h4",{id:"defined-in-108",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-108","aria-hidden":"true"},"#"),t(" Defined in")],-1),X0={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getErrorMessageForCode.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},e8=d('<hr><h3 id="getnewcorrelationid" tabindex="-1"><a class="header-anchor" href="#getnewcorrelationid" aria-hidden="true">#</a> getNewCorrelationId</h3><p>▸ <strong>getNewCorrelationId</strong>(): <code>string</code></p><p>Create a new unique event bridge correlation id</p><h4 id="returns-34" tabindex="-1"><a class="header-anchor" href="#returns-34" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>EBMessageId</p><h4 id="defined-in-109" tabindex="-1"><a class="header-anchor" href="#defined-in-109" aria-hidden="true">#</a> Defined in</h4>',8),t8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getNewCorrelationId.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},n8=d('<hr><h3 id="getnewebmessageid" tabindex="-1"><a class="header-anchor" href="#getnewebmessageid" aria-hidden="true">#</a> getNewEBMessageId</h3><p>▸ <strong>getNewEBMessageId</strong>(): <code>string</code></p><p>Create a new unique event bridge message id</p><h4 id="returns-35" tabindex="-1"><a class="header-anchor" href="#returns-35" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>EBMessageId</p><h4 id="defined-in-110" tabindex="-1"><a class="header-anchor" href="#defined-in-110" aria-hidden="true">#</a> Defined in</h4>',8),o8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getNewEBMessageId.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},s8=d('<hr><h3 id="getnewinstanceid" tabindex="-1"><a class="header-anchor" href="#getnewinstanceid" aria-hidden="true">#</a> getNewInstanceId</h3><p>▸ <strong>getNewInstanceId</strong>(): <code>string</code></p><h4 id="returns-36" tabindex="-1"><a class="header-anchor" href="#returns-36" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-111" tabindex="-1"><a class="header-anchor" href="#defined-in-111" aria-hidden="true">#</a> Defined in</h4>',6),l8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getNewInstanceId.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},d8=d('<hr><h3 id="getnewtraceid" tabindex="-1"><a class="header-anchor" href="#getnewtraceid" aria-hidden="true">#</a> getNewTraceId</h3><p>▸ <strong>getNewTraceId</strong>(): <code>string</code></p><h4 id="returns-37" tabindex="-1"><a class="header-anchor" href="#returns-37" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-112" tabindex="-1"><a class="header-anchor" href="#defined-in-112" aria-hidden="true">#</a> Defined in</h4>',6),a8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getNewTraceId.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},i8=e("hr",null,null,-1),c8=e("h3",{id:"getsubscriptionqueuename",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getsubscriptionqueuename","aria-hidden":"true"},"#"),t(" getSubscriptionQueueName")],-1),r8=e("p",null,[t("▸ "),e("strong",null,"getSubscriptionQueueName"),t("("),e("code",null,"address"),t("): "),e("code",null,"string")],-1),u8=e("h4",{id:"parameters-34",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-34","aria-hidden":"true"},"#"),t(" Parameters")],-1),h8=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),_8=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),p8={style:{"text-align":"left"}},f8=e("code",null,"EBMessageAddress",-1),g8=e("h4",{id:"returns-38",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-38","aria-hidden":"true"},"#"),t(" Returns")],-1),m8=e("p",null,[e("code",null,"string")],-1),y8=e("h4",{id:"defined-in-113",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-113","aria-hidden":"true"},"#"),t(" Defined in")],-1),b8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getSubscriptionQueueName.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},x8=d('<hr><h3 id="getuniqueid" tabindex="-1"><a class="header-anchor" href="#getuniqueid" aria-hidden="true">#</a> getUniqueId</h3><p>▸ <strong>getUniqueId</strong>(): <code>string</code></p><h4 id="returns-39" tabindex="-1"><a class="header-anchor" href="#returns-39" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-114" tabindex="-1"><a class="header-anchor" href="#defined-in-114" aria-hidden="true">#</a> Defined in</h4>',6),v8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getUniqueId.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},S8=d(`<hr><h3 id="gracefulshutdown" tabindex="-1"><a class="header-anchor" href="#gracefulshutdown" aria-hidden="true">#</a> gracefulShutdown</h3><p>▸ <strong>gracefulShutdown</strong>(<code>logger</code>, <code>list</code>, <code>timeoutMs?</code>): <code>void</code></p><p>Helps to gracefully shut down your application. Provide in list objects. The objects contains a name and a promise function which should be executed.</p><p>The execution of array list functions is done sequential.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> shutDownList <span class="token operator">=</span> <span class="token punctuation">[</span>
 <span class="token punctuation">{</span>
   name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>serviceA<span class="token punctuation">.</span>info<span class="token punctuation">.</span>serviceName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> version </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>serviceA<span class="token punctuation">.</span>info<span class="token punctuation">.</span>serviceVersion<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
   fn<span class="token operator">:</span> serviceA<span class="token punctuation">.</span>destroy
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token punctuation">{</span>
   name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>serviceB<span class="token punctuation">.</span>info<span class="token punctuation">.</span>serviceName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> version </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>serviceB<span class="token punctuation">.</span>info<span class="token punctuation">.</span>serviceVersion<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
   fn<span class="token operator">:</span> serviceB<span class="token punctuation">.</span>destroy
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">{</span>
   name<span class="token operator">:</span> eventbridge<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
   fn<span class="token operator">:</span> eventbridge<span class="token punctuation">.</span>destroy
 <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
<span class="token function">gracefulShutdown</span><span class="token punctuation">(</span>logger<span class="token punctuation">,</span> shutDownList<span class="token punctuation">)</span>

<span class="token comment">// will shutdown ServiceA, then ServiceB, then the event bridge</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>Default</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token number">30000</span> milliseconds
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="parameters-35" tabindex="-1"><a class="header-anchor" href="#parameters-35" aria-hidden="true">#</a> Parameters</h4>`,10),T8=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value"),e("th",{style:{"text-align":"left"}},"Description")])],-1),k8=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),C8={style:{"text-align":"left"}},P8=e("code",null,"Logger",-1),w8=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),M8=e("td",{style:{"text-align":"left"}},"the logger object",-1),I8=e("td",{style:{"text-align":"left"}},[e("code",null,"list")],-1),E8={style:{"text-align":"left"}},F8=e("code",null,"ShutdownEntry",-1),D8=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),R8=e("td",{style:{"text-align":"left"}},"a object containing name and function",-1),B8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"timeoutMs")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},[e("code",null,"30000")]),e("td",{style:{"text-align":"left"}},"in ms to shut")],-1),N8=e("h4",{id:"returns-40",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-40","aria-hidden":"true"},"#"),t(" Returns")],-1),L8=e("p",null,[e("code",null,"void")],-1),O8=e("h4",{id:"defined-in-115",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-115","aria-hidden":"true"},"#"),t(" Defined in")],-1),A8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/gracefulShutdown.impl.ts#L36",target:"_blank",rel:"noopener noreferrer"},H8=d('<hr><h3 id="isdevelop" tabindex="-1"><a class="header-anchor" href="#isdevelop" aria-hidden="true">#</a> isDevelop</h3><p>▸ <strong>isDevelop</strong>(): <code>boolean</code></p><p>returns true if NODE_ENV is set to value starting with &quot;develop&quot;</p><h4 id="returns-41" tabindex="-1"><a class="header-anchor" href="#returns-41" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-116" tabindex="-1"><a class="header-anchor" href="#defined-in-116" aria-hidden="true">#</a> Defined in</h4>',7),j8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/isDevelop.impl.ts#L6",target:"_blank",rel:"noopener noreferrer"},G8=d('<hr><h3 id="serializeotp" tabindex="-1"><a class="header-anchor" href="#serializeotp" aria-hidden="true">#</a> serializeOtp</h3><p>▸ <strong>serializeOtp</strong>(): <code>string</code></p><h4 id="returns-42" tabindex="-1"><a class="header-anchor" href="#returns-42" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-117" tabindex="-1"><a class="header-anchor" href="#defined-in-117" aria-hidden="true">#</a> Defined in</h4>',6),q8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/serializeOtp.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},V8=e("h2",{id:"service-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#service-1","aria-hidden":"true"},"#"),t(" Service")],-1),z8=e("p",null,[t("• "),e("strong",null,"ServiceEventsNames"),t(": "),e("code",null,"Object")],-1),Z8=e("p",null,[t("Events which can be emitted by a service. Internal events are prefixed with "),e("code",null,"service-")],-1),U8=e("h4",{id:"defined-in-118",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-118","aria-hidden":"true"},"#"),t(" Defined in")],-1),Q8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceEvents.ts#L11",target:"_blank",rel:"noopener noreferrer"},K8=d(`<p>• <strong>Service</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for all services. This class provides base functions to work with the event bridge, logging and so on</p><p>Every service should extend this class and should not directly access the eventbridge or other service</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">MyService</span> <span class="token keyword">extends</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span>

  <span class="token keyword">async</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// your custom implementation</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// your custom implementation</span>
   <span class="token keyword">await</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="type-parameters-30" tabindex="-1"><a class="header-anchor" href="#type-parameters-30" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;"><code>unknown</code> | <code>undefined</code></td></tr></tbody></table><h4 id="defined-in-119" tabindex="-1"><a class="header-anchor" href="#defined-in-119" aria-hidden="true">#</a> Defined in</h4>`,7),W8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/Service/Service.impl.ts#L74",target:"_blank",rel:"noopener noreferrer"},$8=d('<p>• <strong>ServiceBuilder</strong>&lt;<code>ConfigType</code>, <code>ConfigInputType</code>, <code>ServiceClassType</code>&gt;: <code>Object</code></p><p>This class is used to build a service. The <code>ServiceBuilder</code> class is used to build a service. It has a few methods that are used to add command definitions and subscription definitions to the service. It also has a method that is used to create an instance of the service class.</p><h4 id="type-parameters-31" tabindex="-1"><a class="header-anchor" href="#type-parameters-31" aria-hidden="true">#</a> Type parameters</h4>',3),Y8=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),J8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"ConfigType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"unknown"),t(">")])],-1),X8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"ConfigInputType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"unknown"),t(">")])],-1),e7=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),t7={style:{"text-align":"left"}},n7=e("code",null,"ServiceClass",-1),o7=e("code",null,"Service",-1),s7=e("code",null,"ConfigType",-1),l7=e("h4",{id:"defined-in-120",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-120","aria-hidden":"true"},"#"),t(" Defined in")],-1),d7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L38",target:"_blank",rel:"noopener noreferrer"},a7=d('<p>• <strong>ServiceClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>The ServiceClass interface</p><h4 id="type-parameters-32" tabindex="-1"><a class="header-anchor" href="#type-parameters-32" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;"><code>unknown</code> | <code>undefined</code></td></tr></tbody></table><h4 id="defined-in-121" tabindex="-1"><a class="header-anchor" href="#defined-in-121" aria-hidden="true">#</a> Defined in</h4>',5),i7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L11",target:"_blank",rel:"noopener noreferrer"},c7=d('<h3 id="serviceconstructorinput" tabindex="-1"><a class="header-anchor" href="#serviceconstructorinput" aria-hidden="true">#</a> ServiceConstructorInput</h3><p>Ƭ <strong>ServiceConstructorInput</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><h4 id="type-parameters-33" tabindex="-1"><a class="header-anchor" href="#type-parameters-33" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="type-declaration-30" tabindex="-1"><a class="header-anchor" href="#type-declaration-30" aria-hidden="true">#</a> Type declaration</h4>',5),r7=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),u7=e("td",{style:{"text-align":"left"}},[e("code",null,"commandDefinitionList")],-1),h7={style:{"text-align":"left"}},_7=e("code",null,"CommandDefinitionList",-1),p7=e("code",null,"any",-1),f7=e("td",{style:{"text-align":"left"}},"The list of command definitions for this service",-1),g7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ConfigType")]),e("td",{style:{"text-align":"left"}},"The service specific config")],-1),m7=e("td",{style:{"text-align":"left"}},[e("code",null,"configStore?")],-1),y7={style:{"text-align":"left"}},b7=e("code",null,"ConfigStore",-1),x7=e("td",{style:{"text-align":"left"}},"The config store instance",-1),v7=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridge")],-1),S7={style:{"text-align":"left"}},T7=e("code",null,"EventBridge",-1),k7=e("td",{style:{"text-align":"left"}},"The eventBridge instance",-1),C7=e("td",{style:{"text-align":"left"}},[e("code",null,"info")],-1),P7={style:{"text-align":"left"}},w7=e("code",null,"ServiceInfoType",-1),M7=e("td",{style:{"text-align":"left"}},"The service info with name, version and description of service",-1),I7=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),E7={style:{"text-align":"left"}},F7=e("code",null,"Logger",-1),D7=e("td",{style:{"text-align":"left"}},"A logger instance",-1),R7=e("td",{style:{"text-align":"left"}},[e("code",null,"secretStore?")],-1),B7={style:{"text-align":"left"}},N7=e("code",null,"SecretStore",-1),L7=e("td",{style:{"text-align":"left"}},"The secret store instance",-1),O7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"spanProcessor?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SpanProcessor")]),e("td",{style:{"text-align":"left"}},"The opentelemetry span processor instance")],-1),A7=e("td",{style:{"text-align":"left"}},[e("code",null,"stateStore?")],-1),H7={style:{"text-align":"left"}},j7=e("code",null,"StateStore",-1),G7=e("td",{style:{"text-align":"left"}},"the state store instance",-1),q7=e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionDefinitionList")],-1),V7={style:{"text-align":"left"}},z7=e("code",null,"SubscriptionDefinitionList",-1),Z7=e("code",null,"any",-1),U7=e("td",{style:{"text-align":"left"}},"The list of subscription definitions for this service",-1),Q7=e("h4",{id:"defined-in-122",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-122","aria-hidden":"true"},"#"),t(" Defined in")],-1),K7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceConstructorInput.ts#L15",target:"_blank",rel:"noopener noreferrer"},W7=d('<hr><h3 id="serviceeventsinternal" tabindex="-1"><a class="header-anchor" href="#serviceeventsinternal" aria-hidden="true">#</a> ServiceEventsInternal</h3><p>Ƭ <strong>ServiceEventsInternal</strong>: <code>Object</code></p><p>Events which can be emitted by a service. Internal events are prefixed with <code>service-</code>.</p><p>Response messages, which have an event name assigned, are prefixed with <code>custom-</code> If you like to use your own events, the event name must be prefixed with <code>misc-</code>.</p><h4 id="type-declaration-31" tabindex="-1"><a class="header-anchor" href="#type-declaration-31" aria-hidden="true">#</a> Type declaration</h4>',6),$7=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Y7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-available")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service is fully initialized and ready Should be emitted by custom service class. It is not emitted by default")],-1),J7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-drain")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service is going to be stopped")],-1),X7=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error")],-1),eC={style:{"text-align":"left"}},tC=e("code",null,"commandName",-1),nC=e("code",null,"string",-1),oC=e("code",null,"error",-1),sC=e("code",null,"HandledError",-1),lC=e("code",null,"traceId",-1),dC=e("code",null,"TraceId",-1),aC=e("td",{style:{"text-align":"left"}},"emitted when a command throws a HandledError",-1),iC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error.commandName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),cC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error.error")],-1),rC={style:{"text-align":"left"}},uC=e("code",null,"HandledError",-1),hC=e("td",{style:{"text-align":"left"}},"-",-1),_C=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error.traceId")],-1),pC={style:{"text-align":"left"}},fC=e("code",null,"TraceId",-1),gC=e("td",{style:{"text-align":"left"}},"-",-1),mC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error")],-1),yC={style:{"text-align":"left"}},bC=e("code",null,"error",-1),xC=e("code",null,"HandledError",-1),vC=e("code",null,"subscriptionName",-1),SC=e("code",null,"string",-1),TC=e("code",null,"traceId",-1),kC=e("code",null,"TraceId",-1),CC=e("td",{style:{"text-align":"left"}},"emitted when a subscription throws a HandledError",-1),PC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error.error")],-1),wC={style:{"text-align":"left"}},MC=e("code",null,"HandledError",-1),IC=e("td",{style:{"text-align":"left"}},"-",-1),EC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error.subscriptionName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),FC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error.traceId")],-1),DC={style:{"text-align":"left"}},RC=e("code",null,"TraceId",-1),BC=e("td",{style:{"text-align":"left"}},"-",-1),NC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-not-available")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined"),t(" | "),e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"emitted when the service is not available (for example database connection could not be established)")],-1),LC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-started")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service is started, but not fully initialized and not ready yet")],-1),OC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-stopped")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service has been stopped")],-1),AC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error")],-1),HC={style:{"text-align":"left"}},jC=e("code",null,"commandName",-1),GC=e("code",null,"string",-1),qC=e("code",null,"error",-1),VC=e("code",null,"unknown",-1),zC=e("code",null,"traceId",-1),ZC=e("code",null,"TraceId",-1),UC=e("td",{style:{"text-align":"left"}},"emitted when a command throws an error other than a HandledError",-1),QC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error.commandName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),KC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),WC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error.traceId")],-1),$C={style:{"text-align":"left"}},YC=e("code",null,"TraceId",-1),JC=e("td",{style:{"text-align":"left"}},"-",-1),XC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error")],-1),eP={style:{"text-align":"left"}},tP=e("code",null,"error",-1),nP=e("code",null,"unknown",-1),oP=e("code",null,"subscriptionName",-1),sP=e("code",null,"string",-1),lP=e("code",null,"traceId",-1),dP=e("code",null,"TraceId",-1),aP=e("td",{style:{"text-align":"left"}},"emitted when a subscription throws an error other than a HandledError",-1),iP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),cP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error.subscriptionName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),rP=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error.traceId")],-1),uP={style:{"text-align":"left"}},hP=e("code",null,"TraceId",-1),_P=e("td",{style:{"text-align":"left"}},"-",-1),pP=e("h4",{id:"defined-in-123",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-123","aria-hidden":"true"},"#"),t(" Defined in")],-1),fP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceEvents.ts#L54",target:"_blank",rel:"noopener noreferrer"},gP=d('<h2 id="store-1" tabindex="-1"><a class="header-anchor" href="#store-1" aria-hidden="true">#</a> Store</h2><p>• <strong>ConfigStoreBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for config store adapters</p><h4 id="type-parameters-34" tabindex="-1"><a class="header-anchor" href="#type-parameters-34" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; = {}</td></tr></tbody></table><h4 id="defined-in-124" tabindex="-1"><a class="header-anchor" href="#defined-in-124" aria-hidden="true">#</a> Defined in</h4>',6),mP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},yP=d(`<p>• <strong>DefaultConfigStore</strong>: <code>Object</code></p><p>The DefaultConfigStore is a placeholder which offers all needed methods. Getters and setters will throw a UnhandledError with status <code>Unauthorized</code>, when a disabled operation is called.</p><p>For development and testing purpose, you can initiate the store with values.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultConfigStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
   enableGet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
   enableRemove<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
   enableSet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
   config<span class="token operator">:</span> <span class="token punctuation">{</span>
     initialValue<span class="token operator">:</span> <span class="token string">&#39;initial&#39;</span><span class="token punctuation">,</span>
   <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token string">&#39;initialValue&#39;</span><span class="token punctuation">)</span> <span class="token comment">// outputs: { initialValue: &#39;initial&#39; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-125" tabindex="-1"><a class="header-anchor" href="#defined-in-125" aria-hidden="true">#</a> Defined in</h4>`,6),bP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultConfigStore/DefaultConfigStore.impl.ts#L25",target:"_blank",rel:"noopener noreferrer"},xP=d(`<p>• <strong>DefaultSecretStore</strong>: <code>Object</code></p><p>The DefaultSecretStore is a placeholder which offers all needed methods. Getters and setters will throw a UnhandledError with status <code>Unauthorized</code>, when a disabled operation is called.</p><p>For development and testing purpose, you can initiate the store with values.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultSecretStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 config<span class="token operator">:</span> <span class="token punctuation">{</span>
   secretOne<span class="token operator">:</span> <span class="token string">&#39;my_secret_one_value&#39;</span><span class="token punctuation">,</span>
   secretTwo<span class="token operator">:</span> <span class="token string">&#39;my_secret_two_value&#39;</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getSecret</span><span class="token punctuation">(</span><span class="token string">&#39;secretOne&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;secretTwo) // outputs: { secretOne: my_secret_one_value, secretTwo: &#39;</span>my_secret_two_value&#39; <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Per default, setting/changing and removal of values are disabled. You can enable it on instance creation:</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultSecretStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 enableGet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
 enableRemove<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
 enableSet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-126" tabindex="-1"><a class="header-anchor" href="#defined-in-126" aria-hidden="true">#</a> Defined in</h4>`,9),vP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultSecretStore/DefaultSecretStore.impl.ts#L33",target:"_blank",rel:"noopener noreferrer"},SP=e("p",null,[t("• "),e("strong",null,"DefaultStateStore"),t(": "),e("code",null,"Object")],-1),TP=e("p",null,[t("The DefaultStateStore is a placeholder which offers all needed methods. Getters and setters will throw a UnhandledError with status "),e("code",null,"Not implemented")],-1),kP=e("h4",{id:"defined-in-127",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-127","aria-hidden":"true"},"#"),t(" Defined in")],-1),CP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultStateStore/DefaultStateStore.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},PP=d('<p>• <strong>SecretStoreBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for secret store adapters</p><h4 id="type-parameters-35" tabindex="-1"><a class="header-anchor" href="#type-parameters-35" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; = {}</td></tr></tbody></table><h4 id="defined-in-128" tabindex="-1"><a class="header-anchor" href="#defined-in-128" aria-hidden="true">#</a> Defined in</h4>',5),wP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/SecretStoreBaseClass.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},MP=d('<p>• <strong>StateStoreBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for config store implementations</p><h4 id="type-parameters-36" tabindex="-1"><a class="header-anchor" href="#type-parameters-36" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; = {}</td></tr></tbody></table><h4 id="defined-in-129" tabindex="-1"><a class="header-anchor" href="#defined-in-129" aria-hidden="true">#</a> Defined in</h4>',5),IP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/StateStoreBaseClass.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},EP=e("p",null,[t("• "),e("strong",null,"ConfigStore"),t(": "),e("code",null,"Object")],-1),FP=e("p",null,"Interface definition for config store adapters",-1),DP=e("h4",{id:"defined-in-130",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-130","aria-hidden":"true"},"#"),t(" Defined in")],-1),RP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/types/ConfigStore.ts#L10",target:"_blank",rel:"noopener noreferrer"},BP=e("p",null,[t("• "),e("strong",null,"SecretStore"),t(": "),e("code",null,"Object")],-1),NP=e("p",null,"Interface definition for a secret store implementation",-1),LP=e("h4",{id:"defined-in-131",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-131","aria-hidden":"true"},"#"),t(" Defined in")],-1),OP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/types/SecretStore.ts#L9",target:"_blank",rel:"noopener noreferrer"},AP=e("p",null,[t("• "),e("strong",null,"StateStore"),t(": "),e("code",null,"Object")],-1),HP=e("p",null,"Interface definition for state store implementations",-1),jP=e("h4",{id:"defined-in-132",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-132","aria-hidden":"true"},"#"),t(" Defined in")],-1),GP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/types/StateStore.ts#L10",target:"_blank",rel:"noopener noreferrer"},qP=d('<h3 id="configdeletefunction" tabindex="-1"><a class="header-anchor" href="#configdeletefunction" aria-hidden="true">#</a> ConfigDeleteFunction</h3><p>Ƭ <strong>ConfigDeleteFunction</strong>: (<code>configName</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-32" tabindex="-1"><a class="header-anchor" href="#type-declaration-32" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>configName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>delete a config value from the config store</p><h5 id="parameters-36" tabindex="-1"><a class="header-anchor" href="#parameters-36" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>configName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-43" tabindex="-1"><a class="header-anchor" href="#returns-43" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-133" tabindex="-1"><a class="header-anchor" href="#defined-in-133" aria-hidden="true">#</a> Defined in</h4>',10),VP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/types/ConfigDeleteFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},zP=d('<hr><h3 id="configgetterfunction" tabindex="-1"><a class="header-anchor" href="#configgetterfunction" aria-hidden="true">#</a> ConfigGetterFunction</h3><p>Ƭ <strong>ConfigGetterFunction</strong>: (...<code>configNames</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="type-declaration-33" tabindex="-1"><a class="header-anchor" href="#type-declaration-33" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>...configNames</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><p>get a config value from the config store</p><h5 id="parameters-37" tabindex="-1"><a class="header-anchor" href="#parameters-37" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...configNames</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h5 id="returns-44" tabindex="-1"><a class="header-anchor" href="#returns-44" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="defined-in-134" tabindex="-1"><a class="header-anchor" href="#defined-in-134" aria-hidden="true">#</a> Defined in</h4>',11),ZP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/types/ConfigGetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},UP=d('<hr><h3 id="configsetterfunction" tabindex="-1"><a class="header-anchor" href="#configsetterfunction" aria-hidden="true">#</a> ConfigSetterFunction</h3><p>Ƭ <strong>ConfigSetterFunction</strong>: (<code>secretName</code>: <code>string</code>, <code>secretValue</code>: <code>unknown</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-34" tabindex="-1"><a class="header-anchor" href="#type-declaration-34" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>set a config value in the config store</p><h5 id="parameters-38" tabindex="-1"><a class="header-anchor" href="#parameters-38" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>secretValue</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="returns-45" tabindex="-1"><a class="header-anchor" href="#returns-45" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-135" tabindex="-1"><a class="header-anchor" href="#defined-in-135" aria-hidden="true">#</a> Defined in</h4>',11),QP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/types/ConfigSetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},KP=d('<hr><h3 id="secretdeletefunction" tabindex="-1"><a class="header-anchor" href="#secretdeletefunction" aria-hidden="true">#</a> SecretDeleteFunction</h3><p>Ƭ <strong>SecretDeleteFunction</strong>: (<code>secretName</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-35" tabindex="-1"><a class="header-anchor" href="#type-declaration-35" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>delete a secret from the secret store</p><h5 id="parameters-39" tabindex="-1"><a class="header-anchor" href="#parameters-39" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-46" tabindex="-1"><a class="header-anchor" href="#returns-46" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-136" tabindex="-1"><a class="header-anchor" href="#defined-in-136" aria-hidden="true">#</a> Defined in</h4>',11),WP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/types/SecretDeleteFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},$P=d('<hr><h3 id="secretgetterfunction" tabindex="-1"><a class="header-anchor" href="#secretgetterfunction" aria-hidden="true">#</a> SecretGetterFunction</h3><p>Ƭ <strong>SecretGetterFunction</strong>: (...<code>secretName</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;&gt;</p><h4 id="type-declaration-36" tabindex="-1"><a class="header-anchor" href="#type-declaration-36" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>...secretName</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;&gt;</p><p>get a secret from the secret store</p><h5 id="parameters-40" tabindex="-1"><a class="header-anchor" href="#parameters-40" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...secretName</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h5 id="returns-47" tabindex="-1"><a class="header-anchor" href="#returns-47" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;&gt;</p><h4 id="defined-in-137" tabindex="-1"><a class="header-anchor" href="#defined-in-137" aria-hidden="true">#</a> Defined in</h4>',11),YP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/types/SecretGetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},JP=d('<hr><h3 id="secretsetterfunction" tabindex="-1"><a class="header-anchor" href="#secretsetterfunction" aria-hidden="true">#</a> SecretSetterFunction</h3><p>Ƭ <strong>SecretSetterFunction</strong>: (<code>secretName</code>: <code>string</code>, <code>secretValue</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-37" tabindex="-1"><a class="header-anchor" href="#type-declaration-37" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>set a secret in the secret store</p><h5 id="parameters-41" tabindex="-1"><a class="header-anchor" href="#parameters-41" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>secretValue</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-48" tabindex="-1"><a class="header-anchor" href="#returns-48" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-138" tabindex="-1"><a class="header-anchor" href="#defined-in-138" aria-hidden="true">#</a> Defined in</h4>',11),XP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/types/SecretSetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},ew=d('<hr><h3 id="statedeletefunction" tabindex="-1"><a class="header-anchor" href="#statedeletefunction" aria-hidden="true">#</a> StateDeleteFunction</h3><p>Ƭ <strong>StateDeleteFunction</strong>: (<code>stateName</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-38" tabindex="-1"><a class="header-anchor" href="#type-declaration-38" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>stateName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>delete a state value from the state store</p><h5 id="parameters-42" tabindex="-1"><a class="header-anchor" href="#parameters-42" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>stateName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-49" tabindex="-1"><a class="header-anchor" href="#returns-49" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-139" tabindex="-1"><a class="header-anchor" href="#defined-in-139" aria-hidden="true">#</a> Defined in</h4>',11),tw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/types/StateDeleteFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},nw=d('<hr><h3 id="stategetterfunction" tabindex="-1"><a class="header-anchor" href="#stategetterfunction" aria-hidden="true">#</a> StateGetterFunction</h3><p>Ƭ <strong>StateGetterFunction</strong>: (...<code>stateNames</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="type-declaration-39" tabindex="-1"><a class="header-anchor" href="#type-declaration-39" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>...stateNames</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><p>get a state value from the state store</p><h5 id="parameters-43" tabindex="-1"><a class="header-anchor" href="#parameters-43" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...stateNames</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h5 id="returns-50" tabindex="-1"><a class="header-anchor" href="#returns-50" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="defined-in-140" tabindex="-1"><a class="header-anchor" href="#defined-in-140" aria-hidden="true">#</a> Defined in</h4>',11),ow={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/types/StateGetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},sw=d('<hr><h3 id="statesetterfunction" tabindex="-1"><a class="header-anchor" href="#statesetterfunction" aria-hidden="true">#</a> StateSetterFunction</h3><p>Ƭ <strong>StateSetterFunction</strong>: (<code>secretName</code>: <code>string</code>, <code>secretValue</code>: <code>unknown</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-40" tabindex="-1"><a class="header-anchor" href="#type-declaration-40" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>set a state value in the state store</p><h5 id="parameters-44" tabindex="-1"><a class="header-anchor" href="#parameters-44" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>secretValue</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="returns-51" tabindex="-1"><a class="header-anchor" href="#returns-51" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-141" tabindex="-1"><a class="header-anchor" href="#defined-in-141" aria-hidden="true">#</a> Defined in</h4>',11),lw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/types/StateSetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},dw=d('<h2 id="subscription-1" tabindex="-1"><a class="header-anchor" href="#subscription-1" aria-hidden="true">#</a> Subscription</h2><p>• <strong>SubscriptionDefinitionBuilder</strong>&lt;<code>ServiceClassType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>Subscription definition builder is a helper to create and define a subscriptions for a service. It helps to set all needed filters.</p><p>A working schema definition needs at least a subscription name, a short description and the subscription implementation.</p><h4 id="type-parameters-37" tabindex="-1"><a class="header-anchor" href="#type-parameters-37" aria-hidden="true">#</a> Type parameters</h4>',5),aw=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),iw=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),cw={style:{"text-align":"left"}},rw=e("code",null,"ServiceClass",-1),uw=e("code",null,"ServiceClass",-1),hw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),_w=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),pw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),fw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),gw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),mw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType"),t(" | "),e("code",null,"void"),t(" | "),e("code",null,"undefined")])],-1),yw=e("h4",{id:"defined-in-142",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-142","aria-hidden":"true"},"#"),t(" Defined in")],-1),bw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L30",target:"_blank",rel:"noopener noreferrer"},xw=d('<h3 id="subscription-2" tabindex="-1"><a class="header-anchor" href="#subscription-2" aria-hidden="true">#</a> Subscription</h3><p>Ƭ <strong>Subscription</strong>&lt;<code>PayloadType</code>, <code>ParameterType</code>&gt;: <code>Object</code></p><p>A subscription managed by the event bridge</p><h4 id="type-parameters-38" tabindex="-1"><a class="header-anchor" href="#type-parameters-38" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-41" tabindex="-1"><a class="header-anchor" href="#type-declaration-41" aria-hidden="true">#</a> Type declaration</h4>',6),vw=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Sw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"emitEventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the event name to be used for custom message if the subscriptions returns a result")],-1),Tw=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),kw={style:{"text-align":"left"}},Cw=e("code",null,"DefinitionEventBridgeConfig",-1),Pw=e("td",{style:{"text-align":"left"}},"config information for event bridge",-1),ww=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the event name to subscribe for")],-1),Mw=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType?")],-1),Iw={style:{"text-align":"left"}},Ew=e("code",null,"EBMessageType",-1),Fw=e("td",{style:{"text-align":"left"}},"the message type",-1),Dw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload?")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"parameter?"),t(": "),e("code",null,"ParameterType"),t(" ; "),e("code",null,"payload?"),t(": "),e("code",null,"PayloadType"),t(" }")]),e("td",{style:{"text-align":"left"}},"the message payload")],-1),Rw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload.parameter?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ParameterType")]),e("td",{style:{"text-align":"left"}},"-")],-1),Bw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload.payload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")]),e("td",{style:{"text-align":"left"}},"-")],-1),Nw=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),Lw={style:{"text-align":"left"}},Ow=e("code",null,"PrincipalId",-1),Aw=e("td",{style:{"text-align":"left"}},"the principal id",-1),Hw=e("td",{style:{"text-align":"left"}},[e("code",null,"receiver?")],-1),jw={style:{"text-align":"left"}},Gw=e("code",null,"instanceId?",-1),qw=e("code",null,"InstanceId",-1),Vw=e("code",null,"serviceName?",-1),zw=e("code",null,"string",-1),Zw=e("code",null,"serviceTarget?",-1),Uw=e("code",null,"string",-1),Qw=e("code",null,"serviceVersion?",-1),Kw=e("code",null,"string",-1),Ww=e("td",{style:{"text-align":"left"}},"the consumer address of the message",-1),$w=e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.instanceId?")],-1),Yw={style:{"text-align":"left"}},Jw=e("code",null,"InstanceId",-1),Xw=e("td",{style:{"text-align":"left"}},"-",-1),eM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),tM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),nM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),oM=e("td",{style:{"text-align":"left"}},[e("code",null,"sender?")],-1),sM={style:{"text-align":"left"}},lM=e("code",null,"instanceId?",-1),dM=e("code",null,"InstanceId",-1),aM=e("code",null,"serviceName?",-1),iM=e("code",null,"string",-1),cM=e("code",null,"serviceTarget?",-1),rM=e("code",null,"string",-1),uM=e("code",null,"serviceVersion?",-1),hM=e("code",null,"string",-1),_M=e("td",{style:{"text-align":"left"}},"the producer address of the message",-1),pM=e("td",{style:{"text-align":"left"}},[e("code",null,"sender.instanceId?")],-1),fM={style:{"text-align":"left"}},gM=e("code",null,"InstanceId",-1),mM=e("td",{style:{"text-align":"left"}},"-",-1),yM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),bM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),xM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),vM=e("td",{style:{"text-align":"left"}},[e("code",null,"subscriber")],-1),SM={style:{"text-align":"left"}},TM=e("code",null,"EBMessageAddress",-1),kM=e("td",{style:{"text-align":"left"}},"the address of the subscription (service name, version and subscription name)",-1),CM=e("h4",{id:"defined-in-143",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-143","aria-hidden":"true"},"#"),t(" Defined in")],-1),PM={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/Subscription.ts#L12",target:"_blank",rel:"noopener noreferrer"},wM=e("hr",null,null,-1),MM=e("h3",{id:"subscriptionafterguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionafterguardhook","aria-hidden":"true"},"#"),t(" SubscriptionAfterGuardHook")],-1),IM=e("strong",null,"SubscriptionAfterGuardHook",-1),EM=e("code",null,"ServiceClassType",-1),FM=e("code",null,"FunctionResultType",-1),DM=e("code",null,"FunctionPayloadOutputType",-1),RM=e("code",null,"FunctionParameterType",-1),BM=e("code",null,"this",-1),NM=e("code",null,"ServiceClassType",-1),LM=e("code",null,"context",-1),OM=e("code",null,"SubscriptionFunctionContext",-1),AM=e("code",null,"result",-1),HM=e("code",null,"Readonly",-1),jM=e("code",null,"FunctionResultType",-1),GM=e("code",null,"payload",-1),qM=e("code",null,"Readonly",-1),VM=e("code",null,"FunctionPayloadOutputType",-1),zM=e("code",null,"parameter",-1),ZM=e("code",null,"Readonly",-1),UM=e("code",null,"FunctionParameterType",-1),QM=e("code",null,"Promise",-1),KM=e("code",null,"void",-1),WM=e("h4",{id:"type-parameters-39",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-39","aria-hidden":"true"},"#"),t(" Type parameters")],-1),$M=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),YM=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),JM={style:{"text-align":"left"}},XM=e("code",null,"ServiceClass",-1),eI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),tI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadOutputType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),nI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParameterType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),oI=d('<h4 id="type-declaration-42" tabindex="-1"><a class="header-anchor" href="#type-declaration-42" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>result</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Definition of after guard hook functions. This guard is called after function successfully returns and after output validation.</p><h5 id="parameters-45" tabindex="-1"><a class="header-anchor" href="#parameters-45" aria-hidden="true">#</a> Parameters</h5>',4),sI=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),lI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),dI=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),aI={style:{"text-align":"left"}},iI=e("code",null,"SubscriptionFunctionContext",-1),cI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"result")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionResultType"),t(">")])],-1),rI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadOutputType"),t(">")])],-1),uI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParameterType"),t(">")])],-1),hI=e("h5",{id:"returns-52",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-52","aria-hidden":"true"},"#"),t(" Returns")],-1),_I=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),pI=e("h4",{id:"defined-in-144",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-144","aria-hidden":"true"},"#"),t(" Defined in")],-1),fI={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionAfterGuardHook.ts#L10",target:"_blank",rel:"noopener noreferrer"},gI=e("hr",null,null,-1),mI=e("h3",{id:"subscriptionbeforeguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionbeforeguardhook","aria-hidden":"true"},"#"),t(" SubscriptionBeforeGuardHook")],-1),yI=e("strong",null,"SubscriptionBeforeGuardHook",-1),bI=e("code",null,"ServiceClassType",-1),xI=e("code",null,"FunctionPayloadType",-1),vI=e("code",null,"FunctionParamsType",-1),SI=e("code",null,"this",-1),TI=e("code",null,"ServiceClassType",-1),kI=e("code",null,"context",-1),CI=e("code",null,"SubscriptionFunctionContext",-1),PI=e("code",null,"payload",-1),wI=e("code",null,"Readonly",-1),MI=e("code",null,"FunctionPayloadType",-1),II=e("code",null,"parameter",-1),EI=e("code",null,"Readonly",-1),FI=e("code",null,"FunctionParamsType",-1),DI=e("code",null,"Promise",-1),RI=e("code",null,"void",-1),BI=e("h4",{id:"type-parameters-40",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-40","aria-hidden":"true"},"#"),t(" Type parameters")],-1),NI=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),LI=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),OI={style:{"text-align":"left"}},AI=e("code",null,"ServiceClass",-1),HI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),jI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),GI=d('<h4 id="type-declaration-43" tabindex="-1"><a class="header-anchor" href="#type-declaration-43" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Guard is called after command function input validation and before executing the command function. The guard is usefull to separate for example auth checks from business logic. It should throw HandledError or return void.</p><h5 id="parameters-46" tabindex="-1"><a class="header-anchor" href="#parameters-46" aria-hidden="true">#</a> Parameters</h5>',4),qI=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),VI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),zI=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),ZI={style:{"text-align":"left"}},UI=e("code",null,"SubscriptionFunctionContext",-1),QI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),KI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),WI=e("h5",{id:"returns-53",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-53","aria-hidden":"true"},"#"),t(" Returns")],-1),$I=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),YI=e("h4",{id:"defined-in-145",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-145","aria-hidden":"true"},"#"),t(" Defined in")],-1),JI={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionBeforeGuardHook.ts#L11",target:"_blank",rel:"noopener noreferrer"},XI=d('<hr><h3 id="subscriptiondefinition" tabindex="-1"><a class="header-anchor" href="#subscriptiondefinition" aria-hidden="true">#</a> SubscriptionDefinition</h3><p>Ƭ <strong>SubscriptionDefinition</strong>&lt;<code>ServiceClassType</code>, <code>MetadataType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>The definition for a subscription provided by some service.</p><h4 id="type-parameters-41" tabindex="-1"><a class="header-anchor" href="#type-parameters-41" aria-hidden="true">#</a> Type parameters</h4>',5),eE=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),tE=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),nE={style:{"text-align":"left"}},oE=e("code",null,"ServiceClass",-1),sE=e("code",null,"ServiceClass",-1),lE=e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")],-1),dE={style:{"text-align":"left"}},aE=e("code",null,"SubscriptionDefinitionMetadataBase",-1),iE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),cE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),rE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),uE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),hE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),_E=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),pE=e("h4",{id:"type-declaration-44",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-44","aria-hidden":"true"},"#"),t(" Type declaration")],-1),fE=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),gE=e("td",{style:{"text-align":"left"}},[e("code",null,"call")],-1),mE={style:{"text-align":"left"}},yE=e("code",null,"SubscriptionFunction",-1),bE=e("code",null,"ServiceClassType",-1),xE=e("code",null,"MessagePayloadType",-1),vE=e("code",null,"MessageParamsType",-1),SE=e("code",null,"FunctionPayloadType",-1),TE=e("code",null,"FunctionParamsType",-1),kE=e("code",null,"FunctionResultType",-1),CE=e("td",{style:{"text-align":"left"}},"the subscription function",-1),PE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"emitEventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name to be used for custom message if the subscription functions returns value")],-1),wE=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),ME={style:{"text-align":"left"}},IE=e("code",null,"DefinitionEventBridgeConfig",-1),EE=e("td",{style:{"text-align":"left"}},"config information for event bridge",-1),FE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"filter forevent name")],-1),DE=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks")],-1),RE={style:{"text-align":"left"}},BE=e("code",null,"afterGuard?",-1),NE=e("code",null,"Record",-1),LE=e("code",null,"string",-1),OE=e("code",null,"SubscriptionAfterGuardHook",-1),AE=e("code",null,"ServiceClassType",-1),HE=e("code",null,"FunctionResultType",-1),jE=e("code",null,"FunctionPayloadType",-1),GE=e("code",null,"FunctionParamsType",-1),qE=e("code",null,"beforeGuard?",-1),VE=e("code",null,"Record",-1),zE=e("code",null,"string",-1),ZE=e("code",null,"SubscriptionBeforeGuardHook",-1),UE=e("code",null,"ServiceClassType",-1),QE=e("code",null,"FunctionPayloadType",-1),KE=e("code",null,"FunctionParamsType",-1),WE=e("code",null,"transformInput?",-1),$E=e("code",null,"transformFunction",-1),YE=e("code",null,"SubscriptionTransformInputHook",-1),JE=e("code",null,"ServiceClassType",-1),XE=e("code",null,"MessagePayloadType",-1),eF=e("code",null,"MessageParamsType",-1),tF=e("code",null,"transformInputSchema",-1),nF=e("code",null,"z.ZodType",-1),oF=e("code",null,"transformParameterSchema",-1),sF=e("code",null,"z.ZodType",-1),lF=e("code",null,"transformOutput?",-1),dF=e("code",null,"transformFunction",-1),aF=e("code",null,"SubscriptionTransformOutputHook",-1),iF=e("code",null,"ServiceClassType",-1),cF=e("code",null,"FunctionResultType",-1),rF=e("code",null,"FunctionParamsType",-1),uF=e("code",null,"any",-1),hF=e("code",null,"transformOutputSchema",-1),_F=e("code",null,"z.ZodType",-1),pF=e("td",{style:{"text-align":"left"}},"hooks of subscription",-1),fF=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.afterGuard?")],-1),gF={style:{"text-align":"left"}},mF=e("code",null,"Record",-1),yF=e("code",null,"string",-1),bF=e("code",null,"SubscriptionAfterGuardHook",-1),xF=e("code",null,"ServiceClassType",-1),vF=e("code",null,"FunctionResultType",-1),SF=e("code",null,"FunctionPayloadType",-1),TF=e("code",null,"FunctionParamsType",-1),kF=e("td",{style:{"text-align":"left"}},"-",-1),CF=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.beforeGuard?")],-1),PF={style:{"text-align":"left"}},wF=e("code",null,"Record",-1),MF=e("code",null,"string",-1),IF=e("code",null,"SubscriptionBeforeGuardHook",-1),EF=e("code",null,"ServiceClassType",-1),FF=e("code",null,"FunctionPayloadType",-1),DF=e("code",null,"FunctionParamsType",-1),RF=e("td",{style:{"text-align":"left"}},"-",-1),BF=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput?")],-1),NF={style:{"text-align":"left"}},LF=e("code",null,"transformFunction",-1),OF=e("code",null,"SubscriptionTransformInputHook",-1),AF=e("code",null,"ServiceClassType",-1),HF=e("code",null,"MessagePayloadType",-1),jF=e("code",null,"MessageParamsType",-1),GF=e("code",null,"transformInputSchema",-1),qF=e("code",null,"z.ZodType",-1),VF=e("code",null,"transformParameterSchema",-1),zF=e("code",null,"z.ZodType",-1),ZF=e("td",{style:{"text-align":"left"}},"-",-1),UF=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformFunction")],-1),QF={style:{"text-align":"left"}},KF=e("code",null,"SubscriptionTransformInputHook",-1),WF=e("code",null,"ServiceClassType",-1),$F=e("code",null,"MessagePayloadType",-1),YF=e("code",null,"MessageParamsType",-1),JF=e("td",{style:{"text-align":"left"}},"-",-1),XF=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),eD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),tD=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput?")],-1),nD={style:{"text-align":"left"}},oD=e("code",null,"transformFunction",-1),sD=e("code",null,"SubscriptionTransformOutputHook",-1),lD=e("code",null,"ServiceClassType",-1),dD=e("code",null,"FunctionResultType",-1),aD=e("code",null,"FunctionParamsType",-1),iD=e("code",null,"any",-1),cD=e("code",null,"transformOutputSchema",-1),rD=e("code",null,"z.ZodType",-1),uD=e("td",{style:{"text-align":"left"}},"-",-1),hD=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformFunction")],-1),_D={style:{"text-align":"left"}},pD=e("code",null,"SubscriptionTransformOutputHook",-1),fD=e("code",null,"ServiceClassType",-1),gD=e("code",null,"FunctionResultType",-1),mD=e("code",null,"FunctionParamsType",-1),yD=e("code",null,"any",-1),bD=e("td",{style:{"text-align":"left"}},"-",-1),xD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),vD=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType?")],-1),SD={style:{"text-align":"left"}},TD=e("code",null,"EBMessageType",-1),kD=e("td",{style:{"text-align":"left"}},"filter for message type",-1),CD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"metadata")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")]),e("td",{style:{"text-align":"left"}},"the metadata of the subscription")],-1),PD=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),wD={style:{"text-align":"left"}},MD=e("code",null,"PrincipalId",-1),ID=e("td",{style:{"text-align":"left"}},"filter for principal id",-1),ED=e("td",{style:{"text-align":"left"}},[e("code",null,"receiver?")],-1),FD={style:{"text-align":"left"}},DD=e("code",null,"instanceId?",-1),RD=e("code",null,"InstanceId",-1),BD=e("code",null,"serviceName?",-1),ND=e("code",null,"string",-1),LD=e("code",null,"serviceTarget?",-1),OD=e("code",null,"string",-1),AD=e("code",null,"serviceVersion?",-1),HD=e("code",null,"string",-1),jD=e("td",{style:{"text-align":"left"}},"filter for messages consumed by given receiver",-1),GD=e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.instanceId?")],-1),qD={style:{"text-align":"left"}},VD=e("code",null,"InstanceId",-1),zD=e("td",{style:{"text-align":"left"}},"-",-1),ZD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),UD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),QD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),KD=e("td",{style:{"text-align":"left"}},[e("code",null,"sender?")],-1),WD={style:{"text-align":"left"}},$D=e("code",null,"instanceId?",-1),YD=e("code",null,"InstanceId",-1),JD=e("code",null,"serviceName?",-1),XD=e("code",null,"string",-1),eR=e("code",null,"serviceTarget?",-1),tR=e("code",null,"string",-1),nR=e("code",null,"serviceVersion?",-1),oR=e("code",null,"string",-1),sR=e("td",{style:{"text-align":"left"}},"filter for messages produced by given sender",-1),lR=e("td",{style:{"text-align":"left"}},[e("code",null,"sender.instanceId?")],-1),dR={style:{"text-align":"left"}},aR=e("code",null,"InstanceId",-1),iR=e("td",{style:{"text-align":"left"}},"-",-1),cR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),rR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),uR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),hR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionDescription")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the description of the subscription")],-1),_R=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the subscription")],-1),pR=e("h4",{id:"defined-in-146",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-146","aria-hidden":"true"},"#"),t(" Defined in")],-1),fR={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionDefinition.ts#L20",target:"_blank",rel:"noopener noreferrer"},gR=e("hr",null,null,-1),mR=e("h3",{id:"subscriptionfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionfunction","aria-hidden":"true"},"#"),t(" SubscriptionFunction")],-1),yR=e("strong",null,"SubscriptionFunction",-1),bR=e("code",null,"ServiceClassType",-1),xR=e("code",null,"MessagePayloadType",-1),vR=e("code",null,"MessageParamsType",-1),SR=e("code",null,"FunctionPayloadType",-1),TR=e("code",null,"FunctionParamsType",-1),kR=e("code",null,"FunctionResultType",-1),CR=e("code",null,"this",-1),PR=e("code",null,"ServiceClassType",-1),wR=e("code",null,"context",-1),MR=e("code",null,"SubscriptionFunctionContext",-1),IR=e("code",null,"payload",-1),ER=e("code",null,"Readonly",-1),FR=e("code",null,"FunctionPayloadType",-1),DR=e("code",null,"parameter",-1),RR=e("code",null,"Readonly",-1),BR=e("code",null,"FunctionParamsType",-1),NR=e("code",null,"Promise",-1),LR=e("code",null,"FunctionResultType",-1),OR=e("h4",{id:"type-parameters-42",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-42","aria-hidden":"true"},"#"),t(" Type parameters")],-1),AR=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),HR=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),jR={style:{"text-align":"left"}},GR=e("code",null,"ServiceClass",-1),qR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),VR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),zR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),ZR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),UR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),QR=d('<h4 id="type-declaration-45" tabindex="-1"><a class="header-anchor" href="#type-declaration-45" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>FunctionResultType</code>&gt;</p><p>CommandFunction is a function which will be triggered when a matching event bridge message is received by the service</p><h5 id="parameters-47" tabindex="-1"><a class="header-anchor" href="#parameters-47" aria-hidden="true">#</a> Parameters</h5>',4),KR=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),WR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),$R=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),YR={style:{"text-align":"left"}},JR=e("code",null,"SubscriptionFunctionContext",-1),XR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),eB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),tB=e("h5",{id:"returns-54",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-54","aria-hidden":"true"},"#"),t(" Returns")],-1),nB=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"FunctionResultType"),t(">")],-1),oB=e("h4",{id:"defined-in-147",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-147","aria-hidden":"true"},"#"),t(" Defined in")],-1),sB={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionFunction.ts#L8",target:"_blank",rel:"noopener noreferrer"},lB=e("hr",null,null,-1),dB=e("h3",{id:"subscriptionfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionfunctioncontext","aria-hidden":"true"},"#"),t(" SubscriptionFunctionContext")],-1),aB=e("strong",null,"SubscriptionFunctionContext",-1),iB=e("code",null,"Prettify",-1),cB=e("code",null,"ContextBase",-1),rB=e("code",null,"SubscriptionFunctionContextEnhancements",-1),uB=e("p",null,"The subscription function context which will be passed into subscription function.",-1),hB=e("h4",{id:"defined-in-148",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-148","aria-hidden":"true"},"#"),t(" Defined in")],-1),_B={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionFunctionContext.ts#L47",target:"_blank",rel:"noopener noreferrer"},pB=d('<hr><h3 id="subscriptionfunctioncontextenhancements" tabindex="-1"><a class="header-anchor" href="#subscriptionfunctioncontextenhancements" aria-hidden="true">#</a> SubscriptionFunctionContextEnhancements</h3><p>Ƭ <strong>SubscriptionFunctionContextEnhancements</strong>: <code>Object</code></p><p>It provides the original command message. Also, the methods:</p><ul><li><code>emit</code> which allows to emit custom events to the event bridge</li><li><code>invoke</code> which allows to call other commands</li></ul><h4 id="type-declaration-46" tabindex="-1"><a class="header-anchor" href="#type-declaration-46" aria-hidden="true">#</a> Type declaration</h4>',6),fB=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),gB=e("td",{style:{"text-align":"left"}},[e("code",null,"emit")],-1),mB={style:{"text-align":"left"}},yB=e("code",null,"EmitCustomMessageFunction",-1),bB=e("td",{style:{"text-align":"left"}},"emit a custom message",-1),xB=e("td",{style:{"text-align":"left"}},[e("code",null,"invoke")],-1),vB={style:{"text-align":"left"}},SB=e("code",null,"InvokeFunction",-1),TB=e("td",{style:{"text-align":"left"}},[t("Invokes a command and returns the result. It is recommended to validate the result against a schema which only contains the data you actually need. "),e("strong",null,[e("code",null,"Example")]),t(),e("code",null,"typescript const address: EBMessageAddress = { serviceName: 'name-of-service-to-invoke', serviceVersion: '1', serviceTarget: 'command-name-to-invoke', } const inputPayload = { my: 'input' } const inputParameter = { search: 'for_me' } const result = await invoke<MyResultType>(address, inputPayload inputParameter ) ")],-1),kB=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),CB={style:{"text-align":"left"}},PB=e("code",null,"Readonly",-1),wB=e("code",null,"EBMessage",-1),MB=e("td",{style:{"text-align":"left"}},"the original message",-1),IB=e("h4",{id:"defined-in-149",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-149","aria-hidden":"true"},"#"),t(" Defined in")],-1),EB={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionFunctionContext.ts#L16",target:"_blank",rel:"noopener noreferrer"},FB=e("hr",null,null,-1),DB=e("h3",{id:"subscriptiontransformfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiontransformfunctioncontext","aria-hidden":"true"},"#"),t(" SubscriptionTransformFunctionContext")],-1),RB=e("strong",null,"SubscriptionTransformFunctionContext",-1),BB=e("code",null,"Prettify",-1),NB=e("code",null,"ContextBase",-1),LB=e("code",null,"message",-1),OB=e("code",null,"Readonly",-1),AB=e("code",null,"EBMessage",-1),HB=e("h4",{id:"defined-in-150",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-150","aria-hidden":"true"},"#"),t(" Defined in")],-1),jB={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionTransformFunctionContext.ts#L8",target:"_blank",rel:"noopener noreferrer"},GB=e("hr",null,null,-1),qB=e("h3",{id:"subscriptiontransforminputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiontransforminputhook","aria-hidden":"true"},"#"),t(" SubscriptionTransformInputHook")],-1),VB=e("strong",null,"SubscriptionTransformInputHook",-1),zB=e("code",null,"ServiceClassType",-1),ZB=e("code",null,"PayloadOutput",-1),UB=e("code",null,"ParamsOutput",-1),QB=e("code",null,"PayloadInput",-1),KB=e("code",null,"ParamsInput",-1),WB=e("code",null,"this",-1),$B=e("code",null,"ServiceClassType",-1),YB=e("code",null,"context",-1),JB=e("code",null,"SubscriptionTransformFunctionContext",-1),XB=e("code",null,"payload",-1),eN=e("code",null,"Readonly",-1),tN=e("code",null,"PayloadInput",-1),nN=e("code",null,"parameter",-1),oN=e("code",null,"Readonly",-1),sN=e("code",null,"ParamsInput",-1),lN=e("code",null,"Promise",-1),dN=e("code",null,"parameter",-1),aN=e("code",null,"Readonly",-1),iN=e("code",null,"ParamsOutput",-1),cN=e("code",null,"payload",-1),rN=e("code",null,"Readonly",-1),uN=e("code",null,"PayloadOutput",-1),hN=d('<h4 id="type-parameters-43" tabindex="-1"><a class="header-anchor" href="#type-parameters-43" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>PayloadOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>PayloadInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-47" tabindex="-1"><a class="header-anchor" href="#type-declaration-47" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><h5 id="parameters-48" tabindex="-1"><a class="header-anchor" href="#parameters-48" aria-hidden="true">#</a> Parameters</h5>',5),_N=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),pN=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),fN=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),gN={style:{"text-align":"left"}},mN=e("code",null,"SubscriptionTransformFunctionContext",-1),yN=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"PayloadInput"),t(">")])],-1),bN=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"ParamsInput"),t(">")])],-1),xN=d('<h5 id="returns-55" tabindex="-1"><a class="header-anchor" href="#returns-55" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><h4 id="defined-in-151" tabindex="-1"><a class="header-anchor" href="#defined-in-151" aria-hidden="true">#</a> Defined in</h4>',3),vN={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionTransformInputHook.ts#L6",target:"_blank",rel:"noopener noreferrer"},SN=e("hr",null,null,-1),TN=e("h3",{id:"subscriptiontransformoutputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiontransformoutputhook","aria-hidden":"true"},"#"),t(" SubscriptionTransformOutputHook")],-1),kN=e("strong",null,"SubscriptionTransformOutputHook",-1),CN=e("code",null,"ServiceClassType",-1),PN=e("code",null,"MessageResultType",-1),wN=e("code",null,"MessageParamsType",-1),MN=e("code",null,"ResponseOutput",-1),IN=e("code",null,"this",-1),EN=e("code",null,"ServiceClassType",-1),FN=e("code",null,"context",-1),DN=e("code",null,"SubscriptionTransformFunctionContext",-1),RN=e("code",null,"payload",-1),BN=e("code",null,"Readonly",-1),NN=e("code",null,"MessageResultType",-1),LN=e("code",null,"parameter",-1),ON=e("code",null,"Readonly",-1),AN=e("code",null,"MessageParamsType",-1),HN=e("code",null,"Promise",-1),jN=e("code",null,"ResponseOutput",-1),GN=d('<h4 id="type-parameters-44" tabindex="-1"><a class="header-anchor" href="#type-parameters-44" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>MessageResultType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ResponseOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-48" tabindex="-1"><a class="header-anchor" href="#type-declaration-48" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>ResponseOutput</code>&gt;</p><p>This transform hook is executed after function output validation and AfterGuardHooks.</p><h5 id="parameters-49" tabindex="-1"><a class="header-anchor" href="#parameters-49" aria-hidden="true">#</a> Parameters</h5>',6),qN=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),VN=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),zN=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),ZN={style:{"text-align":"left"}},UN=e("code",null,"SubscriptionTransformFunctionContext",-1),QN=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageResultType"),t(">")])],-1),KN=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageParamsType"),t(">")])],-1),WN=e("h5",{id:"returns-56",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-56","aria-hidden":"true"},"#"),t(" Returns")],-1),$N=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"ResponseOutput"),t(">")],-1),YN=e("h4",{id:"defined-in-152",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-152","aria-hidden":"true"},"#"),t(" Defined in")],-1),JN={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionTransformOutputHook.ts#L8",target:"_blank",rel:"noopener noreferrer"},XN=d('<h2 id="unit-test-helper-1" tabindex="-1"><a class="header-anchor" href="#unit-test-helper-1" aria-hidden="true">#</a> Unit test helper</h2><h3 id="getcommandcontextmock" tabindex="-1"><a class="header-anchor" href="#getcommandcontextmock" aria-hidden="true">#</a> getCommandContextMock</h3><p>▸ <strong>getCommandContextMock</strong>&lt;<code>MessagePayloadType</code>, <code>MessageParamsType</code>&gt;(<code>payload</code>, <code>parameter</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for command function context</p><h4 id="type-parameters-45" tabindex="-1"><a class="header-anchor" href="#type-parameters-45" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-50" tabindex="-1"><a class="header-anchor" href="#parameters-50" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>payload</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>parameter</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-57" tabindex="-1"><a class="header-anchor" href="#returns-57" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p>',10),eL=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),tL=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),nL={style:{"text-align":"left"}},oL=e("code",null,"configs",-1),sL=e("code",null,"getConfig",-1),lL=e("code",null,"ConfigGetterFunction",-1),dL=e("code",null,"removeConfig",-1),aL=e("code",null,"ConfigDeleteFunction",-1),iL=e("code",null,"setConfig",-1),cL=e("code",null,"ConfigSetterFunction",-1),rL=e("code",null,"emit",-1),uL=e("code",null,"EmitCustomMessageFunction",-1),hL=e("code",null,"invoke",-1),_L=e("code",null,"InvokeFunction",-1),pL=e("code",null,"logger",-1),fL=e("code",null,"Logger",-1),gL=e("code",null,"message",-1),mL=e("code",null,"Readonly",-1),yL=e("code",null,"secrets",-1),bL=e("code",null,"getSecret",-1),xL=e("code",null,"SecretGetterFunction",-1),vL=e("code",null,"removeSecret",-1),SL=e("code",null,"SecretDeleteFunction",-1),TL=e("code",null,"setSecret",-1),kL=e("code",null,"SecretSetterFunction",-1),CL=e("code",null,"startActiveSpan",-1),PL=e("code",null,"name",-1),wL=e("code",null,"string",-1),ML=e("code",null,"opts",-1),IL=e("code",null,"SpanOptions",-1),EL=e("code",null,"context",-1),FL=e("code",null,"undefined",-1),DL=e("code",null,"Context",-1),RL=e("code",null,"fn",-1),BL=e("code",null,"span",-1),NL=e("code",null,"Span",-1),LL=e("code",null,"Promise",-1),OL=e("code",null,"F",-1),AL=e("code",null,"Promise",-1),HL=e("code",null,"F",-1),jL=e("code",null,"states",-1),GL=e("code",null,"getState",-1),qL=e("code",null,"StateGetterFunction",-1),VL=e("code",null,"removeState",-1),zL=e("code",null,"StateDeleteFunction",-1),ZL=e("code",null,"setState",-1),UL=e("code",null,"StateSetterFunction",-1),QL=e("code",null,"wrapInSpan",-1),KL=e("code",null,"name",-1),WL=e("code",null,"string",-1),$L=e("code",null,"opts",-1),YL=e("code",null,"SpanOptions",-1),JL=e("code",null,"fn",-1),XL=e("code",null,"span",-1),eO=e("code",null,"Span",-1),tO=e("code",null,"Promise",-1),nO=e("code",null,"F",-1),oO=e("code",null,"context?",-1),sO=e("code",null,"Context",-1),lO=e("code",null,"Promise",-1),dO=e("code",null,"F",-1),aO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs")],-1),iO={style:{"text-align":"left"}},cO=e("code",null,"getConfig",-1),rO=e("code",null,"ConfigGetterFunction",-1),uO=e("code",null,"removeConfig",-1),hO=e("code",null,"ConfigDeleteFunction",-1),_O=e("code",null,"setConfig",-1),pO=e("code",null,"ConfigSetterFunction",-1),fO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.getConfig")],-1),gO={style:{"text-align":"left"}},mO=e("code",null,"ConfigGetterFunction",-1),yO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.removeConfig")],-1),bO={style:{"text-align":"left"}},xO=e("code",null,"ConfigDeleteFunction",-1),vO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.setConfig")],-1),SO={style:{"text-align":"left"}},TO=e("code",null,"ConfigSetterFunction",-1),kO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.emit")],-1),CO={style:{"text-align":"left"}},PO=e("code",null,"EmitCustomMessageFunction",-1),wO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.invoke")],-1),MO={style:{"text-align":"left"}},IO=e("code",null,"InvokeFunction",-1),EO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.logger")],-1),FO={style:{"text-align":"left"}},DO=e("code",null,"Logger",-1),RO=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.message")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<{ messageType: EBMessageType.Command; correlationId: string; receiver: EBMessageAddress; payload: { parameter: MessageParamsType; payload: MessagePayloadType; }; ... 8 more ...; sender: { ...; }; }>")])],-1),BO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets")],-1),NO={style:{"text-align":"left"}},LO=e("code",null,"getSecret",-1),OO=e("code",null,"SecretGetterFunction",-1),AO=e("code",null,"removeSecret",-1),HO=e("code",null,"SecretDeleteFunction",-1),jO=e("code",null,"setSecret",-1),GO=e("code",null,"SecretSetterFunction",-1),qO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.getSecret")],-1),VO={style:{"text-align":"left"}},zO=e("code",null,"SecretGetterFunction",-1),ZO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.removeSecret")],-1),UO={style:{"text-align":"left"}},QO=e("code",null,"SecretDeleteFunction",-1),KO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.setSecret")],-1),WO={style:{"text-align":"left"}},$O=e("code",null,"SecretSetterFunction",-1),YO=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"undefined"),t(" | "),e("code",null,"Context"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),JO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states")],-1),XO={style:{"text-align":"left"}},eA=e("code",null,"getState",-1),tA=e("code",null,"StateGetterFunction",-1),nA=e("code",null,"removeState",-1),oA=e("code",null,"StateDeleteFunction",-1),sA=e("code",null,"setState",-1),lA=e("code",null,"StateSetterFunction",-1),dA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.getState")],-1),aA={style:{"text-align":"left"}},iA=e("code",null,"StateGetterFunction",-1),cA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.removeState")],-1),rA={style:{"text-align":"left"}},uA=e("code",null,"StateDeleteFunction",-1),hA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.setState")],-1),_A={style:{"text-align":"left"}},pA=e("code",null,"StateSetterFunction",-1),fA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),gA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"emit"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"invoke"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),mA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.emit")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),yA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),bA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),xA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),vA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.invoke")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),SA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),TA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),kA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),CA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),PA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),wA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),MA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),IA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),EA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),FA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),DA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),RA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),BA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),NA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),LA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),OA=e("h4",{id:"defined-in-153",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-153","aria-hidden":"true"},"#"),t(" Defined in")],-1),AA={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getCommandContext.mock.ts#L12",target:"_blank",rel:"noopener noreferrer"},HA=e("hr",null,null,-1),jA=e("h3",{id:"getcommanderrormessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommanderrormessagemock","aria-hidden":"true"},"#"),t(" getCommandErrorMessageMock")],-1),GA=e("strong",null,"getCommandErrorMessageMock",-1),qA=e("code",null,"error?",-1),VA=e("code",null,"input?",-1),zA=e("code",null,"commandMessage?",-1),ZA=e("code",null,"Readonly",-1),UA=e("code",null,"contentEncoding",-1),QA=e("code",null,'"utf-8"',-1),KA=e("code",null,"contentType",-1),WA=e("code",null,'"application/json"',-1),$A=e("code",null,"correlationId",-1),YA=e("code",null,"string",-1),JA=e("code",null,"eventName?",-1),XA=e("code",null,"string",-1),eH=e("code",null,"id",-1),tH=e("code",null,"string",-1),nH=e("code",null,"isHandledError",-1),oH=e("code",null,"boolean",-1),sH=e("code",null,"messageType",-1),lH=e("code",null,"CommandErrorResponse",-1),dH=e("code",null,"otp?",-1),aH=e("code",null,"string",-1),iH=e("code",null,"payload",-1),cH=e("code",null,"data?",-1),rH=e("code",null,"unknown",-1),uH=e("code",null,"message",-1),hH=e("code",null,"string",-1),_H=e("code",null,"status",-1),pH=e("code",null,"StatusCode",-1),fH=e("code",null,"principalId?",-1),gH=e("code",null,"string",-1),mH=e("code",null,"receiver",-1),yH=e("code",null,"sender",-1),bH=e("code",null,"timestamp",-1),xH=e("code",null,"number",-1),vH=e("code",null,"traceId?",-1),SH=e("code",null,"string",-1),TH=e("p",null,"A function that returns a mocked command error response message",-1),kH=e("h4",{id:"parameters-51",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-51","aria-hidden":"true"},"#"),t(" Parameters")],-1),CH=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),PH=e("td",{style:{"text-align":"left"}},[e("code",null,"error?")],-1),wH={style:{"text-align":"left"}},MH=e("code",null,"HandledError",-1),IH=e("code",null,"UnhandledError",-1),EH=e("td",{style:{"text-align":"left"}},"-",-1),FH=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),DH={style:{"text-align":"left"}},RH=e("code",null,"Partial",-1),BH=e("code",null,"contentEncoding",-1),NH=e("code",null,'"utf-8"',-1),LH=e("code",null,"contentType",-1),OH=e("code",null,'"application/json"',-1),AH=e("code",null,"correlationId",-1),HH=e("code",null,"string",-1),jH=e("code",null,"eventName?",-1),GH=e("code",null,"string",-1),qH=e("code",null,"id",-1),VH=e("code",null,"string",-1),zH=e("code",null,"isHandledError",-1),ZH=e("code",null,"boolean",-1),UH=e("code",null,"messageType",-1),QH=e("code",null,"CommandErrorResponse",-1),KH=e("code",null,"otp?",-1),WH=e("code",null,"string",-1),$H=e("code",null,"payload",-1),YH=e("code",null,"data?",-1),JH=e("code",null,"unknown",-1),XH=e("code",null,"message",-1),ej=e("code",null,"string",-1),tj=e("code",null,"status",-1),nj=e("code",null,"StatusCode",-1),oj=e("code",null,"principalId?",-1),sj=e("code",null,"string",-1),lj=e("code",null,"receiver",-1),dj=e("code",null,"sender",-1),aj=e("code",null,"timestamp",-1),ij=e("code",null,"number",-1),cj=e("code",null,"traceId?",-1),rj=e("code",null,"string",-1),uj=e("td",{style:{"text-align":"left"}},"-",-1),hj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),_j=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content encoding of message payload")],-1),pj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.contentType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content type of message payload")],-1),fj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.correlationId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"correlation id to know which command response referrs to which command")],-1),gj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name for this message")],-1),mj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.id")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"global unique id of message")],-1),yj=e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.messageType")],-1),bj={style:{"text-align":"left"}},xj=e("code",null,"Command",-1),vj=e("td",{style:{"text-align":"left"}},"-",-1),Sj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.otp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"stringified Opentelemetry parent trace id")],-1),Tj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),kj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload.parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),Cj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload.payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),Pj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.principalId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"principal id")],-1),wj=e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.receiver")],-1),Mj={style:{"text-align":"left"}},Ij=e("code",null,"EBMessageAddress",-1),Ej=e("td",{style:{"text-align":"left"}},"-",-1),Fj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.sender")]),e("td",{style:{"text-align":"left"}},"{ serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; }"),e("td",{style:{"text-align":"left"}},"-")],-1),Dj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"timestamp of message creation time")],-1),Rj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.traceId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"trace id of message")],-1),Bj=e("h4",{id:"returns-58",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-58","aria-hidden":"true"},"#"),t(" Returns")],-1),Nj=e("code",null,"Readonly",-1),Lj=e("code",null,"contentEncoding",-1),Oj=e("code",null,'"utf-8"',-1),Aj=e("code",null,"contentType",-1),Hj=e("code",null,'"application/json"',-1),jj=e("code",null,"correlationId",-1),Gj=e("code",null,"string",-1),qj=e("code",null,"eventName?",-1),Vj=e("code",null,"string",-1),zj=e("code",null,"id",-1),Zj=e("code",null,"string",-1),Uj=e("code",null,"isHandledError",-1),Qj=e("code",null,"boolean",-1),Kj=e("code",null,"messageType",-1),Wj=e("code",null,"CommandErrorResponse",-1),$j=e("code",null,"otp?",-1),Yj=e("code",null,"string",-1),Jj=e("code",null,"payload",-1),Xj=e("code",null,"data?",-1),eG=e("code",null,"unknown",-1),tG=e("code",null,"message",-1),nG=e("code",null,"string",-1),oG=e("code",null,"status",-1),sG=e("code",null,"StatusCode",-1),lG=e("code",null,"principalId?",-1),dG=e("code",null,"string",-1),aG=e("code",null,"receiver",-1),iG=e("code",null,"sender",-1),cG=e("code",null,"timestamp",-1),rG=e("code",null,"number",-1),uG=e("code",null,"traceId?",-1),hG=e("code",null,"string",-1),_G=e("h4",{id:"defined-in-154",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-154","aria-hidden":"true"},"#"),t(" Defined in")],-1),pG={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/messages/getCommandErrorMessage.mock.ts#L16",target:"_blank",rel:"noopener noreferrer"},fG=e("hr",null,null,-1),gG=e("h3",{id:"getcommandmessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommandmessagemock","aria-hidden":"true"},"#"),t(" getCommandMessageMock")],-1),mG=e("strong",null,"getCommandMessageMock",-1),yG=e("code",null,"Payload",-1),bG=e("code",null,"Parameter",-1),xG=e("code",null,"input?",-1),vG=e("code",null,"Readonly",-1),SG=e("code",null,"contentEncoding",-1),TG=e("code",null,"string",-1),kG=e("code",null,"contentType",-1),CG=e("code",null,"string",-1),PG=e("code",null,"correlationId",-1),wG=e("code",null,"string",-1),MG=e("code",null,"eventName?",-1),IG=e("code",null,"string",-1),EG=e("code",null,"id",-1),FG=e("code",null,"string",-1),DG=e("code",null,"messageType",-1),RG=e("code",null,"Command",-1),BG=e("code",null,"otp?",-1),NG=e("code",null,"string",-1),LG=e("code",null,"payload",-1),OG=e("code",null,"parameter",-1),AG=e("code",null,"Parameter",-1),HG=e("code",null,"payload",-1),jG=e("code",null,"Payload",-1),GG=e("code",null,"principalId?",-1),qG=e("code",null,"string",-1),VG=e("code",null,"receiver",-1),zG=e("code",null,"EBMessageAddress",-1),ZG=e("code",null,"sender",-1),UG=e("code",null,"timestamp",-1),QG=e("code",null,"number",-1),KG=e("code",null,"traceId?",-1),WG=e("code",null,"string",-1),$G=d('<p>A function that returns a mocked command message.</p><h4 id="type-parameters-46" tabindex="-1"><a class="header-anchor" href="#type-parameters-46" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>Parameter</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-52" tabindex="-1"><a class="header-anchor" href="#parameters-52" aria-hidden="true">#</a> Parameters</h4>',4),YG=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),JG=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),XG={style:{"text-align":"left"}},eq=e("code",null,"Partial",-1),tq=e("code",null,"contentEncoding",-1),nq=e("code",null,"string",-1),oq=e("code",null,"contentType",-1),sq=e("code",null,"string",-1),lq=e("code",null,"correlationId",-1),dq=e("code",null,"string",-1),aq=e("code",null,"eventName?",-1),iq=e("code",null,"string",-1),cq=e("code",null,"id",-1),rq=e("code",null,"string",-1),uq=e("code",null,"messageType",-1),hq=e("code",null,"Command",-1),_q=e("code",null,"otp?",-1),pq=e("code",null,"string",-1),fq=e("code",null,"payload",-1),gq=e("code",null,"parameter",-1),mq=e("code",null,"Parameter",-1),yq=e("code",null,"payload",-1),bq=e("code",null,"Payload",-1),xq=e("code",null,"principalId?",-1),vq=e("code",null,"string",-1),Sq=e("code",null,"receiver",-1),Tq=e("code",null,"EBMessageAddress",-1),kq=e("code",null,"sender",-1),Cq=e("code",null,"timestamp",-1),Pq=e("code",null,"number",-1),wq=e("code",null,"traceId?",-1),Mq=e("code",null,"string",-1),Iq=e("code",null,"payload?",-1),Eq=e("code",null,"parameter?",-1),Fq=e("code",null,"Parameter",-1),Dq=e("code",null,"payload?",-1),Rq=e("code",null,"Payload",-1),Bq=e("h4",{id:"returns-59",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-59","aria-hidden":"true"},"#"),t(" Returns")],-1),Nq=e("code",null,"Readonly",-1),Lq=e("code",null,"contentEncoding",-1),Oq=e("code",null,"string",-1),Aq=e("code",null,"contentType",-1),Hq=e("code",null,"string",-1),jq=e("code",null,"correlationId",-1),Gq=e("code",null,"string",-1),qq=e("code",null,"eventName?",-1),Vq=e("code",null,"string",-1),zq=e("code",null,"id",-1),Zq=e("code",null,"string",-1),Uq=e("code",null,"messageType",-1),Qq=e("code",null,"Command",-1),Kq=e("code",null,"otp?",-1),Wq=e("code",null,"string",-1),$q=e("code",null,"payload",-1),Yq=e("code",null,"parameter",-1),Jq=e("code",null,"Parameter",-1),Xq=e("code",null,"payload",-1),eV=e("code",null,"Payload",-1),tV=e("code",null,"principalId?",-1),nV=e("code",null,"string",-1),oV=e("code",null,"receiver",-1),sV=e("code",null,"EBMessageAddress",-1),lV=e("code",null,"sender",-1),dV=e("code",null,"timestamp",-1),aV=e("code",null,"number",-1),iV=e("code",null,"traceId?",-1),cV=e("code",null,"string",-1),rV=e("h4",{id:"defined-in-155",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-155","aria-hidden":"true"},"#"),t(" Defined in")],-1),uV={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/messages/getCommandMessage.mock.ts#L15",target:"_blank",rel:"noopener noreferrer"},hV=e("hr",null,null,-1),_V=e("h3",{id:"getcommandsuccessmessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommandsuccessmessagemock","aria-hidden":"true"},"#"),t(" getCommandSuccessMessageMock")],-1),pV=e("strong",null,"getCommandSuccessMessageMock",-1),fV=e("code",null,"PayloadType",-1),gV=e("code",null,"payload",-1),mV=e("code",null,"input?",-1),yV=e("code",null,"commandMessage?",-1),bV=e("code",null,"Readonly",-1),xV=e("code",null,"contentEncoding",-1),vV=e("code",null,"string",-1),SV=e("code",null,"contentType",-1),TV=e("code",null,"string",-1),kV=e("code",null,"correlationId",-1),CV=e("code",null,"string",-1),PV=e("code",null,"eventName?",-1),wV=e("code",null,"string",-1),MV=e("code",null,"id",-1),IV=e("code",null,"string",-1),EV=e("code",null,"messageType",-1),FV=e("code",null,"CommandSuccessResponse",-1),DV=e("code",null,"otp?",-1),RV=e("code",null,"string",-1),BV=e("code",null,"payload",-1),NV=e("code",null,"PayloadType",-1),LV=e("code",null,"principalId?",-1),OV=e("code",null,"string",-1),AV=e("code",null,"receiver",-1),HV=e("code",null,"sender",-1),jV=e("code",null,"timestamp",-1),GV=e("code",null,"number",-1),qV=e("code",null,"traceId?",-1),VV=e("code",null,"string",-1),zV=d('<p>A function that returns a mocked command success response message.</p><h4 id="type-parameters-47" tabindex="-1"><a class="header-anchor" href="#type-parameters-47" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td></tr></tbody></table><h4 id="parameters-53" tabindex="-1"><a class="header-anchor" href="#parameters-53" aria-hidden="true">#</a> Parameters</h4>',4),ZV=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),UV=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")]),e("td",{style:{"text-align":"left"}},"-")],-1),QV=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),KV={style:{"text-align":"left"}},WV=e("code",null,"Partial",-1),$V=e("code",null,"contentEncoding",-1),YV=e("code",null,"string",-1),JV=e("code",null,"contentType",-1),XV=e("code",null,"string",-1),ez=e("code",null,"correlationId",-1),tz=e("code",null,"string",-1),nz=e("code",null,"eventName?",-1),oz=e("code",null,"string",-1),sz=e("code",null,"id",-1),lz=e("code",null,"string",-1),dz=e("code",null,"messageType",-1),az=e("code",null,"CommandSuccessResponse",-1),iz=e("code",null,"otp?",-1),cz=e("code",null,"string",-1),rz=e("code",null,"payload",-1),uz=e("code",null,"PayloadType",-1),hz=e("code",null,"principalId?",-1),_z=e("code",null,"string",-1),pz=e("code",null,"receiver",-1),fz=e("code",null,"sender",-1),gz=e("code",null,"timestamp",-1),mz=e("code",null,"number",-1),yz=e("code",null,"traceId?",-1),bz=e("code",null,"string",-1),xz=e("td",{style:{"text-align":"left"}},"-",-1),vz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),Sz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content encoding of message payload")],-1),Tz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.contentType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content type of message payload")],-1),kz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.correlationId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"correlation id to know which command response referrs to which command")],-1),Cz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name for this message")],-1),Pz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.id")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"global unique id of message")],-1),wz=e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.messageType")],-1),Mz={style:{"text-align":"left"}},Iz=e("code",null,"Command",-1),Ez=e("td",{style:{"text-align":"left"}},"-",-1),Fz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.otp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"stringified Opentelemetry parent trace id")],-1),Dz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),Rz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload.parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),Bz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload.payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),Nz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.principalId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"principal id")],-1),Lz=e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.receiver")],-1),Oz={style:{"text-align":"left"}},Az=e("code",null,"EBMessageAddress",-1),Hz=e("td",{style:{"text-align":"left"}},"-",-1),jz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.sender")]),e("td",{style:{"text-align":"left"}},"{ serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; }"),e("td",{style:{"text-align":"left"}},"-")],-1),Gz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"timestamp of message creation time")],-1),qz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.traceId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"trace id of message")],-1),Vz=e("h4",{id:"returns-60",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-60","aria-hidden":"true"},"#"),t(" Returns")],-1),zz=e("code",null,"Readonly",-1),Zz=e("code",null,"contentEncoding",-1),Uz=e("code",null,"string",-1),Qz=e("code",null,"contentType",-1),Kz=e("code",null,"string",-1),Wz=e("code",null,"correlationId",-1),$z=e("code",null,"string",-1),Yz=e("code",null,"eventName?",-1),Jz=e("code",null,"string",-1),Xz=e("code",null,"id",-1),eZ=e("code",null,"string",-1),tZ=e("code",null,"messageType",-1),nZ=e("code",null,"CommandSuccessResponse",-1),oZ=e("code",null,"otp?",-1),sZ=e("code",null,"string",-1),lZ=e("code",null,"payload",-1),dZ=e("code",null,"PayloadType",-1),aZ=e("code",null,"principalId?",-1),iZ=e("code",null,"string",-1),cZ=e("code",null,"receiver",-1),rZ=e("code",null,"sender",-1),uZ=e("code",null,"timestamp",-1),hZ=e("code",null,"number",-1),_Z=e("code",null,"traceId?",-1),pZ=e("code",null,"string",-1),fZ=e("h4",{id:"defined-in-156",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-156","aria-hidden":"true"},"#"),t(" Defined in")],-1),gZ={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/messages/getCommandSuccessMessage.mock.ts#L9",target:"_blank",rel:"noopener noreferrer"},mZ=d('<hr><h3 id="getcommandtransformcontextmock" tabindex="-1"><a class="header-anchor" href="#getcommandtransformcontextmock" aria-hidden="true">#</a> getCommandTransformContextMock</h3><p>▸ <strong>getCommandTransformContextMock</strong>&lt;<code>MessagePayloadType</code>, <code>MessageParamsType</code>&gt;(<code>payload</code>, <code>parameter</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for command transform function context</p><h4 id="type-parameters-48" tabindex="-1"><a class="header-anchor" href="#type-parameters-48" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-54" tabindex="-1"><a class="header-anchor" href="#parameters-54" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>payload</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>parameter</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-61" tabindex="-1"><a class="header-anchor" href="#returns-61" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p>',10),yZ=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),bZ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),xZ={style:{"text-align":"left"}},vZ=e("code",null,"configs",-1),SZ=e("code",null,"getConfig",-1),TZ=e("code",null,"ConfigGetterFunction",-1),kZ=e("code",null,"removeConfig",-1),CZ=e("code",null,"ConfigDeleteFunction",-1),PZ=e("code",null,"setConfig",-1),wZ=e("code",null,"ConfigSetterFunction",-1),MZ=e("code",null,"logger",-1),IZ=e("code",null,"Logger",-1),EZ=e("code",null,"message",-1),FZ=e("code",null,"Readonly",-1),DZ=e("code",null,"secrets",-1),RZ=e("code",null,"getSecret",-1),BZ=e("code",null,"SecretGetterFunction",-1),NZ=e("code",null,"removeSecret",-1),LZ=e("code",null,"SecretDeleteFunction",-1),OZ=e("code",null,"setSecret",-1),AZ=e("code",null,"SecretSetterFunction",-1),HZ=e("code",null,"startActiveSpan",-1),jZ=e("code",null,"name",-1),GZ=e("code",null,"string",-1),qZ=e("code",null,"opts",-1),VZ=e("code",null,"SpanOptions",-1),zZ=e("code",null,"context",-1),ZZ=e("code",null,"undefined",-1),UZ=e("code",null,"Context",-1),QZ=e("code",null,"fn",-1),KZ=e("code",null,"span",-1),WZ=e("code",null,"Span",-1),$Z=e("code",null,"Promise",-1),YZ=e("code",null,"F",-1),JZ=e("code",null,"Promise",-1),XZ=e("code",null,"F",-1),eU=e("code",null,"states",-1),tU=e("code",null,"getState",-1),nU=e("code",null,"StateGetterFunction",-1),oU=e("code",null,"removeState",-1),sU=e("code",null,"StateDeleteFunction",-1),lU=e("code",null,"setState",-1),dU=e("code",null,"StateSetterFunction",-1),aU=e("code",null,"wrapInSpan",-1),iU=e("code",null,"name",-1),cU=e("code",null,"string",-1),rU=e("code",null,"opts",-1),uU=e("code",null,"SpanOptions",-1),hU=e("code",null,"fn",-1),_U=e("code",null,"span",-1),pU=e("code",null,"Span",-1),fU=e("code",null,"Promise",-1),gU=e("code",null,"F",-1),mU=e("code",null,"context?",-1),yU=e("code",null,"Context",-1),bU=e("code",null,"Promise",-1),xU=e("code",null,"F",-1),vU=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs")],-1),SU={style:{"text-align":"left"}},TU=e("code",null,"getConfig",-1),kU=e("code",null,"ConfigGetterFunction",-1),CU=e("code",null,"removeConfig",-1),PU=e("code",null,"ConfigDeleteFunction",-1),wU=e("code",null,"setConfig",-1),MU=e("code",null,"ConfigSetterFunction",-1),IU=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.getConfig")],-1),EU={style:{"text-align":"left"}},FU=e("code",null,"ConfigGetterFunction",-1),DU=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.removeConfig")],-1),RU={style:{"text-align":"left"}},BU=e("code",null,"ConfigDeleteFunction",-1),NU=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.setConfig")],-1),LU={style:{"text-align":"left"}},OU=e("code",null,"ConfigSetterFunction",-1),AU=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.logger")],-1),HU={style:{"text-align":"left"}},jU=e("code",null,"Logger",-1),GU=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.message")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<{ messageType: EBMessageType.Command; correlationId: string; receiver: EBMessageAddress; payload: { parameter: MessageParamsType; payload: MessagePayloadType; }; ... 8 more ...; sender: { ...; }; }>")])],-1),qU=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets")],-1),VU={style:{"text-align":"left"}},zU=e("code",null,"getSecret",-1),ZU=e("code",null,"SecretGetterFunction",-1),UU=e("code",null,"removeSecret",-1),QU=e("code",null,"SecretDeleteFunction",-1),KU=e("code",null,"setSecret",-1),WU=e("code",null,"SecretSetterFunction",-1),$U=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.getSecret")],-1),YU={style:{"text-align":"left"}},JU=e("code",null,"SecretGetterFunction",-1),XU=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.removeSecret")],-1),eQ={style:{"text-align":"left"}},tQ=e("code",null,"SecretDeleteFunction",-1),nQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.setSecret")],-1),oQ={style:{"text-align":"left"}},sQ=e("code",null,"SecretSetterFunction",-1),lQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"undefined"),t(" | "),e("code",null,"Context"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),dQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states")],-1),aQ={style:{"text-align":"left"}},iQ=e("code",null,"getState",-1),cQ=e("code",null,"StateGetterFunction",-1),rQ=e("code",null,"removeState",-1),uQ=e("code",null,"StateDeleteFunction",-1),hQ=e("code",null,"setState",-1),_Q=e("code",null,"StateSetterFunction",-1),pQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.getState")],-1),fQ={style:{"text-align":"left"}},gQ=e("code",null,"StateGetterFunction",-1),mQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.removeState")],-1),yQ={style:{"text-align":"left"}},bQ=e("code",null,"StateDeleteFunction",-1),xQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.setState")],-1),vQ={style:{"text-align":"left"}},SQ=e("code",null,"StateSetterFunction",-1),TQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),kQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),CQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),PQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),wQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),MQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),IQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),EQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),FQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),DQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),RQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),BQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),NQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),LQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),OQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),AQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),HQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),jQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),GQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),qQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),VQ=e("h4",{id:"defined-in-157",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-157","aria-hidden":"true"},"#"),t(" Defined in")],-1),zQ={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getCommandTransformContext.mock.ts#L12",target:"_blank",rel:"noopener noreferrer"},ZQ=e("hr",null,null,-1),UQ=e("h3",{id:"getcustommessagemessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcustommessagemessagemock","aria-hidden":"true"},"#"),t(" getCustomMessageMessageMock")],-1),QQ=e("strong",null,"getCustomMessageMessageMock",-1),KQ=e("code",null,"PayloadType",-1),WQ=e("code",null,"eventName",-1),$Q=e("code",null,"payload",-1),YQ=e("code",null,"input?",-1),JQ=e("code",null,"Readonly",-1),XQ=e("code",null,"contentEncoding",-1),eK=e("code",null,"string",-1),tK=e("code",null,"contentType",-1),nK=e("code",null,"string",-1),oK=e("code",null,"correlationId?",-1),sK=e("code",null,"string",-1),lK=e("code",null,"eventName",-1),dK=e("code",null,"string",-1),aK=e("code",null,"id",-1),iK=e("code",null,"string",-1),cK=e("code",null,"messageType",-1),rK=e("code",null,"CustomMessage",-1),uK=e("code",null,"otp?",-1),hK=e("code",null,"string",-1),_K=e("code",null,"payload?",-1),pK=e("code",null,"PayloadType",-1),fK=e("code",null,"principalId?",-1),gK=e("code",null,"string",-1),mK=e("code",null,"receiver?",-1),yK=e("code",null,"EBMessageAddress",-1),bK=e("code",null,"sender",-1),xK=e("code",null,"timestamp",-1),vK=e("code",null,"number",-1),SK=e("code",null,"traceId?",-1),TK=e("code",null,"string",-1),kK=d('<p>A function that returns a mocked custom message.</p><h4 id="type-parameters-49" tabindex="-1"><a class="header-anchor" href="#type-parameters-49" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td></tr></tbody></table><h4 id="parameters-55" tabindex="-1"><a class="header-anchor" href="#parameters-55" aria-hidden="true">#</a> Parameters</h4>',4),CK=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),PK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),wK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")])],-1),MK=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),IK={style:{"text-align":"left"}},EK=e("code",null,"Partial",-1),FK=e("code",null,"contentEncoding",-1),DK=e("code",null,"string",-1),RK=e("code",null,"contentType",-1),BK=e("code",null,"string",-1),NK=e("code",null,"correlationId?",-1),LK=e("code",null,"string",-1),OK=e("code",null,"eventName",-1),AK=e("code",null,"string",-1),HK=e("code",null,"id",-1),jK=e("code",null,"string",-1),GK=e("code",null,"messageType",-1),qK=e("code",null,"CustomMessage",-1),VK=e("code",null,"otp?",-1),zK=e("code",null,"string",-1),ZK=e("code",null,"payload?",-1),UK=e("code",null,"PayloadType",-1),QK=e("code",null,"principalId?",-1),KK=e("code",null,"string",-1),WK=e("code",null,"receiver?",-1),$K=e("code",null,"EBMessageAddress",-1),YK=e("code",null,"sender",-1),JK=e("code",null,"timestamp",-1),XK=e("code",null,"number",-1),eW=e("code",null,"traceId?",-1),tW=e("code",null,"string",-1),nW=e("h4",{id:"returns-62",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-62","aria-hidden":"true"},"#"),t(" Returns")],-1),oW=e("code",null,"Readonly",-1),sW=e("code",null,"contentEncoding",-1),lW=e("code",null,"string",-1),dW=e("code",null,"contentType",-1),aW=e("code",null,"string",-1),iW=e("code",null,"correlationId?",-1),cW=e("code",null,"string",-1),rW=e("code",null,"eventName",-1),uW=e("code",null,"string",-1),hW=e("code",null,"id",-1),_W=e("code",null,"string",-1),pW=e("code",null,"messageType",-1),fW=e("code",null,"CustomMessage",-1),gW=e("code",null,"otp?",-1),mW=e("code",null,"string",-1),yW=e("code",null,"payload?",-1),bW=e("code",null,"PayloadType",-1),xW=e("code",null,"principalId?",-1),vW=e("code",null,"string",-1),SW=e("code",null,"receiver?",-1),TW=e("code",null,"EBMessageAddress",-1),kW=e("code",null,"sender",-1),CW=e("code",null,"timestamp",-1),PW=e("code",null,"number",-1),wW=e("code",null,"traceId?",-1),MW=e("code",null,"string",-1),IW=e("h4",{id:"defined-in-158",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-158","aria-hidden":"true"},"#"),t(" Defined in")],-1),EW={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/messages/getCustomMessage.mock.ts#L15",target:"_blank",rel:"noopener noreferrer"},FW=d('<hr><h3 id="geteventbridgemock" tabindex="-1"><a class="header-anchor" href="#geteventbridgemock" aria-hidden="true">#</a> getEventBridgeMock</h3><p>▸ <strong>getEventBridgeMock</strong>(<code>sandbox?</code>): <code>Object</code></p><p>Mocks the eventBridge and stubs the methods</p><h4 id="parameters-56" tabindex="-1"><a class="header-anchor" href="#parameters-56" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-63" tabindex="-1"><a class="header-anchor" href="#returns-63" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p><p>EventBridge mocked</p>',9),DW=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),RW=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),BW={style:{"text-align":"left"}},NW=e("code",null,"EventBridge",-1),LW=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">>")])],-1),OW=e("h4",{id:"defined-in-159",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-159","aria-hidden":"true"},"#"),t(" Defined in")],-1),AW={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getEventBridge.mock.ts#L10",target:"_blank",rel:"noopener noreferrer"},HW=d('<hr><h3 id="getloggermock" tabindex="-1"><a class="header-anchor" href="#getloggermock" aria-hidden="true">#</a> getLoggerMock</h3><p>▸ <strong>getLoggerMock</strong>(<code>sandbox?</code>): <code>Object</code></p><p>Mocks the logger and methods are stubs</p><h4 id="parameters-57" tabindex="-1"><a class="header-anchor" href="#parameters-57" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-64" tabindex="-1"><a class="header-anchor" href="#returns-64" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p><p>logger mocked</p>',9),jW=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),GW=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),qW={style:{"text-align":"left"}},VW=e("code",null,"Logger",-1),zW=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),ZW=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),UW=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),QW=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),KW=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),WW=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),$W=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),YW=e("h4",{id:"defined-in-160",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-160","aria-hidden":"true"},"#"),t(" Defined in")],-1),JW={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getLogger.mock.ts#L10",target:"_blank",rel:"noopener noreferrer"},XW=d('<hr><h3 id="getsubscriptioncontextmock" tabindex="-1"><a class="header-anchor" href="#getsubscriptioncontextmock" aria-hidden="true">#</a> getSubscriptionContextMock</h3><p>▸ <strong>getSubscriptionContextMock</strong>(<code>message</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for subscription function context</p><h4 id="parameters-58" tabindex="-1"><a class="header-anchor" href="#parameters-58" aria-hidden="true">#</a> Parameters</h4>',5),e$=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),t$=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),n$={style:{"text-align":"left"}},o$=e("code",null,"EBMessage",-1),s$=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sandbox?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonSandbox")])],-1),l$=e("h4",{id:"returns-65",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-65","aria-hidden":"true"},"#"),t(" Returns")],-1),d$=e("p",null,[e("code",null,"Object")],-1),a$=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),i$=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),c$={style:{"text-align":"left"}},r$=e("code",null,"configs",-1),u$=e("code",null,"getConfig",-1),h$=e("code",null,"ConfigGetterFunction",-1),_$=e("code",null,"removeConfig",-1),p$=e("code",null,"ConfigDeleteFunction",-1),f$=e("code",null,"setConfig",-1),g$=e("code",null,"ConfigSetterFunction",-1),m$=e("code",null,"emit",-1),y$=e("code",null,"EmitCustomMessageFunction",-1),b$=e("code",null,"invoke",-1),x$=e("code",null,"InvokeFunction",-1),v$=e("code",null,"logger",-1),S$=e("code",null,"Logger",-1),T$=e("code",null,"message",-1),k$=e("code",null,"Readonly",-1),C$=e("code",null,"EBMessage",-1),P$=e("code",null,"secrets",-1),w$=e("code",null,"getSecret",-1),M$=e("code",null,"SecretGetterFunction",-1),I$=e("code",null,"removeSecret",-1),E$=e("code",null,"SecretDeleteFunction",-1),F$=e("code",null,"setSecret",-1),D$=e("code",null,"SecretSetterFunction",-1),R$=e("code",null,"startActiveSpan",-1),B$=e("code",null,"name",-1),N$=e("code",null,"string",-1),L$=e("code",null,"opts",-1),O$=e("code",null,"SpanOptions",-1),A$=e("code",null,"context",-1),H$=e("code",null,"undefined",-1),j$=e("code",null,"Context",-1),G$=e("code",null,"fn",-1),q$=e("code",null,"span",-1),V$=e("code",null,"Span",-1),z$=e("code",null,"Promise",-1),Z$=e("code",null,"F",-1),U$=e("code",null,"Promise",-1),Q$=e("code",null,"F",-1),K$=e("code",null,"states",-1),W$=e("code",null,"getState",-1),$$=e("code",null,"StateGetterFunction",-1),Y$=e("code",null,"removeState",-1),J$=e("code",null,"StateDeleteFunction",-1),X$=e("code",null,"setState",-1),eY=e("code",null,"StateSetterFunction",-1),tY=e("code",null,"wrapInSpan",-1),nY=e("code",null,"name",-1),oY=e("code",null,"string",-1),sY=e("code",null,"opts",-1),lY=e("code",null,"SpanOptions",-1),dY=e("code",null,"fn",-1),aY=e("code",null,"span",-1),iY=e("code",null,"Span",-1),cY=e("code",null,"Promise",-1),rY=e("code",null,"F",-1),uY=e("code",null,"context?",-1),hY=e("code",null,"Context",-1),_Y=e("code",null,"Promise",-1),pY=e("code",null,"F",-1),fY=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs")],-1),gY={style:{"text-align":"left"}},mY=e("code",null,"getConfig",-1),yY=e("code",null,"ConfigGetterFunction",-1),bY=e("code",null,"removeConfig",-1),xY=e("code",null,"ConfigDeleteFunction",-1),vY=e("code",null,"setConfig",-1),SY=e("code",null,"ConfigSetterFunction",-1),TY=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.getConfig")],-1),kY={style:{"text-align":"left"}},CY=e("code",null,"ConfigGetterFunction",-1),PY=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.removeConfig")],-1),wY={style:{"text-align":"left"}},MY=e("code",null,"ConfigDeleteFunction",-1),IY=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.setConfig")],-1),EY={style:{"text-align":"left"}},FY=e("code",null,"ConfigSetterFunction",-1),DY=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.emit")],-1),RY={style:{"text-align":"left"}},BY=e("code",null,"EmitCustomMessageFunction",-1),NY=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.invoke")],-1),LY={style:{"text-align":"left"}},OY=e("code",null,"InvokeFunction",-1),AY=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.logger")],-1),HY={style:{"text-align":"left"}},jY=e("code",null,"Logger",-1),GY=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.message")],-1),qY={style:{"text-align":"left"}},VY=e("code",null,"Readonly",-1),zY=e("code",null,"EBMessage",-1),ZY=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets")],-1),UY={style:{"text-align":"left"}},QY=e("code",null,"getSecret",-1),KY=e("code",null,"SecretGetterFunction",-1),WY=e("code",null,"removeSecret",-1),$Y=e("code",null,"SecretDeleteFunction",-1),YY=e("code",null,"setSecret",-1),JY=e("code",null,"SecretSetterFunction",-1),XY=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.getSecret")],-1),eJ={style:{"text-align":"left"}},tJ=e("code",null,"SecretGetterFunction",-1),nJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.removeSecret")],-1),oJ={style:{"text-align":"left"}},sJ=e("code",null,"SecretDeleteFunction",-1),lJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.setSecret")],-1),dJ={style:{"text-align":"left"}},aJ=e("code",null,"SecretSetterFunction",-1),iJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"undefined"),t(" | "),e("code",null,"Context"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),cJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states")],-1),rJ={style:{"text-align":"left"}},uJ=e("code",null,"getState",-1),hJ=e("code",null,"StateGetterFunction",-1),_J=e("code",null,"removeState",-1),pJ=e("code",null,"StateDeleteFunction",-1),fJ=e("code",null,"setState",-1),gJ=e("code",null,"StateSetterFunction",-1),mJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.getState")],-1),yJ={style:{"text-align":"left"}},bJ=e("code",null,"StateGetterFunction",-1),xJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.removeState")],-1),vJ={style:{"text-align":"left"}},SJ=e("code",null,"StateDeleteFunction",-1),TJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.setState")],-1),kJ={style:{"text-align":"left"}},CJ=e("code",null,"StateSetterFunction",-1),PJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),wJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"emit"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"invoke"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),MJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.emit")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),IJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),EJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),FJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),DJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.invoke")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),RJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),BJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),NJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),LJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),OJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),AJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),HJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),jJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),GJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),qJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),VJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),zJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),ZJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),UJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),QJ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),KJ=e("h4",{id:"defined-in-161",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-161","aria-hidden":"true"},"#"),t(" Defined in")],-1),WJ={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getSubscriptionContext.mock.ts#L11",target:"_blank",rel:"noopener noreferrer"},$J=d('<hr><h3 id="getsubscriptiontransformcontextmock" tabindex="-1"><a class="header-anchor" href="#getsubscriptiontransformcontextmock" aria-hidden="true">#</a> getSubscriptionTransformContextMock</h3><p>▸ <strong>getSubscriptionTransformContextMock</strong>(<code>message</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for subscription transform function context</p><h4 id="parameters-59" tabindex="-1"><a class="header-anchor" href="#parameters-59" aria-hidden="true">#</a> Parameters</h4>',5),YJ=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),JJ=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),XJ={style:{"text-align":"left"}},eX=e("code",null,"EBMessage",-1),tX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sandbox?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonSandbox")])],-1),nX=e("h4",{id:"returns-66",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-66","aria-hidden":"true"},"#"),t(" Returns")],-1),oX=e("p",null,[e("code",null,"Object")],-1),sX=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),lX=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),dX={style:{"text-align":"left"}},aX=e("code",null,"configs",-1),iX=e("code",null,"getConfig",-1),cX=e("code",null,"ConfigGetterFunction",-1),rX=e("code",null,"removeConfig",-1),uX=e("code",null,"ConfigDeleteFunction",-1),hX=e("code",null,"setConfig",-1),_X=e("code",null,"ConfigSetterFunction",-1),pX=e("code",null,"logger",-1),fX=e("code",null,"Logger",-1),gX=e("code",null,"message",-1),mX=e("code",null,"Readonly",-1),yX=e("code",null,"EBMessage",-1),bX=e("code",null,"secrets",-1),xX=e("code",null,"getSecret",-1),vX=e("code",null,"SecretGetterFunction",-1),SX=e("code",null,"removeSecret",-1),TX=e("code",null,"SecretDeleteFunction",-1),kX=e("code",null,"setSecret",-1),CX=e("code",null,"SecretSetterFunction",-1),PX=e("code",null,"startActiveSpan",-1),wX=e("code",null,"name",-1),MX=e("code",null,"string",-1),IX=e("code",null,"opts",-1),EX=e("code",null,"SpanOptions",-1),FX=e("code",null,"context",-1),DX=e("code",null,"undefined",-1),RX=e("code",null,"Context",-1),BX=e("code",null,"fn",-1),NX=e("code",null,"span",-1),LX=e("code",null,"Span",-1),OX=e("code",null,"Promise",-1),AX=e("code",null,"F",-1),HX=e("code",null,"Promise",-1),jX=e("code",null,"F",-1),GX=e("code",null,"states",-1),qX=e("code",null,"getState",-1),VX=e("code",null,"StateGetterFunction",-1),zX=e("code",null,"removeState",-1),ZX=e("code",null,"StateDeleteFunction",-1),UX=e("code",null,"setState",-1),QX=e("code",null,"StateSetterFunction",-1),KX=e("code",null,"wrapInSpan",-1),WX=e("code",null,"name",-1),$X=e("code",null,"string",-1),YX=e("code",null,"opts",-1),JX=e("code",null,"SpanOptions",-1),XX=e("code",null,"fn",-1),eee=e("code",null,"span",-1),tee=e("code",null,"Span",-1),nee=e("code",null,"Promise",-1),oee=e("code",null,"F",-1),see=e("code",null,"context?",-1),lee=e("code",null,"Context",-1),dee=e("code",null,"Promise",-1),aee=e("code",null,"F",-1),iee=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs")],-1),cee={style:{"text-align":"left"}},ree=e("code",null,"getConfig",-1),uee=e("code",null,"ConfigGetterFunction",-1),hee=e("code",null,"removeConfig",-1),_ee=e("code",null,"ConfigDeleteFunction",-1),pee=e("code",null,"setConfig",-1),fee=e("code",null,"ConfigSetterFunction",-1),gee=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.getConfig")],-1),mee={style:{"text-align":"left"}},yee=e("code",null,"ConfigGetterFunction",-1),bee=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.removeConfig")],-1),xee={style:{"text-align":"left"}},vee=e("code",null,"ConfigDeleteFunction",-1),See=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.setConfig")],-1),Tee={style:{"text-align":"left"}},kee=e("code",null,"ConfigSetterFunction",-1),Cee=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.logger")],-1),Pee={style:{"text-align":"left"}},wee=e("code",null,"Logger",-1),Mee=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.message")],-1),Iee={style:{"text-align":"left"}},Eee=e("code",null,"Readonly",-1),Fee=e("code",null,"EBMessage",-1),Dee=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets")],-1),Ree={style:{"text-align":"left"}},Bee=e("code",null,"getSecret",-1),Nee=e("code",null,"SecretGetterFunction",-1),Lee=e("code",null,"removeSecret",-1),Oee=e("code",null,"SecretDeleteFunction",-1),Aee=e("code",null,"setSecret",-1),Hee=e("code",null,"SecretSetterFunction",-1),jee=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.getSecret")],-1),Gee={style:{"text-align":"left"}},qee=e("code",null,"SecretGetterFunction",-1),Vee=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.removeSecret")],-1),zee={style:{"text-align":"left"}},Zee=e("code",null,"SecretDeleteFunction",-1),Uee=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.setSecret")],-1),Qee={style:{"text-align":"left"}},Kee=e("code",null,"SecretSetterFunction",-1),Wee=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"undefined"),t(" | "),e("code",null,"Context"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),$ee=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states")],-1),Yee={style:{"text-align":"left"}},Jee=e("code",null,"getState",-1),Xee=e("code",null,"StateGetterFunction",-1),ete=e("code",null,"removeState",-1),tte=e("code",null,"StateDeleteFunction",-1),nte=e("code",null,"setState",-1),ote=e("code",null,"StateSetterFunction",-1),ste=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.getState")],-1),lte={style:{"text-align":"left"}},dte=e("code",null,"StateGetterFunction",-1),ate=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.removeState")],-1),ite={style:{"text-align":"left"}},cte=e("code",null,"StateDeleteFunction",-1),rte=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.setState")],-1),ute={style:{"text-align":"left"}},hte=e("code",null,"StateSetterFunction",-1),_te=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),pte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),fte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),gte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),mte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),yte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),bte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),xte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),vte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Ste=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Tte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),kte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Cte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Pte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),wte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Mte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Ite=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Ete=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Fte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Dte=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Rte=e("h4",{id:"defined-in-162",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-162","aria-hidden":"true"},"#"),t(" Defined in")],-1),Bte={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getSubscriptionTransformContext.mock.ts#L11",target:"_blank",rel:"noopener noreferrer"};function Nte(Lte,Ote){const o=a("RouterLink"),l=a("ExternalLinkIcon");return c(),r("div",null,[e("p",null,[n(o,{to:"/api/"},{default:s(()=>[t("PURISTA API")]),_:1}),t(" / "),n(o,{to:"/api/modules.html"},{default:s(()=>[t("Modules")]),_:1}),t(" / @purista/core")]),h,_,p,f,g,e("p",null,[t("It contains the builders, classes & types and some helper functions. For easier testing of commands and subscriptions, the package contains different mock creation helper based on "),e("a",m,[t("jest"),n(l)]),t(" and "),e("a",y,[t("sinon"),n(l)])]),e("p",null,[t("Learn PURIST at "),e("a",b,[t("purista.dev"),n(l)])]),x,v,e("ul",null,[e("li",null,[n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[t("EBMessageType")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.EventBridgeEventNames.html"},{default:s(()=>[t("EventBridgeEventNames")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.PuristaSpanName.html"},{default:s(()=>[t("PuristaSpanName")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.PuristaSpanTag.html"},{default:s(()=>[t("PuristaSpanTag")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[t("StatusCode")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.StoreType.html"},{default:s(()=>[t("StoreType")]),_:1})])]),S,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultLogger.html"},{default:s(()=>[t("DefaultLogger")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:s(()=>[t("GenericEventEmitter")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[t("HandledError")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.HttpClient.html"},{default:s(()=>[t("HttpClient")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[t("Logger")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.UnhandledError.html"},{default:s(()=>[t("UnhandledError")]),_:1})])]),T,e("ul",null,[e("li",null,[n(o,{to:"/api/interfaces/purista_core.IEmitter.html"},{default:s(()=>[t("IEmitter")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.ILogger.html"},{default:s(()=>[t("ILogger")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.OpenApiZodAny.html"},{default:s(()=>[t("OpenApiZodAny")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.RestClient.html"},{default:s(()=>[t("RestClient")]),_:1})])]),k,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#authcredentials"},{default:s(()=>[t("AuthCredentials")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#brokerheadercommandmsg"},{default:s(()=>[t("BrokerHeaderCommandMsg")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#brokerheadercommandresponsemsg"},{default:s(()=>[t("BrokerHeaderCommandResponseMsg")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#brokerheadercustommsg"},{default:s(()=>[t("BrokerHeaderCustomMsg")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#command"},{default:s(()=>[t("Command")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commanddefinitionlist"},{default:s(()=>[t("CommandDefinitionList")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[t("CommandDefinitionMetadataBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#complete"},{default:s(()=>[t("Complete")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#compressionmethod"},{default:s(()=>[t("CompressionMethod")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[t("ContentType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[t("ContextBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[t("CorrelationId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#custommessage"},{default:s(()=>[t("CustomMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#defaultconfigstoreconfig"},{default:s(()=>[t("DefaultConfigStoreConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#defaulteventbridgeconfig"},{default:s(()=>[t("DefaultEventBridgeConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#defaultsecretstoreconfig"},{default:s(()=>[t("DefaultSecretStoreConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#defaultstatestoreconfig"},{default:s(()=>[t("DefaultStateStoreConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:s(()=>[t("DefinitionEventBridgeConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[t("EBMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[t("EBMessageAddress")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[t("EBMessageBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessageid"},{default:s(()=>[t("EBMessageId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessagesenderaddress"},{default:s(()=>[t("EBMessageSenderAddress")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[t("EmitCustomMessageFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#errorresponsepayload"},{default:s(()=>[t("ErrorResponsePayload")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgeadapterevents"},{default:s(()=>[t("EventBridgeAdapterEvents")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgeconfig"},{default:s(()=>[t("EventBridgeConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgecustomevents"},{default:s(()=>[t("EventBridgeCustomEvents")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgeevents"},{default:s(()=>[t("EventBridgeEvents")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventkey"},{default:s(()=>[t("EventKey")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventmap"},{default:s(()=>[t("EventMap")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#httpclientconfig"},{default:s(()=>[t("HttpClientConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#httpclientrequestoptions"},{default:s(()=>[t("HttpClientRequestOptions")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#httpexposedservicemeta"},{default:s(()=>[t("HttpExposedServiceMeta")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoinvoketimeout"},{default:s(()=>[t("InfoInvokeTimeout")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoinvoketimeoutpayload"},{default:s(()=>[t("InfoInvokeTimeoutPayload")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[t("InfoMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infomessagetype"},{default:s(()=>[t("InfoMessageType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[t("InfoServiceBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoservicedrain"},{default:s(()=>[t("InfoServiceDrain")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoservicefunctionadded"},{default:s(()=>[t("InfoServiceFunctionAdded")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoserviceinit"},{default:s(()=>[t("InfoServiceInit")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoservicenotready"},{default:s(()=>[t("InfoServiceNotReady")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoserviceready"},{default:s(()=>[t("InfoServiceReady")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoserviceshutdown"},{default:s(()=>[t("InfoServiceShutdown")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infosubscriptionerror"},{default:s(()=>[t("InfoSubscriptionError")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[t("InstanceId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[t("InvokeFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#logfnparamtype"},{default:s(()=>[t("LogFnParamType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[t("LogLevelName")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#loggeroptions"},{default:s(()=>[t("LoggerOptions")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#loggerstubs"},{default:s(()=>[t("LoggerStubs")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#newable"},{default:s(()=>[t("Newable")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#pendiginvocation"},{default:s(()=>[t("PendigInvocation")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[t("Prettify")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[t("PrincipalId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[t("QueryParameter")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceevents"},{default:s(()=>[t("ServiceEvents")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceinfotype"},{default:s(()=>[t("ServiceInfoType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#shutdownentry"},{default:s(()=>[t("ShutdownEntry")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#storebaseconfig"},{default:s(()=>[t("StoreBaseConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinitionlist"},{default:s(()=>[t("SubscriptionDefinitionList")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinitionmetadatabase"},{default:s(()=>[t("SubscriptionDefinitionMetadataBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionstorageentry"},{default:s(()=>[t("SubscriptionStorageEntry")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#supportedhttpmethod"},{default:s(()=>[t("SupportedHttpMethod")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[t("TraceId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[t("addPrefixToObject")]),_:1})])]),C,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#min_content_size_for_compression"},{default:s(()=>[t("MIN_CONTENT_SIZE_FOR_COMPRESSION")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceinfovalidator"},{default:s(()=>[t("ServiceInfoValidator")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infomessagetypes"},{default:s(()=>[t("infoMessageTypes")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#puristaversion"},{default:s(()=>[t("puristaVersion")]),_:1})])]),P,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#extendapi"},{default:s(()=>[t("extendApi")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#generateschema"},{default:s(()=>[t("generateSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandfunctionwithvalidation"},{default:s(()=>[t("getCommandFunctionWithValidation")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getdefaulteventbridgeconfig"},{default:s(()=>[t("getDefaultEventBridgeConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getdefaultloglevel"},{default:s(()=>[t("getDefaultLogLevel")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewsubscriptionstorageentry"},{default:s(()=>[t("getNewSubscriptionStorageEntry")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getsubscriptionfunctionwithvalidation"},{default:s(()=>[t("getSubscriptionFunctionWithValidation")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#gettimeoutpromise"},{default:s(()=>[t("getTimeoutPromise")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#initdefaultconfigstore"},{default:s(()=>[t("initDefaultConfigStore")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#initdefaultsecretstore"},{default:s(()=>[t("initDefaultSecretStore")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#initdefaultstatestore"},{default:s(()=>[t("initDefaultStateStore")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#initlogger"},{default:s(()=>[t("initLogger")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscustommessage"},{default:s(()=>[t("isCustomMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ishttpexposedservicemeta"},{default:s(()=>[t("isHttpExposedServiceMeta")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#isinfomessage"},{default:s(()=>[t("isInfoMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#isinfoservicefunctionadded"},{default:s(()=>[t("isInfoServiceFunctionAdded")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ismessagematchingsubscription"},{default:s(()=>[t("isMessageMatchingSubscription")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#throwifnotvalidmessage"},{default:s(()=>[t("throwIfNotValidMessage")]),_:1})])]),w,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[t("CommandDefinitionBuilder")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:s(()=>[t("CommandAfterGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:s(()=>[t("CommandBeforeGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[t("CommandDefinition")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commanderrorresponse"},{default:s(()=>[t("CommandErrorResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[t("CommandFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[t("CommandFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontextenhancements"},{default:s(()=>[t("CommandFunctionContextEnhancements")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandresponse"},{default:s(()=>[t("CommandResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandsuccessresponse"},{default:s(()=>[t("CommandSuccessResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[t("CommandTransformFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[t("CommandTransformInputHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[t("CommandTransformOutputHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscommand"},{default:s(()=>[t("isCommand")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscommanderrorresponse"},{default:s(()=>[t("isCommandErrorResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscommandresponse"},{default:s(()=>[t("isCommandResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscommandsuccessresponse"},{default:s(()=>[t("isCommandSuccessResponse")]),_:1})])]),M,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultEventBridge.html"},{default:s(()=>[t("DefaultEventBridge")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:s(()=>[t("EventBridgeBaseClass")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:s(()=>[t("EventBridge")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgeeventsbasic"},{default:s(()=>[t("EventBridgeEventsBasic")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandqueuename"},{default:s(()=>[t("getCommandQueueName")]),_:1})])]),I,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#converttocamelcase"},{default:s(()=>[t("convertToCamelCase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#converttokebabcase"},{default:s(()=>[t("convertToKebabCase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#converttopascalcase"},{default:s(()=>[t("convertToPascalCase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#converttosnakecase"},{default:s(()=>[t("convertToSnakeCase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#createerrorresponse"},{default:s(()=>[t("createErrorResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#createinfomessage"},{default:s(()=>[t("createInfoMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#createsuccessresponse"},{default:s(()=>[t("createSuccessResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#deserializeotp"},{default:s(()=>[t("deserializeOtp")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcleanedmessage"},{default:s(()=>[t("getCleanedMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#geterrormessageforcode"},{default:s(()=>[t("getErrorMessageForCode")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewcorrelationid"},{default:s(()=>[t("getNewCorrelationId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewebmessageid"},{default:s(()=>[t("getNewEBMessageId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewinstanceid"},{default:s(()=>[t("getNewInstanceId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewtraceid"},{default:s(()=>[t("getNewTraceId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getsubscriptionqueuename"},{default:s(()=>[t("getSubscriptionQueueName")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getuniqueid"},{default:s(()=>[t("getUniqueId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#gracefulshutdown"},{default:s(()=>[t("gracefulShutdown")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#isdevelop"},{default:s(()=>[t("isDevelop")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serializeotp"},{default:s(()=>[t("serializeOtp")]),_:1})])]),E,e("ul",null,[e("li",null,[n(o,{to:"/api/enums/purista_core.ServiceEventsNames.html"},{default:s(()=>[t("ServiceEventsNames")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.Service.html"},{default:s(()=>[t("Service")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.ServiceBuilder.html"},{default:s(()=>[t("ServiceBuilder")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[t("ServiceClass")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceconstructorinput"},{default:s(()=>[t("ServiceConstructorInput")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceeventsinternal"},{default:s(()=>[t("ServiceEventsInternal")]),_:1})])]),F,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.ConfigStoreBaseClass.html"},{default:s(()=>[t("ConfigStoreBaseClass")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultConfigStore.html"},{default:s(()=>[t("DefaultConfigStore")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultSecretStore.html"},{default:s(()=>[t("DefaultSecretStore")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultStateStore.html"},{default:s(()=>[t("DefaultStateStore")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.SecretStoreBaseClass.html"},{default:s(()=>[t("SecretStoreBaseClass")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.StateStoreBaseClass.html"},{default:s(()=>[t("StateStoreBaseClass")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.ConfigStore.html"},{default:s(()=>[t("ConfigStore")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.SecretStore.html"},{default:s(()=>[t("SecretStore")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.StateStore.html"},{default:s(()=>[t("StateStore")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[t("ConfigDeleteFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[t("ConfigGetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[t("ConfigSetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[t("SecretDeleteFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[t("SecretGetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[t("SecretSetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[t("StateDeleteFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[t("StateGetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[t("StateSetterFunction")]),_:1})])]),D,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:s(()=>[t("SubscriptionDefinitionBuilder")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscription"},{default:s(()=>[t("Subscription")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionafterguardhook"},{default:s(()=>[t("SubscriptionAfterGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionbeforeguardhook"},{default:s(()=>[t("SubscriptionBeforeGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinition"},{default:s(()=>[t("SubscriptionDefinition")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunction"},{default:s(()=>[t("SubscriptionFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[t("SubscriptionFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontextenhancements"},{default:s(()=>[t("SubscriptionFunctionContextEnhancements")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[t("SubscriptionTransformFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:s(()=>[t("SubscriptionTransformInputHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:s(()=>[t("SubscriptionTransformOutputHook")]),_:1})])]),R,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandcontextmock"},{default:s(()=>[t("getCommandContextMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommanderrormessagemock"},{default:s(()=>[t("getCommandErrorMessageMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandmessagemock"},{default:s(()=>[t("getCommandMessageMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandsuccessmessagemock"},{default:s(()=>[t("getCommandSuccessMessageMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandtransformcontextmock"},{default:s(()=>[t("getCommandTransformContextMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcustommessagemessagemock"},{default:s(()=>[t("getCustomMessageMessageMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#geteventbridgemock"},{default:s(()=>[t("getEventBridgeMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getloggermock"},{default:s(()=>[t("getLoggerMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getsubscriptioncontextmock"},{default:s(()=>[t("getSubscriptionContextMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getsubscriptiontransformcontextmock"},{default:s(()=>[t("getSubscriptionTransformContextMock")]),_:1})])]),B,e("p",null,[e("a",N,[t("HttpClient/types/AuthCredentials.ts:4"),n(l)])]),L,O,e("p",null,[t("Ƭ "),A,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[H]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#brokerheadercustommsg"},{default:s(()=>[j]),_:1}),t(" & { "),G,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[q]),_:1}),t(" ; "),V,t(": "),z,t(" ; "),Z,t(": "),U,t(" ; "),Q,t(": "),K,t(" }>")]),W,e("p",null,[e("a",$,[t("core/types/BrokerHeaderCommandMsg.ts:5"),n(l)])]),Y,J,e("p",null,[t("Ƭ "),X,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[ee]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#brokerheadercommandmsg"},{default:s(()=>[te]),_:1}),t(" & { "),ne,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[oe]),_:1}),t(" }>")]),se,e("p",null,[e("a",le,[t("core/types/BrokerHeaderCommandResponseMsg.ts:5"),n(l)])]),de,ae,ie,ce,e("table",null,[re,e("tbody",null,[ue,e("tr",null,[he,e("td",_e,[n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[pe]),_:1})])]),fe,e("tr",null,[ge,e("td",me,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[ye]),_:1})])]),be,xe,ve])]),Se,e("p",null,[e("a",Te,[t("core/types/BrokerHeaderCustomMsg.ts:4"),n(l)])]),ke,Ce,e("p",null,[t("Ƭ "),Pe,t("<"),we,t(", "),Me,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Ie]),_:1}),t("<{ "),Ee,t(": "),n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[Fe]),_:1}),t(" ; "),De,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[Re]),_:1}),t(" ; "),Be,t(": { "),Ne,t(": "),Le,t(" ; "),Oe,t(": "),Ae,t(" } ; "),He,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[je]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[Ge]),_:1}),t(">")]),qe,e("p",null,[e("a",Ve,[t("core/types/commandType/Command.ts:18"),n(l)])]),ze,Ze,e("p",null,[t("Ƭ "),Ue,t("<"),Qe,t(">: "),n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[Ke]),_:1}),t("<"),We,t(", "),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[$e]),_:1}),t(", "),Ye,t(", "),Je,t(", "),Xe,t(", "),et,t(", "),tt,t(", "),nt,t(">[]")]),ot,e("table",null,[st,e("tbody",null,[e("tr",null,[lt,e("td",dt,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[at]),_:1})])])])]),it,e("p",null,[e("a",ct,[t("core/types/commandType/CommandDefinitionList.ts:12"),n(l)])]),rt,ut,ht,_t,e("table",null,[pt,e("tbody",null,[e("tr",null,[ft,e("td",gt,[t("{ "),mt,t(": "),yt,t(" ; "),bt,t(": "),xt,t(" ; "),vt,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[St]),_:1}),t(" ; "),Tt,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[kt]),_:1}),t(" ; "),Ct,t(": "),Pt,t(" ; "),wt,t(": "),Mt,t(" ; "),It,t(": "),Et,t(" ; "),Ft,t(": "),Dt,t(" }")])]),Rt,Bt,e("tr",null,[Nt,e("td",Lt,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[Ot]),_:1})])]),e("tr",null,[At,e("td",Ht,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[jt]),_:1})])]),Gt,qt,Vt,zt])]),Zt,e("p",null,[e("a",Ut,[t("core/types/commandType/CommandDefinitionMetadataBase.ts:5"),n(l)])]),Qt,e("p",null,[e("a",Kt,[t("core/types/Complete.ts:20"),n(l)])]),Wt,e("p",null,[e("a",$t,[t("core/HttpServer/types/CompressionMethod.ts:1"),n(l)])]),Yt,e("p",null,[e("a",Jt,[t("core/types/ContentType.ts:6"),n(l)])]),Xt,en,tn,nn,on,e("table",null,[sn,e("tbody",null,[e("tr",null,[ln,e("td",dn,[t("{ "),an,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[cn]),_:1}),t(" ; "),rn,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[un]),_:1}),t(" ; "),hn,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[_n]),_:1}),t(" }")]),pn]),e("tr",null,[fn,e("td",gn,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[mn]),_:1})]),yn]),e("tr",null,[bn,e("td",xn,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[vn]),_:1})]),Sn]),e("tr",null,[Tn,e("td",kn,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[Cn]),_:1})]),Pn]),e("tr",null,[wn,e("td",Mn,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[In]),_:1})]),En]),e("tr",null,[Fn,e("td",Dn,[t("{ "),Rn,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[Bn]),_:1}),t(" ; "),Nn,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[Ln]),_:1}),t(" ; "),On,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[An]),_:1}),t(" }")]),Hn]),e("tr",null,[jn,e("td",Gn,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[qn]),_:1})]),Vn]),e("tr",null,[zn,e("td",Zn,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[Un]),_:1})]),Qn]),e("tr",null,[Kn,e("td",Wn,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[$n]),_:1})]),Yn]),Jn,e("tr",null,[Xn,e("td",eo,[t("{ "),to,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[no]),_:1}),t(" ; "),oo,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[so]),_:1}),t(" ; "),lo,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[ao]),_:1}),t(" }")]),io]),e("tr",null,[co,e("td",ro,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[uo]),_:1})]),ho]),e("tr",null,[_o,e("td",po,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[fo]),_:1})]),go]),e("tr",null,[mo,e("td",yo,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[bo]),_:1})]),xo]),vo])]),So,e("p",null,[e("a",To,[t("core/types/ContextBase.ts:12"),n(l)])]),ko,Co,Po,wo,Mo,e("p",null,[e("a",Io,[t("core/types/CorrelationId.ts:2"),n(l)])]),Eo,Fo,e("p",null,[t("Ƭ "),Do,t("<"),Ro,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Bo]),_:1}),t("<{ "),No,t(": "),Lo,t(" ; "),Oo,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:s(()=>[Ao]),_:1}),t(" ; "),Ho,t(": "),jo,t(" ; "),Go,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[qo]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[Vo]),_:1}),t(">")]),zo,e("p",null,[e("a",Zo,[t("core/types/CustomMessage.ts:11"),n(l)])]),Uo,e("p",null,[e("a",Qo,[t("DefaultConfigStore/types/DefaultConfigStoreConfig.ts:1"),n(l)])]),Ko,e("p",null,[e("a",Wo,[t("DefaultEventBridge/types/DefaultEventBridgeConfig.ts:4"),n(l)])]),$o,e("p",null,[e("a",Yo,[t("DefaultSecretStore/types/DefaultSecretStoreConfig.ts:1"),n(l)])]),Jo,e("p",null,[e("a",Xo,[t("DefaultStateStore/types/DefaultStateStoreConfig.ts:1"),n(l)])]),es,e("p",null,[e("a",ts,[t("core/types/DefinitionEventBridgeConfig.ts:6"),n(l)])]),ns,os,e("p",null,[t("Ƭ "),ss,t(": "),n(o,{to:"/api/modules/purista_core.html#command"},{default:s(()=>[ls]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#commandresponse"},{default:s(()=>[ds]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[as]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#custommessage"},{default:s(()=>[is]),_:1})]),cs,rs,e("p",null,[e("a",us,[t("core/types/EBMessage.ts:8"),n(l)])]),hs,_s,ps,fs,gs,e("table",null,[ms,e("tbody",null,[e("tr",null,[ys,e("td",bs,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[xs]),_:1})]),vs]),Ss,Ts,ks])]),Cs,e("p",null,[e("a",Ps,[t("core/types/EBMessageAddress.ts:6"),n(l)])]),ws,Ms,Is,Es,Fs,e("table",null,[Ds,e("tbody",null,[Rs,e("tr",null,[Bs,e("td",Ns,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[Ls]),_:1})]),Os]),e("tr",null,[As,e("td",Hs,[n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[js]),_:1})]),Gs]),qs,e("tr",null,[Vs,e("td",zs,[n(o,{to:"/api/modules/purista_core.html#ebmessageid"},{default:s(()=>[Zs]),_:1})]),Us]),Qs,e("tr",null,[Ks,e("td",Ws,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[$s]),_:1})]),Ys]),e("tr",null,[Js,e("td",Xs,[n(o,{to:"/api/modules/purista_core.html#ebmessagesenderaddress"},{default:s(()=>[el]),_:1})]),tl]),nl,e("tr",null,[ol,e("td",sl,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[ll]),_:1})]),dl])])]),al,e("p",null,[e("a",il,[t("core/types/EBMessageBase.ts:11"),n(l)])]),cl,rl,ul,hl,_l,e("p",null,[e("a",pl,[t("core/types/EBMessageId.ts:4"),n(l)])]),fl,gl,e("p",null,[t("Ƭ "),ml,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[yl]),_:1}),t("<"),bl,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[xl]),_:1}),t(", "),vl,t("> & "),Sl,t("<"),Tl,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[kl]),_:1}),t(", "),Cl,t(">>>")]),Pl,wl,e("p",null,[e("a",Ml,[t("core/types/EBMessageSenderAddress.ts:7"),n(l)])]),Il,El,e("p",null,[t("Ƭ "),Fl,t(": <Payload>("),Dl,t(": "),Rl,t(", "),Bl,t(": "),Nl,t(", "),Ll,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[Ol]),_:1}),t(", "),Al,t(": "),Hl,t(") => "),jl,t("<"),Gl,t(">")]),ql,e("table",null,[Vl,e("tbody",null,[zl,Zl,e("tr",null,[Ul,e("td",Ql,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[Kl]),_:1})])]),Wl])]),$l,Yl,Jl,e("p",null,[e("a",Xl,[t("core/types/EmitCustomMessageFunction.ts:10"),n(l)])]),ed,td,nd,od,sd,e("table",null,[ld,e("tbody",null,[dd,ad,e("tr",null,[id,e("td",cd,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[rd]),_:1})]),ud]),e("tr",null,[hd,e("td",_d,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[pd]),_:1})]),fd])])]),gd,e("p",null,[e("a",md,[t("core/types/ErrorResponsePayload.ts:7"),n(l)])]),yd,e("p",null,[e("a",bd,[t("core/EventBridge/types/EventBridgeEvents.ts:42"),n(l)])]),xd,vd,e("p",null,[t("Ƭ "),Sd,t("<"),Td,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[kd]),_:1}),t("<{ "),Cd,t(": "),Pd,t(" ; "),wd,t(": "),Md,t(" ; "),Id,t(": "),n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[Ed]),_:1}),t(" ; "),Fd,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Dd]),_:1}),t(" ; "),Rd,t(": "),Bd,t(" } & "),Nd,t(">")]),Ld,e("p",null,[e("a",Od,[t("core/EventBridge/types/EventBridgeConfig.ts:10"),n(l)])]),Ad,e("p",null,[e("a",Hd,[t("core/EventBridge/types/EventBridgeEvents.ts:37"),n(l)])]),jd,Gd,e("p",null,[t("Ƭ "),qd,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Vd]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#eventbridgeeventsbasic"},{default:s(()=>[zd]),_:1}),t(" & "),n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[Zd]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#eventbridgeadapterevents"},{default:s(()=>[Ud]),_:1}),t(", "),Qd,t("> & "),n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[Kd]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#eventbridgecustomevents"},{default:s(()=>[Wd]),_:1}),t(", "),$d,t(">>")]),Yd,e("p",null,[e("a",Jd,[t("core/EventBridge/types/EventBridgeEvents.ts:47"),n(l)])]),Xd,e("table",null,[ea,e("tbody",null,[e("tr",null,[ta,e("td",na,[t("extends "),n(o,{to:"/api/modules/purista_core.html#eventmap"},{default:s(()=>[oa]),_:1})])])])]),sa,e("p",null,[e("a",la,[t("core/types/GenericEventEmitter.ts:5"),n(l)])]),da,e("p",null,[e("a",aa,[t("core/types/GenericEventEmitter.ts:3"),n(l)])]),ia,ca,e("p",null,[t("Ƭ "),ra,t("<"),ua,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[ha]),_:1}),t("<{ "),_a,t(": "),pa,t(" ; "),fa,t(": { "),ga,t(": "),ma,t(" ; "),ya,t(": "),ba,t(" } ; "),xa,t(": "),va,t(" ; "),Sa,t(": "),Ta,t("<"),ka,t(", "),Ca,t("> ; "),Pa,t(": "),wa,t(" ; "),Ma,t(": "),Ia,t(" ; "),Ea,t(": "),Fa,t(" ; "),Da,t(": "),n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[Ra]),_:1}),t(" ; "),Ba,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Na]),_:1}),t(" ; "),La,t(": "),Oa,t(" ; "),Aa,t(": "),Ha,t(" } & "),ja,t(">")]),Ga,e("p",null,[e("a",qa,[t("HttpClient/types/HttpClientConfig.ts:9"),n(l)])]),Va,e("p",null,[e("a",za,[t("HttpClient/types/HttpClientRequestOptions.ts:4"),n(l)])]),Za,Ua,e("p",null,[t("Ƭ "),Qa,t("<"),Ka,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Wa]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[$a]),_:1}),t(" & { "),Ya,t(": { "),Ja,t(": { "),Xa,t(": "),ei,t(" | "),ti,t(" | "),ni,t(" | "),oi,t(" | "),si,t(" ; "),li,t(": { "),di,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[ai]),_:1}),t("[] ; "),ii,t(": "),ci,t(" ; "),ri,t(": "),ui,t(" ; "),hi,t(": "),_i,t(" ; "),pi,t(": "),n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[fi]),_:1}),t("<"),gi,t(">[] ; "),mi,t(": "),yi,t(" ; "),bi,t(": "),xi,t("[] } ; "),vi,t(": "),Si,t(" } } }>")]),Ti,e("p",null,[e("a",ki,[t("core/HttpServer/types/HttpExposedServiceMeta.ts:4"),n(l)])]),Ci,Pi,e("p",null,[t("Ƭ "),wi,t(": { "),Mi,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoinvoketimeout"},{default:s(()=>[Ii]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Ei]),_:1})]),Fi,e("p",null,[e("a",Di,[t("core/types/infoType/InfoInvokeTimeout.ts:22"),n(l)])]),Ri,Bi,Ni,Li,e("table",null,[Oi,e("tbody",null,[e("tr",null,[Ai,e("td",Hi,[n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[ji]),_:1})])]),Gi,qi,Vi,zi,Zi,Ui,Qi,Ki,Wi,e("tr",null,[$i,e("td",Yi,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[Ji]),_:1})])])])]),Xi,e("p",null,[e("a",ec,[t("core/types/infoType/InfoInvokeTimeout.ts:6"),n(l)])]),tc,nc,e("p",null,[t("Ƭ "),oc,t(": "),n(o,{to:"/api/modules/purista_core.html#infoservicedrain"},{default:s(()=>[sc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoservicefunctionadded"},{default:s(()=>[lc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoserviceinit"},{default:s(()=>[dc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoservicenotready"},{default:s(()=>[ac]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoserviceready"},{default:s(()=>[ic]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoserviceshutdown"},{default:s(()=>[cc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoinvoketimeout"},{default:s(()=>[rc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infosubscriptionerror"},{default:s(()=>[uc]),_:1})]),hc,e("p",null,[e("a",_c,[t("core/types/infoType/InfoMessage.ts:11"),n(l)])]),pc,fc,e("p",null,[t("Ƭ "),gc,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicedrain"},{default:s(()=>[mc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicefunctionadded"},{default:s(()=>[yc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceinit"},{default:s(()=>[bc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicenotready"},{default:s(()=>[xc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceready"},{default:s(()=>[vc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceshutdown"},{default:s(()=>[Sc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoinvoketimeout"},{default:s(()=>[Tc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infosubscriptionerror"},{default:s(()=>[kc]),_:1})]),Cc,e("p",null,[e("a",Pc,[t("core/types/infoType/InfoMessage.ts:21"),n(l)])]),wc,Mc,e("p",null,[t("Ƭ "),Ic,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Ec]),_:1}),t("<{ "),Fc,t(": "),Dc,t(" ; "),Rc,t(": "),Bc,t(" ; "),Nc,t(": "),Lc,t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[Oc]),_:1}),t(">")]),Ac,e("p",null,[e("a",Hc,[t("core/types/infoType/InfoServiceBase.ts:4"),n(l)])]),jc,Gc,e("p",null,[t("Ƭ "),qc,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Vc]),_:1}),t("<{ "),zc,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicedrain"},{default:s(()=>[Zc]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Uc]),_:1}),t(">")]),Qc,e("p",null,[e("a",Kc,[t("core/types/infoType/InfoServiceDrain.ts:5"),n(l)])]),Wc,$c,e("p",null,[t("Ƭ "),Yc,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Jc]),_:1}),t("<{ "),Xc,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicefunctionadded"},{default:s(()=>[er]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[tr]),_:1}),t(">")]),nr,e("p",null,[e("a",or,[t("core/types/infoType/InfoServiceFunctionAdded.ts:5"),n(l)])]),sr,lr,e("p",null,[t("Ƭ "),dr,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[ar]),_:1}),t("<{ "),ir,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceinit"},{default:s(()=>[cr]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[rr]),_:1}),t(">")]),ur,e("p",null,[e("a",hr,[t("core/types/infoType/InfoServiceInit.ts:5"),n(l)])]),_r,pr,e("p",null,[t("Ƭ "),fr,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[gr]),_:1}),t("<{ "),mr,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicenotready"},{default:s(()=>[yr]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[br]),_:1}),t(">")]),xr,e("p",null,[e("a",vr,[t("core/types/infoType/InfoServiceNotReady.ts:5"),n(l)])]),Sr,Tr,e("p",null,[t("Ƭ "),kr,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Cr]),_:1}),t("<{ "),Pr,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceready"},{default:s(()=>[wr]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Mr]),_:1}),t(">")]),Ir,e("p",null,[e("a",Er,[t("core/types/infoType/InfoServiceReady.ts:5"),n(l)])]),Fr,Dr,e("p",null,[t("Ƭ "),Rr,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Br]),_:1}),t("<{ "),Nr,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceshutdown"},{default:s(()=>[Lr]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Or]),_:1}),t(">")]),Ar,e("p",null,[e("a",Hr,[t("core/types/infoType/InfoServiceShutdown.ts:5"),n(l)])]),jr,Gr,e("p",null,[t("Ƭ "),qr,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Vr]),_:1}),t("<{ "),zr,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infosubscriptionerror"},{default:s(()=>[Zr]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Ur]),_:1}),t(">")]),Qr,e("p",null,[e("a",Kr,[t("core/types/infoType/InfoSubscriptionError.ts:5"),n(l)])]),Wr,$r,Yr,Jr,Xr,e("p",null,[e("a",eu,[t("core/types/InstanceId.ts:2"),n(l)])]),tu,nu,e("p",null,[t("Ƭ "),ou,t(": <InvokeResponseType, PayloadType, ParameterType>("),su,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[lu]),_:1}),t(", "),du,t(": "),au,t(", "),iu,t(": "),cu,t(") => "),ru,t("<"),uu,t(">")]),hu,e("table",null,[_u,e("tbody",null,[e("tr",null,[pu,e("td",fu,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[gu]),_:1})])]),mu,yu])]),bu,xu,vu,e("p",null,[e("a",Su,[t("core/types/InvokeFunction.ts:21"),n(l)])]),Tu,e("p",null,[e("a",ku,[t("core/types/Logger.ts:17"),n(l)])]),Cu,e("p",null,[e("a",Pu,[t("core/types/LogLevelName.ts:1"),n(l)])]),wu,Mu,Iu,Eu,e("table",null,[Fu,e("tbody",null,[Du,e("tr",null,[Ru,e("td",Bu,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[Nu]),_:1})])]),Lu,e("tr",null,[Ou,e("td",Au,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[Hu]),_:1})])]),ju,Gu,qu,Vu,e("tr",null,[zu,e("td",Zu,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[Uu]),_:1})])])])]),Qu,e("p",null,[e("a",Ku,[t("core/types/Logger.ts:5"),n(l)])]),Wu,e("p",null,[e("a",$u,[t("mocks/getLogger.mock.ts:41"),n(l)])]),Yu,Ju,e("p",null,[t("Ƭ "),Xu,t("<"),eh,t(", "),th,t(">: ("),nh,t(": "),n(o,{to:"/api/modules/purista_core.html#serviceconstructorinput"},{default:s(()=>[oh]),_:1}),t("<"),sh,t(">) => "),lh]),dh,e("table",null,[ah,e("tbody",null,[e("tr",null,[ih,e("td",ch,[n(o,{to:"/api/modules/purista_core.html#serviceconstructorinput"},{default:s(()=>[rh]),_:1}),t("<"),uh,t(">")])])])]),hh,_h,ph,e("p",null,[e("a",fh,[t("ServiceBuilder/ServiceBuilder.impl.ts:28"),n(l)])]),gh,mh,yh,bh,e("table",null,[xh,e("tbody",null,[e("tr",null,[vh,e("td",Sh,[t("("),Th,t(": "),n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[kh]),_:1}),t(" | "),n(o,{to:"/api/classes/purista_core.UnhandledError.html"},{default:s(()=>[Ch]),_:1}),t(") => "),Ph])]),wh])]),Mh,e("p",null,[e("a",Ih,[t("DefaultEventBridge/types/PendingInvocations.ts:3"),n(l)])]),Eh,e("p",null,[e("a",Fh,[t("core/types/Prettify.ts:1"),n(l)])]),Dh,Rh,Bh,Nh,Lh,e("p",null,[e("a",Oh,[t("core/types/PrincipalId.ts:2"),n(l)])]),Ah,e("p",null,[e("a",Hh,[t("core/HttpServer/types/QueryParameter.ts:1"),n(l)])]),jh,Gh,e("p",null,[t("Ƭ "),qh,t(": "),n(o,{to:"/api/modules/purista_core.html#serviceeventsinternal"},{default:s(()=>[Vh]),_:1}),t(" & "),n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[zh]),_:1}),t("<"),Zh,t(", "),Uh,t("> & "),n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[Qh]),_:1}),t("<"),Kh,t(", "),Wh,t(">")]),$h,Yh,Jh,e("p",null,[e("a",Xh,[t("core/types/ServiceEvents.ts:98"),n(l)])]),e_,e("p",null,[e("a",t_,[t("core/types/infoType/ServiceInfoType.ts:4"),n(l)])]),n_,e("p",null,[e("a",o_,[t("helper/types/ShutdownEntry.ts:4"),n(l)])]),s_,l_,e("p",null,[t("Ƭ "),d_,t("<"),a_,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[i_]),_:1}),t("<{ "),c_,t(": "),r_,t(" ; "),u_,t(": "),h_,t(" ; "),__,t(": "),p_,t(" ; "),f_,t(": "),n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[g_]),_:1}),t(" ; "),m_,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[y_]),_:1}),t(" } & "),b_,t(">")]),x_,e("p",null,[e("a",v_,[t("core/types/StoreBaseConfig.ts:8"),n(l)])]),S_,T_,e("p",null,[t("Ƭ "),k_,t("<"),C_,t(">: "),n(o,{to:"/api/modules/purista_core.html#subscriptiondefinition"},{default:s(()=>[P_]),_:1}),t("<"),w_,t(", "),M_,t(", "),I_,t(", "),E_,t(", "),F_,t(">[]")]),D_,e("table",null,[R_,e("tbody",null,[e("tr",null,[B_,e("td",N_,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[L_]),_:1})])])])]),O_,e("p",null,[e("a",A_,[t("core/types/subscription/SubscriptionDefinitionList.ts:11"),n(l)])]),H_,j_,G_,q_,e("table",null,[V_,e("tbody",null,[e("tr",null,[z_,e("td",Z_,[t("{ "),U_,t(": "),Q_,t(" ; "),K_,t(": "),W_,t(" ; "),$_,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[Y_]),_:1}),t(" ; "),J_,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[X_]),_:1}),t(" ; "),ep,t(": "),tp,t(" ; "),np,t(": "),op,t(" ; "),sp,t(": "),lp,t(" }")])]),dp,ap,e("tr",null,[ip,e("td",cp,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[rp]),_:1})])]),e("tr",null,[up,e("td",hp,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[_p]),_:1})])]),pp,fp,gp])]),mp,e("p",null,[e("a",yp,[t("core/types/subscription/SubscriptionDefinitionMetadataBase.ts:5"),n(l)])]),bp,xp,vp,Sp,e("table",null,[Tp,e("tbody",null,[e("tr",null,[kp,e("td",Cp,[t("("),Pp,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[wp]),_:1}),t(") => "),Mp,t("<"),Ip,t("<"),n(o,{to:"/api/modules/purista_core.html#custommessage"},{default:s(()=>[Ep]),_:1}),t(", "),Fp,t(" | "),Dp,t("> | "),Rp,t(">")])]),Bp,Np,e("tr",null,[Lp,e("td",Op,[t("("),Ap,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[Hp]),_:1}),t(") => "),jp])]),Gp,qp,Vp,zp,Zp,Up,Qp,Kp,Wp])]),$p,e("p",null,[e("a",Yp,[t("DefaultEventBridge/types/SubscriptionStorageEntry.ts:3"),n(l)])]),Jp,e("p",null,[e("a",Xp,[t("core/HttpServer/types/SupportedHttpMethod.ts:2"),n(l)])]),e1,t1,n1,o1,s1,e("p",null,[e("a",l1,[t("core/types/TraceId.ts:4"),n(l)])]),d1,e("p",null,[e("a",a1,[t("helper/getTimeoutPromise.impl.ts:9"),n(l)])]),i1,c1,e("p",null,[t("▸ "),r1,t("("),u1,t("): "),n(o,{to:"/api/classes/purista_core.DefaultConfigStore.html"},{default:s(()=>[h1]),_:1})]),_1,e("table",null,[p1,e("tbody",null,[f1,e("tr",null,[g1,e("td",m1,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[y1]),_:1})])])])]),b1,e("p",null,[n(o,{to:"/api/classes/purista_core.DefaultConfigStore.html"},{default:s(()=>[x1]),_:1})]),v1,e("p",null,[e("a",S1,[t("DefaultConfigStore/initDefaultConfigStore.impl.ts:4"),n(l)])]),T1,k1,e("p",null,[t("▸ "),C1,t("("),P1,t("): "),n(o,{to:"/api/classes/purista_core.DefaultSecretStore.html"},{default:s(()=>[w1]),_:1})]),M1,e("table",null,[I1,e("tbody",null,[E1,e("tr",null,[F1,e("td",D1,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[R1]),_:1})])])])]),B1,e("p",null,[n(o,{to:"/api/classes/purista_core.DefaultSecretStore.html"},{default:s(()=>[N1]),_:1})]),L1,e("p",null,[e("a",O1,[t("DefaultSecretStore/initDefaultSecretStore.impl.ts:4"),n(l)])]),A1,H1,e("p",null,[t("▸ "),j1,t("("),G1,t("): "),n(o,{to:"/api/classes/purista_core.DefaultStateStore.html"},{default:s(()=>[q1]),_:1})]),V1,e("table",null,[z1,e("tbody",null,[Z1,e("tr",null,[U1,e("td",Q1,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[K1]),_:1})])])])]),W1,e("p",null,[n(o,{to:"/api/classes/purista_core.DefaultStateStore.html"},{default:s(()=>[$1]),_:1})]),Y1,e("p",null,[e("a",J1,[t("DefaultStateStore/initDefaultStateStore.impl.ts:4"),n(l)])]),X1,ef,e("p",null,[t("▸ "),tf,t("("),nf,t(", "),of,t("): "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[sf]),_:1})]),lf,df,e("table",null,[af,e("tbody",null,[e("tr",null,[cf,e("td",rf,[n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[uf]),_:1})])]),hf])]),_f,e("p",null,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[pf]),_:1})]),ff,e("p",null,[e("a",gf,[t("DefaultLogger/initLogger.impl.ts:13"),n(l)])]),mf,yf,bf,xf,vf,e("table",null,[Sf,e("tbody",null,[e("tr",null,[Tf,e("td",kf,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[Cf]),_:1})]),Pf])])]),wf,Mf,If,Ef,e("p",null,[e("a",Ff,[t("core/types/isCustomMessage.impl.ts:10"),n(l)])]),Df,e("p",null,[e("a",Rf,[t("core/HttpServer/types/isHttpExposedServiceMeta.impl.ts:8"),n(l)])]),Bf,Nf,Lf,Of,e("table",null,[Af,e("tbody",null,[e("tr",null,[Hf,e("td",jf,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[Gf]),_:1})])])])]),qf,Vf,zf,e("p",null,[e("a",Zf,[t("core/types/infoType/isInfoMessage.impl.ts:4"),n(l)])]),Uf,Qf,Kf,Wf,e("table",null,[$f,e("tbody",null,[e("tr",null,[Yf,e("td",Jf,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[Xf]),_:1})])])])]),eg,tg,ng,e("p",null,[e("a",og,[t("core/types/infoType/isInfoServiceFunctionAdded.impl.ts:5"),n(l)])]),sg,e("table",null,[lg,e("tbody",null,[e("tr",null,[dg,e("td",ag,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[ig]),_:1})])]),e("tr",null,[cg,e("td",rg,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[ug]),_:1})])]),e("tr",null,[hg,e("td",_g,[n(o,{to:"/api/modules/purista_core.html#subscriptionstorageentry"},{default:s(()=>[pg]),_:1})])])])]),fg,gg,mg,e("p",null,[e("a",yg,[t("DefaultEventBridge/isMessageMatchingSubscription.impl.ts:4"),n(l)])]),bg,e("p",null,[e("a",xg,[t("helper/throwIfNotValidMessage.impl.ts:10"),n(l)])]),vg,e("table",null,[Sg,e("tbody",null,[e("tr",null,[Tg,e("td",kg,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[Cg]),_:1})])]),Pg,wg,Mg,Ig,Eg,Fg])]),Dg,e("p",null,[e("a",Rg,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:31"),n(l)])]),Bg,e("p",null,[t("Ƭ "),Ng,t("<"),Lg,t(", "),Og,t(", "),Ag,t(", "),Hg,t(", "),jg,t(", "),Gg,t(">: ("),qg,t(": "),Vg,t(", "),zg,t(": "),n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[Zg]),_:1}),t("<"),Ug,t(", "),Qg,t(">, "),Kg,t(": "),Wg,t("<"),$g,t(">, "),Yg,t(": "),Jg,t("<"),Xg,t(">, "),em,t(": "),tm,t("<"),nm,t(">) => "),om,t("<"),sm,t(">")]),lm,e("table",null,[dm,e("tbody",null,[e("tr",null,[am,e("td",im,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[cm]),_:1})])]),rm,um,hm,_m,pm])]),fm,e("table",null,[gm,e("tbody",null,[mm,e("tr",null,[ym,e("td",bm,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[xm]),_:1}),t("<"),vm,t(", "),Sm,t(">")])]),Tm,km,Cm])]),Pm,wm,Mm,e("p",null,[e("a",Im,[t("core/types/commandType/CommandAfterGuardHook.ts:10"),n(l)])]),Em,Fm,e("p",null,[t("Ƭ "),Dm,t("<"),Rm,t(", "),Bm,t(", "),Nm,t(", "),Lm,t(", "),Om,t(">: ("),Am,t(": "),Hm,t(", "),jm,t(": "),n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[Gm]),_:1}),t("<"),qm,t(", "),Vm,t(">, "),zm,t(": "),Zm,t("<"),Um,t(">, "),Qm,t(": "),Km,t("<"),Wm,t(">) => "),$m,t("<"),Ym,t(">")]),Jm,e("table",null,[Xm,e("tbody",null,[e("tr",null,[ey,e("td",ty,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[ny]),_:1})])]),oy,sy,ly,dy])]),ay,e("table",null,[iy,e("tbody",null,[cy,e("tr",null,[ry,e("td",uy,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[hy]),_:1}),t("<"),_y,t(", "),py,t(">")])]),fy,gy])]),my,yy,by,e("p",null,[e("a",xy,[t("core/types/commandType/CommandBeforeGuardHook.ts:11"),n(l)])]),vy,e("table",null,[Sy,e("tbody",null,[e("tr",null,[Ty,e("td",ky,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[Cy]),_:1}),t(" = "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[Py]),_:1})])]),e("tr",null,[wy,e("td",My,[n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[Iy]),_:1})])]),Ey,Fy,Dy,Ry,By,Ny])]),Ly,e("table",null,[Oy,e("tbody",null,[e("tr",null,[Ay,e("td",Hy,[n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[jy]),_:1}),t("<"),Gy,t(", "),qy,t(", "),Vy,t(", "),zy,t(", "),Zy,t(", "),Uy,t(">")]),Qy]),Ky,Wy,e("tr",null,[$y,e("td",Yy,[n(o,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:s(()=>[Jy]),_:1})]),Xy]),eb,e("tr",null,[tb,e("td",nb,[t("{ "),ob,t(": "),sb,t("<"),lb,t(", "),n(o,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:s(()=>[db]),_:1}),t("<"),ab,t(", "),ib,t(", "),cb,t(", "),rb,t(", "),ub,t(", "),hb,t(">> ; "),_b,t(": "),pb,t("<"),fb,t(", "),n(o,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:s(()=>[gb]),_:1}),t("<"),mb,t(", "),yb,t(", "),bb,t(", "),xb,t(", "),vb,t(">> ; "),Sb,t(": { "),Tb,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[kb]),_:1}),t("<"),Cb,t(", "),Pb,t(", "),wb,t("> ; "),Mb,t(": "),Ib,t(" ; "),Eb,t(": "),Fb,t(" } ; "),Db,t(": { "),Rb,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[Bb]),_:1}),t("<"),Nb,t(", "),Lb,t(", "),Ob,t(", "),Ab,t(", "),Hb,t("> ; "),jb,t(": "),Gb,t(" } }")]),qb]),e("tr",null,[Vb,e("td",zb,[Zb,t("<"),Ub,t(", "),n(o,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:s(()=>[Qb]),_:1}),t("<"),Kb,t(", "),Wb,t(", "),$b,t(", "),Yb,t(", "),Jb,t(", "),Xb,t(">>")]),ex]),e("tr",null,[tx,e("td",nx,[ox,t("<"),sx,t(", "),n(o,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:s(()=>[lx]),_:1}),t("<"),dx,t(", "),ax,t(", "),ix,t(", "),cx,t(", "),rx,t(">>")]),ux]),e("tr",null,[hx,e("td",_x,[t("{ "),px,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[fx]),_:1}),t("<"),gx,t(", "),mx,t(", "),yx,t("> ; "),bx,t(": "),xx,t(" ; "),vx,t(": "),Sx,t(" }")]),Tx]),e("tr",null,[kx,e("td",Cx,[n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[Px]),_:1}),t("<"),wx,t(", "),Mx,t(", "),Ix,t(">")]),Ex]),Fx,Dx,e("tr",null,[Rx,e("td",Bx,[t("{ "),Nx,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[Lx]),_:1}),t("<"),Ox,t(", "),Ax,t(", "),Hx,t(", "),jx,t(", "),Gx,t("> ; "),qx,t(": "),Vx,t(" }")]),zx]),e("tr",null,[Zx,e("td",Ux,[n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[Qx]),_:1}),t("<"),Kx,t(", "),Wx,t(", "),$x,t(", "),Yx,t(", "),Jx,t(">")]),Xx]),e3,t3])]),n3,e("p",null,[e("a",o3,[t("core/types/commandType/CommandDefinition.ts:17"),n(l)])]),s3,l3,e("p",null,[t("Ƭ "),d3,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[a3]),_:1}),t("<{ "),i3,t(": "),c3,t(" ; "),r3,t(": "),u3,t(" ; "),h3,t(": "),n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[_3]),_:1}),t(" ; "),p3,t(": "),f3,t(" ; "),g3,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[m3]),_:1}),t(" ; "),y3,t(": { "),b3,t(": "),x3,t(" ; "),v3,t(": "),S3,t(" ; "),T3,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[k3]),_:1}),t(" } ; "),C3,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessagesenderaddress"},{default:s(()=>[P3]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[w3]),_:1}),t(">")]),M3,I3,e("p",null,[e("a",E3,[t("core/types/commandType/CommandErrorResponse.ts:13"),n(l)])]),F3,D3,e("p",null,[t("Ƭ "),R3,t("<"),B3,t(", "),N3,t(", "),L3,t(", "),O3,t(", "),A3,t(", "),H3,t(">: ("),j3,t(": "),G3,t(", "),q3,t(": "),n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[V3]),_:1}),t("<"),z3,t(", "),Z3,t(">, "),U3,t(": "),Q3,t("<"),K3,t(">, "),W3,t(": "),$3,t("<"),Y3,t(">) => "),J3,t("<"),X3,t(">")]),ev,e("table",null,[tv,e("tbody",null,[e("tr",null,[nv,e("td",ov,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[sv]),_:1})])]),lv,dv,av,iv,cv])]),rv,e("table",null,[uv,e("tbody",null,[hv,e("tr",null,[_v,e("td",pv,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[fv]),_:1}),t("<"),gv,t(", "),mv,t(">")])]),yv,bv])]),xv,vv,Sv,e("p",null,[e("a",Tv,[t("core/types/commandType/CommandFunction.ts:9"),n(l)])]),kv,Cv,e("p",null,[t("Ƭ "),Pv,t("<"),wv,t(", "),Mv,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Iv]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[Ev]),_:1}),t(" & "),n(o,{to:"/api/modules/purista_core.html#commandfunctioncontextenhancements"},{default:s(()=>[Fv]),_:1}),t("<"),Dv,t(", "),Rv,t(">>")]),Bv,e("p",null,[e("a",Nv,[t("core/types/commandType/CommandFunctionContext.ts:47"),n(l)])]),Lv,e("table",null,[Ov,e("tbody",null,[e("tr",null,[Av,e("td",Hv,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[jv]),_:1})]),Gv]),e("tr",null,[qv,e("td",Vv,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[zv]),_:1})]),Zv]),e("tr",null,[Uv,e("td",Qv,[Kv,t("<"),n(o,{to:"/api/modules/purista_core.html#command"},{default:s(()=>[Wv]),_:1}),t("<"),$v,t(", "),Yv,t(">>")]),Jv])])]),Xv,e("p",null,[e("a",e2,[t("core/types/commandType/CommandFunctionContext.ts:16"),n(l)])]),t2,n2,e("p",null,[t("Ƭ "),o2,t("<"),s2,t(">: "),n(o,{to:"/api/modules/purista_core.html#commandsuccessresponse"},{default:s(()=>[l2]),_:1}),t("<"),d2,t("> | "),n(o,{to:"/api/modules/purista_core.html#commanderrorresponse"},{default:s(()=>[a2]),_:1})]),i2,e("p",null,[e("a",c2,[t("core/types/commandType/CommandResponse.ts:9"),n(l)])]),r2,u2,e("p",null,[t("Ƭ "),h2,t("<"),_2,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[p2]),_:1}),t("<{ "),f2,t(": "),n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[g2]),_:1}),t(" ; "),m2,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[y2]),_:1}),t(" ; "),b2,t(": "),x2,t(" ; "),v2,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessagesenderaddress"},{default:s(()=>[S2]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[T2]),_:1}),t(">")]),k2,e("p",null,[e("a",C2,[t("core/types/commandType/CommandSuccessResponse.ts:13"),n(l)])]),P2,w2,e("p",null,[t("Ƭ "),M2,t("<"),I2,t(", "),E2,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[F2]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[D2]),_:1}),t(" & { "),R2,t(": "),B2,t("<"),n(o,{to:"/api/modules/purista_core.html#command"},{default:s(()=>[N2]),_:1}),t("<"),L2,t(", "),O2,t(">> }>")]),A2,e("p",null,[e("a",H2,[t("core/types/commandType/CommandTransformFunctionContext.ts:8"),n(l)])]),j2,G2,e("p",null,[t("Ƭ "),q2,t("<"),V2,t(", "),z2,t(", "),Z2,t(", "),U2,t(", "),Q2,t(">: ("),K2,t(": "),W2,t(", "),$2,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[Y2]),_:1}),t("<"),J2,t(", "),X2,t(">, "),e4,t(": "),t4,t("<"),n4,t(">, "),o4,t(": "),s4,t("<"),l4,t(">) => "),d4,t("<{ "),a4,t(": "),i4,t("<"),c4,t("> ; "),r4,t(": "),u4,t("<"),h4,t("> }>")]),_4,e("table",null,[p4,e("tbody",null,[f4,e("tr",null,[g4,e("td",m4,[n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[y4]),_:1}),t("<"),b4,t(", "),x4,t(">")])]),v4,S4])]),T4,e("p",null,[e("a",k4,[t("core/types/commandType/CommandTransformInputHook.ts:12"),n(l)])]),C4,P4,e("p",null,[t("Ƭ "),w4,t("<"),M4,t(", "),I4,t(", "),E4,t(", "),F4,t(", "),D4,t(">: ("),R4,t(": "),B4,t(", "),N4,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[L4]),_:1}),t("<"),O4,t(", "),A4,t(">, "),H4,t(": "),j4,t("<"),G4,t(">, "),q4,t(": "),V4,t("<"),z4,t(">) => "),Z4,t("<"),U4,t(">")]),Q4,e("table",null,[K4,e("tbody",null,[W4,e("tr",null,[$4,e("td",Y4,[n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[J4]),_:1}),t("<"),X4,t(", "),eS,t(">")])]),tS,nS])]),oS,sS,lS,e("p",null,[e("a",dS,[t("core/types/commandType/CommandTransformOutputHook.ts:7"),n(l)])]),aS,iS,cS,rS,uS,e("table",null,[hS,e("tbody",null,[e("tr",null,[_S,e("td",pS,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[fS]),_:1})])])])]),gS,mS,yS,bS,e("p",null,[e("a",xS,[t("core/types/commandType/isCommand.impl.ts:12"),n(l)])]),vS,e("p",null,[e("a",SS,[t("core/types/commandType/isCommandErrorResponse.impl.ts:12"),n(l)])]),TS,kS,CS,PS,wS,e("table",null,[MS,e("tbody",null,[e("tr",null,[IS,e("td",ES,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[FS]),_:1})])])])]),DS,RS,BS,NS,e("p",null,[e("a",LS,[t("core/types/commandType/isCommandResponse.impl.ts:12"),n(l)])]),OS,AS,HS,jS,GS,e("table",null,[qS,e("tbody",null,[e("tr",null,[VS,e("td",zS,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[ZS]),_:1})])])])]),US,QS,KS,WS,e("p",null,[e("a",$S,[t("core/types/commandType/isCommandSuccessResponse.impl.ts:12"),n(l)])]),YS,e("p",null,[e("a",JS,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:61"),n(l)])]),XS,e("p",null,[e("a",eT,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:17"),n(l)])]),tT,nT,oT,e("p",null,[e("a",sT,[t("core/EventBridge/types/EventBridge.ts:19"),n(l)])]),lT,dT,aT,iT,e("table",null,[cT,e("tbody",null,[rT,uT,hT,e("tr",null,[_T,e("td",pT,[n(o,{to:"/api/classes/purista_core.UnhandledError.html"},{default:s(()=>[fT]),_:1}),t(" | "),gT]),mT]),yT])]),bT,e("p",null,[e("a",xT,[t("core/EventBridge/types/EventBridgeEvents.ts:20"),n(l)])]),vT,ST,TT,kT,e("table",null,[CT,e("tbody",null,[e("tr",null,[PT,e("td",wT,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[MT]),_:1})])])])]),IT,ET,FT,e("p",null,[e("a",DT,[t("core/helper/getCommandQueueName.impl.ts:10"),n(l)])]),RT,e("p",null,[e("a",BT,[t("helper/string/convertToCamelCase.impl.ts:9"),n(l)])]),NT,e("p",null,[e("a",LT,[t("helper/string/convertToKebabCase.impl.ts:9"),n(l)])]),OT,e("p",null,[e("a",AT,[t("helper/string/convertToPascalCase.impl.ts:9"),n(l)])]),HT,e("p",null,[e("a",jT,[t("helper/string/convertToSnakeCase.impl.ts:9"),n(l)])]),GT,qT,e("p",null,[t("▸ "),VT,t("("),zT,t(", "),ZT,t(", "),UT,t(", "),QT,t("): "),KT,t("<"),WT,t("<{ "),$T,t(": "),YT,t(" ; "),JT,t(": "),XT,t(" ; "),e5,t(": "),t5,t(" ; "),n5,t(": "),o5,t(" ; "),s5,t(": "),l5,t(" ; "),d5,t(": "),a5,t(" ; "),i5,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[c5]),_:1}),t(" ; "),r5,t(": "),u5,t(" ; "),h5,t(": { "),_5,t(": "),p5,t(" ; "),f5,t(": "),g5,t(" ; "),m5,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[y5]),_:1}),t(" } ; "),b5,t(": "),x5,t(" ; "),v5,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),S5,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),T5,t(": "),k5,t(" ; "),C5,t(": "),P5,t(" }, "),w5,t(">>")]),M5,I5,e("table",null,[E5,e("tbody",null,[F5,e("tr",null,[D5,e("td",R5,[B5,t("<{ "),N5,t(": "),L5,t(" ; "),O5,t(": "),A5,t(" ; "),H5,t(": "),j5,t(" ; "),G5,t(": "),q5,t(" ; "),V5,t(": "),z5,t(" ; "),Z5,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[U5]),_:1}),t(" ; "),Q5,t(": "),K5,t(" ; "),W5,t(": { "),$5,t(": "),Y5,t(" ; "),J5,t(": "),X5,t(" } ; "),ek,t(": "),tk,t(" ; "),nk,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[ok]),_:1}),t(" ; "),sk,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),lk,t(": "),dk,t(" ; "),ak,t(": "),ik,t(" }>")]),ck]),e("tr",null,[rk,e("td",uk,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[hk]),_:1})]),_k]),pk])]),fk,e("p",null,[gk,t("<"),mk,t("<{ "),yk,t(": "),bk,t(" ; "),xk,t(": "),vk,t(" ; "),Sk,t(": "),Tk,t(" ; "),kk,t(": "),Ck,t(" ; "),Pk,t(": "),wk,t(" ; "),Mk,t(": "),Ik,t(" ; "),Ek,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[Fk]),_:1}),t(" ; "),Dk,t(": "),Rk,t(" ; "),Bk,t(": { "),Nk,t(": "),Lk,t(" ; "),Ok,t(": "),Ak,t(" ; "),Hk,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[jk]),_:1}),t(" } ; "),Gk,t(": "),qk,t(" ; "),Vk,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),zk,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Zk,t(": "),Uk,t(" ; "),Qk,t(": "),Kk,t(" }, "),Wk,t(">>")]),$k,Yk,e("p",null,[e("a",Jk,[t("core/helper/createErrorResponse.impl.ts:18"),n(l)])]),Xk,e6,e("p",null,[t("▸ "),t6,t("("),n6,t(", "),o6,t(", "),s6,t("): "),n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[l6]),_:1})]),d6,e("table",null,[a6,e("tbody",null,[e("tr",null,[i6,e("td",c6,[n(o,{to:"/api/modules/purista_core.html#infomessagetype"},{default:s(()=>[r6]),_:1})]),u6]),h6,_6,p6,f6,g6,e("tr",null,[m6,e("td",y6,[b6,t("<"),n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[x6]),_:1}),t(">")]),v6])])]),S6,e("p",null,[n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[T6]),_:1})]),k6,e("p",null,[e("a",C6,[t("core/helper/createInfoMessage.impl.ts:14"),n(l)])]),P6,w6,e("p",null,[t("▸ "),M6,t("<"),I6,t(">("),E6,t(", "),F6,t(", "),D6,t(", "),R6,t(", "),B6,t(", "),N6,t("): "),L6,t("<{ "),O6,t(": "),A6,t(" ; "),H6,t(": "),j6,t(" ; "),G6,t(": "),q6,t(" ; "),V6,t(": "),z6,t(" ; "),Z6,t(": "),U6,t(" ; "),Q6,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[K6]),_:1}),t(" ; "),W6,t(": "),$6,t(" ; "),Y6,t(": "),J6,t(" ; "),X6,t(": "),e9,t(" ; "),t9,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),n9,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),o9,t(": "),s9,t(" ; "),l9,t(": "),d9,t(" }>")]),a9,e("table",null,[i9,e("tbody",null,[c9,e("tr",null,[r9,e("td",u9,[h9,t("<{ "),_9,t(": "),p9,t(" ; "),f9,t(": "),g9,t(" ; "),m9,t(": "),y9,t(" ; "),b9,t(": "),x9,t(" ; "),v9,t(": "),S9,t(" ; "),T9,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[k9]),_:1}),t(" ; "),C9,t(": "),P9,t(" ; "),w9,t(": { "),M9,t(": "),I9,t(" ; "),E9,t(": "),F9,t(" } ; "),D9,t(": "),R9,t(" ; "),B9,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[N9]),_:1}),t(" ; "),L9,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),O9,t(": "),A9,t(" ; "),H9,t(": "),j9,t(" }>")]),G9]),q9,V9,z9,Z9])]),U9,e("p",null,[Q9,t("<{ "),K9,t(": "),W9,t(" ; "),$9,t(": "),Y9,t(" ; "),J9,t(": "),X9,t(" ; "),e0,t(": "),t0,t(" ; "),n0,t(": "),o0,t(" ; "),s0,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[l0]),_:1}),t(" ; "),d0,t(": "),a0,t(" ; "),i0,t(": "),c0,t(" ; "),r0,t(": "),u0,t(" ; "),h0,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),_0,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),p0,t(": "),f0,t(" ; "),g0,t(": "),m0,t(" }>")]),y0,e("p",null,[e("a",b0,[t("core/helper/createSuccessResponse.impl.ts:15"),n(l)])]),x0,e("table",null,[v0,e("tbody",null,[e("tr",null,[S0,e("td",T0,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[k0]),_:1})])]),C0])]),P0,w0,M0,e("p",null,[e("a",I0,[t("core/helper/serializeOtp.impl.ts:26"),n(l)])]),E0,e("table",null,[F0,e("tbody",null,[e("tr",null,[D0,e("td",R0,[B0,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[N0]),_:1}),t(">")]),L0]),O0])]),A0,H0,j0,e("p",null,[e("a",G0,[t("core/helper/getCleanedMessage.impl.ts:15"),n(l)])]),q0,V0,z0,Z0,e("table",null,[U0,e("tbody",null,[e("tr",null,[Q0,e("td",K0,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[W0]),_:1})])])])]),$0,Y0,J0,e("p",null,[e("a",X0,[t("core/helper/getErrorMessageForCode.impl.ts:10"),n(l)])]),e8,e("p",null,[e("a",t8,[t("core/helper/getNewCorrelationId.impl.ts:10"),n(l)])]),n8,e("p",null,[e("a",o8,[t("core/helper/getNewEBMessageId.impl.ts:11"),n(l)])]),s8,e("p",null,[e("a",l8,[t("core/helper/getNewInstanceId.impl.ts:9"),n(l)])]),d8,e("p",null,[e("a",a8,[t("core/helper/getNewTraceId.impl.ts:9"),n(l)])]),i8,c8,r8,u8,e("table",null,[h8,e("tbody",null,[e("tr",null,[_8,e("td",p8,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[f8]),_:1})])])])]),g8,m8,y8,e("p",null,[e("a",b8,[t("core/helper/getSubscriptionQueueName.impl.ts:10"),n(l)])]),x8,e("p",null,[e("a",v8,[t("core/helper/getUniqueId.impl.ts:11"),n(l)])]),S8,e("table",null,[T8,e("tbody",null,[e("tr",null,[k8,e("td",C8,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[P8]),_:1})]),w8,M8]),e("tr",null,[I8,e("td",E8,[n(o,{to:"/api/modules/purista_core.html#shutdownentry"},{default:s(()=>[F8]),_:1}),t("[]")]),D8,R8]),B8])]),N8,L8,O8,e("p",null,[e("a",A8,[t("helper/gracefulShutdown.impl.ts:36"),n(l)])]),H8,e("p",null,[e("a",j8,[t("core/helper/isDevelop.impl.ts:6"),n(l)])]),G8,e("p",null,[e("a",q8,[t("core/helper/serializeOtp.impl.ts:11"),n(l)])]),V8,z8,Z8,U8,e("p",null,[e("a",Q8,[t("core/types/ServiceEvents.ts:11"),n(l)])]),K8,e("p",null,[e("a",W8,[t("core/Service/Service.impl.ts:74"),n(l)])]),$8,e("table",null,[Y8,e("tbody",null,[J8,X8,e("tr",null,[e7,e("td",t7,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[n7]),_:1}),t(" = "),n(o,{to:"/api/classes/purista_core.Service.html"},{default:s(()=>[o7]),_:1}),t("<"),s7,t(">")])])])]),l7,e("p",null,[e("a",d7,[t("ServiceBuilder/ServiceBuilder.impl.ts:38"),n(l)])]),a7,e("p",null,[e("a",i7,[t("core/types/ServiceClass.ts:11"),n(l)])]),c7,e("table",null,[r7,e("tbody",null,[e("tr",null,[u7,e("td",h7,[n(o,{to:"/api/modules/purista_core.html#commanddefinitionlist"},{default:s(()=>[_7]),_:1}),t("<"),p7,t(">")]),f7]),g7,e("tr",null,[m7,e("td",y7,[n(o,{to:"/api/interfaces/purista_core.ConfigStore.html"},{default:s(()=>[b7]),_:1})]),x7]),e("tr",null,[v7,e("td",S7,[n(o,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:s(()=>[T7]),_:1})]),k7]),e("tr",null,[C7,e("td",P7,[n(o,{to:"/api/modules/purista_core.html#serviceinfotype"},{default:s(()=>[w7]),_:1})]),M7]),e("tr",null,[I7,e("td",E7,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[F7]),_:1})]),D7]),e("tr",null,[R7,e("td",B7,[n(o,{to:"/api/interfaces/purista_core.SecretStore.html"},{default:s(()=>[N7]),_:1})]),L7]),O7,e("tr",null,[A7,e("td",H7,[n(o,{to:"/api/interfaces/purista_core.StateStore.html"},{default:s(()=>[j7]),_:1})]),G7]),e("tr",null,[q7,e("td",V7,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinitionlist"},{default:s(()=>[z7]),_:1}),t("<"),Z7,t(">")]),U7])])]),Q7,e("p",null,[e("a",K7,[t("core/types/ServiceConstructorInput.ts:15"),n(l)])]),W7,e("table",null,[$7,e("tbody",null,[Y7,J7,e("tr",null,[X7,e("td",eC,[t("{ "),tC,t(": "),nC,t(" ; "),oC,t(": "),n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[sC]),_:1}),t(" ; "),lC,t(": "),n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[dC]),_:1}),t(" }")]),aC]),iC,e("tr",null,[cC,e("td",rC,[n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[uC]),_:1})]),hC]),e("tr",null,[_C,e("td",pC,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[fC]),_:1})]),gC]),e("tr",null,[mC,e("td",yC,[t("{ "),bC,t(": "),n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[xC]),_:1}),t(" ; "),vC,t(": "),SC,t(" ; "),TC,t(": "),n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[kC]),_:1}),t(" }")]),CC]),e("tr",null,[PC,e("td",wC,[n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[MC]),_:1})]),IC]),EC,e("tr",null,[FC,e("td",DC,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[RC]),_:1})]),BC]),NC,LC,OC,e("tr",null,[AC,e("td",HC,[t("{ "),jC,t(": "),GC,t(" ; "),qC,t(": "),VC,t(" ; "),zC,t(": "),n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[ZC]),_:1}),t(" }")]),UC]),QC,KC,e("tr",null,[WC,e("td",$C,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[YC]),_:1})]),JC]),e("tr",null,[XC,e("td",eP,[t("{ "),tP,t(": "),nP,t(" ; "),oP,t(": "),sP,t(" ; "),lP,t(": "),n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[dP]),_:1}),t(" }")]),aP]),iP,cP,e("tr",null,[rP,e("td",uP,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[hP]),_:1})]),_P])])]),pP,e("p",null,[e("a",fP,[t("core/types/ServiceEvents.ts:54"),n(l)])]),gP,e("p",null,[e("a",mP,[t("core/ConfigStore/ConfigStoreBaseClass.impl.ts:11"),n(l)])]),yP,e("p",null,[e("a",bP,[t("DefaultConfigStore/DefaultConfigStore.impl.ts:25"),n(l)])]),xP,e("p",null,[e("a",vP,[t("DefaultSecretStore/DefaultSecretStore.impl.ts:33"),n(l)])]),SP,TP,kP,e("p",null,[e("a",CP,[t("DefaultStateStore/DefaultStateStore.impl.ts:11"),n(l)])]),PP,e("p",null,[e("a",wP,[t("core/SecretStore/SecretStoreBaseClass.impl.ts:11"),n(l)])]),MP,e("p",null,[e("a",IP,[t("core/StateStore/StateStoreBaseClass.impl.ts:11"),n(l)])]),EP,FP,DP,e("p",null,[e("a",RP,[t("core/ConfigStore/types/ConfigStore.ts:10"),n(l)])]),BP,NP,LP,e("p",null,[e("a",OP,[t("core/SecretStore/types/SecretStore.ts:9"),n(l)])]),AP,HP,jP,e("p",null,[e("a",GP,[t("core/StateStore/types/StateStore.ts:10"),n(l)])]),qP,e("p",null,[e("a",VP,[t("core/ConfigStore/types/ConfigDeleteFunction.ts:2"),n(l)])]),zP,e("p",null,[e("a",ZP,[t("core/ConfigStore/types/ConfigGetterFunction.ts:2"),n(l)])]),UP,e("p",null,[e("a",QP,[t("core/ConfigStore/types/ConfigSetterFunction.ts:2"),n(l)])]),KP,e("p",null,[e("a",WP,[t("core/SecretStore/types/SecretDeleteFunction.ts:2"),n(l)])]),$P,e("p",null,[e("a",YP,[t("core/SecretStore/types/SecretGetterFunction.ts:2"),n(l)])]),JP,e("p",null,[e("a",XP,[t("core/SecretStore/types/SecretSetterFunction.ts:2"),n(l)])]),ew,e("p",null,[e("a",tw,[t("core/StateStore/types/StateDeleteFunction.ts:2"),n(l)])]),nw,e("p",null,[e("a",ow,[t("core/StateStore/types/StateGetterFunction.ts:2"),n(l)])]),sw,e("p",null,[e("a",lw,[t("core/StateStore/types/StateSetterFunction.ts:2"),n(l)])]),dw,e("table",null,[aw,e("tbody",null,[e("tr",null,[iw,e("td",cw,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[rw]),_:1}),t(" = "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[uw]),_:1})])]),hw,_w,pw,fw,gw,mw])]),yw,e("p",null,[e("a",bw,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:30"),n(l)])]),xw,e("table",null,[vw,e("tbody",null,[Sw,e("tr",null,[Tw,e("td",kw,[n(o,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:s(()=>[Cw]),_:1})]),Pw]),ww,e("tr",null,[Mw,e("td",Iw,[n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[Ew]),_:1})]),Fw]),Dw,Rw,Bw,e("tr",null,[Nw,e("td",Lw,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[Ow]),_:1})]),Aw]),e("tr",null,[Hw,e("td",jw,[t("{ "),Gw,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[qw]),_:1}),t(" ; "),Vw,t(": "),zw,t(" ; "),Zw,t(": "),Uw,t(" ; "),Qw,t(": "),Kw,t(" }")]),Ww]),e("tr",null,[$w,e("td",Yw,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[Jw]),_:1})]),Xw]),eM,tM,nM,e("tr",null,[oM,e("td",sM,[t("{ "),lM,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[dM]),_:1}),t(" ; "),aM,t(": "),iM,t(" ; "),cM,t(": "),rM,t(" ; "),uM,t(": "),hM,t(" }")]),_M]),e("tr",null,[pM,e("td",fM,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[gM]),_:1})]),mM]),yM,bM,xM,e("tr",null,[vM,e("td",SM,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[TM]),_:1})]),kM])])]),CM,e("p",null,[e("a",PM,[t("core/types/subscription/Subscription.ts:12"),n(l)])]),wM,MM,e("p",null,[t("Ƭ "),IM,t("<"),EM,t(", "),FM,t(", "),DM,t(", "),RM,t(">: ("),BM,t(": "),NM,t(", "),LM,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[OM]),_:1}),t(", "),AM,t(": "),HM,t("<"),jM,t(">, "),GM,t(": "),qM,t("<"),VM,t(">, "),zM,t(": "),ZM,t("<"),UM,t(">) => "),QM,t("<"),KM,t(">")]),WM,e("table",null,[$M,e("tbody",null,[e("tr",null,[YM,e("td",JM,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[XM]),_:1})])]),eI,tI,nI])]),oI,e("table",null,[sI,e("tbody",null,[lI,e("tr",null,[dI,e("td",aI,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[iI]),_:1})])]),cI,rI,uI])]),hI,_I,pI,e("p",null,[e("a",fI,[t("core/types/subscription/SubscriptionAfterGuardHook.ts:10"),n(l)])]),gI,mI,e("p",null,[t("Ƭ "),yI,t("<"),bI,t(", "),xI,t(", "),vI,t(">: ("),SI,t(": "),TI,t(", "),kI,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[CI]),_:1}),t(", "),PI,t(": "),wI,t("<"),MI,t(">, "),II,t(": "),EI,t("<"),FI,t(">) => "),DI,t("<"),RI,t(">")]),BI,e("table",null,[NI,e("tbody",null,[e("tr",null,[LI,e("td",OI,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[AI]),_:1})])]),HI,jI])]),GI,e("table",null,[qI,e("tbody",null,[VI,e("tr",null,[zI,e("td",ZI,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[UI]),_:1})])]),QI,KI])]),WI,$I,YI,e("p",null,[e("a",JI,[t("core/types/subscription/SubscriptionBeforeGuardHook.ts:11"),n(l)])]),XI,e("table",null,[eE,e("tbody",null,[e("tr",null,[tE,e("td",nE,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[oE]),_:1}),t(" = "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[sE]),_:1})])]),e("tr",null,[lE,e("td",dE,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinitionmetadatabase"},{default:s(()=>[aE]),_:1})])]),iE,cE,rE,uE,hE,_E])]),pE,e("table",null,[fE,e("tbody",null,[e("tr",null,[gE,e("td",mE,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunction"},{default:s(()=>[yE]),_:1}),t("<"),bE,t(", "),xE,t(", "),vE,t(", "),SE,t(", "),TE,t(", "),kE,t(">")]),CE]),PE,e("tr",null,[wE,e("td",ME,[n(o,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:s(()=>[IE]),_:1})]),EE]),FE,e("tr",null,[DE,e("td",RE,[t("{ "),BE,t(": "),NE,t("<"),LE,t(", "),n(o,{to:"/api/modules/purista_core.html#subscriptionafterguardhook"},{default:s(()=>[OE]),_:1}),t("<"),AE,t(", "),HE,t(", "),jE,t(", "),GE,t(">> ; "),qE,t(": "),VE,t("<"),zE,t(", "),n(o,{to:"/api/modules/purista_core.html#subscriptionbeforeguardhook"},{default:s(()=>[ZE]),_:1}),t("<"),UE,t(", "),QE,t(", "),KE,t(">> ; "),WE,t(": { "),$E,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:s(()=>[YE]),_:1}),t("<"),JE,t(", "),XE,t(", "),eF,t("> ; "),tF,t(": "),nF,t(" ; "),oF,t(": "),sF,t(" } ; "),lF,t(": { "),dF,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:s(()=>[aF]),_:1}),t("<"),iF,t(", "),cF,t(", "),rF,t(", "),uF,t("> ; "),hF,t(": "),_F,t(" } }")]),pF]),e("tr",null,[fF,e("td",gF,[mF,t("<"),yF,t(", "),n(o,{to:"/api/modules/purista_core.html#subscriptionafterguardhook"},{default:s(()=>[bF]),_:1}),t("<"),xF,t(", "),vF,t(", "),SF,t(", "),TF,t(">>")]),kF]),e("tr",null,[CF,e("td",PF,[wF,t("<"),MF,t(", "),n(o,{to:"/api/modules/purista_core.html#subscriptionbeforeguardhook"},{default:s(()=>[IF]),_:1}),t("<"),EF,t(", "),FF,t(", "),DF,t(">>")]),RF]),e("tr",null,[BF,e("td",NF,[t("{ "),LF,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:s(()=>[OF]),_:1}),t("<"),AF,t(", "),HF,t(", "),jF,t("> ; "),GF,t(": "),qF,t(" ; "),VF,t(": "),zF,t(" }")]),ZF]),e("tr",null,[UF,e("td",QF,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:s(()=>[KF]),_:1}),t("<"),WF,t(", "),$F,t(", "),YF,t(">")]),JF]),XF,eD,e("tr",null,[tD,e("td",nD,[t("{ "),oD,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:s(()=>[sD]),_:1}),t("<"),lD,t(", "),dD,t(", "),aD,t(", "),iD,t("> ; "),cD,t(": "),rD,t(" }")]),uD]),e("tr",null,[hD,e("td",_D,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:s(()=>[pD]),_:1}),t("<"),fD,t(", "),gD,t(", "),mD,t(", "),yD,t(">")]),bD]),xD,e("tr",null,[vD,e("td",SD,[n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[TD]),_:1})]),kD]),CD,e("tr",null,[PD,e("td",wD,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[MD]),_:1})]),ID]),e("tr",null,[ED,e("td",FD,[t("{ "),DD,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[RD]),_:1}),t(" ; "),BD,t(": "),ND,t(" ; "),LD,t(": "),OD,t(" ; "),AD,t(": "),HD,t(" }")]),jD]),e("tr",null,[GD,e("td",qD,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[VD]),_:1})]),zD]),ZD,UD,QD,e("tr",null,[KD,e("td",WD,[t("{ "),$D,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[YD]),_:1}),t(" ; "),JD,t(": "),XD,t(" ; "),eR,t(": "),tR,t(" ; "),nR,t(": "),oR,t(" }")]),sR]),e("tr",null,[lR,e("td",dR,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[aR]),_:1})]),iR]),cR,rR,uR,hR,_R])]),pR,e("p",null,[e("a",fR,[t("core/types/subscription/SubscriptionDefinition.ts:20"),n(l)])]),gR,mR,e("p",null,[t("Ƭ "),yR,t("<"),bR,t(", "),xR,t(", "),vR,t(", "),SR,t(", "),TR,t(", "),kR,t(">: ("),CR,t(": "),PR,t(", "),wR,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[MR]),_:1}),t(", "),IR,t(": "),ER,t("<"),FR,t(">, "),DR,t(": "),RR,t("<"),BR,t(">) => "),NR,t("<"),LR,t(">")]),OR,e("table",null,[AR,e("tbody",null,[e("tr",null,[HR,e("td",jR,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[GR]),_:1})])]),qR,VR,zR,ZR,UR])]),QR,e("table",null,[KR,e("tbody",null,[WR,e("tr",null,[$R,e("td",YR,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[JR]),_:1})])]),XR,eB])]),tB,nB,oB,e("p",null,[e("a",sB,[t("core/types/subscription/SubscriptionFunction.ts:8"),n(l)])]),lB,dB,e("p",null,[t("Ƭ "),aB,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[iB]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[cB]),_:1}),t(" & "),n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontextenhancements"},{default:s(()=>[rB]),_:1}),t(">")]),uB,hB,e("p",null,[e("a",_B,[t("core/types/subscription/SubscriptionFunctionContext.ts:47"),n(l)])]),pB,e("table",null,[fB,e("tbody",null,[e("tr",null,[gB,e("td",mB,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[yB]),_:1})]),bB]),e("tr",null,[xB,e("td",vB,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[SB]),_:1})]),TB]),e("tr",null,[kB,e("td",CB,[PB,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[wB]),_:1}),t(">")]),MB])])]),IB,e("p",null,[e("a",EB,[t("core/types/subscription/SubscriptionFunctionContext.ts:16"),n(l)])]),FB,DB,e("p",null,[t("Ƭ "),RB,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[BB]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[NB]),_:1}),t(" & { "),LB,t(": "),OB,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[AB]),_:1}),t("> }>")]),HB,e("p",null,[e("a",jB,[t("core/types/subscription/SubscriptionTransformFunctionContext.ts:8"),n(l)])]),GB,qB,e("p",null,[t("Ƭ "),VB,t("<"),zB,t(", "),ZB,t(", "),UB,t(", "),QB,t(", "),KB,t(">: ("),WB,t(": "),$B,t(", "),YB,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[JB]),_:1}),t(", "),XB,t(": "),eN,t("<"),tN,t(">, "),nN,t(": "),oN,t("<"),sN,t(">) => "),lN,t("<{ "),dN,t(": "),aN,t("<"),iN,t("> ; "),cN,t(": "),rN,t("<"),uN,t("> }>")]),hN,e("table",null,[_N,e("tbody",null,[pN,e("tr",null,[fN,e("td",gN,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[mN]),_:1})])]),yN,bN])]),xN,e("p",null,[e("a",vN,[t("core/types/subscription/SubscriptionTransformInputHook.ts:6"),n(l)])]),SN,TN,e("p",null,[t("Ƭ "),kN,t("<"),CN,t(", "),PN,t(", "),wN,t(", "),MN,t(">: ("),IN,t(": "),EN,t(", "),FN,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[DN]),_:1}),t(", "),RN,t(": "),BN,t("<"),NN,t(">, "),LN,t(": "),ON,t("<"),AN,t(">) => "),HN,t("<"),jN,t(">")]),GN,e("table",null,[qN,e("tbody",null,[VN,e("tr",null,[zN,e("td",ZN,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[UN]),_:1})])]),QN,KN])]),WN,$N,YN,e("p",null,[e("a",JN,[t("core/types/subscription/SubscriptionTransformOutputHook.ts:8"),n(l)])]),XN,e("table",null,[eL,e("tbody",null,[e("tr",null,[tL,e("td",nL,[t("{ "),oL,t(": { "),sL,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[lL]),_:1}),t(" ; "),dL,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[aL]),_:1}),t(" ; "),iL,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[cL]),_:1}),t(" } ; "),rL,t(": "),n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[uL]),_:1}),t(" ; "),hL,t(": "),n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[_L]),_:1}),t(" ; "),pL,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[fL]),_:1}),t(" ; "),gL,t(": "),mL,t("<{ messageType: EBMessageType.Command; correlationId: string; receiver: EBMessageAddress; payload: { parameter: MessageParamsType; payload: MessagePayloadType; }; ... 8 more ...; sender: { ...; }; }> ; "),yL,t(": { "),bL,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[xL]),_:1}),t(" ; "),vL,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[SL]),_:1}),t(" ; "),TL,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[kL]),_:1}),t(" } ; "),CL,t(": <F>("),PL,t(": "),wL,t(", "),ML,t(": "),IL,t(", "),EL,t(": "),FL,t(" | "),DL,t(", "),RL,t(": ("),BL,t(": "),NL,t(") => "),LL,t("<"),OL,t(">) => "),AL,t("<"),HL,t("> ; "),jL,t(": { "),GL,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[qL]),_:1}),t(" ; "),VL,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[zL]),_:1}),t(" ; "),ZL,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[UL]),_:1}),t(" } ; "),QL,t(": <F>("),KL,t(": "),WL,t(", "),$L,t(": "),YL,t(", "),JL,t(": ("),XL,t(": "),eO,t(") => "),tO,t("<"),nO,t(">, "),oO,t(": "),sO,t(") => "),lO,t("<"),dO,t("> }")])]),e("tr",null,[aO,e("td",iO,[t("{ "),cO,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[rO]),_:1}),t(" ; "),uO,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[hO]),_:1}),t(" ; "),_O,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[pO]),_:1}),t(" }")])]),e("tr",null,[fO,e("td",gO,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[mO]),_:1})])]),e("tr",null,[yO,e("td",bO,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[xO]),_:1})])]),e("tr",null,[vO,e("td",SO,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[TO]),_:1})])]),e("tr",null,[kO,e("td",CO,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[PO]),_:1})])]),e("tr",null,[wO,e("td",MO,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[IO]),_:1})])]),e("tr",null,[EO,e("td",FO,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[DO]),_:1})])]),RO,e("tr",null,[BO,e("td",NO,[t("{ "),LO,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[OO]),_:1}),t(" ; "),AO,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[HO]),_:1}),t(" ; "),jO,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[GO]),_:1}),t(" }")])]),e("tr",null,[qO,e("td",VO,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[zO]),_:1})])]),e("tr",null,[ZO,e("td",UO,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[QO]),_:1})])]),e("tr",null,[KO,e("td",WO,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[$O]),_:1})])]),YO,e("tr",null,[JO,e("td",XO,[t("{ "),eA,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[tA]),_:1}),t(" ; "),nA,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[oA]),_:1}),t(" ; "),sA,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[lA]),_:1}),t(" }")])]),e("tr",null,[dA,e("td",aA,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[iA]),_:1})])]),e("tr",null,[cA,e("td",rA,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[uA]),_:1})])]),e("tr",null,[hA,e("td",_A,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[pA]),_:1})])]),fA,gA,mA,yA,bA,xA,vA,SA,TA,kA,CA,PA,wA,MA,IA,EA,FA,DA,RA,BA,NA,LA])]),OA,e("p",null,[e("a",AA,[t("mocks/getCommandContext.mock.ts:12"),n(l)])]),HA,jA,e("p",null,[t("▸ "),GA,t("("),qA,t(", "),VA,t(", "),zA,t("): "),ZA,t("<{ "),UA,t(": "),QA,t(" ; "),KA,t(": "),WA,t(" ; "),$A,t(": "),YA,t(" ; "),JA,t(": "),XA,t(" ; "),eH,t(": "),tH,t(" ; "),nH,t(": "),oH,t(" ; "),sH,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[lH]),_:1}),t(" ; "),dH,t(": "),aH,t(" ; "),iH,t(": { "),cH,t(": "),rH,t(" ; "),uH,t(": "),hH,t(" ; "),_H,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[pH]),_:1}),t(" } ; "),fH,t(": "),gH,t(" ; "),mH,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),yH,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),bH,t(": "),xH,t(" ; "),vH,t(": "),SH,t(" }>")]),TH,kH,e("table",null,[CH,e("tbody",null,[e("tr",null,[PH,e("td",wH,[n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[MH]),_:1}),t(" | "),n(o,{to:"/api/classes/purista_core.UnhandledError.html"},{default:s(()=>[IH]),_:1})]),EH]),e("tr",null,[FH,e("td",DH,[RH,t("<{ "),BH,t(": "),NH,t(" ; "),LH,t(": "),OH,t(" ; "),AH,t(": "),HH,t(" ; "),jH,t(": "),GH,t(" ; "),qH,t(": "),VH,t(" ; "),zH,t(": "),ZH,t(" ; "),UH,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[QH]),_:1}),t(" ; "),KH,t(": "),WH,t(" ; "),$H,t(": { "),YH,t(": "),JH,t(" ; "),XH,t(": "),ej,t(" ; "),tj,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[nj]),_:1}),t(" } ; "),oj,t(": "),sj,t(" ; "),lj,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),dj,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),aj,t(": "),ij,t(" ; "),cj,t(": "),rj,t(" }>")]),uj]),hj,_j,pj,fj,gj,mj,e("tr",null,[yj,e("td",bj,[n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[xj]),_:1})]),vj]),Sj,Tj,kj,Cj,Pj,e("tr",null,[wj,e("td",Mj,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Ij]),_:1})]),Ej]),Fj,Dj,Rj])]),Bj,e("p",null,[Nj,t("<{ "),Lj,t(": "),Oj,t(" ; "),Aj,t(": "),Hj,t(" ; "),jj,t(": "),Gj,t(" ; "),qj,t(": "),Vj,t(" ; "),zj,t(": "),Zj,t(" ; "),Uj,t(": "),Qj,t(" ; "),Kj,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[Wj]),_:1}),t(" ; "),$j,t(": "),Yj,t(" ; "),Jj,t(": { "),Xj,t(": "),eG,t(" ; "),tG,t(": "),nG,t(" ; "),oG,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[sG]),_:1}),t(" } ; "),lG,t(": "),dG,t(" ; "),aG,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),iG,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),cG,t(": "),rG,t(" ; "),uG,t(": "),hG,t(" }>")]),_G,e("p",null,[e("a",pG,[t("mocks/messages/getCommandErrorMessage.mock.ts:16"),n(l)])]),fG,gG,e("p",null,[t("▸ "),mG,t("<"),yG,t(", "),bG,t(">("),xG,t("): "),vG,t("<{ "),SG,t(": "),TG,t(" ; "),kG,t(": "),CG,t(" ; "),PG,t(": "),wG,t(" ; "),MG,t(": "),IG,t(" ; "),EG,t(": "),FG,t(" ; "),DG,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[RG]),_:1}),t(" ; "),BG,t(": "),NG,t(" ; "),LG,t(": { "),OG,t(": "),AG,t(" ; "),HG,t(": "),jG,t(" } ; "),GG,t(": "),qG,t(" ; "),VG,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[zG]),_:1}),t(" ; "),ZG,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),UG,t(": "),QG,t(" ; "),KG,t(": "),WG,t(" }>")]),$G,e("table",null,[YG,e("tbody",null,[e("tr",null,[JG,e("td",XG,[eq,t("<{ "),tq,t(": "),nq,t(" ; "),oq,t(": "),sq,t(" ; "),lq,t(": "),dq,t(" ; "),aq,t(": "),iq,t(" ; "),cq,t(": "),rq,t(" ; "),uq,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[hq]),_:1}),t(" ; "),_q,t(": "),pq,t(" ; "),fq,t(": { "),gq,t(": "),mq,t(" ; "),yq,t(": "),bq,t(" } ; "),xq,t(": "),vq,t(" ; "),Sq,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Tq]),_:1}),t(" ; "),kq,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Cq,t(": "),Pq,t(" ; "),wq,t(": "),Mq,t(" }> & { "),Iq,t(": { "),Eq,t(": "),Fq,t(" ; "),Dq,t(": "),Rq,t(" } }")])])])]),Bq,e("p",null,[Nq,t("<{ "),Lq,t(": "),Oq,t(" ; "),Aq,t(": "),Hq,t(" ; "),jq,t(": "),Gq,t(" ; "),qq,t(": "),Vq,t(" ; "),zq,t(": "),Zq,t(" ; "),Uq,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[Qq]),_:1}),t(" ; "),Kq,t(": "),Wq,t(" ; "),$q,t(": { "),Yq,t(": "),Jq,t(" ; "),Xq,t(": "),eV,t(" } ; "),tV,t(": "),nV,t(" ; "),oV,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[sV]),_:1}),t(" ; "),lV,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),dV,t(": "),aV,t(" ; "),iV,t(": "),cV,t(" }>")]),rV,e("p",null,[e("a",uV,[t("mocks/messages/getCommandMessage.mock.ts:15"),n(l)])]),hV,_V,e("p",null,[t("▸ "),pV,t("<"),fV,t(">("),gV,t(", "),mV,t(", "),yV,t("): "),bV,t("<{ "),xV,t(": "),vV,t(" ; "),SV,t(": "),TV,t(" ; "),kV,t(": "),CV,t(" ; "),PV,t(": "),wV,t(" ; "),MV,t(": "),IV,t(" ; "),EV,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[FV]),_:1}),t(" ; "),DV,t(": "),RV,t(" ; "),BV,t(": "),NV,t(" ; "),LV,t(": "),OV,t(" ; "),AV,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),HV,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),jV,t(": "),GV,t(" ; "),qV,t(": "),VV,t(" }>")]),zV,e("table",null,[ZV,e("tbody",null,[UV,e("tr",null,[QV,e("td",KV,[WV,t("<{ "),$V,t(": "),YV,t(" ; "),JV,t(": "),XV,t(" ; "),ez,t(": "),tz,t(" ; "),nz,t(": "),oz,t(" ; "),sz,t(": "),lz,t(" ; "),dz,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[az]),_:1}),t(" ; "),iz,t(": "),cz,t(" ; "),rz,t(": "),uz,t(" ; "),hz,t(": "),_z,t(" ; "),pz,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),fz,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),gz,t(": "),mz,t(" ; "),yz,t(": "),bz,t(" }>")]),xz]),vz,Sz,Tz,kz,Cz,Pz,e("tr",null,[wz,e("td",Mz,[n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[Iz]),_:1})]),Ez]),Fz,Dz,Rz,Bz,Nz,e("tr",null,[Lz,e("td",Oz,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Az]),_:1})]),Hz]),jz,Gz,qz])]),Vz,e("p",null,[zz,t("<{ "),Zz,t(": "),Uz,t(" ; "),Qz,t(": "),Kz,t(" ; "),Wz,t(": "),$z,t(" ; "),Yz,t(": "),Jz,t(" ; "),Xz,t(": "),eZ,t(" ; "),tZ,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[nZ]),_:1}),t(" ; "),oZ,t(": "),sZ,t(" ; "),lZ,t(": "),dZ,t(" ; "),aZ,t(": "),iZ,t(" ; "),cZ,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),rZ,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),uZ,t(": "),hZ,t(" ; "),_Z,t(": "),pZ,t(" }>")]),fZ,e("p",null,[e("a",gZ,[t("mocks/messages/getCommandSuccessMessage.mock.ts:9"),n(l)])]),mZ,e("table",null,[yZ,e("tbody",null,[e("tr",null,[bZ,e("td",xZ,[t("{ "),vZ,t(": { "),SZ,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[TZ]),_:1}),t(" ; "),kZ,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[CZ]),_:1}),t(" ; "),PZ,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[wZ]),_:1}),t(" } ; "),MZ,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[IZ]),_:1}),t(" ; "),EZ,t(": "),FZ,t("<{ messageType: EBMessageType.Command; correlationId: string; receiver: EBMessageAddress; payload: { parameter: MessageParamsType; payload: MessagePayloadType; }; ... 8 more ...; sender: { ...; }; }> ; "),DZ,t(": { "),RZ,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[BZ]),_:1}),t(" ; "),NZ,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[LZ]),_:1}),t(" ; "),OZ,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[AZ]),_:1}),t(" } ; "),HZ,t(": <F>("),jZ,t(": "),GZ,t(", "),qZ,t(": "),VZ,t(", "),zZ,t(": "),ZZ,t(" | "),UZ,t(", "),QZ,t(": ("),KZ,t(": "),WZ,t(") => "),$Z,t("<"),YZ,t(">) => "),JZ,t("<"),XZ,t("> ; "),eU,t(": { "),tU,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[nU]),_:1}),t(" ; "),oU,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[sU]),_:1}),t(" ; "),lU,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[dU]),_:1}),t(" } ; "),aU,t(": <F>("),iU,t(": "),cU,t(", "),rU,t(": "),uU,t(", "),hU,t(": ("),_U,t(": "),pU,t(") => "),fU,t("<"),gU,t(">, "),mU,t(": "),yU,t(") => "),bU,t("<"),xU,t("> }")])]),e("tr",null,[vU,e("td",SU,[t("{ "),TU,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[kU]),_:1}),t(" ; "),CU,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[PU]),_:1}),t(" ; "),wU,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[MU]),_:1}),t(" }")])]),e("tr",null,[IU,e("td",EU,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[FU]),_:1})])]),e("tr",null,[DU,e("td",RU,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[BU]),_:1})])]),e("tr",null,[NU,e("td",LU,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[OU]),_:1})])]),e("tr",null,[AU,e("td",HU,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[jU]),_:1})])]),GU,e("tr",null,[qU,e("td",VU,[t("{ "),zU,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[ZU]),_:1}),t(" ; "),UU,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[QU]),_:1}),t(" ; "),KU,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[WU]),_:1}),t(" }")])]),e("tr",null,[$U,e("td",YU,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[JU]),_:1})])]),e("tr",null,[XU,e("td",eQ,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[tQ]),_:1})])]),e("tr",null,[nQ,e("td",oQ,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[sQ]),_:1})])]),lQ,e("tr",null,[dQ,e("td",aQ,[t("{ "),iQ,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[cQ]),_:1}),t(" ; "),rQ,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[uQ]),_:1}),t(" ; "),hQ,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[_Q]),_:1}),t(" }")])]),e("tr",null,[pQ,e("td",fQ,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[gQ]),_:1})])]),e("tr",null,[mQ,e("td",yQ,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[bQ]),_:1})])]),e("tr",null,[xQ,e("td",vQ,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[SQ]),_:1})])]),TQ,kQ,CQ,PQ,wQ,MQ,IQ,EQ,FQ,DQ,RQ,BQ,NQ,LQ,OQ,AQ,HQ,jQ,GQ,qQ])]),VQ,e("p",null,[e("a",zQ,[t("mocks/getCommandTransformContext.mock.ts:12"),n(l)])]),ZQ,UQ,e("p",null,[t("▸ "),QQ,t("<"),KQ,t(">("),WQ,t(", "),$Q,t(", "),YQ,t("): "),JQ,t("<{ "),XQ,t(": "),eK,t(" ; "),tK,t(": "),nK,t(" ; "),oK,t(": "),sK,t(" ; "),lK,t(": "),dK,t(" ; "),aK,t(": "),iK,t(" ; "),cK,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:s(()=>[rK]),_:1}),t(" ; "),uK,t(": "),hK,t(" ; "),_K,t(": "),pK,t(" ; "),fK,t(": "),gK,t(" ; "),mK,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[yK]),_:1}),t(" ; "),bK,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),xK,t(": "),vK,t(" ; "),SK,t(": "),TK,t(" }>")]),kK,e("table",null,[CK,e("tbody",null,[PK,wK,e("tr",null,[MK,e("td",IK,[EK,t("<{ "),FK,t(": "),DK,t(" ; "),RK,t(": "),BK,t(" ; "),NK,t(": "),LK,t(" ; "),OK,t(": "),AK,t(" ; "),HK,t(": "),jK,t(" ; "),GK,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:s(()=>[qK]),_:1}),t(" ; "),VK,t(": "),zK,t(" ; "),ZK,t(": "),UK,t(" ; "),QK,t(": "),KK,t(" ; "),WK,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[$K]),_:1}),t(" ; "),YK,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),JK,t(": "),XK,t(" ; "),eW,t(": "),tW,t(" }>")])])])]),nW,e("p",null,[oW,t("<{ "),sW,t(": "),lW,t(" ; "),dW,t(": "),aW,t(" ; "),iW,t(": "),cW,t(" ; "),rW,t(": "),uW,t(" ; "),hW,t(": "),_W,t(" ; "),pW,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:s(()=>[fW]),_:1}),t(" ; "),gW,t(": "),mW,t(" ; "),yW,t(": "),bW,t(" ; "),xW,t(": "),vW,t(" ; "),SW,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[TW]),_:1}),t(" ; "),kW,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),CW,t(": "),PW,t(" ; "),wW,t(": "),MW,t(" }>")]),IW,e("p",null,[e("a",EW,[t("mocks/messages/getCustomMessage.mock.ts:15"),n(l)])]),FW,e("table",null,[DW,e("tbody",null,[e("tr",null,[RW,e("td",BW,[n(o,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:s(()=>[NW]),_:1})])]),LW])]),OW,e("p",null,[e("a",AW,[t("mocks/getEventBridge.mock.ts:10"),n(l)])]),HW,e("table",null,[jW,e("tbody",null,[e("tr",null,[GW,e("td",qW,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[VW]),_:1})])]),zW,ZW,UW,QW,KW,WW,$W])]),YW,e("p",null,[e("a",JW,[t("mocks/getLogger.mock.ts:10"),n(l)])]),XW,e("table",null,[e$,e("tbody",null,[e("tr",null,[t$,e("td",n$,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[o$]),_:1})])]),s$])]),l$,d$,e("table",null,[a$,e("tbody",null,[e("tr",null,[i$,e("td",c$,[t("{ "),r$,t(": { "),u$,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[h$]),_:1}),t(" ; "),_$,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[p$]),_:1}),t(" ; "),f$,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[g$]),_:1}),t(" } ; "),m$,t(": "),n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[y$]),_:1}),t(" ; "),b$,t(": "),n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[x$]),_:1}),t(" ; "),v$,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[S$]),_:1}),t(" ; "),T$,t(": "),k$,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[C$]),_:1}),t("> ; "),P$,t(": { "),w$,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[M$]),_:1}),t(" ; "),I$,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[E$]),_:1}),t(" ; "),F$,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[D$]),_:1}),t(" } ; "),R$,t(": <F>("),B$,t(": "),N$,t(", "),L$,t(": "),O$,t(", "),A$,t(": "),H$,t(" | "),j$,t(", "),G$,t(": ("),q$,t(": "),V$,t(") => "),z$,t("<"),Z$,t(">) => "),U$,t("<"),Q$,t("> ; "),K$,t(": { "),W$,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[$$]),_:1}),t(" ; "),Y$,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[J$]),_:1}),t(" ; "),X$,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[eY]),_:1}),t(" } ; "),tY,t(": <F>("),nY,t(": "),oY,t(", "),sY,t(": "),lY,t(", "),dY,t(": ("),aY,t(": "),iY,t(") => "),cY,t("<"),rY,t(">, "),uY,t(": "),hY,t(") => "),_Y,t("<"),pY,t("> }")])]),e("tr",null,[fY,e("td",gY,[t("{ "),mY,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[yY]),_:1}),t(" ; "),bY,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[xY]),_:1}),t(" ; "),vY,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[SY]),_:1}),t(" }")])]),e("tr",null,[TY,e("td",kY,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[CY]),_:1})])]),e("tr",null,[PY,e("td",wY,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[MY]),_:1})])]),e("tr",null,[IY,e("td",EY,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[FY]),_:1})])]),e("tr",null,[DY,e("td",RY,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[BY]),_:1})])]),e("tr",null,[NY,e("td",LY,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[OY]),_:1})])]),e("tr",null,[AY,e("td",HY,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[jY]),_:1})])]),e("tr",null,[GY,e("td",qY,[VY,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[zY]),_:1}),t(">")])]),e("tr",null,[ZY,e("td",UY,[t("{ "),QY,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[KY]),_:1}),t(" ; "),WY,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[$Y]),_:1}),t(" ; "),YY,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[JY]),_:1}),t(" }")])]),e("tr",null,[XY,e("td",eJ,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[tJ]),_:1})])]),e("tr",null,[nJ,e("td",oJ,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[sJ]),_:1})])]),e("tr",null,[lJ,e("td",dJ,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[aJ]),_:1})])]),iJ,e("tr",null,[cJ,e("td",rJ,[t("{ "),uJ,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[hJ]),_:1}),t(" ; "),_J,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[pJ]),_:1}),t(" ; "),fJ,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[gJ]),_:1}),t(" }")])]),e("tr",null,[mJ,e("td",yJ,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[bJ]),_:1})])]),e("tr",null,[xJ,e("td",vJ,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[SJ]),_:1})])]),e("tr",null,[TJ,e("td",kJ,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[CJ]),_:1})])]),PJ,wJ,MJ,IJ,EJ,FJ,DJ,RJ,BJ,NJ,LJ,OJ,AJ,HJ,jJ,GJ,qJ,VJ,zJ,ZJ,UJ,QJ])]),KJ,e("p",null,[e("a",WJ,[t("mocks/getSubscriptionContext.mock.ts:11"),n(l)])]),$J,e("table",null,[YJ,e("tbody",null,[e("tr",null,[JJ,e("td",XJ,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[eX]),_:1})])]),tX])]),nX,oX,e("table",null,[sX,e("tbody",null,[e("tr",null,[lX,e("td",dX,[t("{ "),aX,t(": { "),iX,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[cX]),_:1}),t(" ; "),rX,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[uX]),_:1}),t(" ; "),hX,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[_X]),_:1}),t(" } ; "),pX,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[fX]),_:1}),t(" ; "),gX,t(": "),mX,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[yX]),_:1}),t("> ; "),bX,t(": { "),xX,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[vX]),_:1}),t(" ; "),SX,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[TX]),_:1}),t(" ; "),kX,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[CX]),_:1}),t(" } ; "),PX,t(": <F>("),wX,t(": "),MX,t(", "),IX,t(": "),EX,t(", "),FX,t(": "),DX,t(" | "),RX,t(", "),BX,t(": ("),NX,t(": "),LX,t(") => "),OX,t("<"),AX,t(">) => "),HX,t("<"),jX,t("> ; "),GX,t(": { "),qX,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[VX]),_:1}),t(" ; "),zX,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[ZX]),_:1}),t(" ; "),UX,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[QX]),_:1}),t(" } ; "),KX,t(": <F>("),WX,t(": "),$X,t(", "),YX,t(": "),JX,t(", "),XX,t(": ("),eee,t(": "),tee,t(") => "),nee,t("<"),oee,t(">, "),see,t(": "),lee,t(") => "),dee,t("<"),aee,t("> }")])]),e("tr",null,[iee,e("td",cee,[t("{ "),ree,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[uee]),_:1}),t(" ; "),hee,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[_ee]),_:1}),t(" ; "),pee,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[fee]),_:1}),t(" }")])]),e("tr",null,[gee,e("td",mee,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[yee]),_:1})])]),e("tr",null,[bee,e("td",xee,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[vee]),_:1})])]),e("tr",null,[See,e("td",Tee,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[kee]),_:1})])]),e("tr",null,[Cee,e("td",Pee,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[wee]),_:1})])]),e("tr",null,[Mee,e("td",Iee,[Eee,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[Fee]),_:1}),t(">")])]),e("tr",null,[Dee,e("td",Ree,[t("{ "),Bee,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[Nee]),_:1}),t(" ; "),Lee,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[Oee]),_:1}),t(" ; "),Aee,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[Hee]),_:1}),t(" }")])]),e("tr",null,[jee,e("td",Gee,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[qee]),_:1})])]),e("tr",null,[Vee,e("td",zee,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[Zee]),_:1})])]),e("tr",null,[Uee,e("td",Qee,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[Kee]),_:1})])]),Wee,e("tr",null,[$ee,e("td",Yee,[t("{ "),Jee,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[Xee]),_:1}),t(" ; "),ete,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[tte]),_:1}),t(" ; "),nte,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[ote]),_:1}),t(" }")])]),e("tr",null,[ste,e("td",lte,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[dte]),_:1})])]),e("tr",null,[ate,e("td",ite,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[cte]),_:1})])]),e("tr",null,[rte,e("td",ute,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[hte]),_:1})])]),_te,pte,fte,gte,mte,yte,bte,xte,vte,Ste,Tte,kte,Cte,Pte,wte,Mte,Ite,Ete,Fte,Dte])]),Rte,e("p",null,[e("a",Bte,[t("mocks/getSubscriptionTransformContext.mock.ts:11"),n(l)])])])}const jte=i(u,[["render",Nte],["__file","purista_core.html.vue"]]);export{jte as default};
