const e=JSON.parse(`{"key":"v-14d66839","path":"/handbook/2._start-building/2.4._error-handling/0_error-handling.html","title":"Handled and unhandled errors","lang":"en-US","frontmatter":{"order":1,"title":"Handled and unhandled errors","shortTitle":"Error handling","description":"A deeper look into javascript/typescript error handling within PURISTA nodejs backend application framework","tag":["error","error handling","handled error","unhandled error"],"head":[["meta",{"property":"og:url","content":"https://purista.dev/handbook/2._start-building/2.4._error-handling/0_error-handling.html"}],["meta",{"property":"og:site_name","content":"PURISTA"}],["meta",{"property":"og:title","content":"Handled and unhandled errors"}],["meta",{"property":"og:description","content":"A deeper look into javascript/typescript error handling within PURISTA nodejs backend application framework"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/purista_slogan.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-03-29T09:05:20.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Handled and unhandled errors"}],["meta",{"property":"article:author","content":"Sebastian Wessel"}],["meta",{"property":"article:tag","content":"error"}],["meta",{"property":"article:tag","content":"error handling"}],["meta",{"property":"article:tag","content":"handled error"}],["meta",{"property":"article:tag","content":"unhandled error"}],["meta",{"property":"article:modified_time","content":"2023-03-29T09:05:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Handled and unhandled errors\\",\\"image\\":[\\"/purista_slogan.png\\"],\\"dateModified\\":\\"2023-03-29T09:05:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Sebastian Wessel\\",\\"url\\":\\"https://sebastianwessel.de\\"}]}"]]},"headers":[{"level":2,"title":"Error types","slug":"error-types","link":"#error-types","children":[{"level":3,"title":"HandledError","slug":"handlederror","link":"#handlederror","children":[]},{"level":3,"title":"UnhandledErrors","slug":"unhandlederrors","link":"#unhandlederrors","children":[]},{"level":3,"title":"Error (js/ts)","slug":"error-js-ts","link":"#error-js-ts","children":[]}]},{"level":2,"title":"Validation errors","slug":"validation-errors","link":"#validation-errors","children":[]}],"git":{"createdTime":1680080720000,"updatedTime":1680080720000,"contributors":[{"name":"Sebastian Wessel","email":"sebastianwessel@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":3.48,"words":1045},"filePathRelative":"handbook/2._start-building/2.4._error-handling/0_error-handling.md","localizedDate":"March 29, 2023","excerpt":"<p>Error handling is one of the essentials of software development.<br>\\nBut it's not easy - especially when your complexity is growing.</p>\\n<p>By implementing only happy path, without proper error handling, maintenance will quickly become a nightmare.</p>\\n<p>PURISTA is build with error handling in mind and helps developers to build understandable, predictable and secure applications.</p>"}`);export{e as data};
