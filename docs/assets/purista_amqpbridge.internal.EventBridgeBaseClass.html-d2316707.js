import{_ as i,W as s,X as l,Z as e,a0 as d,a1 as n,$ as t,Y as r,D as o}from"./framework-d89ed822.js";const c={},h=e("h1",{id:"class-eventbridgebaseclass-configtype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-eventbridgebaseclass-configtype","aria-hidden":"true"},"#"),t(" Class: EventBridgeBaseClass<ConfigType>")],-1),p=r('<p>The base class to be extended by event bridge implementations</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h2><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h2 id="hierarchy" tabindex="-1"><a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a> Hierarchy</h2>',4),u=e("code",null,"GenericEventEmitter",-1),f=e("code",null,"EventBridgeEvents",-1),m=e("p",null,[t("↳ "),e("strong",null,[e("code",null,"EventBridgeBaseClass")])],-1),g=e("code",null,"AmqpBridge",-1),_=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),b=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),v=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),x=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),y=r('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new EventBridgeBaseClass</strong>&lt;<code>ConfigType</code>&gt;(<code>name</code>, <code>config</code>)</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4>',6),E=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),B=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"name")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),q=e("td",{style:{"text-align":"left"}},[e("code",null,"config")],-1),C={style:{"text-align":"left"}},T=e("code",null,"EventBridgeConfig",-1),k=e("code",null,"Complete",-1),N=e("code",null,"ConfigType",-1),P=e("h4",{id:"overrides",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides","aria-hidden":"true"},"#"),t(" Overrides")],-1),G=r('<h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/EventBridge/EventBridgeBaseClass.impl.d.ts:17</p><h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="config" tabindex="-1"><a class="header-anchor" href="#config" aria-hidden="true">#</a> config</h3>',4),D=e("strong",null,"config",-1),K=e("code",null,"Complete",-1),R=e("code",null,"EventBridgeConfig",-1),S=e("code",null,"Complete",-1),w=e("code",null,"ConfigType",-1),I=r('<h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/EventBridge/EventBridgeBaseClass.impl.d.ts:13</p><hr><h3 id="defaultcommandtimeout" tabindex="-1"><a class="header-anchor" href="#defaultcommandtimeout" aria-hidden="true">#</a> defaultCommandTimeout</h3><p>• <strong>defaultCommandTimeout</strong>: <code>number</code></p><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/EventBridge/EventBridgeBaseClass.impl.d.ts:16</p><hr><h3 id="instanceid" tabindex="-1"><a class="header-anchor" href="#instanceid" aria-hidden="true">#</a> instanceId</h3><p>• <strong>instanceId</strong>: <code>string</code></p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/EventBridge/EventBridgeBaseClass.impl.d.ts:15</p><hr><h3 id="logger" tabindex="-1"><a class="header-anchor" href="#logger" aria-hidden="true">#</a> logger</h3>',14),A=e("strong",null,"logger",-1),F=e("code",null,"Logger",-1),L=r('<h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/EventBridge/EventBridgeBaseClass.impl.d.ts:11</p><hr><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> name</h3><p>• <strong>name</strong>: <code>string</code></p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/EventBridge/EventBridgeBaseClass.impl.d.ts:14</p><hr><h3 id="traceprovider" tabindex="-1"><a class="header-anchor" href="#traceprovider" aria-hidden="true">#</a> traceProvider</h3><p>• <strong>traceProvider</strong>: <code>NodeTracerProvider</code></p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/EventBridge/EventBridgeBaseClass.impl.d.ts:12</p><h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="destroy" tabindex="-1"><a class="header-anchor" href="#destroy" aria-hidden="true">#</a> destroy</h3><p>▸ <strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/EventBridge/EventBridgeBaseClass.impl.d.ts:49</p><hr><h3 id="emit" tabindex="-1"><a class="header-anchor" href="#emit" aria-hidden="true">#</a> emit</h3><p>▸ <strong>emit</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>parameter?</code>): <code>void</code></p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4>',23),V=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),M=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),O={style:{"text-align":"left"}},U=e("code",null,"EventKey",-1),H=e("code",null,"EventBridgeEvents",-1),W=e("h4",{id:"parameters-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-1","aria-hidden":"true"},"#"),t(" Parameters")],-1),X=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Y=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"K")])],-1),Z=e("td",{style:{"text-align":"left"}},[e("code",null,"parameter?")],-1),$={style:{"text-align":"left"}},j=e("code",null,"EventBridgeEvents",-1),z=e("code",null,"K",-1),J=e("h4",{id:"returns-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-1","aria-hidden":"true"},"#"),t(" Returns")],-1),Q=e("p",null,[e("code",null,"void")],-1),ee=e("h4",{id:"inherited-from",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from","aria-hidden":"true"},"#"),t(" Inherited from")],-1),te=r('<h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/GenericEventEmitter.d.ts:13</p><hr><h3 id="gettracer" tabindex="-1"><a class="header-anchor" href="#gettracer" aria-hidden="true">#</a> getTracer</h3><p>▸ <strong>getTracer</strong>(): <code>Tracer</code></p><p>Returns open telemetry tracer of this service</p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>Tracer</code></p><p>Tracer</p><h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/EventBridge/EventBridgeBaseClass.impl.d.ts:23</p><hr><h3 id="off" tabindex="-1"><a class="header-anchor" href="#off" aria-hidden="true">#</a> off</h3><p>▸ <strong>off</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4>',15),ae=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),de=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),ne={style:{"text-align":"left"}},re=e("code",null,"EventKey",-1),ie=e("code",null,"EventBridgeEvents",-1),se=e("h4",{id:"parameters-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-2","aria-hidden":"true"},"#"),t(" Parameters")],-1),le=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),oe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"K")])],-1),ce=e("td",{style:{"text-align":"left"}},[e("code",null,"fn")],-1),he={style:{"text-align":"left"}},pe=e("code",null,"EventReceiver",-1),ue=e("code",null,"EventBridgeEvents",-1),fe=e("code",null,"K",-1),me=e("h4",{id:"returns-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-3","aria-hidden":"true"},"#"),t(" Returns")],-1),ge=e("p",null,[e("code",null,"void")],-1),_e=e("h4",{id:"inherited-from-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-1","aria-hidden":"true"},"#"),t(" Inherited from")],-1),be=r('<h4 id="defined-in-10" tabindex="-1"><a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/GenericEventEmitter.d.ts:12</p><hr><h3 id="on" tabindex="-1"><a class="header-anchor" href="#on" aria-hidden="true">#</a> on</h3><p>▸ <strong>on</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4>',6),ve=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),xe=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),ye={style:{"text-align":"left"}},Ee=e("code",null,"EventKey",-1),Be=e("code",null,"EventBridgeEvents",-1),qe=e("h4",{id:"parameters-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-3","aria-hidden":"true"},"#"),t(" Parameters")],-1),Ce=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Te=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"K")])],-1),ke=e("td",{style:{"text-align":"left"}},[e("code",null,"fn")],-1),Ne={style:{"text-align":"left"}},Pe=e("code",null,"EventReceiver",-1),Ge=e("code",null,"EventBridgeEvents",-1),De=e("code",null,"K",-1),Ke=e("h4",{id:"returns-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-4","aria-hidden":"true"},"#"),t(" Returns")],-1),Re=e("p",null,[e("code",null,"void")],-1),Se=e("h4",{id:"inherited-from-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-2","aria-hidden":"true"},"#"),t(" Inherited from")],-1),we=r('<h4 id="defined-in-11" tabindex="-1"><a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/GenericEventEmitter.d.ts:11</p><hr><h3 id="removealllisteners" tabindex="-1"><a class="header-anchor" href="#removealllisteners" aria-hidden="true">#</a> removeAllListeners</h3><p>▸ <strong>removeAllListeners</strong>(): <code>void</code></p><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-3" tabindex="-1"><a class="header-anchor" href="#inherited-from-3" aria-hidden="true">#</a> Inherited from</h4>',8),Ie=r('<h4 id="defined-in-12" tabindex="-1"><a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/GenericEventEmitter.d.ts:14</p><hr><h3 id="start" tabindex="-1"><a class="header-anchor" href="#start" aria-hidden="true">#</a> start</h3><p>▸ <strong>start</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/EventBridge/EventBridgeBaseClass.impl.d.ts:50</p><hr><h3 id="startactivespan" tabindex="-1"><a class="header-anchor" href="#startactivespan" aria-hidden="true">#</a> startActiveSpan</h3><p>▸ <strong>startActiveSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>context</code>, <code>fn</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p><p>Start a child span for opentelemetry tracking</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">name of span</td></tr><tr><td style="text-align:left;"><code>opts</code></td><td style="text-align:left;"><code>SpanOptions</code></td><td style="text-align:left;">span options</td></tr><tr><td style="text-align:left;"><code>context</code></td><td style="text-align:left;"><code>undefined</code> | <code>Context</code></td><td style="text-align:left;">optional context</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(<code>span</code>: <code>Span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</td><td style="text-align:left;">function to be executed within the span</td></tr></tbody></table><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><p>return value of fn</p><h4 id="defined-in-14" tabindex="-1"><a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/EventBridge/EventBridgeBaseClass.impl.d.ts:32</p><hr><h3 id="wrapinspan" tabindex="-1"><a class="header-anchor" href="#wrapinspan" aria-hidden="true">#</a> wrapInSpan</h3><p>▸ <strong>wrapInSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>fn</code>, <code>context?</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p><p>Start span for opentelemetry tracking on same level. The created span will not become the &quot;active&quot; span within opentelemetry!</p><p>This means during logging and similar the spanId of parent span is logged.</p><p>Use wrapInSpan for marking points in flow of one bigger function, but not to trace the program flow itself</p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">name of span</td></tr><tr><td style="text-align:left;"><code>opts</code></td><td style="text-align:left;"><code>SpanOptions</code></td><td style="text-align:left;">span options</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(<code>span</code>: <code>Span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</td><td style="text-align:left;">function te be executed in the span</td></tr><tr><td style="text-align:left;"><code>context?</code></td><td style="text-align:left;"><code>Context</code></td><td style="text-align:left;">span context</td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><p>return value of fn</p><h4 id="defined-in-15" tabindex="-1"><a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/EventBridge/EventBridgeBaseClass.impl.d.ts:48</p>',37);function Ae(Fe,Le){const a=o("RouterLink");return s(),l("div",null,[e("p",null,[d(a,{to:"/api/"},{default:n(()=>[t("PURISTA API - v1.4.9")]),_:1}),t(" / "),d(a,{to:"/api/modules.html"},{default:n(()=>[t("Modules")]),_:1}),t(" / "),d(a,{to:"/api/modules/purista_amqpbridge.html"},{default:n(()=>[t("@purista/amqpbridge")]),_:1}),t(" / "),d(a,{to:"/api/modules/purista_amqpbridge.internal.html"},{default:n(()=>[t("internal")]),_:1}),t(" / EventBridgeBaseClass")]),h,e("p",null,[d(a,{to:"/api/modules/purista_amqpbridge.html"},{default:n(()=>[t("@purista/amqpbridge")]),_:1}),t("."),d(a,{to:"/api/modules/purista_amqpbridge.internal.html"},{default:n(()=>[t("internal")]),_:1}),t(".EventBridgeBaseClass")]),p,e("ul",null,[e("li",null,[e("p",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.GenericEventEmitter.html"},{default:n(()=>[u]),_:1}),t("<"),d(a,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeevents"},{default:n(()=>[f]),_:1}),t(">")]),m,e("p",null,[t("↳↳ "),d(a,{to:"/api/classes/purista_amqpbridge.AmqpBridge.html"},{default:n(()=>[g]),_:1})])])]),_,b,e("ul",null,[e("li",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.EventBridgeBaseClass.html#constructor"},{default:n(()=>[t("constructor")]),_:1})])]),v,e("ul",null,[e("li",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.EventBridgeBaseClass.html#config"},{default:n(()=>[t("config")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.EventBridgeBaseClass.html#defaultcommandtimeout"},{default:n(()=>[t("defaultCommandTimeout")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.EventBridgeBaseClass.html#instanceid"},{default:n(()=>[t("instanceId")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.EventBridgeBaseClass.html#logger"},{default:n(()=>[t("logger")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.EventBridgeBaseClass.html#name"},{default:n(()=>[t("name")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.EventBridgeBaseClass.html#traceprovider"},{default:n(()=>[t("traceProvider")]),_:1})])]),x,e("ul",null,[e("li",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.EventBridgeBaseClass.html#destroy"},{default:n(()=>[t("destroy")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.EventBridgeBaseClass.html#emit"},{default:n(()=>[t("emit")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.EventBridgeBaseClass.html#gettracer"},{default:n(()=>[t("getTracer")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.EventBridgeBaseClass.html#off"},{default:n(()=>[t("off")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.EventBridgeBaseClass.html#on"},{default:n(()=>[t("on")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.EventBridgeBaseClass.html#removealllisteners"},{default:n(()=>[t("removeAllListeners")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.EventBridgeBaseClass.html#start"},{default:n(()=>[t("start")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.EventBridgeBaseClass.html#startactivespan"},{default:n(()=>[t("startActiveSpan")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.EventBridgeBaseClass.html#wrapinspan"},{default:n(()=>[t("wrapInSpan")]),_:1})])]),y,e("table",null,[E,e("tbody",null,[B,e("tr",null,[q,e("td",C,[d(a,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeconfig"},{default:n(()=>[T]),_:1}),t("<"),d(a,{to:"/api/modules/purista_amqpbridge.internal.html#complete"},{default:n(()=>[k]),_:1}),t("<"),N,t(">>")])])])]),P,e("p",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.GenericEventEmitter.html"},{default:n(()=>[t("GenericEventEmitter")]),_:1}),t("."),d(a,{to:"/api/classes/purista_amqpbridge.internal.GenericEventEmitter.html#constructor"},{default:n(()=>[t("constructor")]),_:1})]),G,e("p",null,[t("• "),D,t(": "),d(a,{to:"/api/modules/purista_amqpbridge.internal.html#complete"},{default:n(()=>[K]),_:1}),t("<"),d(a,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeconfig"},{default:n(()=>[R]),_:1}),t("<"),d(a,{to:"/api/modules/purista_amqpbridge.internal.html#complete"},{default:n(()=>[S]),_:1}),t("<"),w,t(">>>")]),I,e("p",null,[t("• "),A,t(": "),d(a,{to:"/api/classes/purista_amqpbridge.internal.Logger.html"},{default:n(()=>[F]),_:1})]),L,e("table",null,[V,e("tbody",null,[e("tr",null,[M,e("td",O,[t("extends "),d(a,{to:"/api/modules/purista_amqpbridge.internal.html#eventkey"},{default:n(()=>[U]),_:1}),t("<"),d(a,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeevents"},{default:n(()=>[H]),_:1}),t(">")])])])]),W,e("table",null,[X,e("tbody",null,[Y,e("tr",null,[Z,e("td",$,[d(a,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeevents"},{default:n(()=>[j]),_:1}),t("["),z,t("]")])])])]),J,Q,ee,e("p",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.GenericEventEmitter.html"},{default:n(()=>[t("GenericEventEmitter")]),_:1}),t("."),d(a,{to:"/api/classes/purista_amqpbridge.internal.GenericEventEmitter.html#emit"},{default:n(()=>[t("emit")]),_:1})]),te,e("table",null,[ae,e("tbody",null,[e("tr",null,[de,e("td",ne,[t("extends "),d(a,{to:"/api/modules/purista_amqpbridge.internal.html#eventkey"},{default:n(()=>[re]),_:1}),t("<"),d(a,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeevents"},{default:n(()=>[ie]),_:1}),t(">")])])])]),se,e("table",null,[le,e("tbody",null,[oe,e("tr",null,[ce,e("td",he,[d(a,{to:"/api/modules/purista_amqpbridge.internal.html#eventreceiver"},{default:n(()=>[pe]),_:1}),t("<"),d(a,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeevents"},{default:n(()=>[ue]),_:1}),t("["),fe,t("]>")])])])]),me,ge,_e,e("p",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.GenericEventEmitter.html"},{default:n(()=>[t("GenericEventEmitter")]),_:1}),t("."),d(a,{to:"/api/classes/purista_amqpbridge.internal.GenericEventEmitter.html#off"},{default:n(()=>[t("off")]),_:1})]),be,e("table",null,[ve,e("tbody",null,[e("tr",null,[xe,e("td",ye,[t("extends "),d(a,{to:"/api/modules/purista_amqpbridge.internal.html#eventkey"},{default:n(()=>[Ee]),_:1}),t("<"),d(a,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeevents"},{default:n(()=>[Be]),_:1}),t(">")])])])]),qe,e("table",null,[Ce,e("tbody",null,[Te,e("tr",null,[ke,e("td",Ne,[d(a,{to:"/api/modules/purista_amqpbridge.internal.html#eventreceiver"},{default:n(()=>[Pe]),_:1}),t("<"),d(a,{to:"/api/modules/purista_amqpbridge.internal.html#eventbridgeevents"},{default:n(()=>[Ge]),_:1}),t("["),De,t("]>")])])])]),Ke,Re,Se,e("p",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.GenericEventEmitter.html"},{default:n(()=>[t("GenericEventEmitter")]),_:1}),t("."),d(a,{to:"/api/classes/purista_amqpbridge.internal.GenericEventEmitter.html#on"},{default:n(()=>[t("on")]),_:1})]),we,e("p",null,[d(a,{to:"/api/classes/purista_amqpbridge.internal.GenericEventEmitter.html"},{default:n(()=>[t("GenericEventEmitter")]),_:1}),t("."),d(a,{to:"/api/classes/purista_amqpbridge.internal.GenericEventEmitter.html#removealllisteners"},{default:n(()=>[t("removeAllListeners")]),_:1})]),Ie])}const Me=i(c,[["render",Ae],["__file","purista_amqpbridge.internal.EventBridgeBaseClass.html.vue"]]);export{Me as default};
