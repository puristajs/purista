const t=JSON.parse(`{"key":"v-853e7b7c","path":"/api/modules/purista_nats_state_store.html","title":"Module: @purista/nats-state-store","lang":"en-US","frontmatter":{"description":"PURISTA API / Modules / @purista/nats-state-store Module: @purista/nats-state-store A state store for using NATS (with JetStream) as storage. Example const config = { port: 8222 } const store = new NatsStateStore({ config }) await store.setState('stateKey',{ myState: 'value' }) let value = await store.getState('stateKey') console.log(value) // outputs: { stateKey: { myState: 'value' } } await store.removeState('stateKey') value = await store.getState('stateKey') console.log(value) // outputs: undefined","head":[["meta",{"property":"og:url","content":"https://purista.dev/api/modules/purista_nats_state_store.html"}],["meta",{"property":"og:site_name","content":"PURISTA"}],["meta",{"property":"og:title","content":"Module: @purista/nats-state-store"}],["meta",{"property":"og:description","content":"PURISTA API / Modules / @purista/nats-state-store Module: @purista/nats-state-store A state store for using NATS (with JetStream) as storage. Example const config = { port: 8222 } const store = new NatsStateStore({ config }) await store.setState('stateKey',{ myState: 'value' }) let value = await store.getState('stateKey') console.log(value) // outputs: { stateKey: { myState: 'value' } } await store.removeState('stateKey') value = await store.getState('stateKey') console.log(value) // outputs: undefined"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://purista.dev/preview.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-06-01T12:57:26.000Z"}],["meta",{"name":"twitter:creator","content":"@purista_js"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Module: @purista/nats-state-store"}],["meta",{"property":"article:author","content":"Sebastian Wessel"}],["meta",{"property":"article:modified_time","content":"2023-06-01T12:57:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Module: @purista/nats-state-store\\",\\"image\\":[\\"https://purista.dev/preview.png\\"],\\"dateModified\\":\\"2023-06-01T12:57:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Sebastian Wessel\\",\\"url\\":\\"https://sebastianwessel.de\\"}]}"],["meta",{"name":"twitter:image","content":"https://purista.dev/twitter.png"}],["meta",{"name":"twitter:image:alt","content":"Module: @purista/nats-state-store"}],["meta",{"name":"twitter:site","content":"@purista_js"}],["meta",{"name":"twitter:creator","content":"@purista_js"}],["meta",{"name":"twitter:title","content":"Module: @purista/nats-state-store"}],["meta",{"name":"twitter:description","content":"PURISTA API / Modules / @purista/nats-state-store Module: @purista/nats-state-store A state store for using NATS (with JetStream) as storage. Example const config = { port: 8222 } const store = new NatsStateStore({ config }) await store.setState('stateKey',{ myState: 'value' }) let value = await store.getState('stateKey') console.log(value) // outputs: { stateKey: { myState: 'value' } } await store.removeState('stateKey') value = await store.getState('stateKey') console.log(value) // outputs: undefined"}]]},"headers":[{"level":2,"title":"Table of contents","slug":"table-of-contents","link":"#table-of-contents","children":[{"level":3,"title":"Classes","slug":"classes","link":"#classes","children":[]},{"level":3,"title":"Type Aliases","slug":"type-aliases","link":"#type-aliases","children":[]}]},{"level":2,"title":"Type Aliases","slug":"type-aliases-1","link":"#type-aliases-1","children":[{"level":3,"title":"NatsStateStoreConfig","slug":"natsstatestoreconfig","link":"#natsstatestoreconfig","children":[]}]}],"git":{"createdTime":1685624246000,"updatedTime":1685624246000,"contributors":[{"name":"Sebastian Wessel","email":"sebastianwessel@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":0.32,"words":97},"filePathRelative":"api/modules/purista_nats_state_store.md","localizedDate":"June 1, 2023","excerpt":"<p><a href=\\"/api/\\" target=\\"blank\\">PURISTA API</a> / <a href=\\"/api/modules.html\\" target=\\"blank\\">Modules</a> / @purista/nats-state-store</p>\\n<h1> Module: @purista/nats-state-store</h1>\\n<p>A state store for using NATS (with JetStream) as storage.</p>\\n<p><strong><code>Example</code></strong></p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">const</span> config <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n  port<span class=\\"token operator\\">:</span> <span class=\\"token number\\">8222</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">const</span> store <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">NatsStateStore</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span> config <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">await</span> store<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setState</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'stateKey'</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">{</span> myState<span class=\\"token operator\\">:</span> <span class=\\"token string\\">'value'</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">let</span> value <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> store<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getState</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'stateKey'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// outputs: { stateKey: { myState: 'value' } }</span>\\n\\n<span class=\\"token keyword\\">await</span> store<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">removeState</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'stateKey'</span><span class=\\"token punctuation\\">)</span>\\n\\nvalue <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> store<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getState</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'stateKey'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// outputs: undefined</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{t as data};
