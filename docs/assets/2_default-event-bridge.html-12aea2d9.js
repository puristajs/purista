import{_ as e}from"./single_instance-8958c318.js";import{_ as a,W as s,X as t,Y as n}from"./framework-d89ed822.js";const i={},o=n('<h2 id="general" tabindex="-1"><a class="header-anchor" href="#general" aria-hidden="true">#</a> General</h2><p>The core package comes with <code>DefaultEventBridge</code>, which will work on local without any further installation.<br> The <code>DefaultEventBridge</code> acts as event bridge and simple message broker.</p><p>It should work out of the box for single instances.<br> You can also use it, for simple horizontal scaling, but the messages and states are not shared or load balanced between instances.</p><p>This means a subscription is always running on the same instance. Also, any command invocation is done within the same instance.<br> Sharing of states and data must be done over third party software, like usage of redis or other databases.</p><p>Because of this, the <code>DefaultEventBridge</code> will only work for scenarios, where you deploy your services as single instance monolith (edge) and you don&#39;t have the requirement to share messages and states across instances.</p><p>A simplified schema of how the <code>DefaultEventBridge</code> works:</p><p><img src="'+e+'" alt="single instance"></p><div class="hint-container tip"><p class="hint-container-title">Pros</p><ul><li>no extra message broker needed</li><li>full subscription support</li><li>ideal for local development and debug purpose</li></ul></div><div class="hint-container danger"><p class="hint-container-title">Cons</p><ul><li>does not scale</li><li>no persistance of messages</li><li>no retry mechanism for messages</li></ul></div><h2 id="config" tabindex="-1"><a class="header-anchor" href="#config" aria-hidden="true">#</a> Config</h2><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2>',11),r=[o];function l(d,c){return s(),t("div",null,r)}const u=a(i,[["render",l],["__file","2_default-event-bridge.html.vue"]]);export{u as default};
