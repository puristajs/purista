import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c as r,b as s,e as n,w as e,d as a,a as p}from"./app-9aedf0b4.js";const u={},d=p(`<h1 id="module-purista-nats-state-store" tabindex="-1"><a class="header-anchor" href="#module-purista-nats-state-store" aria-hidden="true">#</a> Module: @purista/nats-state-store</h1><p>A state store for using NATS (with JetStream) as storage.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
  port<span class="token operator">:</span> <span class="token number">8222</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NatsStateStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span> config <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token string">&#39;stateKey&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span> myState<span class="token operator">:</span> <span class="token string">&#39;value&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token string">&#39;stateKey&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment">// outputs: { stateKey: { myState: &#39;value&#39; } }</span>

<span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">removeState</span><span class="token punctuation">(</span><span class="token string">&#39;stateKey&#39;</span><span class="token punctuation">)</span>

value <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token string">&#39;stateKey&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment">// outputs: undefined</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="classes" tabindex="-1"><a class="header-anchor" href="#classes" aria-hidden="true">#</a> Classes</h3>`,6),k=s("h3",{id:"type-aliases",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),a(" Type Aliases")],-1),h=p('<h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="natsstatestoreconfig" tabindex="-1"><a class="header-anchor" href="#natsstatestoreconfig" aria-hidden="true">#</a> NatsStateStoreConfig</h3><p>Æ¬ <strong>NatsStateStoreConfig</strong>: <code>Prettify</code>&lt;{ <code>keyValueStoreName</code>: <code>string</code> } &amp; <code>ConnectionOptions</code> &amp; <code>Partial</code>&lt;<code>KvOptions</code>&gt;&gt;</p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',4),m={href:"https://github.com/sebastianwessel/purista/blob/master/packages/nats-state-store/src/types/NatsStateStoreConfig.ts#L4",target:"_blank",rel:"noopener noreferrer"};function v(f,_){const t=o("RouterLink"),i=o("ExternalLinkIcon");return l(),r("div",null,[s("p",null,[n(t,{to:"/api/"},{default:e(()=>[a("PURISTA API")]),_:1}),a(" / "),n(t,{to:"/api/modules.html"},{default:e(()=>[a("Modules")]),_:1}),a(" / @purista/nats-state-store")]),d,s("ul",null,[s("li",null,[n(t,{to:"/api/classes/purista_nats_state_store.NatsStateStore.html"},{default:e(()=>[a("NatsStateStore")]),_:1})])]),k,s("ul",null,[s("li",null,[n(t,{to:"/api/modules/purista_nats_state_store.html#natsstatestoreconfig"},{default:e(()=>[a("NatsStateStoreConfig")]),_:1})])]),h,s("p",null,[s("a",m,[a("nats-state-store/src/types/NatsStateStoreConfig.ts:4"),n(i)])])])}const y=c(u,[["render",v],["__file","purista_nats_state_store.html.vue"]]);export{y as default};
