import{_ as l,W as c,X as r,Z as e,a0 as n,a1 as s,$ as t,Y as i,D as d}from"./framework-d89ed822.js";const u={},h=e("h1",{id:"class-commanddefinitionbuilder-serviceclasstype-messagepayloadtype-messageparamstype-messageresulttype-functionpayloadtype-functionparamstype-functionresulttype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-commanddefinitionbuilder-serviceclasstype-messagepayloadtype-messageparamstype-messageresulttype-functionpayloadtype-functionparamstype-functionresulttype","aria-hidden":"true"},"#"),t(" Class: CommandDefinitionBuilder<ServiceClassType, MessagePayloadType, MessageParamsType, MessageResultType, FunctionPayloadType, FunctionParamsType, FunctionResultType>")],-1),_=e("p",null,"Command definition builder is a helper to create and define a command for a service. It helps to set all needed information like schemas and hooks. With these information, the types are automatically set and extended.",-1),p=e("p",null,"A working schema definition needs at least a command name, a short description and the function implementation.",-1),m=e("h2",{id:"type-parameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters","aria-hidden":"true"},"#"),t(" Type parameters")],-1),f=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),y=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),g={style:{"text-align":"left"}},b=e("code",null,"ServiceClass",-1),T=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),C=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),x=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),D=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),P=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),B=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),k=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),v=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),F=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),M=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),S=i('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new CommandDefinitionBuilder</strong>&lt;<code>ServiceClassType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;(<code>commandName</code>, <code>commandDescription</code>, <code>eventName?</code>)</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4>',4),R=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),w=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),O={style:{"text-align":"left"}},I=e("code",null,"ServiceClass",-1),L=e("code",null,"unknown",-1),N=e("code",null,"ServiceClassType",-1),A=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),E=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),H=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),Z=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),q=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),G=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),Q=i('<h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>commandName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>commandDescription</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>eventName?</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',3),W={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L113",target:"_blank",rel:"noopener noreferrer"},V=i('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="autoacknowledge" tabindex="-1"><a class="header-anchor" href="#autoacknowledge" aria-hidden="true">#</a> autoacknowledge</h3><p>• <code>Private</code> <strong>autoacknowledge</strong>: <code>boolean</code> = <code>true</code></p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4>',4),j={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L63",target:"_blank",rel:"noopener noreferrer"},U=e("hr",null,null,-1),X=e("h3",{id:"commanddescription",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commanddescription","aria-hidden":"true"},"#"),t(" commandDescription")],-1),Y=e("p",null,[t("• "),e("code",null,"Private"),t(),e("strong",null,"commandDescription"),t(": "),e("code",null,"string")],-1),$=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),z={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L113",target:"_blank",rel:"noopener noreferrer"},J=e("hr",null,null,-1),K=e("h3",{id:"commandname",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandname","aria-hidden":"true"},"#"),t(" commandName")],-1),ee=e("p",null,[t("• "),e("code",null,"Private"),t(),e("strong",null,"commandName"),t(": "),e("code",null,"string")],-1),te=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),ne={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L113",target:"_blank",rel:"noopener noreferrer"},oe=i('<hr><h3 id="deprecated" tabindex="-1"><a class="header-anchor" href="#deprecated" aria-hidden="true">#</a> deprecated</h3><p>• <code>Private</code> <strong>deprecated</strong>: <code>boolean</code> = <code>false</code></p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4>',4),se={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L52",target:"_blank",rel:"noopener noreferrer"},ae=i('<hr><h3 id="durable" tabindex="-1"><a class="header-anchor" href="#durable" aria-hidden="true">#</a> durable</h3><p>• <code>Private</code> <strong>durable</strong>: <code>boolean</code> = <code>false</code></p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4>',4),ie={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L62",target:"_blank",rel:"noopener noreferrer"},de=e("hr",null,null,-1),le=e("h3",{id:"errorstatuscodes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#errorstatuscodes","aria-hidden":"true"},"#"),t(" errorStatusCodes")],-1),ce=e("code",null,"Private",-1),re=e("strong",null,"errorStatusCodes",-1),ue=e("code",null,"StatusCode",-1),he=e("code",null,"[]",-1),_e=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),pe={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L56",target:"_blank",rel:"noopener noreferrer"},me=i('<hr><h3 id="eventname" tabindex="-1"><a class="header-anchor" href="#eventname" aria-hidden="true">#</a> eventName</h3><p>• <code>Private</code> <code>Optional</code> <strong>eventName</strong>: <code>string</code></p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>',4),fe={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L113",target:"_blank",rel:"noopener noreferrer"},ye=e("hr",null,null,-1),ge=e("h3",{id:"fn",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#fn","aria-hidden":"true"},"#"),t(" fn")],-1),be=e("code",null,"Private",-1),Te=e("code",null,"Optional",-1),Ce=e("strong",null,"fn",-1),xe=e("code",null,"CommandFunction",-1),De=e("code",null,"ServiceClassType",-1),Pe=e("code",null,"MessagePayloadType",-1),Be=e("code",null,"MessageParamsType",-1),ke=e("code",null,"FunctionPayloadType",-1),ve=e("code",null,"FunctionParamsType",-1),Fe=e("code",null,"FunctionResultType",-1),Me=e("h4",{id:"defined-in-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-8","aria-hidden":"true"},"#"),t(" Defined in")],-1),Se={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L103",target:"_blank",rel:"noopener noreferrer"},Re=e("hr",null,null,-1),we=e("h3",{id:"hooks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hooks","aria-hidden":"true"},"#"),t(" hooks")],-1),Oe=e("p",null,[t("• "),e("code",null,"Private"),t(),e("strong",null,"hooks"),t(": "),e("code",null,"Object")],-1),Ie=e("h4",{id:"type-declaration",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Le=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ne=e("td",{style:{"text-align":"left"}},[e("code",null,"afterGuard")],-1),Ae={style:{"text-align":"left"}},Ee=e("code",null,"Record",-1),He=e("code",null,"string",-1),Ze=e("code",null,"CommandAfterGuardHook",-1),qe=e("code",null,"ServiceClassType",-1),Ge=e("code",null,"MessagePayloadType",-1),Qe=e("code",null,"MessageParamsType",-1),We=e("code",null,"FunctionResultType",-1),Ve=e("code",null,"FunctionPayloadType",-1),je=e("code",null,"FunctionParamsType",-1),Ue=e("td",{style:{"text-align":"left"}},[e("code",null,"beforeGuard")],-1),Xe={style:{"text-align":"left"}},Ye=e("code",null,"Record",-1),$e=e("code",null,"string",-1),ze=e("code",null,"CommandBeforeGuardHook",-1),Je=e("code",null,"ServiceClassType",-1),Ke=e("code",null,"MessagePayloadType",-1),et=e("code",null,"MessageParamsType",-1),tt=e("code",null,"FunctionPayloadType",-1),nt=e("code",null,"FunctionParamsType",-1),ot=e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput?")],-1),st={style:{"text-align":"left"}},at=e("code",null,"transformFunction",-1),it=e("code",null,"CommandTransformInputHook",-1),dt=e("code",null,"ServiceClassType",-1),lt=e("code",null,"any",-1),ct=e("code",null,"any",-1),rt=e("code",null,"any",-1),ut=e("code",null,"any",-1),ht=e("code",null,"transformInputSchema",-1),_t=e("code",null,"ZodType",-1),pt=e("code",null,"any",-1),mt=e("code",null,"ZodTypeDef",-1),ft=e("code",null,"any",-1),yt=e("code",null,"transformParameterSchema",-1),gt=e("code",null,"ZodType",-1),bt=e("code",null,"any",-1),Tt=e("code",null,"ZodTypeDef",-1),Ct=e("code",null,"any",-1),xt=e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput.transformFunction")],-1),Dt={style:{"text-align":"left"}},Pt=e("code",null,"CommandTransformInputHook",-1),Bt=e("code",null,"ServiceClassType",-1),kt=e("code",null,"any",-1),vt=e("code",null,"any",-1),Ft=e("code",null,"any",-1),Mt=e("code",null,"any",-1),St=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput.transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"any"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"any"),t(">")])],-1),Rt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput.transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"any"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"any"),t(">")])],-1),wt=e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutput?")],-1),Ot={style:{"text-align":"left"}},It=e("code",null,"transformFunction",-1),Lt=e("code",null,"CommandTransformOutputHook",-1),Nt=e("code",null,"ServiceClassType",-1),At=e("code",null,"any",-1),Et=e("code",null,"any",-1),Ht=e("code",null,"FunctionParamsType",-1),Zt=e("code",null,"any",-1),qt=e("code",null,"transformOutputSchema",-1),Gt=e("code",null,"ZodType",-1),Qt=e("code",null,"any",-1),Wt=e("code",null,"ZodTypeDef",-1),Vt=e("code",null,"any",-1),jt=e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutput.transformFunction")],-1),Ut={style:{"text-align":"left"}},Xt=e("code",null,"CommandTransformOutputHook",-1),Yt=e("code",null,"ServiceClassType",-1),$t=e("code",null,"any",-1),zt=e("code",null,"any",-1),Jt=e("code",null,"FunctionParamsType",-1),Kt=e("code",null,"any",-1),en=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutput.transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"any"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"any"),t(">")])],-1),tn=e("h4",{id:"defined-in-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-9","aria-hidden":"true"},"#"),t(" Defined in")],-1),nn={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L65",target:"_blank",rel:"noopener noreferrer"},on=e("hr",null,null,-1),sn=e("h3",{id:"httpmetadata",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#httpmetadata","aria-hidden":"true"},"#"),t(" httpMetadata")],-1),an=e("code",null,"Private",-1),dn=e("code",null,"Optional",-1),ln=e("strong",null,"httpMetadata",-1),cn=e("code",null,"HttpExposedServiceMeta",-1),rn=e("code",null,"FunctionParamsType",-1),un=e("h4",{id:"defined-in-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-10","aria-hidden":"true"},"#"),t(" Defined in")],-1),hn={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L40",target:"_blank",rel:"noopener noreferrer"},_n=i('<hr><h3 id="inputcontentencoding" tabindex="-1"><a class="header-anchor" href="#inputcontentencoding" aria-hidden="true">#</a> inputContentEncoding</h3><p>• <code>Private</code> <strong>inputContentEncoding</strong>: <code>undefined</code> | <code>string</code></p><h4 id="defined-in-11" tabindex="-1"><a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a> Defined in</h4>',4),pn={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L43",target:"_blank",rel:"noopener noreferrer"},mn=i('<hr><h3 id="inputcontenttype" tabindex="-1"><a class="header-anchor" href="#inputcontenttype" aria-hidden="true">#</a> inputContentType</h3><p>• <code>Private</code> <strong>inputContentType</strong>: <code>undefined</code> | <code>string</code></p><h4 id="defined-in-12" tabindex="-1"><a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a> Defined in</h4>',4),fn={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L42",target:"_blank",rel:"noopener noreferrer"},yn=i('<hr><h3 id="inputschema" tabindex="-1"><a class="header-anchor" href="#inputschema" aria-hidden="true">#</a> inputSchema</h3><p>• <code>Private</code> <code>Optional</code> <strong>inputSchema</strong>: <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;</p><h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4>',4),gn={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L41",target:"_blank",rel:"noopener noreferrer"},bn=i('<hr><h3 id="issecure" tabindex="-1"><a class="header-anchor" href="#issecure" aria-hidden="true">#</a> isSecure</h3><p>• <code>Private</code> <strong>isSecure</strong>: <code>boolean</code> = <code>true</code></p><h4 id="defined-in-14" tabindex="-1"><a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a> Defined in</h4>',4),Tn={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L58",target:"_blank",rel:"noopener noreferrer"},Cn=i('<hr><h3 id="operationid" tabindex="-1"><a class="header-anchor" href="#operationid" aria-hidden="true">#</a> operationId</h3><p>• <code>Private</code> <code>Optional</code> <strong>operationId</strong>: <code>string</code></p><h4 id="defined-in-15" tabindex="-1"><a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a> Defined in</h4>',4),xn={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L60",target:"_blank",rel:"noopener noreferrer"},Dn=i('<hr><h3 id="outputcontentencoding" tabindex="-1"><a class="header-anchor" href="#outputcontentencoding" aria-hidden="true">#</a> outputContentEncoding</h3><p>• <code>Private</code> <strong>outputContentEncoding</strong>: <code>undefined</code> | <code>string</code></p><h4 id="defined-in-16" tabindex="-1"><a class="header-anchor" href="#defined-in-16" aria-hidden="true">#</a> Defined in</h4>',4),Pn={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L46",target:"_blank",rel:"noopener noreferrer"},Bn=i('<hr><h3 id="outputcontenttype" tabindex="-1"><a class="header-anchor" href="#outputcontenttype" aria-hidden="true">#</a> outputContentType</h3><p>• <code>Private</code> <strong>outputContentType</strong>: <code>undefined</code> | <code>string</code></p><h4 id="defined-in-17" tabindex="-1"><a class="header-anchor" href="#defined-in-17" aria-hidden="true">#</a> Defined in</h4>',4),kn={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L45",target:"_blank",rel:"noopener noreferrer"},vn=i('<hr><h3 id="outputschema" tabindex="-1"><a class="header-anchor" href="#outputschema" aria-hidden="true">#</a> outputSchema</h3><p>• <code>Private</code> <code>Optional</code> <strong>outputSchema</strong>: <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;</p><h4 id="defined-in-18" tabindex="-1"><a class="header-anchor" href="#defined-in-18" aria-hidden="true">#</a> Defined in</h4>',4),Fn={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L44",target:"_blank",rel:"noopener noreferrer"},Mn=i('<hr><h3 id="parameterschema" tabindex="-1"><a class="header-anchor" href="#parameterschema" aria-hidden="true">#</a> parameterSchema</h3><p>• <code>Private</code> <code>Optional</code> <strong>parameterSchema</strong>: <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;</p><h4 id="defined-in-19" tabindex="-1"><a class="header-anchor" href="#defined-in-19" aria-hidden="true">#</a> Defined in</h4>',4),Sn={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L47",target:"_blank",rel:"noopener noreferrer"},Rn=e("hr",null,null,-1),wn=e("h3",{id:"queryparameter",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#queryparameter","aria-hidden":"true"},"#"),t(" queryParameter")],-1),On=e("code",null,"Private",-1),In=e("strong",null,"queryParameter",-1),Ln=e("code",null,"QueryParameter",-1),Nn=e("code",null,"FunctionParamsType",-1),An=e("code",null,"[]",-1),En=e("h4",{id:"defined-in-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-20","aria-hidden":"true"},"#"),t(" Defined in")],-1),Hn={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L48",target:"_blank",rel:"noopener noreferrer"},Zn=i('<hr><h3 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> summary</h3><p>• <code>Private</code> <code>Optional</code> <strong>summary</strong>: <code>string</code></p><h4 id="defined-in-21" tabindex="-1"><a class="header-anchor" href="#defined-in-21" aria-hidden="true">#</a> Defined in</h4>',4),qn={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L54",target:"_blank",rel:"noopener noreferrer"},Gn=i('<hr><h3 id="tags" tabindex="-1"><a class="header-anchor" href="#tags" aria-hidden="true">#</a> tags</h3><p>• <code>Private</code> <strong>tags</strong>: <code>string</code>[] = <code>[]</code></p><h4 id="defined-in-22" tabindex="-1"><a class="header-anchor" href="#defined-in-22" aria-hidden="true">#</a> Defined in</h4>',4),Qn={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L50",target:"_blank",rel:"noopener noreferrer"},Wn=e("h2",{id:"methods-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods-1","aria-hidden":"true"},"#"),t(" Methods")],-1),Vn=e("h3",{id:"addopenapierrorstatuscodes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addopenapierrorstatuscodes","aria-hidden":"true"},"#"),t(" addOpenApiErrorStatusCodes")],-1),jn=e("strong",null,"addOpenApiErrorStatusCodes",-1),Un=e("code",null,"...codes",-1),Xn=e("code",null,"CommandDefinitionBuilder",-1),Yn=e("code",null,"ServiceClassType",-1),$n=e("code",null,"MessagePayloadType",-1),zn=e("code",null,"MessageParamsType",-1),Jn=e("code",null,"MessageResultType",-1),Kn=e("code",null,"FunctionPayloadType",-1),eo=e("code",null,"FunctionParamsType",-1),to=e("code",null,"FunctionResultType",-1),no=i(`<p>If a function can return other status codes, than the default ones, you should add them to openApi definition. Per default, 200, 204, 400, 401 and 500 can be autogenerated in most cases. Special cases or different status codes should be added with this function.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">addErrorStatusCodes</span><span class="token punctuation">(</span>StatusCode<span class="token punctuation">.</span>PaymentRequired<span class="token punctuation">,</span> StatusCode<span class="token punctuation">.</span>Conflict<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4>`,4),oo=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),so=e("td",{style:{"text-align":"left"}},[e("code",null,"...codes")],-1),ao={style:{"text-align":"left"}},io=e("code",null,"StatusCode",-1),lo=e("td",{style:{"text-align":"left"}},"List of status codes",-1),co=e("h4",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns","aria-hidden":"true"},"#"),t(" Returns")],-1),ro=e("code",null,"CommandDefinitionBuilder",-1),uo=e("code",null,"ServiceClassType",-1),ho=e("code",null,"MessagePayloadType",-1),_o=e("code",null,"MessageParamsType",-1),po=e("code",null,"MessageResultType",-1),mo=e("code",null,"FunctionPayloadType",-1),fo=e("code",null,"FunctionParamsType",-1),yo=e("code",null,"FunctionResultType",-1),go=e("p",null,"CommandDefinitionBuilder",-1),bo=e("h4",{id:"defined-in-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-23","aria-hidden":"true"},"#"),t(" Defined in")],-1),To={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L265",target:"_blank",rel:"noopener noreferrer"},Co=e("hr",null,null,-1),xo=e("h3",{id:"addopenapitags",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addopenapitags","aria-hidden":"true"},"#"),t(" addOpenApiTags")],-1),Do=e("strong",null,"addOpenApiTags",-1),Po=e("code",null,"...tags",-1),Bo=e("code",null,"CommandDefinitionBuilder",-1),ko=e("code",null,"ServiceClassType",-1),vo=e("code",null,"MessagePayloadType",-1),Fo=e("code",null,"MessageParamsType",-1),Mo=e("code",null,"MessageResultType",-1),So=e("code",null,"FunctionPayloadType",-1),Ro=e("code",null,"FunctionParamsType",-1),wo=e("code",null,"FunctionResultType",-1),Oo=i(`<p>Add tags for openApi definition for given function. It is recommended to use some enum for tags to avoid typo issues.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">addTags</span><span class="token punctuation">(</span><span class="token string">&#39;User&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Public&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...tags</code></td><td style="text-align:left;"><code>string</code>[]</td><td style="text-align:left;">List of tag strings</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4>`,6),Io=e("code",null,"CommandDefinitionBuilder",-1),Lo=e("code",null,"ServiceClassType",-1),No=e("code",null,"MessagePayloadType",-1),Ao=e("code",null,"MessageParamsType",-1),Eo=e("code",null,"MessageResultType",-1),Ho=e("code",null,"FunctionPayloadType",-1),Zo=e("code",null,"FunctionParamsType",-1),qo=e("code",null,"FunctionResultType",-1),Go=e("p",null,"CommandDefinitionBuilder",-1),Qo=e("h4",{id:"defined-in-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-24","aria-hidden":"true"},"#"),t(" Defined in")],-1),Wo={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L247",target:"_blank",rel:"noopener noreferrer"},Vo=e("hr",null,null,-1),jo=e("h3",{id:"addoutputschema",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addoutputschema","aria-hidden":"true"},"#"),t(" addOutputSchema")],-1),Uo=e("strong",null,"addOutputSchema",-1),Xo=e("code",null,"I",-1),Yo=e("code",null,"D",-1),$o=e("code",null,"O",-1),zo=e("code",null,"outputSchema",-1),Jo=e("code",null,"outputContentType?",-1),Ko=e("code",null,"outputContentEncoding?",-1),es=e("code",null,"CommandDefinitionBuilder",-1),ts=e("code",null,"ServiceClassType",-1),ns=e("code",null,"MessagePayloadType",-1),os=e("code",null,"MessageParamsType",-1),ss=e("code",null,"O",-1),as=e("code",null,"FunctionPayloadType",-1),is=e("code",null,"FunctionParamsType",-1),ds=e("code",null,"I",-1),ls=i('<p>Add a schema for output payload validation. Types for payload of message and function payload output are generated from given schema.</p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>I</code></td><td style="text-align:left;"><code>I</code></td></tr><tr><td style="text-align:left;"><code>D</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>O</code></td><td style="text-align:left;"><code>O</code></td></tr></tbody></table><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>outputSchema</code></td><td style="text-align:left;"><code>ZodType</code>&lt;<code>O</code>, <code>D</code>, <code>I</code>&gt;</td><td style="text-align:left;">The schema validation for output payload</td></tr><tr><td style="text-align:left;"><code>outputContentType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">optional the content type of payload</td></tr><tr><td style="text-align:left;"><code>outputContentEncoding?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">optional the content encoding</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4>',6),cs=e("code",null,"CommandDefinitionBuilder",-1),rs=e("code",null,"ServiceClassType",-1),us=e("code",null,"MessagePayloadType",-1),hs=e("code",null,"MessageParamsType",-1),_s=e("code",null,"O",-1),ps=e("code",null,"FunctionPayloadType",-1),ms=e("code",null,"FunctionParamsType",-1),fs=e("code",null,"I",-1),ys=e("p",null,"CommandDefinitionBuilder",-1),gs=e("h4",{id:"defined-in-25",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-25","aria-hidden":"true"},"#"),t(" Defined in")],-1),bs={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L161",target:"_blank",rel:"noopener noreferrer"},Ts=e("hr",null,null,-1),Cs=e("h3",{id:"addparameterschema",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addparameterschema","aria-hidden":"true"},"#"),t(" addParameterSchema")],-1),xs=e("strong",null,"addParameterSchema",-1),Ds=e("code",null,"I",-1),Ps=e("code",null,"D",-1),Bs=e("code",null,"O",-1),ks=e("code",null,"parameterSchema",-1),vs=e("code",null,"CommandDefinitionBuilder",-1),Fs=e("code",null,"ServiceClassType",-1),Ms=e("code",null,"MessagePayloadType",-1),Ss=e("code",null,"I",-1),Rs=e("code",null,"MessageResultType",-1),ws=e("code",null,"FunctionPayloadType",-1),Os=e("code",null,"O",-1),Is=e("code",null,"FunctionResultType",-1),Ls=i('<p>Add a schema for output parameter validation. Types for parameter of message and function parameter output are generated from given schema.</p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>I</code></td><td style="text-align:left;"><code>I</code></td></tr><tr><td style="text-align:left;"><code>D</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>O</code></td><td style="text-align:left;"><code>O</code></td></tr></tbody></table><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>parameterSchema</code></td><td style="text-align:left;"><code>ZodType</code>&lt;<code>O</code>, <code>D</code>, <code>I</code>&gt;</td><td style="text-align:left;">The schema validation for output parameter</td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4>',6),Ns=e("code",null,"CommandDefinitionBuilder",-1),As=e("code",null,"ServiceClassType",-1),Es=e("code",null,"MessagePayloadType",-1),Hs=e("code",null,"I",-1),Zs=e("code",null,"MessageResultType",-1),qs=e("code",null,"FunctionPayloadType",-1),Gs=e("code",null,"O",-1),Qs=e("code",null,"FunctionResultType",-1),Ws=e("p",null,"CommandDefinitionBuilder",-1),Vs=e("h4",{id:"defined-in-26",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-26","aria-hidden":"true"},"#"),t(" Defined in")],-1),js={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L195",target:"_blank",rel:"noopener noreferrer"},Us=e("hr",null,null,-1),Xs=e("h3",{id:"addpayloadschema",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addpayloadschema","aria-hidden":"true"},"#"),t(" addPayloadSchema")],-1),Ys=e("strong",null,"addPayloadSchema",-1),$s=e("code",null,"I",-1),zs=e("code",null,"D",-1),Js=e("code",null,"O",-1),Ks=e("code",null,"inputSchema",-1),ea=e("code",null,"inputContentType?",-1),ta=e("code",null,"inputContentEncoding?",-1),na=e("code",null,"CommandDefinitionBuilder",-1),oa=e("code",null,"ServiceClassType",-1),sa=e("code",null,"I",-1),aa=e("code",null,"MessageParamsType",-1),ia=e("code",null,"MessageResultType",-1),da=e("code",null,"O",-1),la=e("code",null,"FunctionParamsType",-1),ca=e("code",null,"FunctionResultType",-1),ra=i('<p>Add a schema for input payload validation. Types for payload of message and function payload input are generated from given schema.</p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>I</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>D</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code> = <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>O</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>inputSchema</code></td><td style="text-align:left;"><code>ZodType</code>&lt;<code>O</code>, <code>D</code>, <code>I</code>&gt;</td><td style="text-align:left;">The schema validation for input payload</td></tr><tr><td style="text-align:left;"><code>inputContentType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">optional the content type of payload</td></tr><tr><td style="text-align:left;"><code>inputContentEncoding?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">optional the content encoding</td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4>',6),ua=e("code",null,"CommandDefinitionBuilder",-1),ha=e("code",null,"ServiceClassType",-1),_a=e("code",null,"I",-1),pa=e("code",null,"MessageParamsType",-1),ma=e("code",null,"MessageResultType",-1),fa=e("code",null,"O",-1),ya=e("code",null,"FunctionParamsType",-1),ga=e("code",null,"FunctionResultType",-1),ba=e("p",null,"CommandDefinitionBuilder",-1),Ta=e("h4",{id:"defined-in-27",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-27","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ca={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L134",target:"_blank",rel:"noopener noreferrer"},xa=e("hr",null,null,-1),Da=e("h3",{id:"addqueryparameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addqueryparameters","aria-hidden":"true"},"#"),t(" addQueryParameters")],-1),Pa=e("strong",null,"addQueryParameters",-1),Ba=e("code",null,"...queryParams",-1),ka=e("code",null,"CommandDefinitionBuilder",-1),va=e("code",null,"ServiceClassType",-1),Fa=e("code",null,"MessagePayloadType",-1),Ma=e("code",null,"MessageParamsType",-1),Sa=e("code",null,"MessageResultType",-1),Ra=e("code",null,"FunctionPayloadType",-1),wa=e("code",null,"FunctionParamsType",-1),Oa=e("code",null,"FunctionResultType",-1),Ia=i(`<p>Define query parameters if you expose the function as http endpoint. Query parameters are add to openApi definition. Query parameters are add to input parameters.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token punctuation">.</span><span class="token function">addQueryParameters</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span>
    required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">&#39;search&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">&#39;limit&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4>`,4),La=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Na=e("td",{style:{"text-align":"left"}},[e("code",null,"...queryParams")],-1),Aa={style:{"text-align":"left"}},Ea=e("code",null,"QueryParameter",-1),Ha=e("code",null,"FunctionParamsType",-1),Za=e("td",{style:{"text-align":"left"}},"Add one or more query parameter definitions",-1),qa=e("h4",{id:"returns-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-5","aria-hidden":"true"},"#"),t(" Returns")],-1),Ga=e("code",null,"CommandDefinitionBuilder",-1),Qa=e("code",null,"ServiceClassType",-1),Wa=e("code",null,"MessagePayloadType",-1),Va=e("code",null,"MessageParamsType",-1),ja=e("code",null,"MessageResultType",-1),Ua=e("code",null,"FunctionPayloadType",-1),Xa=e("code",null,"FunctionParamsType",-1),Ya=e("code",null,"FunctionResultType",-1),$a=e("p",null,"CommandDefinitionBuilder",-1),za=e("h4",{id:"defined-in-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-28","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ja={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L230",target:"_blank",rel:"noopener noreferrer"},Ka=e("hr",null,null,-1),ei=e("h3",{id:"adviceautoacknowledgemessages",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#adviceautoacknowledgemessages","aria-hidden":"true"},"#"),t(" adviceAutoacknowledgeMessages")],-1),ti=e("strong",null,"adviceAutoacknowledgeMessages",-1),ni=e("code",null,"acknowledge?",-1),oi=e("code",null,"CommandDefinitionBuilder",-1),si=e("code",null,"ServiceClassType",-1),ai=e("code",null,"MessagePayloadType",-1),ii=e("code",null,"MessageParamsType",-1),di=e("code",null,"MessageResultType",-1),li=e("code",null,"FunctionPayloadType",-1),ci=e("code",null,"FunctionParamsType",-1),ri=e("code",null,"FunctionResultType",-1),ui=i('<p>Instruct the event bridge message broker to autoacknowledge commands as soon as they arrive. This means, a message will not be resent, if the command execution fails unexpected.</p><p>If set to false, the command message will be resent from message broker to eventbridge, if:</p><ul><li>the underlaying message broker supports it</li><li>if the command execution fails unexpected</li><li>if sending of command response failed</li></ul><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>acknowledge</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>true</code></td><td style="text-align:left;">Enable (true) and disable (false)</td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4>',6),hi=e("code",null,"CommandDefinitionBuilder",-1),_i=e("code",null,"ServiceClassType",-1),pi=e("code",null,"MessagePayloadType",-1),mi=e("code",null,"MessageParamsType",-1),fi=e("code",null,"MessageResultType",-1),yi=e("code",null,"FunctionPayloadType",-1),gi=e("code",null,"FunctionParamsType",-1),bi=e("code",null,"FunctionResultType",-1),Ti=e("p",null,"CommandDefinition",-1),Ci=e("h4",{id:"defined-in-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-29","aria-hidden":"true"},"#"),t(" Defined in")],-1),xi={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L589",target:"_blank",rel:"noopener noreferrer"},Di=e("hr",null,null,-1),Pi=e("h3",{id:"disablehttpsecurity",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#disablehttpsecurity","aria-hidden":"true"},"#"),t(" disableHttpSecurity")],-1),Bi=e("strong",null,"disableHttpSecurity",-1),ki=e("code",null,"disabled?",-1),vi=e("code",null,"CommandDefinitionBuilder",-1),Fi=e("code",null,"ServiceClassType",-1),Mi=e("code",null,"MessagePayloadType",-1),Si=e("code",null,"MessageParamsType",-1),Ri=e("code",null,"MessageResultType",-1),wi=e("code",null,"FunctionPayloadType",-1),Oi=e("code",null,"FunctionParamsType",-1),Ii=e("code",null,"FunctionResultType",-1),Li=i('<p>enable or disable security for this endpoint</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th></tr></thead><tbody><tr><td style="text-align:left;"><code>disabled</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>true</code></td></tr></tbody></table><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4>',4),Ni=e("code",null,"CommandDefinitionBuilder",-1),Ai=e("code",null,"ServiceClassType",-1),Ei=e("code",null,"MessagePayloadType",-1),Hi=e("code",null,"MessageParamsType",-1),Zi=e("code",null,"MessageResultType",-1),qi=e("code",null,"FunctionPayloadType",-1),Gi=e("code",null,"FunctionParamsType",-1),Qi=e("code",null,"FunctionResultType",-1),Wi=e("p",null,"CommandDefinitionBuilder",-1),Vi=e("h4",{id:"defined-in-30",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-30","aria-hidden":"true"},"#"),t(" Defined in")],-1),ji={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L493",target:"_blank",rel:"noopener noreferrer"},Ui=e("hr",null,null,-1),Xi=e("h3",{id:"enablehttpsecurity",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#enablehttpsecurity","aria-hidden":"true"},"#"),t(" enableHttpSecurity")],-1),Yi=e("strong",null,"enableHttpSecurity",-1),$i=e("code",null,"enabled?",-1),zi=e("code",null,"CommandDefinitionBuilder",-1),Ji=e("code",null,"ServiceClassType",-1),Ki=e("code",null,"MessagePayloadType",-1),ed=e("code",null,"MessageParamsType",-1),td=e("code",null,"MessageResultType",-1),nd=e("code",null,"FunctionPayloadType",-1),od=e("code",null,"FunctionParamsType",-1),sd=e("code",null,"FunctionResultType",-1),ad=i('<p>enable or disable security for this endpoint</p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>enabled</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>true</code></td><td style="text-align:left;">Defaults to true if not set means &quot;enable security&quot;</td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4>',4),id=e("code",null,"CommandDefinitionBuilder",-1),dd=e("code",null,"ServiceClassType",-1),ld=e("code",null,"MessagePayloadType",-1),cd=e("code",null,"MessageParamsType",-1),rd=e("code",null,"MessageResultType",-1),ud=e("code",null,"FunctionPayloadType",-1),hd=e("code",null,"FunctionParamsType",-1),_d=e("code",null,"FunctionResultType",-1),pd=e("p",null,"CommandDefinitionBuilder",-1),md=e("h4",{id:"defined-in-31",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-31","aria-hidden":"true"},"#"),t(" Defined in")],-1),fd={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L483",target:"_blank",rel:"noopener noreferrer"},yd=e("hr",null,null,-1),gd=e("h3",{id:"exposeashttpendpoint",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#exposeashttpendpoint","aria-hidden":"true"},"#"),t(" exposeAsHttpEndpoint")],-1),bd=e("strong",null,"exposeAsHttpEndpoint",-1),Td=e("code",null,"method",-1),Cd=e("code",null,"path",-1),xd=e("code",null,"contentTypeRequest?",-1),Dd=e("code",null,"contentEncodingRequest?",-1),Pd=e("code",null,"contentTypeResponse?",-1),Bd=e("code",null,"contentEncodingResponse?",-1),kd=e("code",null,"CommandDefinitionBuilder",-1),vd=e("code",null,"ServiceClassType",-1),Fd=e("code",null,"MessagePayloadType",-1),Md=e("code",null,"MessageParamsType",-1),Sd=e("code",null,"MessageResultType",-1),Rd=e("code",null,"FunctionPayloadType",-1),wd=e("code",null,"FunctionParamsType",-1),Od=e("code",null,"FunctionResultType",-1),Id=e("p",null,"Mark the function to be exposed as http endpoint.",-1),Ld=e("p",null,"Api url prefix and service version are prepended automatically",-1),Nd=e("p",null,[t("For exposing a url like: "),e("code",null,"/api/V1/user/login"),t(" simply provide "),e("code",null,"user/login"),t("as path")],-1),Ad=e("h4",{id:"parameters-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-10","aria-hidden":"true"},"#"),t(" Parameters")],-1),Ed=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Hd=e("td",{style:{"text-align":"left"}},[e("code",null,"method")],-1),Zd={style:{"text-align":"left"}},qd=e("code",null,"SupportedHttpMethod",-1),Gd=e("td",{style:{"text-align":"left"}},"Http method POST, PUT, PATCH, GET, DELETE",-1),Qd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"path")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The url path")],-1),Wd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentTypeRequest?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"input content type defaults to application/json")],-1),Vd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncodingRequest?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"input content encoding defaults to utf-8")],-1),jd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentTypeResponse?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"input content type defaults to application/json")],-1),Ud=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncodingResponse?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"input content encoding defaults to utf-8")],-1),Xd=e("h4",{id:"returns-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-9","aria-hidden":"true"},"#"),t(" Returns")],-1),Yd=e("code",null,"CommandDefinitionBuilder",-1),$d=e("code",null,"ServiceClassType",-1),zd=e("code",null,"MessagePayloadType",-1),Jd=e("code",null,"MessageParamsType",-1),Kd=e("code",null,"MessageResultType",-1),el=e("code",null,"FunctionPayloadType",-1),tl=e("code",null,"FunctionParamsType",-1),nl=e("code",null,"FunctionResultType",-1),ol=e("p",null,"CommandDefinitionBuilder",-1),sl=e("h4",{id:"defined-in-32",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-32","aria-hidden":"true"},"#"),t(" Defined in")],-1),al={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L455",target:"_blank",rel:"noopener noreferrer"},il=e("hr",null,null,-1),dl=e("h3",{id:"extendwithhttpmetadata",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#extendwithhttpmetadata","aria-hidden":"true"},"#"),t(" extendWithHttpMetadata")],-1),ll=e("code",null,"Private",-1),cl=e("strong",null,"extendWithHttpMetadata",-1),rl=e("code",null,"definition",-1),ul=e("code",null,"Complete",-1),hl=e("code",null,"CommandDefinition",-1),_l=e("code",null,"ServiceClassType",-1),pl=e("code",null,"CommandDefinitionMetadataBase",-1),ml=e("code",null,"MessagePayloadType",-1),fl=e("code",null,"MessageParamsType",-1),yl=e("code",null,"MessageResultType",-1),gl=e("code",null,"FunctionPayloadType",-1),bl=e("code",null,"FunctionParamsType",-1),Tl=e("code",null,"FunctionResultType",-1),Cl=e("h4",{id:"parameters-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-11","aria-hidden":"true"},"#"),t(" Parameters")],-1),xl=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Dl=e("td",{style:{"text-align":"left"}},[e("code",null,"definition")],-1),Pl={style:{"text-align":"left"}},Bl=e("code",null,"Complete",-1),kl=e("code",null,"CommandDefinition",-1),vl=e("code",null,"ServiceClassType",-1),Fl=e("code",null,"CommandDefinitionMetadataBase",-1),Ml=e("code",null,"MessagePayloadType",-1),Sl=e("code",null,"MessageParamsType",-1),Rl=e("code",null,"MessageResultType",-1),wl=e("code",null,"FunctionPayloadType",-1),Ol=e("code",null,"FunctionParamsType",-1),Il=e("code",null,"FunctionResultType",-1),Ll=e("h4",{id:"returns-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-10","aria-hidden":"true"},"#"),t(" Returns")],-1),Nl=e("code",null,"Complete",-1),Al=e("code",null,"CommandDefinition",-1),El=e("code",null,"ServiceClassType",-1),Hl=e("code",null,"CommandDefinitionMetadataBase",-1),Zl=e("code",null,"MessagePayloadType",-1),ql=e("code",null,"MessageParamsType",-1),Gl=e("code",null,"MessageResultType",-1),Ql=e("code",null,"FunctionPayloadType",-1),Wl=e("code",null,"FunctionParamsType",-1),Vl=e("code",null,"FunctionResultType",-1),jl=e("h4",{id:"defined-in-33",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-33","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ul={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L524",target:"_blank",rel:"noopener noreferrer"},Xl=e("hr",null,null,-1),Yl=e("h3",{id:"getcommandfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommandfunction","aria-hidden":"true"},"#"),t(" getCommandFunction")],-1),$l=e("strong",null,"getCommandFunction",-1),zl=e("code",null,"CommandFunction",-1),Jl=e("code",null,"ServiceClassType",-1),Kl=e("code",null,"MessagePayloadType",-1),ec=e("code",null,"MessageParamsType",-1),tc=e("code",null,"MessagePayloadType",-1),nc=e("code",null,"MessageParamsType",-1),oc=e("code",null,"MessageResultType",-1),sc=e("p",null,"Get the function implementation",-1),ac=e("h4",{id:"returns-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-11","aria-hidden":"true"},"#"),t(" Returns")],-1),ic=e("code",null,"CommandFunction",-1),dc=e("code",null,"ServiceClassType",-1),lc=e("code",null,"MessagePayloadType",-1),cc=e("code",null,"MessageParamsType",-1),rc=e("code",null,"MessagePayloadType",-1),uc=e("code",null,"MessageParamsType",-1),hc=e("code",null,"MessageResultType",-1),_c=e("p",null,"the function",-1),pc=e("h4",{id:"defined-in-34",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-34","aria-hidden":"true"},"#"),t(" Defined in")],-1),mc={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L731",target:"_blank",rel:"noopener noreferrer"},fc=e("hr",null,null,-1),yc=e("h3",{id:"getdefinition",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getdefinition","aria-hidden":"true"},"#"),t(" getDefinition")],-1),gc=e("strong",null,"getDefinition",-1),bc=e("code",null,"CommandDefinition",-1),Tc=e("code",null,"ServiceClassType",-1),Cc=e("code",null,"CommandDefinitionMetadataBase",-1),xc=e("code",null,"MessagePayloadType",-1),Dc=e("code",null,"MessageParamsType",-1),Pc=e("code",null,"MessageResultType",-1),Bc=e("code",null,"FunctionPayloadType",-1),kc=e("code",null,"FunctionParamsType",-1),vc=e("code",null,"FunctionResultType",-1),Fc=e("p",null,"Creates and returns the CommandDefinition used as input for the service.",-1),Mc=e("h4",{id:"returns-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-12","aria-hidden":"true"},"#"),t(" Returns")],-1),Sc=e("code",null,"CommandDefinition",-1),Rc=e("code",null,"ServiceClassType",-1),wc=e("code",null,"CommandDefinitionMetadataBase",-1),Oc=e("code",null,"MessagePayloadType",-1),Ic=e("code",null,"MessageParamsType",-1),Lc=e("code",null,"MessageResultType",-1),Nc=e("code",null,"FunctionPayloadType",-1),Ac=e("code",null,"FunctionParamsType",-1),Ec=e("code",null,"FunctionResultType",-1),Hc=e("p",null,"CommandDefinition",-1),Zc=e("h4",{id:"defined-in-35",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-35","aria-hidden":"true"},"#"),t(" Defined in")],-1),qc={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L598",target:"_blank",rel:"noopener noreferrer"},Gc=e("hr",null,null,-1),Qc=e("h3",{id:"gettransforminputfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#gettransforminputfunction","aria-hidden":"true"},"#"),t(" getTransformInputFunction")],-1),Wc=e("strong",null,"getTransformInputFunction",-1),Vc=e("code",null,"undefined",-1),jc=e("code",null,"CommandTransformInputHook",-1),Uc=e("code",null,"ServiceClassType",-1),Xc=e("code",null,"FunctionPayloadType",-1),Yc=e("code",null,"FunctionParamsType",-1),$c=e("code",null,"MessagePayloadType",-1),zc=e("code",null,"MessageParamsType",-1),Jc=e("p",null,"Return the transform input function",-1),Kc=e("h4",{id:"returns-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-13","aria-hidden":"true"},"#"),t(" Returns")],-1),er=e("code",null,"undefined",-1),tr=e("code",null,"CommandTransformInputHook",-1),nr=e("code",null,"ServiceClassType",-1),or=e("code",null,"FunctionPayloadType",-1),sr=e("code",null,"FunctionParamsType",-1),ar=e("code",null,"MessagePayloadType",-1),ir=e("code",null,"MessageParamsType",-1),dr=e("p",null,"the input transform function if defined",-1),lr=e("h4",{id:"defined-in-36",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-36","aria-hidden":"true"},"#"),t(" Defined in")],-1),cr={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L324",target:"_blank",rel:"noopener noreferrer"},rr=e("hr",null,null,-1),ur=e("h3",{id:"gettransformoutputfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#gettransformoutputfunction","aria-hidden":"true"},"#"),t(" getTransformOutputFunction")],-1),hr=e("strong",null,"getTransformOutputFunction",-1),_r=e("code",null,"undefined",-1),pr=e("code",null,"CommandTransformOutputHook",-1),mr=e("code",null,"ServiceClassType",-1),fr=e("code",null,"MessagePayloadType",-1),yr=e("code",null,"FunctionResultType",-1),gr=e("code",null,"FunctionParamsType",-1),br=e("code",null,"MessageResultType",-1),Tr=e("p",null,"Return the transform output function",-1),Cr=e("h4",{id:"returns-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-14","aria-hidden":"true"},"#"),t(" Returns")],-1),xr=e("code",null,"undefined",-1),Dr=e("code",null,"CommandTransformOutputHook",-1),Pr=e("code",null,"ServiceClassType",-1),Br=e("code",null,"MessagePayloadType",-1),kr=e("code",null,"FunctionResultType",-1),vr=e("code",null,"FunctionParamsType",-1),Fr=e("code",null,"MessageResultType",-1),Mr=e("p",null,"the transform output function if defined",-1),Sr=e("h4",{id:"defined-in-37",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-37","aria-hidden":"true"},"#"),t(" Defined in")],-1),Rr={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L381",target:"_blank",rel:"noopener noreferrer"},wr=e("hr",null,null,-1),Or=e("h3",{id:"markasdeprecated",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#markasdeprecated","aria-hidden":"true"},"#"),t(" markAsDeprecated")],-1),Ir=e("strong",null,"markAsDeprecated",-1),Lr=e("code",null,"CommandDefinitionBuilder",-1),Nr=e("code",null,"ServiceClassType",-1),Ar=e("code",null,"MessagePayloadType",-1),Er=e("code",null,"MessageParamsType",-1),Hr=e("code",null,"MessageResultType",-1),Zr=e("code",null,"FunctionPayloadType",-1),qr=e("code",null,"FunctionParamsType",-1),Gr=e("code",null,"FunctionResultType",-1),Qr=e("p",null,"Mark this endpoint/command as deprecated",-1),Wr=e("h4",{id:"returns-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-15","aria-hidden":"true"},"#"),t(" Returns")],-1),Vr=e("code",null,"CommandDefinitionBuilder",-1),jr=e("code",null,"ServiceClassType",-1),Ur=e("code",null,"MessagePayloadType",-1),Xr=e("code",null,"MessageParamsType",-1),Yr=e("code",null,"MessageResultType",-1),$r=e("code",null,"FunctionPayloadType",-1),zr=e("code",null,"FunctionParamsType",-1),Jr=e("code",null,"FunctionResultType",-1),Kr=e("p",null,"CommandDefinitionBuilder",-1),eu=e("h4",{id:"defined-in-38",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-38","aria-hidden":"true"},"#"),t(" Defined in")],-1),tu={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L184",target:"_blank",rel:"noopener noreferrer"},nu=e("hr",null,null,-1),ou=e("h3",{id:"setafterguardhooks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setafterguardhooks","aria-hidden":"true"},"#"),t(" setAfterGuardHooks")],-1),su=e("strong",null,"setAfterGuardHooks",-1),au=e("code",null,"afterGuards",-1),iu=e("code",null,"CommandDefinitionBuilder",-1),du=e("code",null,"ServiceClassType",-1),lu=e("code",null,"MessagePayloadType",-1),cu=e("code",null,"MessageParamsType",-1),ru=e("code",null,"MessageResultType",-1),uu=e("code",null,"FunctionPayloadType",-1),hu=e("code",null,"FunctionParamsType",-1),_u=e("code",null,"FunctionResultType",-1),pu=e("p",null,"Set one or more after guard hook(s). If there are multiple after guard hooks, they are executed in parallel",-1),mu=e("h4",{id:"parameters-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-12","aria-hidden":"true"},"#"),t(" Parameters")],-1),fu=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),yu=e("td",{style:{"text-align":"left"}},[e("code",null,"afterGuards")],-1),gu={style:{"text-align":"left"}},bu=e("code",null,"Record",-1),Tu=e("code",null,"string",-1),Cu=e("code",null,"CommandAfterGuardHook",-1),xu=e("code",null,"ServiceClassType",-1),Du=e("code",null,"MessagePayloadType",-1),Pu=e("code",null,"MessageParamsType",-1),Bu=e("code",null,"FunctionResultType",-1),ku=e("code",null,"FunctionPayloadType",-1),vu=e("code",null,"FunctionParamsType",-1),Fu=e("h4",{id:"returns-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-16","aria-hidden":"true"},"#"),t(" Returns")],-1),Mu=e("code",null,"CommandDefinitionBuilder",-1),Su=e("code",null,"ServiceClassType",-1),Ru=e("code",null,"MessagePayloadType",-1),wu=e("code",null,"MessageParamsType",-1),Ou=e("code",null,"MessageResultType",-1),Iu=e("code",null,"FunctionPayloadType",-1),Lu=e("code",null,"FunctionParamsType",-1),Nu=e("code",null,"FunctionResultType",-1),Au=e("p",null,"CommandDefinitionBuilder",-1),Eu=e("h4",{id:"defined-in-39",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-39","aria-hidden":"true"},"#"),t(" Defined in")],-1),Hu={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L423",target:"_blank",rel:"noopener noreferrer"},Zu=e("hr",null,null,-1),qu=e("h3",{id:"setbeforeguardhooks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setbeforeguardhooks","aria-hidden":"true"},"#"),t(" setBeforeGuardHooks")],-1),Gu=e("strong",null,"setBeforeGuardHooks",-1),Qu=e("code",null,"beforeGuards",-1),Wu=e("code",null,"CommandDefinitionBuilder",-1),Vu=e("code",null,"ServiceClassType",-1),ju=e("code",null,"MessagePayloadType",-1),Uu=e("code",null,"MessageParamsType",-1),Xu=e("code",null,"MessageResultType",-1),Yu=e("code",null,"FunctionPayloadType",-1),$u=e("code",null,"FunctionParamsType",-1),zu=e("code",null,"FunctionResultType",-1),Ju=e("p",null,"Set one or more before guard hook(s). If there are multiple before guard hooks, they are executed in parallel",-1),Ku=e("h4",{id:"parameters-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-13","aria-hidden":"true"},"#"),t(" Parameters")],-1),eh=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),th=e("td",{style:{"text-align":"left"}},[e("code",null,"beforeGuards")],-1),nh={style:{"text-align":"left"}},oh=e("code",null,"Record",-1),sh=e("code",null,"string",-1),ah=e("code",null,"CommandBeforeGuardHook",-1),ih=e("code",null,"ServiceClassType",-1),dh=e("code",null,"MessagePayloadType",-1),lh=e("code",null,"MessageParamsType",-1),ch=e("code",null,"FunctionPayloadType",-1),rh=e("code",null,"FunctionParamsType",-1),uh=e("td",{style:{"text-align":"left"}},"Object of key = name of guard, value = function",-1),hh=e("h4",{id:"returns-17",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-17","aria-hidden":"true"},"#"),t(" Returns")],-1),_h=e("code",null,"CommandDefinitionBuilder",-1),ph=e("code",null,"ServiceClassType",-1),mh=e("code",null,"MessagePayloadType",-1),fh=e("code",null,"MessageParamsType",-1),yh=e("code",null,"MessageResultType",-1),gh=e("code",null,"FunctionPayloadType",-1),bh=e("code",null,"FunctionParamsType",-1),Th=e("code",null,"FunctionResultType",-1),Ch=e("p",null,"CommandDefinitionBuilder",-1),xh=e("h4",{id:"defined-in-40",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-40","aria-hidden":"true"},"#"),t(" Defined in")],-1),Dh={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L401",target:"_blank",rel:"noopener noreferrer"},Ph=e("hr",null,null,-1),Bh=e("h3",{id:"setcommandfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setcommandfunction","aria-hidden":"true"},"#"),t(" setCommandFunction")],-1),kh=e("strong",null,"setCommandFunction",-1),vh=e("code",null,"fn",-1),Fh=e("code",null,"CommandDefinitionBuilder",-1),Mh=e("code",null,"ServiceClassType",-1),Sh=e("code",null,"MessagePayloadType",-1),Rh=e("code",null,"MessageParamsType",-1),wh=e("code",null,"MessageResultType",-1),Oh=e("code",null,"FunctionPayloadType",-1),Ih=e("code",null,"FunctionParamsType",-1),Lh=e("code",null,"FunctionResultType",-1),Nh=i(`<p>Required: Set the function implementation. The types should be automatically set as soon as schemas previously defined. As the function will be a a function of a service class you need to implement as function declaration. Anonymous functions do not have access to the <code>this</code> scope.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> parameter<span class="token punctuation">)</span> <span class="token punctuation">{</span>

   <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">the result output payload</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14" aria-hidden="true">#</a> Parameters</h4>`,4),Ah=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Eh=e("td",{style:{"text-align":"left"}},[e("code",null,"fn")],-1),Hh={style:{"text-align":"left"}},Zh=e("code",null,"CommandFunction",-1),qh=e("code",null,"ServiceClassType",-1),Gh=e("code",null,"MessagePayloadType",-1),Qh=e("code",null,"MessageParamsType",-1),Wh=e("code",null,"FunctionPayloadType",-1),Vh=e("code",null,"FunctionParamsType",-1),jh=e("code",null,"FunctionResultType",-1),Uh=e("td",{style:{"text-align":"left"}},"the function implementation",-1),Xh=e("h4",{id:"returns-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-18","aria-hidden":"true"},"#"),t(" Returns")],-1),Yh=e("code",null,"CommandDefinitionBuilder",-1),$h=e("code",null,"ServiceClassType",-1),zh=e("code",null,"MessagePayloadType",-1),Jh=e("code",null,"MessageParamsType",-1),Kh=e("code",null,"MessageResultType",-1),e_=e("code",null,"FunctionPayloadType",-1),t_=e("code",null,"FunctionParamsType",-1),n_=e("code",null,"FunctionResultType",-1),o_=e("p",null,"CommandDefinitionBuilder",-1),s_=e("h4",{id:"defined-in-41",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-41","aria-hidden":"true"},"#"),t(" Defined in")],-1),a_={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L689",target:"_blank",rel:"noopener noreferrer"},i_=e("hr",null,null,-1),d_=e("h3",{id:"setopenapioperationid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setopenapioperationid","aria-hidden":"true"},"#"),t(" setOpenApiOperationId")],-1),l_=e("strong",null,"setOpenApiOperationId",-1),c_=e("code",null,"operationId",-1),r_=e("code",null,"CommandDefinitionBuilder",-1),u_=e("code",null,"ServiceClassType",-1),h_=e("code",null,"MessagePayloadType",-1),__=e("code",null,"MessageParamsType",-1),p_=e("code",null,"MessageResultType",-1),m_=e("code",null,"FunctionPayloadType",-1),f_=e("code",null,"FunctionParamsType",-1),y_=e("code",null,"FunctionResultType",-1),g_=i('<p>Set the operationId for openApi documentation</p><h4 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>operationId</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-19" tabindex="-1"><a class="header-anchor" href="#returns-19" aria-hidden="true">#</a> Returns</h4>',4),b_=e("code",null,"CommandDefinitionBuilder",-1),T_=e("code",null,"ServiceClassType",-1),C_=e("code",null,"MessagePayloadType",-1),x_=e("code",null,"MessageParamsType",-1),D_=e("code",null,"MessageResultType",-1),P_=e("code",null,"FunctionPayloadType",-1),B_=e("code",null,"FunctionParamsType",-1),k_=e("code",null,"FunctionResultType",-1),v_=e("p",null,"CommandDefinitionBuilder",-1),F_=e("h4",{id:"defined-in-42",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-42","aria-hidden":"true"},"#"),t(" Defined in")],-1),M_={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L519",target:"_blank",rel:"noopener noreferrer"},S_=e("hr",null,null,-1),R_=e("h3",{id:"setopenapisummary",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setopenapisummary","aria-hidden":"true"},"#"),t(" setOpenApiSummary")],-1),w_=e("strong",null,"setOpenApiSummary",-1),O_=e("code",null,"summary",-1),I_=e("code",null,"CommandDefinitionBuilder",-1),L_=e("code",null,"ServiceClassType",-1),N_=e("code",null,"MessagePayloadType",-1),A_=e("code",null,"MessageParamsType",-1),E_=e("code",null,"MessageResultType",-1),H_=e("code",null,"FunctionPayloadType",-1),Z_=e("code",null,"FunctionParamsType",-1),q_=e("code",null,"FunctionResultType",-1),G_=i(`<p>Set the function summary text used for example in openApi documentation</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">setSummary</span><span class="token punctuation">(</span><span class="token string">&#39;Some function summary&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="parameters-16" tabindex="-1"><a class="header-anchor" href="#parameters-16" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>summary</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Summary text</td></tr></tbody></table><h4 id="returns-20" tabindex="-1"><a class="header-anchor" href="#returns-20" aria-hidden="true">#</a> Returns</h4>`,6),Q_=e("code",null,"CommandDefinitionBuilder",-1),W_=e("code",null,"ServiceClassType",-1),V_=e("code",null,"MessagePayloadType",-1),j_=e("code",null,"MessageParamsType",-1),U_=e("code",null,"MessageResultType",-1),X_=e("code",null,"FunctionPayloadType",-1),Y_=e("code",null,"FunctionParamsType",-1),$_=e("code",null,"FunctionResultType",-1),z_=e("p",null,"CommandDefinitionBuilder",-1),J_=e("h4",{id:"defined-in-43",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-43","aria-hidden":"true"},"#"),t(" Defined in")],-1),K_={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L509",target:"_blank",rel:"noopener noreferrer"},ep=e("hr",null,null,-1),tp=e("h3",{id:"setsuccesseventname",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setsuccesseventname","aria-hidden":"true"},"#"),t(" setSuccessEventName")],-1),np=e("strong",null,"setSuccessEventName",-1),op=e("code",null,"eventName",-1),sp=e("code",null,"CommandDefinitionBuilder",-1),ap=e("code",null,"ServiceClassType",-1),ip=e("code",null,"MessagePayloadType",-1),dp=e("code",null,"MessageParamsType",-1),lp=e("code",null,"MessageResultType",-1),cp=e("code",null,"FunctionPayloadType",-1),rp=e("code",null,"FunctionParamsType",-1),up=e("code",null,"FunctionResultType",-1),hp=i('<h4 id="parameters-17" tabindex="-1"><a class="header-anchor" href="#parameters-17" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-21" tabindex="-1"><a class="header-anchor" href="#returns-21" aria-hidden="true">#</a> Returns</h4>',3),_p=e("code",null,"CommandDefinitionBuilder",-1),pp=e("code",null,"ServiceClassType",-1),mp=e("code",null,"MessagePayloadType",-1),fp=e("code",null,"MessageParamsType",-1),yp=e("code",null,"MessageResultType",-1),gp=e("code",null,"FunctionPayloadType",-1),bp=e("code",null,"FunctionParamsType",-1),Tp=e("code",null,"FunctionResultType",-1),Cp=e("h4",{id:"defined-in-44",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-44","aria-hidden":"true"},"#"),t(" Defined in")],-1),xp={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L121",target:"_blank",rel:"noopener noreferrer"},Dp=e("hr",null,null,-1),Pp=e("h3",{id:"settransforminput",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#settransforminput","aria-hidden":"true"},"#"),t(" setTransformInput")],-1),Bp=e("strong",null,"setTransformInput",-1),kp=e("code",null,"PayloadIn",-1),vp=e("code",null,"ParamsIn",-1),Fp=e("code",null,"PayloadOut",-1),Mp=e("code",null,"ParamsOut",-1),Sp=e("code",null,"PayloadD",-1),Rp=e("code",null,"ParamsD",-1),wp=e("code",null,"transformInputSchema",-1),Op=e("code",null,"transformParameterSchema",-1),Ip=e("code",null,"transformFunction",-1),Lp=e("code",null,"inputContentType?",-1),Np=e("code",null,"inputContentEncoding?",-1),Ap=e("code",null,"CommandDefinitionBuilder",-1),Ep=e("code",null,"ServiceClassType",-1),Hp=e("code",null,"PayloadIn",-1),Zp=e("code",null,"ParamsIn",-1),qp=e("code",null,"MessageResultType",-1),Gp=e("code",null,"FunctionPayloadType",-1),Qp=e("code",null,"FunctionParamsType",-1),Wp=e("code",null,"FunctionResultType",-1),Vp=i('<p>Set a transform input hook which will encode or transform the input payload and parameters. Will be executed as first step before input validation, before guard and the function itself. This will change the type of input message payload and input message parameter.</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadIn</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>ParamsIn</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>PayloadOut</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>ParamsOut</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>PayloadD</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code> = <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>ParamsD</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code> = <code>ZodTypeDef</code></td></tr></tbody></table><h4 id="parameters-18" tabindex="-1"><a class="header-anchor" href="#parameters-18" aria-hidden="true">#</a> Parameters</h4>',4),jp=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Up=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"PayloadOut"),t(", "),e("code",null,"PayloadD"),t(", "),e("code",null,"PayloadIn"),t(">")]),e("td",{style:{"text-align":"left"}},"Input payload validation schema")],-1),Xp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"ParamsOut"),t(", "),e("code",null,"ParamsD"),t(", "),e("code",null,"ParamsIn"),t(">")]),e("td",{style:{"text-align":"left"}},"Input parameter validation schema")],-1),Yp=e("td",{style:{"text-align":"left"}},[e("code",null,"transformFunction")],-1),$p={style:{"text-align":"left"}},zp=e("code",null,"CommandTransformInputHook",-1),Jp=e("code",null,"ServiceClassType",-1),Kp=e("code",null,"FunctionPayloadType",-1),em=e("code",null,"FunctionParamsType",-1),tm=e("code",null,"PayloadIn",-1),nm=e("code",null,"ParamsIn",-1),om=e("td",{style:{"text-align":"left"}},"Transform input function",-1),sm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"inputContentType?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"optional the content type of payload")],-1),am=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"inputContentEncoding?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"optional the content encoding")],-1),im=e("h4",{id:"returns-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-22","aria-hidden":"true"},"#"),t(" Returns")],-1),dm=e("code",null,"CommandDefinitionBuilder",-1),lm=e("code",null,"ServiceClassType",-1),cm=e("code",null,"PayloadIn",-1),rm=e("code",null,"ParamsIn",-1),um=e("code",null,"MessageResultType",-1),hm=e("code",null,"FunctionPayloadType",-1),_m=e("code",null,"FunctionParamsType",-1),pm=e("code",null,"FunctionResultType",-1),mm=e("p",null,"CommandDefinitionBuilder",-1),fm=e("h4",{id:"defined-in-45",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-45","aria-hidden":"true"},"#"),t(" Defined in")],-1),ym={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L281",target:"_blank",rel:"noopener noreferrer"},gm=e("hr",null,null,-1),bm=e("h3",{id:"settransformoutput",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#settransformoutput","aria-hidden":"true"},"#"),t(" setTransformOutput")],-1),Tm=e("strong",null,"setTransformOutput",-1),Cm=e("code",null,"PayloadOut",-1),xm=e("code",null,"PayloadD",-1),Dm=e("code",null,"PayloadIn",-1),Pm=e("code",null,"transformOutputSchema",-1),Bm=e("code",null,"transformFunction",-1),km=e("code",null,"outputContentType?",-1),vm=e("code",null,"outputContentEncoding?",-1),Fm=e("code",null,"CommandDefinitionBuilder",-1),Mm=e("code",null,"ServiceClassType",-1),Sm=e("code",null,"MessagePayloadType",-1),Rm=e("code",null,"MessageParamsType",-1),wm=e("code",null,"PayloadOut",-1),Om=e("code",null,"FunctionPayloadType",-1),Im=e("code",null,"FunctionParamsType",-1),Lm=e("code",null,"FunctionResultType",-1),Nm=i('<p>Set a transform output hook which will encode or transform the response payload. Will be executed at very last step after function execution, output validation and after guard hooks. This will change the type of output message payload.</p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadOut</code></td><td style="text-align:left;"><code>PayloadOut</code></td></tr><tr><td style="text-align:left;"><code>PayloadD</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>PayloadIn</code></td><td style="text-align:left;"><code>PayloadIn</code></td></tr></tbody></table><h4 id="parameters-19" tabindex="-1"><a class="header-anchor" href="#parameters-19" aria-hidden="true">#</a> Parameters</h4>',4),Am=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Em=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"PayloadOut"),t(", "),e("code",null,"PayloadD"),t(", "),e("code",null,"PayloadIn"),t(">")]),e("td",{style:{"text-align":"left"}},"The output validation schema")],-1),Hm=e("td",{style:{"text-align":"left"}},[e("code",null,"transformFunction")],-1),Zm={style:{"text-align":"left"}},qm=e("code",null,"CommandTransformOutputHook",-1),Gm=e("code",null,"ServiceClassType",-1),Qm=e("code",null,"MessagePayloadType",-1),Wm=e("code",null,"FunctionResultType",-1),Vm=e("code",null,"FunctionParamsType",-1),jm=e("code",null,"PayloadIn",-1),Um=e("td",{style:{"text-align":"left"}},"Transform output function",-1),Xm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"outputContentType?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"optional the content type of payload")],-1),Ym=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"outputContentEncoding?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"optional the content encoding")],-1),$m=e("h4",{id:"returns-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-23","aria-hidden":"true"},"#"),t(" Returns")],-1),zm=e("code",null,"CommandDefinitionBuilder",-1),Jm=e("code",null,"ServiceClassType",-1),Km=e("code",null,"MessagePayloadType",-1),e1=e("code",null,"MessageParamsType",-1),t1=e("code",null,"PayloadOut",-1),n1=e("code",null,"FunctionPayloadType",-1),o1=e("code",null,"FunctionParamsType",-1),s1=e("code",null,"FunctionResultType",-1),a1=e("p",null,"CommandDefinitionBuilder",-1),i1=e("h4",{id:"defined-in-46",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-46","aria-hidden":"true"},"#"),t(" Defined in")],-1),d1={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L348",target:"_blank",rel:"noopener noreferrer"};function l1(c1,r1){const o=d("RouterLink"),a=d("ExternalLinkIcon");return c(),r("div",null,[e("p",null,[n(o,{to:"/api/"},{default:s(()=>[t("PURISTA API - v1.4.9")]),_:1}),t(" / "),n(o,{to:"/api/modules.html"},{default:s(()=>[t("Modules")]),_:1}),t(" / "),n(o,{to:"/api/modules/purista_core.html"},{default:s(()=>[t("@purista/core")]),_:1}),t(" / CommandDefinitionBuilder")]),h,e("p",null,[n(o,{to:"/api/modules/purista_core.html"},{default:s(()=>[t("@purista/core")]),_:1}),t(".CommandDefinitionBuilder")]),_,p,m,e("table",null,[f,e("tbody",null,[e("tr",null,[y,e("td",g,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[b]),_:1})])]),T,C,x,D,P,B])]),k,v,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#constructor"},{default:s(()=>[t("constructor")]),_:1})])]),F,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#autoacknowledge"},{default:s(()=>[t("autoacknowledge")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#commanddescription"},{default:s(()=>[t("commandDescription")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#commandname"},{default:s(()=>[t("commandName")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#deprecated"},{default:s(()=>[t("deprecated")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#durable"},{default:s(()=>[t("durable")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#errorstatuscodes"},{default:s(()=>[t("errorStatusCodes")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#eventname"},{default:s(()=>[t("eventName")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#fn"},{default:s(()=>[t("fn")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#hooks"},{default:s(()=>[t("hooks")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#httpmetadata"},{default:s(()=>[t("httpMetadata")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#inputcontentencoding"},{default:s(()=>[t("inputContentEncoding")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#inputcontenttype"},{default:s(()=>[t("inputContentType")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#inputschema"},{default:s(()=>[t("inputSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#issecure"},{default:s(()=>[t("isSecure")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#operationid"},{default:s(()=>[t("operationId")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#outputcontentencoding"},{default:s(()=>[t("outputContentEncoding")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#outputcontenttype"},{default:s(()=>[t("outputContentType")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#outputschema"},{default:s(()=>[t("outputSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#parameterschema"},{default:s(()=>[t("parameterSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#queryparameter"},{default:s(()=>[t("queryParameter")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#summary"},{default:s(()=>[t("summary")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#tags"},{default:s(()=>[t("tags")]),_:1})])]),M,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#addopenapierrorstatuscodes"},{default:s(()=>[t("addOpenApiErrorStatusCodes")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#addopenapitags"},{default:s(()=>[t("addOpenApiTags")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#addoutputschema"},{default:s(()=>[t("addOutputSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#addparameterschema"},{default:s(()=>[t("addParameterSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#addpayloadschema"},{default:s(()=>[t("addPayloadSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#addqueryparameters"},{default:s(()=>[t("addQueryParameters")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#adviceautoacknowledgemessages"},{default:s(()=>[t("adviceAutoacknowledgeMessages")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#disablehttpsecurity"},{default:s(()=>[t("disableHttpSecurity")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#enablehttpsecurity"},{default:s(()=>[t("enableHttpSecurity")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#exposeashttpendpoint"},{default:s(()=>[t("exposeAsHttpEndpoint")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#extendwithhttpmetadata"},{default:s(()=>[t("extendWithHttpMetadata")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#getcommandfunction"},{default:s(()=>[t("getCommandFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#getdefinition"},{default:s(()=>[t("getDefinition")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#gettransforminputfunction"},{default:s(()=>[t("getTransformInputFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#gettransformoutputfunction"},{default:s(()=>[t("getTransformOutputFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#markasdeprecated"},{default:s(()=>[t("markAsDeprecated")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#setafterguardhooks"},{default:s(()=>[t("setAfterGuardHooks")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#setbeforeguardhooks"},{default:s(()=>[t("setBeforeGuardHooks")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#setcommandfunction"},{default:s(()=>[t("setCommandFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#setopenapioperationid"},{default:s(()=>[t("setOpenApiOperationId")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#setopenapisummary"},{default:s(()=>[t("setOpenApiSummary")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#setsuccesseventname"},{default:s(()=>[t("setSuccessEventName")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#settransforminput"},{default:s(()=>[t("setTransformInput")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#settransformoutput"},{default:s(()=>[t("setTransformOutput")]),_:1})])]),S,e("table",null,[R,e("tbody",null,[e("tr",null,[w,e("td",O,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[I]),_:1}),t("<"),L,t(", "),N,t(">")])]),A,E,H,Z,q,G])]),Q,e("p",null,[e("a",W,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:113"),n(a)])]),V,e("p",null,[e("a",j,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:63"),n(a)])]),U,X,Y,$,e("p",null,[e("a",z,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:113"),n(a)])]),J,K,ee,te,e("p",null,[e("a",ne,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:113"),n(a)])]),oe,e("p",null,[e("a",se,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:52"),n(a)])]),ae,e("p",null,[e("a",ie,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:62"),n(a)])]),de,le,e("p",null,[t("• "),ce,t(),re,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[ue]),_:1}),t("[] = "),he]),_e,e("p",null,[e("a",pe,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:56"),n(a)])]),me,e("p",null,[e("a",fe,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:113"),n(a)])]),ye,ge,e("p",null,[t("• "),be,t(),Te,t(),Ce,t(": "),n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[xe]),_:1}),t("<"),De,t(", "),Pe,t(", "),Be,t(", "),ke,t(", "),ve,t(", "),Fe,t(">")]),Me,e("p",null,[e("a",Se,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:103"),n(a)])]),Re,we,Oe,Ie,e("table",null,[Le,e("tbody",null,[e("tr",null,[Ne,e("td",Ae,[Ee,t("<"),He,t(", "),n(o,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:s(()=>[Ze]),_:1}),t("<"),qe,t(", "),Ge,t(", "),Qe,t(", "),We,t(", "),Ve,t(", "),je,t(">>")])]),e("tr",null,[Ue,e("td",Xe,[Ye,t("<"),$e,t(", "),n(o,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:s(()=>[ze]),_:1}),t("<"),Je,t(", "),Ke,t(", "),et,t(", "),tt,t(", "),nt,t(">>")])]),e("tr",null,[ot,e("td",st,[t("{ "),at,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[it]),_:1}),t("<"),dt,t(", "),lt,t(", "),ct,t(", "),rt,t(", "),ut,t("> ; "),ht,t(": "),_t,t("<"),pt,t(", "),mt,t(", "),ft,t("> ; "),yt,t(": "),gt,t("<"),bt,t(", "),Tt,t(", "),Ct,t("> }")])]),e("tr",null,[xt,e("td",Dt,[n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[Pt]),_:1}),t("<"),Bt,t(", "),kt,t(", "),vt,t(", "),Ft,t(", "),Mt,t(">")])]),St,Rt,e("tr",null,[wt,e("td",Ot,[t("{ "),It,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[Lt]),_:1}),t("<"),Nt,t(", "),At,t(", "),Et,t(", "),Ht,t(", "),Zt,t("> ; "),qt,t(": "),Gt,t("<"),Qt,t(", "),Wt,t(", "),Vt,t("> }")])]),e("tr",null,[jt,e("td",Ut,[n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[Xt]),_:1}),t("<"),Yt,t(", "),$t,t(", "),zt,t(", "),Jt,t(", "),Kt,t(">")])]),en])]),tn,e("p",null,[e("a",nn,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:65"),n(a)])]),on,sn,e("p",null,[t("• "),an,t(),dn,t(),ln,t(": "),n(o,{to:"/api/modules/purista_core.html#httpexposedservicemeta"},{default:s(()=>[cn]),_:1}),t("<"),rn,t(">")]),un,e("p",null,[e("a",hn,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:40"),n(a)])]),_n,e("p",null,[e("a",pn,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:43"),n(a)])]),mn,e("p",null,[e("a",fn,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:42"),n(a)])]),yn,e("p",null,[e("a",gn,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:41"),n(a)])]),bn,e("p",null,[e("a",Tn,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:58"),n(a)])]),Cn,e("p",null,[e("a",xn,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:60"),n(a)])]),Dn,e("p",null,[e("a",Pn,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:46"),n(a)])]),Bn,e("p",null,[e("a",kn,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:45"),n(a)])]),vn,e("p",null,[e("a",Fn,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:44"),n(a)])]),Mn,e("p",null,[e("a",Sn,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:47"),n(a)])]),Rn,wn,e("p",null,[t("• "),On,t(),In,t(": "),n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[Ln]),_:1}),t("<"),Nn,t(">[] = "),An]),En,e("p",null,[e("a",Hn,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:48"),n(a)])]),Zn,e("p",null,[e("a",qn,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:54"),n(a)])]),Gn,e("p",null,[e("a",Qn,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:50"),n(a)])]),Wn,Vn,e("p",null,[t("▸ "),jn,t("("),Un,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Xn]),_:1}),t("<"),Yn,t(", "),$n,t(", "),zn,t(", "),Jn,t(", "),Kn,t(", "),eo,t(", "),to,t(">")]),no,e("table",null,[oo,e("tbody",null,[e("tr",null,[so,e("td",ao,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[io]),_:1}),t("[]")]),lo])])]),co,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[ro]),_:1}),t("<"),uo,t(", "),ho,t(", "),_o,t(", "),po,t(", "),mo,t(", "),fo,t(", "),yo,t(">")]),go,bo,e("p",null,[e("a",To,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:265"),n(a)])]),Co,xo,e("p",null,[t("▸ "),Do,t("("),Po,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Bo]),_:1}),t("<"),ko,t(", "),vo,t(", "),Fo,t(", "),Mo,t(", "),So,t(", "),Ro,t(", "),wo,t(">")]),Oo,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Io]),_:1}),t("<"),Lo,t(", "),No,t(", "),Ao,t(", "),Eo,t(", "),Ho,t(", "),Zo,t(", "),qo,t(">")]),Go,Qo,e("p",null,[e("a",Wo,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:247"),n(a)])]),Vo,jo,e("p",null,[t("▸ "),Uo,t("<"),Xo,t(", "),Yo,t(", "),$o,t(">("),zo,t(", "),Jo,t(", "),Ko,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[es]),_:1}),t("<"),ts,t(", "),ns,t(", "),os,t(", "),ss,t(", "),as,t(", "),is,t(", "),ds,t(">")]),ls,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[cs]),_:1}),t("<"),rs,t(", "),us,t(", "),hs,t(", "),_s,t(", "),ps,t(", "),ms,t(", "),fs,t(">")]),ys,gs,e("p",null,[e("a",bs,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:161"),n(a)])]),Ts,Cs,e("p",null,[t("▸ "),xs,t("<"),Ds,t(", "),Ps,t(", "),Bs,t(">("),ks,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[vs]),_:1}),t("<"),Fs,t(", "),Ms,t(", "),Ss,t(", "),Rs,t(", "),ws,t(", "),Os,t(", "),Is,t(">")]),Ls,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Ns]),_:1}),t("<"),As,t(", "),Es,t(", "),Hs,t(", "),Zs,t(", "),qs,t(", "),Gs,t(", "),Qs,t(">")]),Ws,Vs,e("p",null,[e("a",js,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:195"),n(a)])]),Us,Xs,e("p",null,[t("▸ "),Ys,t("<"),$s,t(", "),zs,t(", "),Js,t(">("),Ks,t(", "),ea,t(", "),ta,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[na]),_:1}),t("<"),oa,t(", "),sa,t(", "),aa,t(", "),ia,t(", "),da,t(", "),la,t(", "),ca,t(">")]),ra,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[ua]),_:1}),t("<"),ha,t(", "),_a,t(", "),pa,t(", "),ma,t(", "),fa,t(", "),ya,t(", "),ga,t(">")]),ba,Ta,e("p",null,[e("a",Ca,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:134"),n(a)])]),xa,Da,e("p",null,[t("▸ "),Pa,t("("),Ba,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[ka]),_:1}),t("<"),va,t(", "),Fa,t(", "),Ma,t(", "),Sa,t(", "),Ra,t(", "),wa,t(", "),Oa,t(">")]),Ia,e("table",null,[La,e("tbody",null,[e("tr",null,[Na,e("td",Aa,[n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[Ea]),_:1}),t("<"),Ha,t(">[]")]),Za])])]),qa,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Ga]),_:1}),t("<"),Qa,t(", "),Wa,t(", "),Va,t(", "),ja,t(", "),Ua,t(", "),Xa,t(", "),Ya,t(">")]),$a,za,e("p",null,[e("a",Ja,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:230"),n(a)])]),Ka,ei,e("p",null,[t("▸ "),ti,t("("),ni,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[oi]),_:1}),t("<"),si,t(", "),ai,t(", "),ii,t(", "),di,t(", "),li,t(", "),ci,t(", "),ri,t(">")]),ui,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[hi]),_:1}),t("<"),_i,t(", "),pi,t(", "),mi,t(", "),fi,t(", "),yi,t(", "),gi,t(", "),bi,t(">")]),Ti,Ci,e("p",null,[e("a",xi,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:589"),n(a)])]),Di,Pi,e("p",null,[t("▸ "),Bi,t("("),ki,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[vi]),_:1}),t("<"),Fi,t(", "),Mi,t(", "),Si,t(", "),Ri,t(", "),wi,t(", "),Oi,t(", "),Ii,t(">")]),Li,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Ni]),_:1}),t("<"),Ai,t(", "),Ei,t(", "),Hi,t(", "),Zi,t(", "),qi,t(", "),Gi,t(", "),Qi,t(">")]),Wi,Vi,e("p",null,[e("a",ji,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:493"),n(a)])]),Ui,Xi,e("p",null,[t("▸ "),Yi,t("("),$i,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[zi]),_:1}),t("<"),Ji,t(", "),Ki,t(", "),ed,t(", "),td,t(", "),nd,t(", "),od,t(", "),sd,t(">")]),ad,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[id]),_:1}),t("<"),dd,t(", "),ld,t(", "),cd,t(", "),rd,t(", "),ud,t(", "),hd,t(", "),_d,t(">")]),pd,md,e("p",null,[e("a",fd,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:483"),n(a)])]),yd,gd,e("p",null,[t("▸ "),bd,t("("),Td,t(", "),Cd,t(", "),xd,t(", "),Dd,t(", "),Pd,t(", "),Bd,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[kd]),_:1}),t("<"),vd,t(", "),Fd,t(", "),Md,t(", "),Sd,t(", "),Rd,t(", "),wd,t(", "),Od,t(">")]),Id,Ld,Nd,Ad,e("table",null,[Ed,e("tbody",null,[e("tr",null,[Hd,e("td",Zd,[n(o,{to:"/api/modules/purista_core.html#supportedhttpmethod"},{default:s(()=>[qd]),_:1})]),Gd]),Qd,Wd,Vd,jd,Ud])]),Xd,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Yd]),_:1}),t("<"),$d,t(", "),zd,t(", "),Jd,t(", "),Kd,t(", "),el,t(", "),tl,t(", "),nl,t(">")]),ol,sl,e("p",null,[e("a",al,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:455"),n(a)])]),il,dl,e("p",null,[t("▸ "),ll,t(),cl,t("("),rl,t("): "),n(o,{to:"/api/modules/purista_core.html#complete"},{default:s(()=>[ul]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[hl]),_:1}),t("<"),_l,t(", "),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[pl]),_:1}),t(", "),ml,t(", "),fl,t(", "),yl,t(", "),gl,t(", "),bl,t(", "),Tl,t(">>")]),Cl,e("table",null,[xl,e("tbody",null,[e("tr",null,[Dl,e("td",Pl,[n(o,{to:"/api/modules/purista_core.html#complete"},{default:s(()=>[Bl]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[kl]),_:1}),t("<"),vl,t(", "),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[Fl]),_:1}),t(", "),Ml,t(", "),Sl,t(", "),Rl,t(", "),wl,t(", "),Ol,t(", "),Il,t(">>")])])])]),Ll,e("p",null,[n(o,{to:"/api/modules/purista_core.html#complete"},{default:s(()=>[Nl]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[Al]),_:1}),t("<"),El,t(", "),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[Hl]),_:1}),t(", "),Zl,t(", "),ql,t(", "),Gl,t(", "),Ql,t(", "),Wl,t(", "),Vl,t(">>")]),jl,e("p",null,[e("a",Ul,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:524"),n(a)])]),Xl,Yl,e("p",null,[t("▸ "),$l,t("(): "),n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[zl]),_:1}),t("<"),Jl,t(", "),Kl,t(", "),ec,t(", "),tc,t(", "),nc,t(", "),oc,t(">")]),sc,ac,e("p",null,[n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[ic]),_:1}),t("<"),dc,t(", "),lc,t(", "),cc,t(", "),rc,t(", "),uc,t(", "),hc,t(">")]),_c,pc,e("p",null,[e("a",mc,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:731"),n(a)])]),fc,yc,e("p",null,[t("▸ "),gc,t("(): "),n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[bc]),_:1}),t("<"),Tc,t(", "),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[Cc]),_:1}),t(", "),xc,t(", "),Dc,t(", "),Pc,t(", "),Bc,t(", "),kc,t(", "),vc,t(">")]),Fc,Mc,e("p",null,[n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[Sc]),_:1}),t("<"),Rc,t(", "),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[wc]),_:1}),t(", "),Oc,t(", "),Ic,t(", "),Lc,t(", "),Nc,t(", "),Ac,t(", "),Ec,t(">")]),Hc,Zc,e("p",null,[e("a",qc,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:598"),n(a)])]),Gc,Qc,e("p",null,[t("▸ "),Wc,t("(): "),Vc,t(" | "),n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[jc]),_:1}),t("<"),Uc,t(", "),Xc,t(", "),Yc,t(", "),$c,t(", "),zc,t(">")]),Jc,Kc,e("p",null,[er,t(" | "),n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[tr]),_:1}),t("<"),nr,t(", "),or,t(", "),sr,t(", "),ar,t(", "),ir,t(">")]),dr,lr,e("p",null,[e("a",cr,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:324"),n(a)])]),rr,ur,e("p",null,[t("▸ "),hr,t("(): "),_r,t(" | "),n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[pr]),_:1}),t("<"),mr,t(", "),fr,t(", "),yr,t(", "),gr,t(", "),br,t(">")]),Tr,Cr,e("p",null,[xr,t(" | "),n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[Dr]),_:1}),t("<"),Pr,t(", "),Br,t(", "),kr,t(", "),vr,t(", "),Fr,t(">")]),Mr,Sr,e("p",null,[e("a",Rr,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:381"),n(a)])]),wr,Or,e("p",null,[t("▸ "),Ir,t("(): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Lr]),_:1}),t("<"),Nr,t(", "),Ar,t(", "),Er,t(", "),Hr,t(", "),Zr,t(", "),qr,t(", "),Gr,t(">")]),Qr,Wr,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Vr]),_:1}),t("<"),jr,t(", "),Ur,t(", "),Xr,t(", "),Yr,t(", "),$r,t(", "),zr,t(", "),Jr,t(">")]),Kr,eu,e("p",null,[e("a",tu,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:184"),n(a)])]),nu,ou,e("p",null,[t("▸ "),su,t("("),au,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[iu]),_:1}),t("<"),du,t(", "),lu,t(", "),cu,t(", "),ru,t(", "),uu,t(", "),hu,t(", "),_u,t(">")]),pu,mu,e("table",null,[fu,e("tbody",null,[e("tr",null,[yu,e("td",gu,[bu,t("<"),Tu,t(", "),n(o,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:s(()=>[Cu]),_:1}),t("<"),xu,t(", "),Du,t(", "),Pu,t(", "),Bu,t(", "),ku,t(", "),vu,t(">>")])])])]),Fu,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Mu]),_:1}),t("<"),Su,t(", "),Ru,t(", "),wu,t(", "),Ou,t(", "),Iu,t(", "),Lu,t(", "),Nu,t(">")]),Au,Eu,e("p",null,[e("a",Hu,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:423"),n(a)])]),Zu,qu,e("p",null,[t("▸ "),Gu,t("("),Qu,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Wu]),_:1}),t("<"),Vu,t(", "),ju,t(", "),Uu,t(", "),Xu,t(", "),Yu,t(", "),$u,t(", "),zu,t(">")]),Ju,Ku,e("table",null,[eh,e("tbody",null,[e("tr",null,[th,e("td",nh,[oh,t("<"),sh,t(", "),n(o,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:s(()=>[ah]),_:1}),t("<"),ih,t(", "),dh,t(", "),lh,t(", "),ch,t(", "),rh,t(">>")]),uh])])]),hh,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[_h]),_:1}),t("<"),ph,t(", "),mh,t(", "),fh,t(", "),yh,t(", "),gh,t(", "),bh,t(", "),Th,t(">")]),Ch,xh,e("p",null,[e("a",Dh,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:401"),n(a)])]),Ph,Bh,e("p",null,[t("▸ "),kh,t("("),vh,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Fh]),_:1}),t("<"),Mh,t(", "),Sh,t(", "),Rh,t(", "),wh,t(", "),Oh,t(", "),Ih,t(", "),Lh,t(">")]),Nh,e("table",null,[Ah,e("tbody",null,[e("tr",null,[Eh,e("td",Hh,[n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[Zh]),_:1}),t("<"),qh,t(", "),Gh,t(", "),Qh,t(", "),Wh,t(", "),Vh,t(", "),jh,t(">")]),Uh])])]),Xh,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Yh]),_:1}),t("<"),$h,t(", "),zh,t(", "),Jh,t(", "),Kh,t(", "),e_,t(", "),t_,t(", "),n_,t(">")]),o_,s_,e("p",null,[e("a",a_,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:689"),n(a)])]),i_,d_,e("p",null,[t("▸ "),l_,t("("),c_,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[r_]),_:1}),t("<"),u_,t(", "),h_,t(", "),__,t(", "),p_,t(", "),m_,t(", "),f_,t(", "),y_,t(">")]),g_,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[b_]),_:1}),t("<"),T_,t(", "),C_,t(", "),x_,t(", "),D_,t(", "),P_,t(", "),B_,t(", "),k_,t(">")]),v_,F_,e("p",null,[e("a",M_,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:519"),n(a)])]),S_,R_,e("p",null,[t("▸ "),w_,t("("),O_,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[I_]),_:1}),t("<"),L_,t(", "),N_,t(", "),A_,t(", "),E_,t(", "),H_,t(", "),Z_,t(", "),q_,t(">")]),G_,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Q_]),_:1}),t("<"),W_,t(", "),V_,t(", "),j_,t(", "),U_,t(", "),X_,t(", "),Y_,t(", "),$_,t(">")]),z_,J_,e("p",null,[e("a",K_,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:509"),n(a)])]),ep,tp,e("p",null,[t("▸ "),np,t("("),op,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[sp]),_:1}),t("<"),ap,t(", "),ip,t(", "),dp,t(", "),lp,t(", "),cp,t(", "),rp,t(", "),up,t(">")]),hp,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[_p]),_:1}),t("<"),pp,t(", "),mp,t(", "),fp,t(", "),yp,t(", "),gp,t(", "),bp,t(", "),Tp,t(">")]),Cp,e("p",null,[e("a",xp,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:121"),n(a)])]),Dp,Pp,e("p",null,[t("▸ "),Bp,t("<"),kp,t(", "),vp,t(", "),Fp,t(", "),Mp,t(", "),Sp,t(", "),Rp,t(">("),wp,t(", "),Op,t(", "),Ip,t(", "),Lp,t(", "),Np,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Ap]),_:1}),t("<"),Ep,t(", "),Hp,t(", "),Zp,t(", "),qp,t(", "),Gp,t(", "),Qp,t(", "),Wp,t(">")]),Vp,e("table",null,[jp,e("tbody",null,[Up,Xp,e("tr",null,[Yp,e("td",$p,[n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[zp]),_:1}),t("<"),Jp,t(", "),Kp,t(", "),em,t(", "),tm,t(", "),nm,t(">")]),om]),sm,am])]),im,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[dm]),_:1}),t("<"),lm,t(", "),cm,t(", "),rm,t(", "),um,t(", "),hm,t(", "),_m,t(", "),pm,t(">")]),mm,fm,e("p",null,[e("a",ym,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:281"),n(a)])]),gm,bm,e("p",null,[t("▸ "),Tm,t("<"),Cm,t(", "),xm,t(", "),Dm,t(">("),Pm,t(", "),Bm,t(", "),km,t(", "),vm,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Fm]),_:1}),t("<"),Mm,t(", "),Sm,t(", "),Rm,t(", "),wm,t(", "),Om,t(", "),Im,t(", "),Lm,t(">")]),Nm,e("table",null,[Am,e("tbody",null,[Em,e("tr",null,[Hm,e("td",Zm,[n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[qm]),_:1}),t("<"),Gm,t(", "),Qm,t(", "),Wm,t(", "),Vm,t(", "),jm,t(">")]),Um]),Xm,Ym])]),$m,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[zm]),_:1}),t("<"),Jm,t(", "),Km,t(", "),e1,t(", "),t1,t(", "),n1,t(", "),o1,t(", "),s1,t(">")]),a1,i1,e("p",null,[e("a",d1,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:348"),n(a)])])])}const h1=l(u,[["render",l1],["__file","purista_core.CommandDefinitionBuilder.html.vue"]]);export{h1 as default};
