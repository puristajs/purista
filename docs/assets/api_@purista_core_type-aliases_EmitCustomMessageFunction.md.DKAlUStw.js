import{_ as t,c as a,o as s,ag as i}from"./chunks/framework.U_AETC1W.js";const h=JSON.parse('{"title":"Type Alias: EmitCustomMessageFunction()<EmitList>","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/core/type-aliases/EmitCustomMessageFunction.md","filePath":"api/@purista/core/type-aliases/EmitCustomMessageFunction.md","lastUpdated":1740066608000}'),o={name:"api/@purista/core/type-aliases/EmitCustomMessageFunction.md"};function n(r,e,c,p,l,d){return s(),a("div",null,e[0]||(e[0]=[i('<p><a href="./../README.html"><strong>@purista/core v2.0.5</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/core</a> / EmitCustomMessageFunction</p><h1 id="type-alias-emitcustommessagefunction-emitlist" tabindex="-1">Type Alias: EmitCustomMessageFunction()&lt;EmitList&gt; <a class="header-anchor" href="#type-alias-emitcustommessagefunction-emitlist" aria-label="Permalink to &quot;Type Alias: EmitCustomMessageFunction()\\&lt;EmitList\\&gt;&quot;">​</a></h1><blockquote><p><strong>EmitCustomMessageFunction</strong>&lt;<code>EmitList</code>&gt;: &lt;<code>K</code>&gt;(<code>eventName</code>, <code>payload</code>, <code>contentType</code>?, <code>contentEncoding</code>?) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/EmitCustomMessageFunction.ts#L12" target="_blank" rel="noreferrer">packages/core/src/core/types/EmitCustomMessageFunction.ts:12</a></p><p>Emits the given payload as custom message with the given event name.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>EmitList</strong></p><h2 id="type-parameters-1" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>K</strong> <em>extends</em> keyof <a href="./EmitSchemaList.html"><code>EmitSchemaList</code></a>&lt;<code>EmitList</code>&gt;</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="eventname" tabindex="-1">eventName <a class="header-anchor" href="#eventname" aria-label="Permalink to &quot;eventName&quot;">​</a></h3><p><code>K</code></p><h3 id="payload" tabindex="-1">payload <a class="header-anchor" href="#payload" aria-label="Permalink to &quot;payload&quot;">​</a></h3><p><code>EmitList</code>[<code>K</code>]</p><h3 id="contenttype" tabindex="-1">contentType? <a class="header-anchor" href="#contenttype" aria-label="Permalink to &quot;contentType?&quot;">​</a></h3><p><a href="./ContentType.html"><code>ContentType</code></a></p><h3 id="contentencoding" tabindex="-1">contentEncoding? <a class="header-anchor" href="#contentencoding" aria-label="Permalink to &quot;contentEncoding?&quot;">​</a></h3><p><code>string</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> emit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;my-custom-event-name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { the: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;payload&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span></code></pre></div>',24)]))}const u=t(o,[["render",n]]);export{h as __pageData,u as default};
