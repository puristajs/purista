import{_ as i,W as c,X as r,Z as e,a0 as n,a1 as l,$ as t,Y as a,D as d}from"./framework-d89ed822.js";const u={},h=e("h1",{id:"module-purista-core",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#module-purista-core","aria-hidden":"true"},"#"),t(" Module: @purista/core")],-1),p=e("p",null,"This is the main package of PURISTA.",-1),_=e("p",null,"A backend framework for building message based domain services.",-1),f=e("p",null,"This framework adapts and combines a wide range of different patters from domain driven design, cqrs, microservice, event sourcing and lambda functions.",-1),g=e("p",null,"It is build from ground up in typescript and highly focuses on schema, and auto generation of types, input-output-validation, OpenApi documentation (swagger).",-1),m={href:"https://jestjs.io",target:"_blank",rel:"noopener noreferrer"},y={href:"https://sinonjs.org",target:"_blank",rel:"noopener noreferrer"},b={href:"https://purista.dev",target:"_blank",rel:"noopener noreferrer"},x=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),v=e("h3",{id:"namespaces",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#namespaces","aria-hidden":"true"},"#"),t(" Namespaces")],-1),S=e("h3",{id:"enumerations",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#enumerations","aria-hidden":"true"},"#"),t(" Enumerations")],-1),T=e("h3",{id:"service",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#service","aria-hidden":"true"},"#"),t(" Service")],-1),k=e("h3",{id:"command",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#command","aria-hidden":"true"},"#"),t(" Command")],-1),C=e("h3",{id:"store",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#store","aria-hidden":"true"},"#"),t(" Store")],-1),P=e("h3",{id:"event-bridge",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#event-bridge","aria-hidden":"true"},"#"),t(" Event bridge")],-1),w=e("h3",{id:"classes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#classes","aria-hidden":"true"},"#"),t(" Classes")],-1),M=e("h3",{id:"subscription",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscription","aria-hidden":"true"},"#"),t(" Subscription")],-1),D=e("h3",{id:"interfaces",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#interfaces","aria-hidden":"true"},"#"),t(" Interfaces")],-1),E=e("h3",{id:"type-aliases",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),t(" Type Aliases")],-1),I=e("h3",{id:"variables",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#variables","aria-hidden":"true"},"#"),t(" Variables")],-1),R=e("h3",{id:"helper",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#helper","aria-hidden":"true"},"#"),t(" Helper")],-1),F=e("h3",{id:"unit-test-helper",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#unit-test-helper","aria-hidden":"true"},"#"),t(" Unit test helper")],-1),B=e("h3",{id:"functions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#functions","aria-hidden":"true"},"#"),t(" Functions")],-1),N=e("h2",{id:"service-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#service-1","aria-hidden":"true"},"#"),t(" Service")],-1),L=e("p",null,[t("• "),e("strong",null,"ServiceEventsNames"),t(": "),e("code",null,"Object")],-1),O=e("p",null,[t("Events which can be emitted by a service. Internal events are prefixed with "),e("code",null,"service-")],-1),H=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),j={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/ServiceEvents.ts#L11",target:"_blank",rel:"noopener noreferrer"},A=a(`<p>• <strong>Service</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for all services. This class provides base functions to work with the event bridge, logging and so on</p><p>Every service should extend this class and should not directly access the eventbridge or other service</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">MyService</span> <span class="token keyword">extends</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span>

  <span class="token keyword">async</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// your custom implementation</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// your custom implementation</span>
   <span class="token keyword">await</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;"><code>unknown</code> | <code>undefined</code></td></tr></tbody></table><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4>`,7),q={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/Service/Service.impl.ts#L73",target:"_blank",rel:"noopener noreferrer"},G=a('<p>• <strong>ServiceBuilder</strong>&lt;<code>ConfigType</code>, <code>ConfigInputType</code>, <code>ServiceClassType</code>&gt;: <code>Object</code></p><p>This class is used to build a service. The <code>ServiceBuilder</code> class is used to build a service. It has a few methods that are used to add command definitions and subscription definitions to the service. It also has a method that is used to create an instance of the service class.</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4>',3),V=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),z=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"ConfigType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"unknown"),t(">")])],-1),U=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"ConfigInputType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"unknown"),t(">")])],-1),Z=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),Q={style:{"text-align":"left"}},W=e("code",null,"ServiceClass",-1),K=e("code",null,"Service",-1),$=e("code",null,"ConfigType",-1),Y=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),X={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L38",target:"_blank",rel:"noopener noreferrer"},J=a('<p>• <strong>ServiceClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>The ServiceClass interface</p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;"><code>unknown</code> | <code>undefined</code></td></tr></tbody></table><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4>',5),ee={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/ServiceClass.ts#L11",target:"_blank",rel:"noopener noreferrer"},te=a('<h3 id="serviceconstructorinput" tabindex="-1"><a class="header-anchor" href="#serviceconstructorinput" aria-hidden="true">#</a> ServiceConstructorInput</h3><p>Ƭ <strong>ServiceConstructorInput</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4>',5),ne=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),se=e("td",{style:{"text-align":"left"}},[e("code",null,"commandDefinitionList")],-1),le={style:{"text-align":"left"}},oe=e("code",null,"CommandDefinitionList",-1),ae=e("code",null,"any",-1),de=e("td",{style:{"text-align":"left"}},"The list of command definitions for this service",-1),ie=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ConfigType")]),e("td",{style:{"text-align":"left"}},"The service specific config")],-1),ce=e("td",{style:{"text-align":"left"}},[e("code",null,"configStore?")],-1),re={style:{"text-align":"left"}},ue=e("code",null,"ConfigStore",-1),he=e("td",{style:{"text-align":"left"}},"The config store instance",-1),pe=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridge")],-1),_e={style:{"text-align":"left"}},fe=e("code",null,"EventBridge",-1),ge=e("td",{style:{"text-align":"left"}},"The eventBridge instance",-1),me=e("td",{style:{"text-align":"left"}},[e("code",null,"info")],-1),ye={style:{"text-align":"left"}},be=e("code",null,"ServiceInfoType",-1),xe=e("td",{style:{"text-align":"left"}},"The service info with name, version and description of service",-1),ve=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),Se={style:{"text-align":"left"}},Te=e("code",null,"Logger",-1),ke=e("td",{style:{"text-align":"left"}},"A logger instance",-1),Ce=e("td",{style:{"text-align":"left"}},[e("code",null,"secretStore?")],-1),Pe={style:{"text-align":"left"}},we=e("code",null,"SecretStore",-1),Me=e("td",{style:{"text-align":"left"}},"The secret store instance",-1),De=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"spanProcessor?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SpanProcessor")]),e("td",{style:{"text-align":"left"}},"The opentelemetry span processor instance")],-1),Ee=e("td",{style:{"text-align":"left"}},[e("code",null,"stateStore?")],-1),Ie={style:{"text-align":"left"}},Re=e("code",null,"StateStore",-1),Fe=e("td",{style:{"text-align":"left"}},"the state store instance",-1),Be=e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionDefinitionList")],-1),Ne={style:{"text-align":"left"}},Le=e("code",null,"SubscriptionDefinitionList",-1),Oe=e("code",null,"any",-1),He=e("td",{style:{"text-align":"left"}},"The list of subscription definitions for this service",-1),je=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ae={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/ServiceConstructorInput.ts#L15",target:"_blank",rel:"noopener noreferrer"},qe=a('<hr><h3 id="serviceeventsinternal" tabindex="-1"><a class="header-anchor" href="#serviceeventsinternal" aria-hidden="true">#</a> ServiceEventsInternal</h3><p>Ƭ <strong>ServiceEventsInternal</strong>: <code>Object</code></p><p>Events which can be emitted by a service. Internal events are prefixed with <code>service-</code>.</p><p>Response messages, which have an event name assigned, are prefixed with <code>custom-</code> If you like to use your own events, the event name must be prefixed with <code>misc-</code>.</p><h4 id="type-declaration-1" tabindex="-1"><a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a> Type declaration</h4>',6),Ge=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Ve=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-available")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service is fully initialized and ready Should be emitted by custom service class. It is not emitted by default")],-1),ze=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-drain")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service is going to be stopped")],-1),Ue=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error")],-1),Ze={style:{"text-align":"left"}},Qe=e("code",null,"commandName",-1),We=e("code",null,"string",-1),Ke=e("code",null,"error",-1),$e=e("code",null,"HandledError",-1),Ye=e("code",null,"traceId",-1),Xe=e("code",null,"TraceId",-1),Je=e("td",{style:{"text-align":"left"}},"emitted when a command throws a HandledError",-1),et=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error.commandName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),tt=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error.error")],-1),nt={style:{"text-align":"left"}},st=e("code",null,"HandledError",-1),lt=e("td",{style:{"text-align":"left"}},"-",-1),ot=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error.traceId")],-1),at={style:{"text-align":"left"}},dt=e("code",null,"TraceId",-1),it=e("td",{style:{"text-align":"left"}},"-",-1),ct=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error")],-1),rt={style:{"text-align":"left"}},ut=e("code",null,"error",-1),ht=e("code",null,"HandledError",-1),pt=e("code",null,"subscriptionName",-1),_t=e("code",null,"string",-1),ft=e("code",null,"traceId",-1),gt=e("code",null,"TraceId",-1),mt=e("td",{style:{"text-align":"left"}},"emitted when a subscription throws a HandledError",-1),yt=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error.error")],-1),bt={style:{"text-align":"left"}},xt=e("code",null,"HandledError",-1),vt=e("td",{style:{"text-align":"left"}},"-",-1),St=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error.subscriptionName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),Tt=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error.traceId")],-1),kt={style:{"text-align":"left"}},Ct=e("code",null,"TraceId",-1),Pt=e("td",{style:{"text-align":"left"}},"-",-1),wt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-not-available")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined"),t(" | "),e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"emitted when the service is not available (for example database connection could not be established)")],-1),Mt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-started")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service is started, but not fully initialized and not ready yet")],-1),Dt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-stopped")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service has been stopped")],-1),Et=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error")],-1),It={style:{"text-align":"left"}},Rt=e("code",null,"commandName",-1),Ft=e("code",null,"string",-1),Bt=e("code",null,"error",-1),Nt=e("code",null,"unknown",-1),Lt=e("code",null,"traceId",-1),Ot=e("code",null,"TraceId",-1),Ht=e("td",{style:{"text-align":"left"}},"emitted when a command throws an error other than a HandledError",-1),jt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error.commandName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),At=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),qt=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error.traceId")],-1),Gt={style:{"text-align":"left"}},Vt=e("code",null,"TraceId",-1),zt=e("td",{style:{"text-align":"left"}},"-",-1),Ut=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error")],-1),Zt={style:{"text-align":"left"}},Qt=e("code",null,"error",-1),Wt=e("code",null,"unknown",-1),Kt=e("code",null,"subscriptionName",-1),$t=e("code",null,"string",-1),Yt=e("code",null,"traceId",-1),Xt=e("code",null,"TraceId",-1),Jt=e("td",{style:{"text-align":"left"}},"emitted when a subscription throws an error other than a HandledError",-1),en=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),tn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error.subscriptionName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),nn=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error.traceId")],-1),sn={style:{"text-align":"left"}},ln=e("code",null,"TraceId",-1),on=e("td",{style:{"text-align":"left"}},"-",-1),an=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),dn={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/ServiceEvents.ts#L54",target:"_blank",rel:"noopener noreferrer"},cn=a('<h2 id="command-1" tabindex="-1"><a class="header-anchor" href="#command-1" aria-hidden="true">#</a> Command</h2><p>• <strong>CommandDefinitionBuilder</strong>&lt;<code>ServiceClassType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>Command definition builder is a helper to create and define a command for a service. It helps to set all needed information like schemas and hooks. With these information, the types are automatically set and extended.</p><p>A working schema definition needs at least a command name, a short description and the function implementation.</p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4>',5),rn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),un=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),hn={style:{"text-align":"left"}},pn=e("code",null,"ServiceClass",-1),_n=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),fn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),gn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),mn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),yn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),bn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),xn=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),vn={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L31",target:"_blank",rel:"noopener noreferrer"},Sn=e("h3",{id:"commandafterguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandafterguardhook","aria-hidden":"true"},"#"),t(" CommandAfterGuardHook")],-1),Tn=e("strong",null,"CommandAfterGuardHook",-1),kn=e("code",null,"ServiceClassType",-1),Cn=e("code",null,"MessagePayloadType",-1),Pn=e("code",null,"MessageParamsType",-1),wn=e("code",null,"FunctionResultType",-1),Mn=e("code",null,"FunctionPayloadType",-1),Dn=e("code",null,"FunctionParamsType",-1),En=e("code",null,"this",-1),In=e("code",null,"ServiceClassType",-1),Rn=e("code",null,"context",-1),Fn=e("code",null,"CommandFunctionContext",-1),Bn=e("code",null,"MessagePayloadType",-1),Nn=e("code",null,"MessageParamsType",-1),Ln=e("code",null,"result",-1),On=e("code",null,"Readonly",-1),Hn=e("code",null,"FunctionResultType",-1),jn=e("code",null,"input",-1),An=e("code",null,"Readonly",-1),qn=e("code",null,"FunctionPayloadType",-1),Gn=e("code",null,"parameter",-1),Vn=e("code",null,"Readonly",-1),zn=e("code",null,"FunctionParamsType",-1),Un=e("code",null,"Promise",-1),Zn=e("code",null,"void",-1),Qn=e("h4",{id:"type-parameters-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-5","aria-hidden":"true"},"#"),t(" Type parameters")],-1),Wn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Kn=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),$n={style:{"text-align":"left"}},Yn=e("code",null,"ServiceClass",-1),Xn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Jn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),es=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),ts=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),ns=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),ss=a('<h4 id="type-declaration-2" tabindex="-1"><a class="header-anchor" href="#type-declaration-2" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>result</code>, <code>input</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Definition of after guard hook functions. This guard is called after function successfully returns and after output validation.</p><h5 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h5>',4),ls=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),os=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),as=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),ds={style:{"text-align":"left"}},is=e("code",null,"CommandFunctionContext",-1),cs=e("code",null,"MessagePayloadType",-1),rs=e("code",null,"MessageParamsType",-1),us=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"result")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionResultType"),t(">")])],-1),hs=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"input")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),ps=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),_s=e("h5",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns","aria-hidden":"true"},"#"),t(" Returns")],-1),fs=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),gs=e("h4",{id:"defined-in-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-7","aria-hidden":"true"},"#"),t(" Defined in")],-1),ms={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/commandType/CommandAfterGuardHook.ts#L10",target:"_blank",rel:"noopener noreferrer"},ys=e("hr",null,null,-1),bs=e("h3",{id:"commandbeforeguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandbeforeguardhook","aria-hidden":"true"},"#"),t(" CommandBeforeGuardHook")],-1),xs=e("strong",null,"CommandBeforeGuardHook",-1),vs=e("code",null,"ServiceClassType",-1),Ss=e("code",null,"MessagePayloadType",-1),Ts=e("code",null,"MessageParamsType",-1),ks=e("code",null,"FunctionPayloadType",-1),Cs=e("code",null,"FunctionParamsType",-1),Ps=e("code",null,"this",-1),ws=e("code",null,"ServiceClassType",-1),Ms=e("code",null,"context",-1),Ds=e("code",null,"CommandFunctionContext",-1),Es=e("code",null,"MessagePayloadType",-1),Is=e("code",null,"MessageParamsType",-1),Rs=e("code",null,"payload",-1),Fs=e("code",null,"Readonly",-1),Bs=e("code",null,"FunctionPayloadType",-1),Ns=e("code",null,"parameter",-1),Ls=e("code",null,"Readonly",-1),Os=e("code",null,"FunctionParamsType",-1),Hs=e("code",null,"Promise",-1),js=e("code",null,"void",-1),As=e("h4",{id:"type-parameters-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-6","aria-hidden":"true"},"#"),t(" Type parameters")],-1),qs=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Gs=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),Vs={style:{"text-align":"left"}},zs=e("code",null,"ServiceClass",-1),Us=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Zs=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Qs=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),Ws=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),Ks=a('<h4 id="type-declaration-3" tabindex="-1"><a class="header-anchor" href="#type-declaration-3" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Guard is called after command function input validation and before executing the command function. The guard is usefull to separate for example auth checks from business logic. It should throw HandledError or return void.</p><h5 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h5>',4),$s=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ys=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),Xs=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),Js={style:{"text-align":"left"}},el=e("code",null,"CommandFunctionContext",-1),tl=e("code",null,"MessagePayloadType",-1),nl=e("code",null,"MessageParamsType",-1),sl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),ll=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),ol=e("h5",{id:"returns-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-1","aria-hidden":"true"},"#"),t(" Returns")],-1),al=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),dl=e("h4",{id:"defined-in-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-8","aria-hidden":"true"},"#"),t(" Defined in")],-1),il={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/commandType/CommandBeforeGuardHook.ts#L11",target:"_blank",rel:"noopener noreferrer"},cl=a('<hr><h3 id="commanddefinition" tabindex="-1"><a class="header-anchor" href="#commanddefinition" aria-hidden="true">#</a> CommandDefinition</h3><p>Ƭ <strong>CommandDefinition</strong>&lt;<code>ServiceClassType</code>, <code>MetadataType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>The definition for a command provided by some service.</p><h4 id="type-parameters-7" tabindex="-1"><a class="header-anchor" href="#type-parameters-7" aria-hidden="true">#</a> Type parameters</h4>',5),rl=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ul=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),hl={style:{"text-align":"left"}},pl=e("code",null,"ServiceClass",-1),_l=e("code",null,"ServiceClass",-1),fl=e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")],-1),gl={style:{"text-align":"left"}},ml=e("code",null,"CommandDefinitionMetadataBase",-1),yl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),bl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),xl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),vl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),Sl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),Tl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),kl=e("h4",{id:"type-declaration-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-4","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Cl=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Pl=e("td",{style:{"text-align":"left"}},[e("code",null,"call")],-1),wl={style:{"text-align":"left"}},Ml=e("code",null,"CommandFunction",-1),Dl=e("code",null,"ServiceClassType",-1),El=e("code",null,"MessagePayloadType",-1),Il=e("code",null,"MessageParamsType",-1),Rl=e("code",null,"MessagePayloadType",-1),Fl=e("code",null,"MessageParamsType",-1),Bl=e("code",null,"MessageResultType",-1),Nl=e("td",{style:{"text-align":"left"}},"the command function",-1),Ll=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandDescription")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the description of the command")],-1),Ol=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the command")],-1),Hl=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),jl={style:{"text-align":"left"}},Al=e("code",null,"DefinitionEventBridgeConfig",-1),ql=e("td",{style:{"text-align":"left"}},"config information for event bridge",-1),Gl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the eventName for the command response")],-1),Vl=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks")],-1),zl={style:{"text-align":"left"}},Ul=e("code",null,"afterGuard?",-1),Zl=e("code",null,"Record",-1),Ql=e("code",null,"string",-1),Wl=e("code",null,"CommandAfterGuardHook",-1),Kl=e("code",null,"ServiceClassType",-1),$l=e("code",null,"MessagePayloadType",-1),Yl=e("code",null,"MessageParamsType",-1),Xl=e("code",null,"FunctionResultType",-1),Jl=e("code",null,"FunctionPayloadType",-1),eo=e("code",null,"FunctionParamsType",-1),to=e("code",null,"beforeGuard?",-1),no=e("code",null,"Record",-1),so=e("code",null,"string",-1),lo=e("code",null,"CommandBeforeGuardHook",-1),oo=e("code",null,"ServiceClassType",-1),ao=e("code",null,"MessagePayloadType",-1),io=e("code",null,"MessageParamsType",-1),co=e("code",null,"FunctionPayloadType",-1),ro=e("code",null,"FunctionParamsType",-1),uo=e("code",null,"transformInput?",-1),ho=e("code",null,"transformFunction",-1),po=e("code",null,"CommandTransformInputHook",-1),_o=e("code",null,"ServiceClassType",-1),fo=e("code",null,"MessagePayloadType",-1),go=e("code",null,"MessageParamsType",-1),mo=e("code",null,"transformInputSchema",-1),yo=e("code",null,"z.ZodType",-1),bo=e("code",null,"transformParameterSchema",-1),xo=e("code",null,"z.ZodType",-1),vo=e("code",null,"transformOutput?",-1),So=e("code",null,"transformFunction",-1),To=e("code",null,"CommandTransformOutputHook",-1),ko=e("code",null,"ServiceClassType",-1),Co=e("code",null,"MessagePayloadType",-1),Po=e("code",null,"MessageResultType",-1),wo=e("code",null,"FunctionParamsType",-1),Mo=e("code",null,"unknown",-1),Do=e("code",null,"transformOutputSchema",-1),Eo=e("code",null,"z.ZodType",-1),Io=e("td",{style:{"text-align":"left"}},"hooks of command",-1),Ro=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.afterGuard?")],-1),Fo={style:{"text-align":"left"}},Bo=e("code",null,"Record",-1),No=e("code",null,"string",-1),Lo=e("code",null,"CommandAfterGuardHook",-1),Oo=e("code",null,"ServiceClassType",-1),Ho=e("code",null,"MessagePayloadType",-1),jo=e("code",null,"MessageParamsType",-1),Ao=e("code",null,"FunctionResultType",-1),qo=e("code",null,"FunctionPayloadType",-1),Go=e("code",null,"FunctionParamsType",-1),Vo=e("td",{style:{"text-align":"left"}},"-",-1),zo=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.beforeGuard?")],-1),Uo={style:{"text-align":"left"}},Zo=e("code",null,"Record",-1),Qo=e("code",null,"string",-1),Wo=e("code",null,"CommandBeforeGuardHook",-1),Ko=e("code",null,"ServiceClassType",-1),$o=e("code",null,"MessagePayloadType",-1),Yo=e("code",null,"MessageParamsType",-1),Xo=e("code",null,"FunctionPayloadType",-1),Jo=e("code",null,"FunctionParamsType",-1),ea=e("td",{style:{"text-align":"left"}},"-",-1),ta=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput?")],-1),na={style:{"text-align":"left"}},sa=e("code",null,"transformFunction",-1),la=e("code",null,"CommandTransformInputHook",-1),oa=e("code",null,"ServiceClassType",-1),aa=e("code",null,"MessagePayloadType",-1),da=e("code",null,"MessageParamsType",-1),ia=e("code",null,"transformInputSchema",-1),ca=e("code",null,"z.ZodType",-1),ra=e("code",null,"transformParameterSchema",-1),ua=e("code",null,"z.ZodType",-1),ha=e("td",{style:{"text-align":"left"}},"-",-1),pa=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformFunction")],-1),_a={style:{"text-align":"left"}},fa=e("code",null,"CommandTransformInputHook",-1),ga=e("code",null,"ServiceClassType",-1),ma=e("code",null,"MessagePayloadType",-1),ya=e("code",null,"MessageParamsType",-1),ba=e("td",{style:{"text-align":"left"}},"-",-1),xa=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),va=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),Sa=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput?")],-1),Ta={style:{"text-align":"left"}},ka=e("code",null,"transformFunction",-1),Ca=e("code",null,"CommandTransformOutputHook",-1),Pa=e("code",null,"ServiceClassType",-1),wa=e("code",null,"MessagePayloadType",-1),Ma=e("code",null,"MessageResultType",-1),Da=e("code",null,"FunctionParamsType",-1),Ea=e("code",null,"unknown",-1),Ia=e("code",null,"transformOutputSchema",-1),Ra=e("code",null,"z.ZodType",-1),Fa=e("td",{style:{"text-align":"left"}},"-",-1),Ba=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformFunction")],-1),Na={style:{"text-align":"left"}},La=e("code",null,"CommandTransformOutputHook",-1),Oa=e("code",null,"ServiceClassType",-1),Ha=e("code",null,"MessagePayloadType",-1),ja=e("code",null,"MessageResultType",-1),Aa=e("code",null,"FunctionParamsType",-1),qa=e("code",null,"unknown",-1),Ga=e("td",{style:{"text-align":"left"}},"-",-1),Va=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),za=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"metadata")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")]),e("td",{style:{"text-align":"left"}},"the metadata of the command")],-1),Ua=e("h4",{id:"defined-in-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-9","aria-hidden":"true"},"#"),t(" Defined in")],-1),Za={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/commandType/CommandDefinition.ts#L17",target:"_blank",rel:"noopener noreferrer"},Qa=e("hr",null,null,-1),Wa=e("h3",{id:"commanderrorresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commanderrorresponse","aria-hidden":"true"},"#"),t(" CommandErrorResponse")],-1),Ka=e("strong",null,"CommandErrorResponse",-1),$a=e("code",null,"contentEncoding",-1),Ya=e("code",null,'"utf-8"',-1),Xa=e("code",null,"contentType",-1),Ja=e("code",null,'"application/json"',-1),ed=e("code",null,"correlationId",-1),td=e("code",null,"CorrelationId",-1),nd=e("code",null,"isHandledError",-1),sd=e("code",null,"boolean",-1),ld=e("code",null,"messageType",-1),od=e("code",null,"CommandErrorResponse",-1),ad=e("code",null,"payload",-1),dd=e("code",null,"data?",-1),id=e("code",null,"unknown",-1),cd=e("code",null,"message",-1),rd=e("code",null,"string",-1),ud=e("code",null,"status",-1),hd=e("code",null,"StatusCode",-1),pd=e("code",null,"receiver",-1),_d=e("code",null,"EBMessageAddress",-1),fd=e("code",null,"sender",-1),gd=e("code",null,"EBMessageAddress",-1),md=e("code",null,"EBMessageBase",-1),yd=e("p",null,"CommandErrorResponse is a response to a specific previously received command which indicates some failure.",-1),bd=e("h4",{id:"defined-in-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-10","aria-hidden":"true"},"#"),t(" Defined in")],-1),xd={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/commandType/CommandErrorResponse.ts#L12",target:"_blank",rel:"noopener noreferrer"},vd=e("hr",null,null,-1),Sd=e("h3",{id:"commandfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandfunction","aria-hidden":"true"},"#"),t(" CommandFunction")],-1),Td=e("strong",null,"CommandFunction",-1),kd=e("code",null,"ServiceClassType",-1),Cd=e("code",null,"MessagePayloadType",-1),Pd=e("code",null,"MessageParamsType",-1),wd=e("code",null,"FunctionPayloadType",-1),Md=e("code",null,"FunctionParamsType",-1),Dd=e("code",null,"FunctionResultType",-1),Ed=e("code",null,"this",-1),Id=e("code",null,"ServiceClassType",-1),Rd=e("code",null,"context",-1),Fd=e("code",null,"CommandFunctionContext",-1),Bd=e("code",null,"MessagePayloadType",-1),Nd=e("code",null,"MessageParamsType",-1),Ld=e("code",null,"payload",-1),Od=e("code",null,"Readonly",-1),Hd=e("code",null,"FunctionPayloadType",-1),jd=e("code",null,"parameter",-1),Ad=e("code",null,"Readonly",-1),qd=e("code",null,"FunctionParamsType",-1),Gd=e("code",null,"Promise",-1),Vd=e("code",null,"FunctionResultType",-1),zd=e("h4",{id:"type-parameters-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-8","aria-hidden":"true"},"#"),t(" Type parameters")],-1),Ud=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Zd=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),Qd={style:{"text-align":"left"}},Wd=e("code",null,"ServiceClass",-1),Kd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),$d=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Yd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),Xd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),Jd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),ei=a('<h4 id="type-declaration-5" tabindex="-1"><a class="header-anchor" href="#type-declaration-5" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>FunctionResultType</code>&gt;</p><p>CommandFunction is a function which will be triggered when a matching event bridge message is received by the service</p><h5 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h5>',4),ti=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ni=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),si=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),li={style:{"text-align":"left"}},oi=e("code",null,"CommandFunctionContext",-1),ai=e("code",null,"MessagePayloadType",-1),di=e("code",null,"MessageParamsType",-1),ii=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),ci=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),ri=e("h5",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),t(" Returns")],-1),ui=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"FunctionResultType"),t(">")],-1),hi=e("h4",{id:"defined-in-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-11","aria-hidden":"true"},"#"),t(" Defined in")],-1),pi={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/commandType/CommandFunction.ts#L9",target:"_blank",rel:"noopener noreferrer"},_i=e("hr",null,null,-1),fi=e("h3",{id:"commandfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandfunctioncontext","aria-hidden":"true"},"#"),t(" CommandFunctionContext")],-1),gi=e("strong",null,"CommandFunctionContext",-1),mi=e("code",null,"MessagePayloadType",-1),yi=e("code",null,"MessageParamsType",-1),bi=e("code",null,"ContextBase",-1),xi=e("code",null,"CommandFunctionContextEnhancements",-1),vi=e("code",null,"MessagePayloadType",-1),Si=e("code",null,"MessageParamsType",-1),Ti=a('<p>The command function context which will be passed into command function.</p><h4 id="type-parameters-9" tabindex="-1"><a class="header-anchor" href="#type-parameters-9" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-12" tabindex="-1"><a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a> Defined in</h4>',4),ki={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/commandType/CommandFunctionContext.ts#L46",target:"_blank",rel:"noopener noreferrer"},Ci=a('<hr><h3 id="commandfunctioncontextenhancements" tabindex="-1"><a class="header-anchor" href="#commandfunctioncontextenhancements" aria-hidden="true">#</a> CommandFunctionContextEnhancements</h3><p>Ƭ <strong>CommandFunctionContextEnhancements</strong>&lt;<code>MessagePayloadType</code>, <code>MessageParamsType</code>&gt;: <code>Object</code></p><p>It provides the original command message with types for payload and parameter. Also, the methods:</p><ul><li><code>emit</code> which allows to emit custom events to the event bridge</li><li><code>invoke</code> which allows to call other commands</li></ul><h4 id="type-parameters-10" tabindex="-1"><a class="header-anchor" href="#type-parameters-10" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-6" tabindex="-1"><a class="header-anchor" href="#type-declaration-6" aria-hidden="true">#</a> Type declaration</h4>',8),Pi=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),wi=e("td",{style:{"text-align":"left"}},[e("code",null,"emit")],-1),Mi={style:{"text-align":"left"}},Di=e("code",null,"EmitCustomMessageFunction",-1),Ei=e("td",{style:{"text-align":"left"}},"emit a custom message",-1),Ii=e("td",{style:{"text-align":"left"}},[e("code",null,"invoke")],-1),Ri={style:{"text-align":"left"}},Fi=e("code",null,"InvokeFunction",-1),Bi=e("td",{style:{"text-align":"left"}},[t("Invokes a command and returns the result. It is recommended to validate the result against a schema which only contains the data you actually need. "),e("strong",null,[e("code",null,"Example")]),t(),e("code",null,"typescript const address: EBMessageAddress = { serviceName: 'name-of-service-to-invoke', serviceVersion: '1', serviceTarget: 'command-name-to-invoke', } const inputPayload = { my: 'input' } const inputParameter = { search: 'for_me' } const result = await invoke<MyResultType>(address, inputPayload inputParameter ) ")],-1),Ni=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),Li={style:{"text-align":"left"}},Oi=e("code",null,"Readonly",-1),Hi=e("code",null,"Command",-1),ji=e("code",null,"MessagePayloadType",-1),Ai=e("code",null,"MessageParamsType",-1),qi=e("td",{style:{"text-align":"left"}},"the original message",-1),Gi=e("h4",{id:"defined-in-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-13","aria-hidden":"true"},"#"),t(" Defined in")],-1),Vi={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/commandType/CommandFunctionContext.ts#L15",target:"_blank",rel:"noopener noreferrer"},zi=e("hr",null,null,-1),Ui=e("h3",{id:"commandresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandresponse","aria-hidden":"true"},"#"),t(" CommandResponse")],-1),Zi=e("strong",null,"CommandResponse",-1),Qi=e("code",null,"T",-1),Wi=e("code",null,"CommandSuccessResponse",-1),Ki=e("code",null,"T",-1),$i=e("code",null,"CommandErrorResponse",-1),Yi=a('<p>CommandResponse is a response to a specific previously received command which can be either a success or failure</p><h4 id="type-parameters-11" tabindex="-1"><a class="header-anchor" href="#type-parameters-11" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-14" tabindex="-1"><a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a> Defined in</h4>',4),Xi={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/commandType/CommandResponse.ts#L9",target:"_blank",rel:"noopener noreferrer"},Ji=e("hr",null,null,-1),ec=e("h3",{id:"commandsuccessresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandsuccessresponse","aria-hidden":"true"},"#"),t(" CommandSuccessResponse")],-1),tc=e("strong",null,"CommandSuccessResponse",-1),nc=e("code",null,"PayloadType",-1),sc=e("code",null,"correlationId",-1),lc=e("code",null,"CorrelationId",-1),oc=e("code",null,"messageType",-1),ac=e("code",null,"CommandSuccessResponse",-1),dc=e("code",null,"payload",-1),ic=e("code",null,"PayloadType",-1),cc=e("code",null,"receiver",-1),rc=e("code",null,"EBMessageAddress",-1),uc=e("code",null,"sender",-1),hc=e("code",null,"EBMessageAddress",-1),pc=e("code",null,"EBMessageBase",-1),_c=a('<p>CommandSuccessResponse is a response to a specific previously received command. It indicates that the command was executed successfully and contains the result payload</p><h4 id="type-parameters-12" tabindex="-1"><a class="header-anchor" href="#type-parameters-12" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-15" tabindex="-1"><a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a> Defined in</h4>',4),fc={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/commandType/CommandSuccessResponse.ts#L12",target:"_blank",rel:"noopener noreferrer"},gc=e("hr",null,null,-1),mc=e("h3",{id:"commandtransformfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandtransformfunctioncontext","aria-hidden":"true"},"#"),t(" CommandTransformFunctionContext")],-1),yc=e("strong",null,"CommandTransformFunctionContext",-1),bc=e("code",null,"PayloadType",-1),xc=e("code",null,"ParameterType",-1),vc=e("code",null,"ContextBase",-1),Sc=e("code",null,"message",-1),Tc=e("code",null,"Readonly",-1),kc=e("code",null,"Command",-1),Cc=e("code",null,"PayloadType",-1),Pc=e("code",null,"ParameterType",-1),wc=a('<h4 id="type-parameters-13" tabindex="-1"><a class="header-anchor" href="#type-parameters-13" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td></tr></tbody></table><h4 id="defined-in-16" tabindex="-1"><a class="header-anchor" href="#defined-in-16" aria-hidden="true">#</a> Defined in</h4>',3),Mc={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/commandType/CommandTransformFunctionContext.ts#L7",target:"_blank",rel:"noopener noreferrer"},Dc=e("hr",null,null,-1),Ec=e("h3",{id:"commandtransforminputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandtransforminputhook","aria-hidden":"true"},"#"),t(" CommandTransformInputHook")],-1),Ic=e("strong",null,"CommandTransformInputHook",-1),Rc=e("code",null,"ServiceClassType",-1),Fc=e("code",null,"PayloadOutput",-1),Bc=e("code",null,"ParamsOutput",-1),Nc=e("code",null,"PayloadInput",-1),Lc=e("code",null,"ParamsInput",-1),Oc=e("code",null,"this",-1),Hc=e("code",null,"ServiceClassType",-1),jc=e("code",null,"context",-1),Ac=e("code",null,"CommandTransformFunctionContext",-1),qc=e("code",null,"PayloadInput",-1),Gc=e("code",null,"ParamsInput",-1),Vc=e("code",null,"payload",-1),zc=e("code",null,"Readonly",-1),Uc=e("code",null,"PayloadInput",-1),Zc=e("code",null,"parameter",-1),Qc=e("code",null,"Readonly",-1),Wc=e("code",null,"ParamsInput",-1),Kc=e("code",null,"Promise",-1),$c=e("code",null,"parameter",-1),Yc=e("code",null,"Readonly",-1),Xc=e("code",null,"ParamsOutput",-1),Jc=e("code",null,"payload",-1),er=e("code",null,"Readonly",-1),tr=e("code",null,"PayloadOutput",-1),nr=a('<h4 id="type-parameters-14" tabindex="-1"><a class="header-anchor" href="#type-parameters-14" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>PayloadOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>PayloadInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-7" tabindex="-1"><a class="header-anchor" href="#type-declaration-7" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><p>The command transform gets the raw message payload and parameter input, which is validated against the transform input schemas. The command transform function is called before guard hooks and before the actual command function.</p><p>It should throw HandledError or return an object with the transformed payload and parameter. The type of returned payload and parameter must match the command function input for payload and parameter</p><h5 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h5>',7),sr=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),lr=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),or=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),ar={style:{"text-align":"left"}},dr=e("code",null,"CommandTransformFunctionContext",-1),ir=e("code",null,"PayloadInput",-1),cr=e("code",null,"ParamsInput",-1),rr=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"PayloadInput"),t(">")])],-1),ur=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"ParamsInput"),t(">")])],-1),hr=a('<h5 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><h4 id="defined-in-17" tabindex="-1"><a class="header-anchor" href="#defined-in-17" aria-hidden="true">#</a> Defined in</h4>',3),pr={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/commandType/CommandTransformInputHook.ts#L12",target:"_blank",rel:"noopener noreferrer"},_r=e("hr",null,null,-1),fr=e("h3",{id:"commandtransformoutputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandtransformoutputhook","aria-hidden":"true"},"#"),t(" CommandTransformOutputHook")],-1),gr=e("strong",null,"CommandTransformOutputHook",-1),mr=e("code",null,"ServiceClassType",-1),yr=e("code",null,"MessagePayloadType",-1),br=e("code",null,"MessageResultType",-1),xr=e("code",null,"MessageParamsType",-1),vr=e("code",null,"ResponseOutput",-1),Sr=e("code",null,"this",-1),Tr=e("code",null,"ServiceClassType",-1),kr=e("code",null,"context",-1),Cr=e("code",null,"CommandTransformFunctionContext",-1),Pr=e("code",null,"MessagePayloadType",-1),wr=e("code",null,"MessageParamsType",-1),Mr=e("code",null,"payload",-1),Dr=e("code",null,"Readonly",-1),Er=e("code",null,"MessageResultType",-1),Ir=e("code",null,"parameter",-1),Rr=e("code",null,"Readonly",-1),Fr=e("code",null,"MessageParamsType",-1),Br=e("code",null,"Promise",-1),Nr=e("code",null,"ResponseOutput",-1),Lr=a('<h4 id="type-parameters-15" tabindex="-1"><a class="header-anchor" href="#type-parameters-15" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>MessageResultType</code></td><td style="text-align:left;"><code>MessageResultType</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>ResponseOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-8" tabindex="-1"><a class="header-anchor" href="#type-declaration-8" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>ResponseOutput</code>&gt;</p><p>This transform hook is executed after function output validation and AfterGuardHooks.</p><h5 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h5>',6),Or=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Hr=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),jr=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),Ar={style:{"text-align":"left"}},qr=e("code",null,"CommandTransformFunctionContext",-1),Gr=e("code",null,"MessagePayloadType",-1),Vr=e("code",null,"MessageParamsType",-1),zr=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageResultType"),t(">")])],-1),Ur=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageParamsType"),t(">")])],-1),Zr=e("h5",{id:"returns-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-4","aria-hidden":"true"},"#"),t(" Returns")],-1),Qr=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"ResponseOutput"),t(">")],-1),Wr=e("h4",{id:"defined-in-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-18","aria-hidden":"true"},"#"),t(" Defined in")],-1),Kr={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/commandType/CommandTransformOutputHook.ts#L7",target:"_blank",rel:"noopener noreferrer"},$r=e("hr",null,null,-1),Yr=e("h3",{id:"iscommand",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscommand","aria-hidden":"true"},"#"),t(" isCommand")],-1),Xr=e("p",null,[t("▸ "),e("strong",null,"isCommand"),t("("),e("code",null,"message"),t("): message is Command")],-1),Jr=e("p",null,"Checks if given message is type of Command",-1),eu=e("h4",{id:"parameters-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-5","aria-hidden":"true"},"#"),t(" Parameters")],-1),tu=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),nu=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),su={style:{"text-align":"left"}},lu=e("code",null,"EBMessage",-1),ou=e("h4",{id:"returns-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-5","aria-hidden":"true"},"#"),t(" Returns")],-1),au=e("p",null,"message is Command",-1),du=e("p",null,"boolean",-1),iu=e("h4",{id:"defined-in-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-19","aria-hidden":"true"},"#"),t(" Defined in")],-1),cu={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/commandType/isCommand.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},ru=a('<hr><h3 id="iscommanderrorresponse" tabindex="-1"><a class="header-anchor" href="#iscommanderrorresponse" aria-hidden="true">#</a> isCommandErrorResponse</h3><p>▸ <strong>isCommandErrorResponse</strong>(<code>message</code>): message is CommandErrorResponse</p><p>Checks if given message is type of CommandErrorResponse</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>message</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p>message is CommandErrorResponse</p><p>boolean</p><h4 id="defined-in-20" tabindex="-1"><a class="header-anchor" href="#defined-in-20" aria-hidden="true">#</a> Defined in</h4>',10),uu={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/commandType/isCommandErrorResponse.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},hu=e("hr",null,null,-1),pu=e("h3",{id:"iscommandresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscommandresponse","aria-hidden":"true"},"#"),t(" isCommandResponse")],-1),_u=e("p",null,[t("▸ "),e("strong",null,"isCommandResponse"),t("("),e("code",null,"message"),t("): message is CommandResponse")],-1),fu=e("p",null,"Checks if given message is type of CommandResponse (success or error)",-1),gu=e("h4",{id:"parameters-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-7","aria-hidden":"true"},"#"),t(" Parameters")],-1),mu=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),yu=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),bu={style:{"text-align":"left"}},xu=e("code",null,"EBMessage",-1),vu=e("h4",{id:"returns-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-7","aria-hidden":"true"},"#"),t(" Returns")],-1),Su=e("p",null,"message is CommandResponse",-1),Tu=e("p",null,"boolean",-1),ku=e("h4",{id:"defined-in-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-21","aria-hidden":"true"},"#"),t(" Defined in")],-1),Cu={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/commandType/isCommandResponse.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},Pu=e("hr",null,null,-1),wu=e("h3",{id:"iscommandsuccessresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscommandsuccessresponse","aria-hidden":"true"},"#"),t(" isCommandSuccessResponse")],-1),Mu=e("p",null,[t("▸ "),e("strong",null,"isCommandSuccessResponse"),t("("),e("code",null,"message"),t("): message is CommandSuccessResponse")],-1),Du=e("p",null,"Checks if given message is type of CommandSuccessResponse",-1),Eu=e("h4",{id:"parameters-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-8","aria-hidden":"true"},"#"),t(" Parameters")],-1),Iu=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ru=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),Fu={style:{"text-align":"left"}},Bu=e("code",null,"EBMessage",-1),Nu=e("h4",{id:"returns-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-8","aria-hidden":"true"},"#"),t(" Returns")],-1),Lu=e("p",null,"message is CommandSuccessResponse",-1),Ou=e("p",null,"boolean",-1),Hu=e("h4",{id:"defined-in-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-22","aria-hidden":"true"},"#"),t(" Defined in")],-1),ju={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/commandType/isCommandSuccessResponse.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},Au=a('<h2 id="store-1" tabindex="-1"><a class="header-anchor" href="#store-1" aria-hidden="true">#</a> Store</h2><p>• <strong>ConfigStoreBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for config store adapters</p><h4 id="type-parameters-16" tabindex="-1"><a class="header-anchor" href="#type-parameters-16" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="defined-in-23" tabindex="-1"><a class="header-anchor" href="#defined-in-23" aria-hidden="true">#</a> Defined in</h4>',6),qu={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},Gu=a(`<p>• <strong>DefaultConfigStore</strong>: <code>Object</code></p><p>The DefaultConfigStore is a placeholder which offers all needed methods. Getters and setters will throw a UnhandledError with status <code>Unauthorized</code>, when a disabled operation is called.</p><p>For development and testing purpose, you can initiate the store with values.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultConfigStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
   enableGet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
   enableRemove<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
   enableSet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
   config<span class="token operator">:</span> <span class="token punctuation">{</span>
     initialValue<span class="token operator">:</span> <span class="token string">&#39;initial&#39;</span><span class="token punctuation">,</span>
   <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token string">&#39;initialValue&#39;</span><span class="token punctuation">)</span> <span class="token comment">// outputs: { initialValue: &#39;initial&#39; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-24" tabindex="-1"><a class="header-anchor" href="#defined-in-24" aria-hidden="true">#</a> Defined in</h4>`,6),Vu={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/DefaultConfigStore/DefaultConfigStore.impl.ts#L25",target:"_blank",rel:"noopener noreferrer"},zu=a(`<p>• <strong>DefaultSecretStore</strong>: <code>Object</code></p><p>The DefaultSecretStore is a placeholder which offers all needed methods. Getters and setters will throw a UnhandledError with status <code>Unauthorized</code>, when a disabled operation is called.</p><p>For development and testing purpose, you can initiate the store with values.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultSecretStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 config<span class="token operator">:</span> <span class="token punctuation">{</span>
   secretOne<span class="token operator">:</span> <span class="token string">&#39;my_secret_one_value&#39;</span><span class="token punctuation">,</span>
   secretTwo<span class="token operator">:</span> <span class="token string">&#39;my_secret_two_value&#39;</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getSecret</span><span class="token punctuation">(</span><span class="token string">&#39;secretOne&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;secretTwo) // outputs: { secretOne: my_secret_one_value, secretTwo: &#39;</span>my_secret_two_value&#39; <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Per default, setting/changing and removal of values are disabled. You can enable it on instance creation:</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultSecretStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 enableGet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
 enableRemove<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
 enableSet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-25" tabindex="-1"><a class="header-anchor" href="#defined-in-25" aria-hidden="true">#</a> Defined in</h4>`,9),Uu={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/DefaultSecretStore/DefaultSecretStore.impl.ts#L33",target:"_blank",rel:"noopener noreferrer"},Zu=e("p",null,[t("• "),e("strong",null,"DefaultStateStore"),t(": "),e("code",null,"Object")],-1),Qu=e("p",null,[t("The DefaultStateStore is a placeholder which offers all needed methods. Getters and setters will throw a UnhandledError with status "),e("code",null,"Not implemented")],-1),Wu=e("h4",{id:"defined-in-26",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-26","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ku={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/DefaultStateStore/DefaultStateStore.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},$u=a('<p>• <strong>SecretStoreBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for secret store adapters</p><h4 id="type-parameters-17" tabindex="-1"><a class="header-anchor" href="#type-parameters-17" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="defined-in-27" tabindex="-1"><a class="header-anchor" href="#defined-in-27" aria-hidden="true">#</a> Defined in</h4>',5),Yu={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/SecretStore/SecretStoreBaseClass.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},Xu=a('<p>• <strong>StateStoreBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for config store implementations</p><h4 id="type-parameters-18" tabindex="-1"><a class="header-anchor" href="#type-parameters-18" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="defined-in-28" tabindex="-1"><a class="header-anchor" href="#defined-in-28" aria-hidden="true">#</a> Defined in</h4>',5),Ju={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/StateStore/StateStoreBaseClass.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},eh=e("p",null,[t("• "),e("strong",null,"ConfigStore"),t(": "),e("code",null,"Object")],-1),th=e("p",null,"Interface definition for config store adapters",-1),nh=e("h4",{id:"defined-in-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-29","aria-hidden":"true"},"#"),t(" Defined in")],-1),sh={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/ConfigStore/types/ConfigStore.ts#L10",target:"_blank",rel:"noopener noreferrer"},lh=e("p",null,[t("• "),e("strong",null,"SecretStore"),t(": "),e("code",null,"Object")],-1),oh=e("p",null,"Interface definition for a secret store implementation",-1),ah=e("h4",{id:"defined-in-30",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-30","aria-hidden":"true"},"#"),t(" Defined in")],-1),dh={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/SecretStore/types/SecretStore.ts#L9",target:"_blank",rel:"noopener noreferrer"},ih=e("p",null,[t("• "),e("strong",null,"StateStore"),t(": "),e("code",null,"Object")],-1),ch=e("p",null,"Interface definition for state store implementations",-1),rh=e("h4",{id:"defined-in-31",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-31","aria-hidden":"true"},"#"),t(" Defined in")],-1),uh={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/StateStore/types/StateStore.ts#L10",target:"_blank",rel:"noopener noreferrer"},hh=a('<h3 id="configdeletefunction" tabindex="-1"><a class="header-anchor" href="#configdeletefunction" aria-hidden="true">#</a> ConfigDeleteFunction</h3><p>Ƭ <strong>ConfigDeleteFunction</strong>: (<code>configName</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-9" tabindex="-1"><a class="header-anchor" href="#type-declaration-9" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>configName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>delete a config value from the config store</p><h5 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>configName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-32" tabindex="-1"><a class="header-anchor" href="#defined-in-32" aria-hidden="true">#</a> Defined in</h4>',10),ph={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/ConfigStore/types/ConfigDeleteFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},_h=a('<hr><h3 id="configgetterfunction" tabindex="-1"><a class="header-anchor" href="#configgetterfunction" aria-hidden="true">#</a> ConfigGetterFunction</h3><p>Ƭ <strong>ConfigGetterFunction</strong>: (...<code>configNames</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="type-declaration-10" tabindex="-1"><a class="header-anchor" href="#type-declaration-10" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>...configNames</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><p>get a config value from the config store</p><h5 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...configNames</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h5 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="defined-in-33" tabindex="-1"><a class="header-anchor" href="#defined-in-33" aria-hidden="true">#</a> Defined in</h4>',11),fh={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/ConfigStore/types/ConfigGetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},gh=a('<hr><h3 id="configsetterfunction" tabindex="-1"><a class="header-anchor" href="#configsetterfunction" aria-hidden="true">#</a> ConfigSetterFunction</h3><p>Ƭ <strong>ConfigSetterFunction</strong>: (<code>secretName</code>: <code>string</code>, <code>secretValue</code>: <code>unknown</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-11" tabindex="-1"><a class="header-anchor" href="#type-declaration-11" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>set a config value in the config store</p><h5 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>secretValue</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-34" tabindex="-1"><a class="header-anchor" href="#defined-in-34" aria-hidden="true">#</a> Defined in</h4>',11),mh={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/ConfigStore/types/ConfigSetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},yh=a('<hr><h3 id="secretdeletefunction" tabindex="-1"><a class="header-anchor" href="#secretdeletefunction" aria-hidden="true">#</a> SecretDeleteFunction</h3><p>Ƭ <strong>SecretDeleteFunction</strong>: (<code>secretName</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-12" tabindex="-1"><a class="header-anchor" href="#type-declaration-12" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>delete a secret from the secret store</p><h5 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-35" tabindex="-1"><a class="header-anchor" href="#defined-in-35" aria-hidden="true">#</a> Defined in</h4>',11),bh={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/SecretStore/types/SecretDeleteFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},xh=a('<hr><h3 id="secretgetterfunction" tabindex="-1"><a class="header-anchor" href="#secretgetterfunction" aria-hidden="true">#</a> SecretGetterFunction</h3><p>Ƭ <strong>SecretGetterFunction</strong>: (...<code>secretName</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;&gt;</p><h4 id="type-declaration-13" tabindex="-1"><a class="header-anchor" href="#type-declaration-13" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>...secretName</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;&gt;</p><p>get a secret from the secret store</p><h5 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...secretName</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h5 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;&gt;</p><h4 id="defined-in-36" tabindex="-1"><a class="header-anchor" href="#defined-in-36" aria-hidden="true">#</a> Defined in</h4>',11),vh={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/SecretStore/types/SecretGetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},Sh=a('<hr><h3 id="secretsetterfunction" tabindex="-1"><a class="header-anchor" href="#secretsetterfunction" aria-hidden="true">#</a> SecretSetterFunction</h3><p>Ƭ <strong>SecretSetterFunction</strong>: (<code>secretName</code>: <code>string</code>, <code>secretValue</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-14" tabindex="-1"><a class="header-anchor" href="#type-declaration-14" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>set a secret in the secret store</p><h5 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>secretValue</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-37" tabindex="-1"><a class="header-anchor" href="#defined-in-37" aria-hidden="true">#</a> Defined in</h4>',11),Th={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/SecretStore/types/SecretSetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},kh=a('<hr><h3 id="statedeletefunction" tabindex="-1"><a class="header-anchor" href="#statedeletefunction" aria-hidden="true">#</a> StateDeleteFunction</h3><p>Ƭ <strong>StateDeleteFunction</strong>: (<code>stateName</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-15" tabindex="-1"><a class="header-anchor" href="#type-declaration-15" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>stateName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>delete a state value from the state store</p><h5 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>stateName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-15" tabindex="-1"><a class="header-anchor" href="#returns-15" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-38" tabindex="-1"><a class="header-anchor" href="#defined-in-38" aria-hidden="true">#</a> Defined in</h4>',11),Ch={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/StateStore/types/StateDeleteFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},Ph=a('<hr><h3 id="stategetterfunction" tabindex="-1"><a class="header-anchor" href="#stategetterfunction" aria-hidden="true">#</a> StateGetterFunction</h3><p>Ƭ <strong>StateGetterFunction</strong>: (...<code>stateNames</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="type-declaration-16" tabindex="-1"><a class="header-anchor" href="#type-declaration-16" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>...stateNames</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><p>get a state value from the state store</p><h5 id="parameters-16" tabindex="-1"><a class="header-anchor" href="#parameters-16" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...stateNames</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h5 id="returns-16" tabindex="-1"><a class="header-anchor" href="#returns-16" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="defined-in-39" tabindex="-1"><a class="header-anchor" href="#defined-in-39" aria-hidden="true">#</a> Defined in</h4>',11),wh={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/StateStore/types/StateGetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},Mh=a('<hr><h3 id="statesetterfunction" tabindex="-1"><a class="header-anchor" href="#statesetterfunction" aria-hidden="true">#</a> StateSetterFunction</h3><p>Ƭ <strong>StateSetterFunction</strong>: (<code>secretName</code>: <code>string</code>, <code>secretValue</code>: <code>unknown</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-17" tabindex="-1"><a class="header-anchor" href="#type-declaration-17" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>set a state value in the state store</p><h5 id="parameters-17" tabindex="-1"><a class="header-anchor" href="#parameters-17" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>secretValue</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="returns-17" tabindex="-1"><a class="header-anchor" href="#returns-17" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-40" tabindex="-1"><a class="header-anchor" href="#defined-in-40" aria-hidden="true">#</a> Defined in</h4>',11),Dh={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/StateStore/types/StateSetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},Eh=e("h2",{id:"event-bridge-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#event-bridge-1","aria-hidden":"true"},"#"),t(" Event bridge")],-1),Ih=e("p",null,[t("• "),e("strong",null,"DefaultEventBridge"),t(": "),e("code",null,"Object")],-1),Rh=e("p",null,"Simple implementation of some simple in-memory event bridge. Does not support threads and does not need any external databases.",-1),Fh=e("h4",{id:"defined-in-41",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-41","aria-hidden":"true"},"#"),t(" Defined in")],-1),Bh={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L50",target:"_blank",rel:"noopener noreferrer"},Nh=a('<p>• <strong>EventBridgeBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>The base class to be extended by event bridge implementations</p><h4 id="type-parameters-19" tabindex="-1"><a class="header-anchor" href="#type-parameters-19" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="defined-in-42" tabindex="-1"><a class="header-anchor" href="#defined-in-42" aria-hidden="true">#</a> Defined in</h4>',5),Lh={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L17",target:"_blank",rel:"noopener noreferrer"},Oh=e("p",null,[t("• "),e("strong",null,"EventBridge"),t(": "),e("code",null,"Object")],-1),Hh=e("p",null,"Event bridge interface The event bridge must implement this interface.",-1),jh=e("h4",{id:"defined-in-43",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-43","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ah={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/EventBridge/types/EventBridge.ts#L19",target:"_blank",rel:"noopener noreferrer"},qh=e("h3",{id:"eventbridgeeventsbasic",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#eventbridgeeventsbasic","aria-hidden":"true"},"#"),t(" EventBridgeEventsBasic")],-1),Gh=e("p",null,[t("Ƭ "),e("strong",null,"EventBridgeEventsBasic"),t(": "),e("code",null,"Object")],-1),Vh=e("p",null,"Events which can be emitted by a event bridge",-1),zh=e("h4",{id:"type-declaration-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-18","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Uh=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Zh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-connected")]),e("td",{style:{"text-align":"left"}},[e("code",null,"never")]),e("td",{style:{"text-align":"left"}},"emitted when then connection to event bridge is established")],-1),Qh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-connection-error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined"),t(" | "),e("code",null,"unknown"),t(" | "),e("code",null,"Error")]),e("td",{style:{"text-align":"left"}},"emitted when the connection to event bridge can not be established or a connection has issues or gets closed unexpectedly")],-1),Wh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-disconnected")]),e("td",{style:{"text-align":"left"}},[e("code",null,"never")]),e("td",{style:{"text-align":"left"}},"emitted when the connection to event bridge closed")],-1),Kh=e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-error")],-1),$h={style:{"text-align":"left"}},Yh=e("code",null,"UnhandledError",-1),Xh=e("code",null,"unknown",-1),Jh=e("td",{style:{"text-align":"left"}},"emitted on internal event bridge error",-1),ep=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-reconnecting")]),e("td",{style:{"text-align":"left"}},[e("code",null,"never")]),e("td",{style:{"text-align":"left"}},"emitted on retry to connect to event bridge")],-1),tp=e("h4",{id:"defined-in-44",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-44","aria-hidden":"true"},"#"),t(" Defined in")],-1),np={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/EventBridge/types/EventBridgeEvents.ts#L9",target:"_blank",rel:"noopener noreferrer"},sp=e("hr",null,null,-1),lp=e("h3",{id:"getcommandqueuename",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommandqueuename","aria-hidden":"true"},"#"),t(" getCommandQueueName")],-1),op=e("p",null,[t("▸ "),e("strong",null,"getCommandQueueName"),t("("),e("code",null,"address"),t("): "),e("code",null,"string")],-1),ap=e("h4",{id:"parameters-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-18","aria-hidden":"true"},"#"),t(" Parameters")],-1),dp=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ip=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),cp={style:{"text-align":"left"}},rp=e("code",null,"EBMessageAddress",-1),up=e("h4",{id:"returns-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-18","aria-hidden":"true"},"#"),t(" Returns")],-1),hp=e("p",null,[e("code",null,"string")],-1),pp=e("h4",{id:"defined-in-45",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-45","aria-hidden":"true"},"#"),t(" Defined in")],-1),_p={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/helper/getCommandQueueName.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},fp=a('<h2 id="subscription-1" tabindex="-1"><a class="header-anchor" href="#subscription-1" aria-hidden="true">#</a> Subscription</h2><p>• <strong>SubscriptionDefinitionBuilder</strong>&lt;<code>ServiceClassType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>Subscription definition builder is a helper to create and define a subscriptions for a service. It helps to set all needed filters.</p><p>A working schema definition needs at least a subscription name, a short description and the subscription implementation.</p><h4 id="type-parameters-20" tabindex="-1"><a class="header-anchor" href="#type-parameters-20" aria-hidden="true">#</a> Type parameters</h4>',5),gp=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),mp=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),yp={style:{"text-align":"left"}},bp=e("code",null,"ServiceClass",-1),xp=e("code",null,"ServiceClass",-1),vp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Sp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),Tp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),kp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),Cp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),Pp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType"),t(" | "),e("code",null,"void"),t(" | "),e("code",null,"undefined")])],-1),wp=e("h4",{id:"defined-in-46",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-46","aria-hidden":"true"},"#"),t(" Defined in")],-1),Mp={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L30",target:"_blank",rel:"noopener noreferrer"},Dp=a('<h3 id="subscription-2" tabindex="-1"><a class="header-anchor" href="#subscription-2" aria-hidden="true">#</a> Subscription</h3><p>Ƭ <strong>Subscription</strong>&lt;<code>PayloadType</code>, <code>ParameterType</code>&gt;: <code>Object</code></p><p>A subscription managed by the event bridge</p><h4 id="type-parameters-21" tabindex="-1"><a class="header-anchor" href="#type-parameters-21" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-19" tabindex="-1"><a class="header-anchor" href="#type-declaration-19" aria-hidden="true">#</a> Type declaration</h4>',6),Ep=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Ip=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"emitEventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the event name to be used for custom message if the subscriptions returns a result")],-1),Rp=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),Fp={style:{"text-align":"left"}},Bp=e("code",null,"DefinitionEventBridgeConfig",-1),Np=e("td",{style:{"text-align":"left"}},"config information for event bridge",-1),Lp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the event name to subscribe for")],-1),Op=e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId?")],-1),Hp={style:{"text-align":"left"}},jp=e("code",null,"InstanceId",-1),Ap=e("td",{style:{"text-align":"left"}},"the principal id",-1),qp=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType?")],-1),Gp={style:{"text-align":"left"}},Vp=e("code",null,"EBMessageType",-1),zp=e("td",{style:{"text-align":"left"}},"the message type",-1),Up=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload?")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"parameter?"),t(": "),e("code",null,"ParameterType"),t(" ; "),e("code",null,"payload?"),t(": "),e("code",null,"PayloadType"),t(" }")]),e("td",{style:{"text-align":"left"}},"the message payload")],-1),Zp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload.parameter?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ParameterType")]),e("td",{style:{"text-align":"left"}},"-")],-1),Qp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload.payload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")]),e("td",{style:{"text-align":"left"}},"-")],-1),Wp=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),Kp={style:{"text-align":"left"}},$p=e("code",null,"PrincipalId",-1),Yp=e("td",{style:{"text-align":"left"}},"the principal id",-1),Xp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver?")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"serviceName?"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceTarget?"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceVersion?"),t(": "),e("code",null,"string"),t(" }")]),e("td",{style:{"text-align":"left"}},"the consumer address of the message")],-1),Jp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),e_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),t_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),n_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender?")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"serviceName?"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceTarget?"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceVersion?"),t(": "),e("code",null,"string"),t(" }")]),e("td",{style:{"text-align":"left"}},"the producer address of the message")],-1),s_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),l_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),o_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),a_=e("td",{style:{"text-align":"left"}},[e("code",null,"subscriber")],-1),d_={style:{"text-align":"left"}},i_=e("code",null,"EBMessageAddress",-1),c_=e("td",{style:{"text-align":"left"}},"the address of the subscription (service name, version and subscription name)",-1),r_=e("h4",{id:"defined-in-47",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-47","aria-hidden":"true"},"#"),t(" Defined in")],-1),u_={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/subscription/Subscription.ts#L12",target:"_blank",rel:"noopener noreferrer"},h_=e("hr",null,null,-1),p_=e("h3",{id:"subscriptionafterguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionafterguardhook","aria-hidden":"true"},"#"),t(" SubscriptionAfterGuardHook")],-1),__=e("strong",null,"SubscriptionAfterGuardHook",-1),f_=e("code",null,"ServiceClassType",-1),g_=e("code",null,"FunctionResultType",-1),m_=e("code",null,"FunctionPayloadOutputType",-1),y_=e("code",null,"FunctionParameterType",-1),b_=e("code",null,"this",-1),x_=e("code",null,"ServiceClassType",-1),v_=e("code",null,"context",-1),S_=e("code",null,"SubscriptionFunctionContext",-1),T_=e("code",null,"result",-1),k_=e("code",null,"Readonly",-1),C_=e("code",null,"FunctionResultType",-1),P_=e("code",null,"payload",-1),w_=e("code",null,"Readonly",-1),M_=e("code",null,"FunctionPayloadOutputType",-1),D_=e("code",null,"parameter",-1),E_=e("code",null,"Readonly",-1),I_=e("code",null,"FunctionParameterType",-1),R_=e("code",null,"Promise",-1),F_=e("code",null,"void",-1),B_=e("h4",{id:"type-parameters-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-22","aria-hidden":"true"},"#"),t(" Type parameters")],-1),N_=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),L_=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),O_={style:{"text-align":"left"}},H_=e("code",null,"ServiceClass",-1),j_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),A_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadOutputType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),q_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParameterType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),G_=a('<h4 id="type-declaration-20" tabindex="-1"><a class="header-anchor" href="#type-declaration-20" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>result</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Definition of after guard hook functions. This guard is called after function successfully returns and after output validation.</p><h5 id="parameters-19" tabindex="-1"><a class="header-anchor" href="#parameters-19" aria-hidden="true">#</a> Parameters</h5>',4),V_=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),z_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),U_=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),Z_={style:{"text-align":"left"}},Q_=e("code",null,"SubscriptionFunctionContext",-1),W_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"result")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionResultType"),t(">")])],-1),K_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadOutputType"),t(">")])],-1),$_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParameterType"),t(">")])],-1),Y_=e("h5",{id:"returns-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-19","aria-hidden":"true"},"#"),t(" Returns")],-1),X_=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),J_=e("h4",{id:"defined-in-48",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-48","aria-hidden":"true"},"#"),t(" Defined in")],-1),e1={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/subscription/SubscriptionAfterGuardHook.ts#L10",target:"_blank",rel:"noopener noreferrer"},t1=e("hr",null,null,-1),n1=e("h3",{id:"subscriptionbeforeguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionbeforeguardhook","aria-hidden":"true"},"#"),t(" SubscriptionBeforeGuardHook")],-1),s1=e("strong",null,"SubscriptionBeforeGuardHook",-1),l1=e("code",null,"ServiceClassType",-1),o1=e("code",null,"FunctionPayloadType",-1),a1=e("code",null,"FunctionParamsType",-1),d1=e("code",null,"this",-1),i1=e("code",null,"ServiceClassType",-1),c1=e("code",null,"context",-1),r1=e("code",null,"SubscriptionFunctionContext",-1),u1=e("code",null,"payload",-1),h1=e("code",null,"Readonly",-1),p1=e("code",null,"FunctionPayloadType",-1),_1=e("code",null,"parameter",-1),f1=e("code",null,"Readonly",-1),g1=e("code",null,"FunctionParamsType",-1),m1=e("code",null,"Promise",-1),y1=e("code",null,"void",-1),b1=e("h4",{id:"type-parameters-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-23","aria-hidden":"true"},"#"),t(" Type parameters")],-1),x1=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),v1=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),S1={style:{"text-align":"left"}},T1=e("code",null,"ServiceClass",-1),k1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),C1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),P1=a('<h4 id="type-declaration-21" tabindex="-1"><a class="header-anchor" href="#type-declaration-21" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Guard is called after command function input validation and before executing the command function. The guard is usefull to separate for example auth checks from business logic. It should throw HandledError or return void.</p><h5 id="parameters-20" tabindex="-1"><a class="header-anchor" href="#parameters-20" aria-hidden="true">#</a> Parameters</h5>',4),w1=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),M1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),D1=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),E1={style:{"text-align":"left"}},I1=e("code",null,"SubscriptionFunctionContext",-1),R1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),F1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),B1=e("h5",{id:"returns-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-20","aria-hidden":"true"},"#"),t(" Returns")],-1),N1=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),L1=e("h4",{id:"defined-in-49",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-49","aria-hidden":"true"},"#"),t(" Defined in")],-1),O1={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/subscription/SubscriptionBeforeGuardHook.ts#L11",target:"_blank",rel:"noopener noreferrer"},H1=a('<hr><h3 id="subscriptiondefinition" tabindex="-1"><a class="header-anchor" href="#subscriptiondefinition" aria-hidden="true">#</a> SubscriptionDefinition</h3><p>Ƭ <strong>SubscriptionDefinition</strong>&lt;<code>ServiceClassType</code>, <code>MetadataType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>The definition for a subscription provided by some service.</p><h4 id="type-parameters-24" tabindex="-1"><a class="header-anchor" href="#type-parameters-24" aria-hidden="true">#</a> Type parameters</h4>',5),j1=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),A1=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),q1={style:{"text-align":"left"}},G1=e("code",null,"ServiceClass",-1),V1=e("code",null,"ServiceClass",-1),z1=e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")],-1),U1={style:{"text-align":"left"}},Z1=e("code",null,"SubscriptionDefinitionMetadataBase",-1),Q1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),W1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),K1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),$1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),Y1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),X1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),J1=e("h4",{id:"type-declaration-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-22","aria-hidden":"true"},"#"),t(" Type declaration")],-1),ef=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),tf=e("td",{style:{"text-align":"left"}},[e("code",null,"call")],-1),nf={style:{"text-align":"left"}},sf=e("code",null,"SubscriptionFunction",-1),lf=e("code",null,"ServiceClassType",-1),of=e("code",null,"MessagePayloadType",-1),af=e("code",null,"MessageParamsType",-1),df=e("code",null,"MessagePayloadType",-1),cf=e("code",null,"MessageParamsType",-1),rf=e("code",null,"MessageResultType",-1),uf=e("td",{style:{"text-align":"left"}},"the subscription function",-1),hf=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"emitEventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name to be used for custom message if the subscription functions returns value")],-1),pf=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),_f={style:{"text-align":"left"}},ff=e("code",null,"DefinitionEventBridgeConfig",-1),gf=e("td",{style:{"text-align":"left"}},"config information for event bridge",-1),mf=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"filter forevent name")],-1),yf=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks")],-1),bf={style:{"text-align":"left"}},xf=e("code",null,"afterGuard?",-1),vf=e("code",null,"Record",-1),Sf=e("code",null,"string",-1),Tf=e("code",null,"SubscriptionAfterGuardHook",-1),kf=e("code",null,"ServiceClassType",-1),Cf=e("code",null,"FunctionResultType",-1),Pf=e("code",null,"FunctionPayloadType",-1),wf=e("code",null,"FunctionParamsType",-1),Mf=e("code",null,"beforeGuard?",-1),Df=e("code",null,"Record",-1),Ef=e("code",null,"string",-1),If=e("code",null,"SubscriptionBeforeGuardHook",-1),Rf=e("code",null,"ServiceClassType",-1),Ff=e("code",null,"FunctionPayloadType",-1),Bf=e("code",null,"FunctionParamsType",-1),Nf=e("code",null,"transformInput?",-1),Lf=e("code",null,"transformFunction",-1),Of=e("code",null,"SubscriptionTransformInputHook",-1),Hf=e("code",null,"ServiceClassType",-1),jf=e("code",null,"MessagePayloadType",-1),Af=e("code",null,"MessageParamsType",-1),qf=e("code",null,"transformInputSchema",-1),Gf=e("code",null,"z.ZodType",-1),Vf=e("code",null,"transformParameterSchema",-1),zf=e("code",null,"z.ZodType",-1),Uf=e("code",null,"transformOutput?",-1),Zf=e("code",null,"transformFunction",-1),Qf=e("code",null,"SubscriptionTransformOutputHook",-1),Wf=e("code",null,"ServiceClassType",-1),Kf=e("code",null,"FunctionResultType",-1),$f=e("code",null,"FunctionParamsType",-1),Yf=e("code",null,"any",-1),Xf=e("code",null,"transformOutputSchema",-1),Jf=e("code",null,"z.ZodType",-1),eg=e("td",{style:{"text-align":"left"}},"hooks of subscription",-1),tg=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.afterGuard?")],-1),ng={style:{"text-align":"left"}},sg=e("code",null,"Record",-1),lg=e("code",null,"string",-1),og=e("code",null,"SubscriptionAfterGuardHook",-1),ag=e("code",null,"ServiceClassType",-1),dg=e("code",null,"FunctionResultType",-1),ig=e("code",null,"FunctionPayloadType",-1),cg=e("code",null,"FunctionParamsType",-1),rg=e("td",{style:{"text-align":"left"}},"-",-1),ug=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.beforeGuard?")],-1),hg={style:{"text-align":"left"}},pg=e("code",null,"Record",-1),_g=e("code",null,"string",-1),fg=e("code",null,"SubscriptionBeforeGuardHook",-1),gg=e("code",null,"ServiceClassType",-1),mg=e("code",null,"FunctionPayloadType",-1),yg=e("code",null,"FunctionParamsType",-1),bg=e("td",{style:{"text-align":"left"}},"-",-1),xg=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput?")],-1),vg={style:{"text-align":"left"}},Sg=e("code",null,"transformFunction",-1),Tg=e("code",null,"SubscriptionTransformInputHook",-1),kg=e("code",null,"ServiceClassType",-1),Cg=e("code",null,"MessagePayloadType",-1),Pg=e("code",null,"MessageParamsType",-1),wg=e("code",null,"transformInputSchema",-1),Mg=e("code",null,"z.ZodType",-1),Dg=e("code",null,"transformParameterSchema",-1),Eg=e("code",null,"z.ZodType",-1),Ig=e("td",{style:{"text-align":"left"}},"-",-1),Rg=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformFunction")],-1),Fg={style:{"text-align":"left"}},Bg=e("code",null,"SubscriptionTransformInputHook",-1),Ng=e("code",null,"ServiceClassType",-1),Lg=e("code",null,"MessagePayloadType",-1),Og=e("code",null,"MessageParamsType",-1),Hg=e("td",{style:{"text-align":"left"}},"-",-1),jg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),Ag=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),qg=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput?")],-1),Gg={style:{"text-align":"left"}},Vg=e("code",null,"transformFunction",-1),zg=e("code",null,"SubscriptionTransformOutputHook",-1),Ug=e("code",null,"ServiceClassType",-1),Zg=e("code",null,"FunctionResultType",-1),Qg=e("code",null,"FunctionParamsType",-1),Wg=e("code",null,"any",-1),Kg=e("code",null,"transformOutputSchema",-1),$g=e("code",null,"z.ZodType",-1),Yg=e("td",{style:{"text-align":"left"}},"-",-1),Xg=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformFunction")],-1),Jg={style:{"text-align":"left"}},em=e("code",null,"SubscriptionTransformOutputHook",-1),tm=e("code",null,"ServiceClassType",-1),nm=e("code",null,"FunctionResultType",-1),sm=e("code",null,"FunctionParamsType",-1),lm=e("code",null,"any",-1),om=e("td",{style:{"text-align":"left"}},"-",-1),am=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),dm=e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId?")],-1),im={style:{"text-align":"left"}},cm=e("code",null,"InstanceId",-1),rm=e("td",{style:{"text-align":"left"}},"filter for instance id",-1),um=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType?")],-1),hm={style:{"text-align":"left"}},pm=e("code",null,"EBMessageType",-1),_m=e("td",{style:{"text-align":"left"}},"filter for message type",-1),fm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"metadata")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")]),e("td",{style:{"text-align":"left"}},"the metadata of the subscription")],-1),gm=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),mm={style:{"text-align":"left"}},ym=e("code",null,"PrincipalId",-1),bm=e("td",{style:{"text-align":"left"}},"filter for principal id",-1),xm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver?")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"serviceName?"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceTarget?"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceVersion?"),t(": "),e("code",null,"string"),t(" }")]),e("td",{style:{"text-align":"left"}},"filter for messages consumed by given receiver")],-1),vm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),Sm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),Tm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),km=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender?")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"serviceName?"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceTarget?"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceVersion?"),t(": "),e("code",null,"string"),t(" }")]),e("td",{style:{"text-align":"left"}},"filter for messages produced by given sender")],-1),Cm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),Pm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),wm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),Mm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionDescription")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the description of the subscription")],-1),Dm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the subscription")],-1),Em=e("h4",{id:"defined-in-50",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-50","aria-hidden":"true"},"#"),t(" Defined in")],-1),Im={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/subscription/SubscriptionDefinition.ts#L20",target:"_blank",rel:"noopener noreferrer"},Rm=e("hr",null,null,-1),Fm=e("h3",{id:"subscriptionfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionfunction","aria-hidden":"true"},"#"),t(" SubscriptionFunction")],-1),Bm=e("strong",null,"SubscriptionFunction",-1),Nm=e("code",null,"ServiceClassType",-1),Lm=e("code",null,"MessagePayloadType",-1),Om=e("code",null,"MessageParamsType",-1),Hm=e("code",null,"FunctionPayloadType",-1),jm=e("code",null,"FunctionParamsType",-1),Am=e("code",null,"FunctionResultType",-1),qm=e("code",null,"this",-1),Gm=e("code",null,"ServiceClassType",-1),Vm=e("code",null,"context",-1),zm=e("code",null,"SubscriptionFunctionContext",-1),Um=e("code",null,"payload",-1),Zm=e("code",null,"Readonly",-1),Qm=e("code",null,"FunctionPayloadType",-1),Wm=e("code",null,"parameter",-1),Km=e("code",null,"Readonly",-1),$m=e("code",null,"FunctionParamsType",-1),Ym=e("code",null,"Promise",-1),Xm=e("code",null,"FunctionResultType",-1),Jm=e("h4",{id:"type-parameters-25",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-25","aria-hidden":"true"},"#"),t(" Type parameters")],-1),ey=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ty=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),ny={style:{"text-align":"left"}},sy=e("code",null,"ServiceClass",-1),ly=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),oy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),ay=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),dy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),iy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),cy=a('<h4 id="type-declaration-23" tabindex="-1"><a class="header-anchor" href="#type-declaration-23" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>FunctionResultType</code>&gt;</p><p>CommandFunction is a function which will be triggered when a matching event bridge message is received by the service</p><h5 id="parameters-21" tabindex="-1"><a class="header-anchor" href="#parameters-21" aria-hidden="true">#</a> Parameters</h5>',4),ry=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),uy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),hy=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),py={style:{"text-align":"left"}},_y=e("code",null,"SubscriptionFunctionContext",-1),fy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),gy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),my=e("h5",{id:"returns-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-21","aria-hidden":"true"},"#"),t(" Returns")],-1),yy=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"FunctionResultType"),t(">")],-1),by=e("h4",{id:"defined-in-51",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-51","aria-hidden":"true"},"#"),t(" Defined in")],-1),xy={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/subscription/SubscriptionFunction.ts#L8",target:"_blank",rel:"noopener noreferrer"},vy=e("hr",null,null,-1),Sy=e("h3",{id:"subscriptionfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionfunctioncontext","aria-hidden":"true"},"#"),t(" SubscriptionFunctionContext")],-1),Ty=e("strong",null,"SubscriptionFunctionContext",-1),ky=e("code",null,"ContextBase",-1),Cy=e("code",null,"SubscriptionFunctionContextEnhancements",-1),Py=e("p",null,"The subscription function context which will be passed into subscription function.",-1),wy=e("h4",{id:"defined-in-52",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-52","aria-hidden":"true"},"#"),t(" Defined in")],-1),My={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/subscription/SubscriptionFunctionContext.ts#L46",target:"_blank",rel:"noopener noreferrer"},Dy=a('<hr><h3 id="subscriptionfunctioncontextenhancements" tabindex="-1"><a class="header-anchor" href="#subscriptionfunctioncontextenhancements" aria-hidden="true">#</a> SubscriptionFunctionContextEnhancements</h3><p>Ƭ <strong>SubscriptionFunctionContextEnhancements</strong>: <code>Object</code></p><p>It provides the original command message. Also, the methods:</p><ul><li><code>emit</code> which allows to emit custom events to the event bridge</li><li><code>invoke</code> which allows to call other commands</li></ul><h4 id="type-declaration-24" tabindex="-1"><a class="header-anchor" href="#type-declaration-24" aria-hidden="true">#</a> Type declaration</h4>',6),Ey=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Iy=e("td",{style:{"text-align":"left"}},[e("code",null,"emit")],-1),Ry={style:{"text-align":"left"}},Fy=e("code",null,"EmitCustomMessageFunction",-1),By=e("td",{style:{"text-align":"left"}},"emit a custom message",-1),Ny=e("td",{style:{"text-align":"left"}},[e("code",null,"invoke")],-1),Ly={style:{"text-align":"left"}},Oy=e("code",null,"InvokeFunction",-1),Hy=e("td",{style:{"text-align":"left"}},[t("Invokes a command and returns the result. It is recommended to validate the result against a schema which only contains the data you actually need. "),e("strong",null,[e("code",null,"Example")]),t(),e("code",null,"typescript const address: EBMessageAddress = { serviceName: 'name-of-service-to-invoke', serviceVersion: '1', serviceTarget: 'command-name-to-invoke', } const inputPayload = { my: 'input' } const inputParameter = { search: 'for_me' } const result = await invoke<MyResultType>(address, inputPayload inputParameter ) ")],-1),jy=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),Ay={style:{"text-align":"left"}},qy=e("code",null,"Readonly",-1),Gy=e("code",null,"EBMessage",-1),Vy=e("td",{style:{"text-align":"left"}},"the original message",-1),zy=e("h4",{id:"defined-in-53",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-53","aria-hidden":"true"},"#"),t(" Defined in")],-1),Uy={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/subscription/SubscriptionFunctionContext.ts#L15",target:"_blank",rel:"noopener noreferrer"},Zy=e("hr",null,null,-1),Qy=e("h3",{id:"subscriptiontransformfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiontransformfunctioncontext","aria-hidden":"true"},"#"),t(" SubscriptionTransformFunctionContext")],-1),Wy=e("strong",null,"SubscriptionTransformFunctionContext",-1),Ky=e("code",null,"ContextBase",-1),$y=e("code",null,"message",-1),Yy=e("code",null,"Readonly",-1),Xy=e("code",null,"EBMessage",-1),Jy=e("h4",{id:"defined-in-54",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-54","aria-hidden":"true"},"#"),t(" Defined in")],-1),eb={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/subscription/SubscriptionTransformFunctionContext.ts#L7",target:"_blank",rel:"noopener noreferrer"},tb=e("hr",null,null,-1),nb=e("h3",{id:"subscriptiontransforminputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiontransforminputhook","aria-hidden":"true"},"#"),t(" SubscriptionTransformInputHook")],-1),sb=e("strong",null,"SubscriptionTransformInputHook",-1),lb=e("code",null,"ServiceClassType",-1),ob=e("code",null,"PayloadOutput",-1),ab=e("code",null,"ParamsOutput",-1),db=e("code",null,"PayloadInput",-1),ib=e("code",null,"ParamsInput",-1),cb=e("code",null,"this",-1),rb=e("code",null,"ServiceClassType",-1),ub=e("code",null,"context",-1),hb=e("code",null,"SubscriptionTransformFunctionContext",-1),pb=e("code",null,"payload",-1),_b=e("code",null,"Readonly",-1),fb=e("code",null,"PayloadInput",-1),gb=e("code",null,"parameter",-1),mb=e("code",null,"Readonly",-1),yb=e("code",null,"ParamsInput",-1),bb=e("code",null,"Promise",-1),xb=e("code",null,"parameter",-1),vb=e("code",null,"Readonly",-1),Sb=e("code",null,"ParamsOutput",-1),Tb=e("code",null,"payload",-1),kb=e("code",null,"Readonly",-1),Cb=e("code",null,"PayloadOutput",-1),Pb=a('<h4 id="type-parameters-26" tabindex="-1"><a class="header-anchor" href="#type-parameters-26" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>PayloadOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>PayloadInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-25" tabindex="-1"><a class="header-anchor" href="#type-declaration-25" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><h5 id="parameters-22" tabindex="-1"><a class="header-anchor" href="#parameters-22" aria-hidden="true">#</a> Parameters</h5>',5),wb=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Mb=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),Db=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),Eb={style:{"text-align":"left"}},Ib=e("code",null,"SubscriptionTransformFunctionContext",-1),Rb=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"PayloadInput"),t(">")])],-1),Fb=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"ParamsInput"),t(">")])],-1),Bb=a('<h5 id="returns-22" tabindex="-1"><a class="header-anchor" href="#returns-22" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><h4 id="defined-in-55" tabindex="-1"><a class="header-anchor" href="#defined-in-55" aria-hidden="true">#</a> Defined in</h4>',3),Nb={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/subscription/SubscriptionTransformInputHook.ts#L6",target:"_blank",rel:"noopener noreferrer"},Lb=e("hr",null,null,-1),Ob=e("h3",{id:"subscriptiontransformoutputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiontransformoutputhook","aria-hidden":"true"},"#"),t(" SubscriptionTransformOutputHook")],-1),Hb=e("strong",null,"SubscriptionTransformOutputHook",-1),jb=e("code",null,"ServiceClassType",-1),Ab=e("code",null,"MessageResultType",-1),qb=e("code",null,"MessageParamsType",-1),Gb=e("code",null,"ResponseOutput",-1),Vb=e("code",null,"this",-1),zb=e("code",null,"ServiceClassType",-1),Ub=e("code",null,"context",-1),Zb=e("code",null,"SubscriptionTransformFunctionContext",-1),Qb=e("code",null,"payload",-1),Wb=e("code",null,"Readonly",-1),Kb=e("code",null,"MessageResultType",-1),$b=e("code",null,"parameter",-1),Yb=e("code",null,"Readonly",-1),Xb=e("code",null,"MessageParamsType",-1),Jb=e("code",null,"Promise",-1),ex=e("code",null,"ResponseOutput",-1),tx=a('<h4 id="type-parameters-27" tabindex="-1"><a class="header-anchor" href="#type-parameters-27" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>MessageResultType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ResponseOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-26" tabindex="-1"><a class="header-anchor" href="#type-declaration-26" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>ResponseOutput</code>&gt;</p><p>This transform hook is executed after function output validation and AfterGuardHooks.</p><h5 id="parameters-23" tabindex="-1"><a class="header-anchor" href="#parameters-23" aria-hidden="true">#</a> Parameters</h5>',6),nx=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),sx=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),lx=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),ox={style:{"text-align":"left"}},ax=e("code",null,"SubscriptionTransformFunctionContext",-1),dx=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageResultType"),t(">")])],-1),ix=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageParamsType"),t(">")])],-1),cx=e("h5",{id:"returns-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-23","aria-hidden":"true"},"#"),t(" Returns")],-1),rx=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"ResponseOutput"),t(">")],-1),ux=e("h4",{id:"defined-in-56",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-56","aria-hidden":"true"},"#"),t(" Defined in")],-1),hx={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/subscription/SubscriptionTransformOutputHook.ts#L8",target:"_blank",rel:"noopener noreferrer"},px=e("h2",{id:"type-aliases-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-aliases-1","aria-hidden":"true"},"#"),t(" Type Aliases")],-1),_x=e("h3",{id:"command-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#command-2","aria-hidden":"true"},"#"),t(" Command")],-1),fx=e("strong",null,"Command",-1),gx=e("code",null,"PayloadType",-1),mx=e("code",null,"ParameterType",-1),yx=e("code",null,"correlationId",-1),bx=e("code",null,"CorrelationId",-1),xx=e("code",null,"messageType",-1),vx=e("code",null,"Command",-1),Sx=e("code",null,"payload",-1),Tx=e("code",null,"parameter",-1),kx=e("code",null,"ParameterType",-1),Cx=e("code",null,"payload",-1),Px=e("code",null,"PayloadType",-1),wx=e("code",null,"receiver",-1),Mx=e("code",null,"EBMessageAddress",-1),Dx=e("code",null,"sender",-1),Ex=e("code",null,"EBMessageAddress",-1),Ix=e("code",null,"EBMessageBase",-1),Rx=a('<p>Command is a event bridge message, which is emitted by sender to event bridge. The event bridge dispatches the event to the receiver. A command expects to get a response message from receiver back to sender.</p><p>Also if there are subscriptions which are matching given command, the event bridge also dispatches the command message to the subscriber(s).</p><p>BE AWARE: Subscribers should not respond with command responses if they are &quot;silent&quot; subscribers/listeners.</p><h4 id="type-parameters-28" tabindex="-1"><a class="header-anchor" href="#type-parameters-28" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-57" tabindex="-1"><a class="header-anchor" href="#defined-in-57" aria-hidden="true">#</a> Defined in</h4>',6),Fx={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/commandType/Command.ts#L17",target:"_blank",rel:"noopener noreferrer"},Bx=e("hr",null,null,-1),Nx=e("h3",{id:"commanddefinitionlist",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commanddefinitionlist","aria-hidden":"true"},"#"),t(" CommandDefinitionList")],-1),Lx=e("strong",null,"CommandDefinitionList",-1),Ox=e("code",null,"ServiceClassType",-1),Hx=e("code",null,"CommandDefinition",-1),jx=e("code",null,"ServiceClassType",-1),Ax=e("code",null,"CommandDefinitionMetadataBase",-1),qx=e("code",null,"any",-1),Gx=e("code",null,"any",-1),Vx=e("code",null,"any",-1),zx=e("code",null,"any",-1),Ux=e("code",null,"any",-1),Zx=e("code",null,"any",-1),Qx=a(`<p>Helper type for creating list of service commands to be passed as input to service class</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> userServiceCommands<span class="token operator">:</span> CommandDefinitionList<span class="token operator">&lt;</span>UserService<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span>signUp<span class="token punctuation">.</span><span class="token function">getDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="type-parameters-29" tabindex="-1"><a class="header-anchor" href="#type-parameters-29" aria-hidden="true">#</a> Type parameters</h4>`,3),Wx=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Kx=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),$x={style:{"text-align":"left"}},Yx=e("code",null,"ServiceClass",-1),Xx=e("h4",{id:"defined-in-58",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-58","aria-hidden":"true"},"#"),t(" Defined in")],-1),Jx={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/commandType/CommandDefinitionList.ts#L12",target:"_blank",rel:"noopener noreferrer"},ev=e("hr",null,null,-1),tv=e("h3",{id:"commanddefinitionmetadatabase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commanddefinitionmetadatabase","aria-hidden":"true"},"#"),t(" CommandDefinitionMetadataBase")],-1),nv=e("p",null,[t("Ƭ "),e("strong",null,"CommandDefinitionMetadataBase"),t(": "),e("code",null,"Object")],-1),sv=e("h4",{id:"type-declaration-27",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-27","aria-hidden":"true"},"#"),t(" Type declaration")],-1),lv=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ov=e("td",{style:{"text-align":"left"}},[e("code",null,"expose")],-1),av={style:{"text-align":"left"}},dv=e("code",null,"contentEncodingRequest?",-1),iv=e("code",null,"string",-1),cv=e("code",null,"contentEncodingResponse?",-1),rv=e("code",null,"string",-1),uv=e("code",null,"contentTypeRequest?",-1),hv=e("code",null,"ContentType",-1),pv=e("code",null,"contentTypeResponse?",-1),_v=e("code",null,"ContentType",-1),fv=e("code",null,"deprecated?",-1),gv=e("code",null,"boolean",-1),mv=e("code",null,"inputPayload?",-1),yv=e("code",null,"SchemaObject",-1),bv=e("code",null,"outputPayload?",-1),xv=e("code",null,"SchemaObject",-1),vv=e("code",null,"parameter?",-1),Sv=e("code",null,"SchemaObject",-1),Tv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingRequest?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),kv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingResponse?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Cv=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeRequest?")],-1),Pv={style:{"text-align":"left"}},wv=e("code",null,"ContentType",-1),Mv=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeResponse?")],-1),Dv={style:{"text-align":"left"}},Ev=e("code",null,"ContentType",-1),Iv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.deprecated?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")])],-1),Rv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.inputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Fv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.outputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Bv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.parameter?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Nv=e("h4",{id:"defined-in-59",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-59","aria-hidden":"true"},"#"),t(" Defined in")],-1),Lv={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/commandType/CommandDefinitionMetadataBase.ts#L5",target:"_blank",rel:"noopener noreferrer"},Ov=a(`<hr><h3 id="complete" tabindex="-1"><a class="header-anchor" href="#complete" aria-hidden="true">#</a> Complete</h3><p>Ƭ <strong>Complete</strong>&lt;<code>T</code>&gt;: { [P in keyof Required&lt;T&gt;]: Pick&lt;T, P&gt; extends Required&lt;Pick&lt;T, P&gt;&gt; ? T[P] : T[P] | undefined }</p><p>A helper which forces to provide all object keys, even if they are optional.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
 one<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
 two<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
 three<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">// without:</span>
<span class="token keyword">const</span> x<span class="token operator">:</span><span class="token constant">A</span> <span class="token operator">=</span> <span class="token punctuation">{</span> three<span class="token operator">:</span> <span class="token string">&#39;will work&#39;</span><span class="token punctuation">}</span>

<span class="token comment">// this will fail</span>
<span class="token keyword">const</span> y<span class="token operator">:</span>Complete<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span> three<span class="token operator">:</span> <span class="token string">&#39;will complain that one and two is missing&#39;</span><span class="token punctuation">}</span>
<span class="token comment">// needs to be like this:</span>
<span class="token keyword">const</span> z<span class="token operator">:</span>Complete<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span> one<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> two<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> three<span class="token operator">:</span> <span class="token string">&#39;will work&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="type-parameters-30" tabindex="-1"><a class="header-anchor" href="#type-parameters-30" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="defined-in-60" tabindex="-1"><a class="header-anchor" href="#defined-in-60" aria-hidden="true">#</a> Defined in</h4>`,9),Hv={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/Complete.ts#L20",target:"_blank",rel:"noopener noreferrer"},jv=a('<hr><h3 id="compressionmethod" tabindex="-1"><a class="header-anchor" href="#compressionmethod" aria-hidden="true">#</a> CompressionMethod</h3><p>Ƭ <strong>CompressionMethod</strong>: <code>&quot;gzip&quot;</code> | <code>&quot;deflat&quot;</code> | <code>&quot;br&quot;</code> | <code>undefined</code></p><h4 id="defined-in-61" tabindex="-1"><a class="header-anchor" href="#defined-in-61" aria-hidden="true">#</a> Defined in</h4>',4),Av={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/HttpServer/types/CompressionMethod.ts#L1",target:"_blank",rel:"noopener noreferrer"},qv=a('<hr><h3 id="contenttype" tabindex="-1"><a class="header-anchor" href="#contenttype" aria-hidden="true">#</a> ContentType</h3><p>Ƭ <strong>ContentType</strong>: <code>&quot;application/json&quot;</code> | <code>&quot;application/javascript&quot;</code> | <code>&quot;text/csv&quot;</code> | <code>&quot;text/css&quot;</code> | <code>&quot;text/html&quot;</code> | <code>&quot;text/javascript&quot;</code> | <code>&quot;text/markdown&quot;</code> | <code>&quot;text/plain&quot;</code> | <code>&quot;text/xml&quot;</code> | <code>string</code></p><p>List of content types for message payloads. If the content type is other than <code>application/json</code>, the message payload must be a string. It is up to the implementation to extract the content type from the original message and to convert or transform data.</p><h4 id="defined-in-62" tabindex="-1"><a class="header-anchor" href="#defined-in-62" aria-hidden="true">#</a> Defined in</h4>',5),Gv={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/ContentType.ts#L6",target:"_blank",rel:"noopener noreferrer"},Vv=e("hr",null,null,-1),zv=e("h3",{id:"contextbase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#contextbase","aria-hidden":"true"},"#"),t(" ContextBase")],-1),Uv=e("p",null,[t("Ƭ "),e("strong",null,"ContextBase"),t(": "),e("code",null,"Object")],-1),Zv=e("p",null,"The ContextBase provides is a basic type. Each context for command function, subscription function and all Hooks and transformers will have at least the properties of this type.",-1),Qv=e("h4",{id:"type-declaration-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-28","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Wv=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Kv=e("td",{style:{"text-align":"left"}},[e("code",null,"configs")],-1),$v={style:{"text-align":"left"}},Yv=e("code",null,"getConfig",-1),Xv=e("code",null,"ConfigGetterFunction",-1),Jv=e("code",null,"removeConfig",-1),e2=e("code",null,"ConfigDeleteFunction",-1),t2=e("code",null,"setConfig",-1),n2=e("code",null,"ConfigSetterFunction",-1),s2=e("td",{style:{"text-align":"left"}},"the config store",-1),l2=e("td",{style:{"text-align":"left"}},[e("code",null,"configs.getConfig")],-1),o2={style:{"text-align":"left"}},a2=e("code",null,"ConfigGetterFunction",-1),d2=e("td",{style:{"text-align":"left"}},"get a config value from the config store",-1),i2=e("td",{style:{"text-align":"left"}},[e("code",null,"configs.removeConfig")],-1),c2={style:{"text-align":"left"}},r2=e("code",null,"ConfigDeleteFunction",-1),u2=e("td",{style:{"text-align":"left"}},"delete a config value from the config store",-1),h2=e("td",{style:{"text-align":"left"}},[e("code",null,"configs.setConfig")],-1),p2={style:{"text-align":"left"}},_2=e("code",null,"ConfigSetterFunction",-1),f2=e("td",{style:{"text-align":"left"}},"set a config value in the config store",-1),g2=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),m2={style:{"text-align":"left"}},y2=e("code",null,"Logger",-1),b2=e("td",{style:{"text-align":"left"}},"the logger instance",-1),x2=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets")],-1),v2={style:{"text-align":"left"}},S2=e("code",null,"getSecret",-1),T2=e("code",null,"SecretGetterFunction",-1),k2=e("code",null,"removeSecret",-1),C2=e("code",null,"SecretDeleteFunction",-1),P2=e("code",null,"setSecret",-1),w2=e("code",null,"SecretSetterFunction",-1),M2=e("td",{style:{"text-align":"left"}},"the secret store",-1),D2=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets.getSecret")],-1),E2={style:{"text-align":"left"}},I2=e("code",null,"SecretGetterFunction",-1),R2=e("td",{style:{"text-align":"left"}},"get a secret from the secret store",-1),F2=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets.removeSecret")],-1),B2={style:{"text-align":"left"}},N2=e("code",null,"SecretDeleteFunction",-1),L2=e("td",{style:{"text-align":"left"}},"delete a secret from the secret store",-1),O2=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets.setSecret")],-1),H2={style:{"text-align":"left"}},j2=e("code",null,"SecretSetterFunction",-1),A2=e("td",{style:{"text-align":"left"}},"set a secret in the secret store",-1),q2=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"Context"),t(" | "),e("code",null,"undefined"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")]),e("td",{style:{"text-align":"left"}},"wrap given function in an opentelemetry active span")],-1),G2=e("td",{style:{"text-align":"left"}},[e("code",null,"states")],-1),V2={style:{"text-align":"left"}},z2=e("code",null,"getState",-1),U2=e("code",null,"StateGetterFunction",-1),Z2=e("code",null,"removeState",-1),Q2=e("code",null,"StateDeleteFunction",-1),W2=e("code",null,"setState",-1),K2=e("code",null,"StateSetterFunction",-1),$2=e("td",{style:{"text-align":"left"}},"the state store",-1),Y2=e("td",{style:{"text-align":"left"}},[e("code",null,"states.getState")],-1),X2={style:{"text-align":"left"}},J2=e("code",null,"StateGetterFunction",-1),eS=e("td",{style:{"text-align":"left"}},"get a state value from the state store",-1),tS=e("td",{style:{"text-align":"left"}},[e("code",null,"states.removeState")],-1),nS={style:{"text-align":"left"}},sS=e("code",null,"StateDeleteFunction",-1),lS=e("td",{style:{"text-align":"left"}},"delete a state value from the state store",-1),oS=e("td",{style:{"text-align":"left"}},[e("code",null,"states.setState")],-1),aS={style:{"text-align":"left"}},dS=e("code",null,"StateSetterFunction",-1),iS=e("td",{style:{"text-align":"left"}},"set a state value in the state store",-1),cS=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")]),e("td",{style:{"text-align":"left"}},"wrap given function in an opentelemetry span")],-1),rS=e("h4",{id:"defined-in-63",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-63","aria-hidden":"true"},"#"),t(" Defined in")],-1),uS={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/ContextBase.ts#L12",target:"_blank",rel:"noopener noreferrer"},hS=e("hr",null,null,-1),pS=e("h3",{id:"correlationid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#correlationid","aria-hidden":"true"},"#"),t(" CorrelationId")],-1),_S=e("p",null,[t("Ƭ "),e("strong",null,"CorrelationId"),t(": "),e("code",null,"string")],-1),fS=e("p",null,"the correlation id links the command invocation message with the command response message",-1),gS=e("h4",{id:"defined-in-64",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-64","aria-hidden":"true"},"#"),t(" Defined in")],-1),mS={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/CorrelationId.ts#L2",target:"_blank",rel:"noopener noreferrer"},yS=e("hr",null,null,-1),bS=e("h3",{id:"custommessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#custommessage","aria-hidden":"true"},"#"),t(" CustomMessage")],-1),xS=e("strong",null,"CustomMessage",-1),vS=e("code",null,"Payload",-1),SS=e("code",null,"eventName",-1),TS=e("code",null,"string",-1),kS=e("code",null,"messageType",-1),CS=e("code",null,"CustomMessage",-1),PS=e("code",null,"payload?",-1),wS=e("code",null,"Payload",-1),MS=e("code",null,"receiver?",-1),DS=e("code",null,"EBMessageAddress",-1),ES=e("code",null,"sender",-1),IS=e("code",null,"EBMessageAddress",-1),RS=e("code",null,"EBMessageBase",-1),FS=a('<p>A custom message is a message which can be used to pass business information. The producer emits the message without knowledge about any consumer. The producer does not expect a response from a consumer.</p><h4 id="type-parameters-31" tabindex="-1"><a class="header-anchor" href="#type-parameters-31" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-65" tabindex="-1"><a class="header-anchor" href="#defined-in-65" aria-hidden="true">#</a> Defined in</h4>',4),BS={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/CustomMessage.ts#L10",target:"_blank",rel:"noopener noreferrer"},NS=a('<hr><h3 id="defaultconfigstoreconfig" tabindex="-1"><a class="header-anchor" href="#defaultconfigstoreconfig" aria-hidden="true">#</a> DefaultConfigStoreConfig</h3><p>Ƭ <strong>DefaultConfigStoreConfig</strong>: <code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</p><h4 id="defined-in-66" tabindex="-1"><a class="header-anchor" href="#defined-in-66" aria-hidden="true">#</a> Defined in</h4>',4),LS={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/DefaultConfigStore/types/DefaultConfigStoreConfig.ts#L1",target:"_blank",rel:"noopener noreferrer"},OS=a('<hr><h3 id="defaulteventbridgeconfig" tabindex="-1"><a class="header-anchor" href="#defaulteventbridgeconfig" aria-hidden="true">#</a> DefaultEventBridgeConfig</h3><p>Ƭ <strong>DefaultEventBridgeConfig</strong>: <code>Object</code></p><p>The configuration for the DefaultEventBridge.</p><h4 id="type-declaration-29" tabindex="-1"><a class="header-anchor" href="#type-declaration-29" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>logWarnOnMessagesWithoutReceiver?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Log warnings on messages which are emitted, but could not delivered to at least one receiver</td></tr></tbody></table><h4 id="defined-in-67" tabindex="-1"><a class="header-anchor" href="#defined-in-67" aria-hidden="true">#</a> Defined in</h4>',7),HS={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/DefaultEventBridge/types/DefaultEventBridgeConfig.ts#L4",target:"_blank",rel:"noopener noreferrer"},jS=a('<hr><h3 id="defaultsecretstoreconfig" tabindex="-1"><a class="header-anchor" href="#defaultsecretstoreconfig" aria-hidden="true">#</a> DefaultSecretStoreConfig</h3><p>Ƭ <strong>DefaultSecretStoreConfig</strong>: <code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</p><h4 id="defined-in-68" tabindex="-1"><a class="header-anchor" href="#defined-in-68" aria-hidden="true">#</a> Defined in</h4>',4),AS={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/DefaultSecretStore/types/DefaultSecretStoreConfig.ts#L1",target:"_blank",rel:"noopener noreferrer"},qS=a('<hr><h3 id="defaultstatestoreconfig" tabindex="-1"><a class="header-anchor" href="#defaultstatestoreconfig" aria-hidden="true">#</a> DefaultStateStoreConfig</h3><p>Ƭ <strong>DefaultStateStoreConfig</strong>: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><h4 id="defined-in-69" tabindex="-1"><a class="header-anchor" href="#defined-in-69" aria-hidden="true">#</a> Defined in</h4>',4),GS={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/DefaultStateStore/types/DefaultStateStoreConfig.ts#L1",target:"_blank",rel:"noopener noreferrer"},VS=a('<hr><h3 id="definitioneventbridgeconfig" tabindex="-1"><a class="header-anchor" href="#definitioneventbridgeconfig" aria-hidden="true">#</a> DefinitionEventBridgeConfig</h3><p>Ƭ <strong>DefinitionEventBridgeConfig</strong>: <code>Object</code></p><p>Settings and advices for the event bridge, which are set in the command or subscription builder. The properties are advices and hints. It depends on the used event bridge implementation and underlaying message broker, if a specific property can be respected.</p><h4 id="type-declaration-30" tabindex="-1"><a class="header-anchor" href="#type-declaration-30" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>autoacknowledge?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Send the acknowledge to message broker as soon as the message arrives - defaults to true for commands - defaults to false for subscriptions</td></tr><tr><td style="text-align:left;"><code>durable?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Advise the underlaying message broker to store messages if no consumer is available. Messages will be send as soon as the service is able to consume.</td></tr><tr><td style="text-align:left;"><code>shared?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">If set to true, the event bridge is adviced to deliver one message to at least one consumer instance. True is the default value. If set to false, the event bridge is adviced to deliver one message to all consumer instances. Use case: Receiving Info of message, which need to be passed to all instance to keep information in sync. In serverless environments, this flag should not have any effect <strong><code>Default</code></strong> true</td></tr></tbody></table><h4 id="defined-in-70" tabindex="-1"><a class="header-anchor" href="#defined-in-70" aria-hidden="true">#</a> Defined in</h4>',7),zS={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/DefinitionEventBridgeConfig.ts#L6",target:"_blank",rel:"noopener noreferrer"},US=e("hr",null,null,-1),ZS=e("h3",{id:"ebmessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessage","aria-hidden":"true"},"#"),t(" EBMessage")],-1),QS=e("strong",null,"EBMessage",-1),WS=e("code",null,"Command",-1),KS=e("code",null,"CommandResponse",-1),$S=e("code",null,"InfoMessage",-1),YS=e("code",null,"CustomMessage",-1),XS=e("p",null,"EBMessage is some message which is handled by the event bridge.",-1),JS=e("h4",{id:"defined-in-71",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-71","aria-hidden":"true"},"#"),t(" Defined in")],-1),e4={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/EBMessage.ts#L8",target:"_blank",rel:"noopener noreferrer"},t4=a('<hr><h3 id="ebmessageaddress" tabindex="-1"><a class="header-anchor" href="#ebmessageaddress" aria-hidden="true">#</a> EBMessageAddress</h3><p>Ƭ <strong>EBMessageAddress</strong>: <code>Object</code></p><p>A event bridge message address describes the sender or receiver of a message.</p><h4 id="type-declaration-31" tabindex="-1"><a class="header-anchor" href="#type-declaration-31" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>serviceName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the name of the service</td></tr><tr><td style="text-align:left;"><code>serviceTarget</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the name of the command or subscription</td></tr><tr><td style="text-align:left;"><code>serviceVersion</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the version of the service</td></tr></tbody></table><h4 id="defined-in-72" tabindex="-1"><a class="header-anchor" href="#defined-in-72" aria-hidden="true">#</a> Defined in</h4>',7),n4={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/EBMessageAddress.ts#L4",target:"_blank",rel:"noopener noreferrer"},s4=e("hr",null,null,-1),l4=e("h3",{id:"ebmessagebase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessagebase","aria-hidden":"true"},"#"),t(" EBMessageBase")],-1),o4=e("p",null,[t("Ƭ "),e("strong",null,"EBMessageBase"),t(": "),e("code",null,"Object")],-1),a4=e("p",null,"Default fields which are part of any purista message",-1),d4=e("h4",{id:"type-declaration-32",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-32","aria-hidden":"true"},"#"),t(" Type declaration")],-1),i4=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),c4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content encoding of message payload")],-1),r4=e("td",{style:{"text-align":"left"}},[e("code",null,"contentType")],-1),u4={style:{"text-align":"left"}},h4=e("code",null,"ContentType",-1),p4=e("td",{style:{"text-align":"left"}},"content type of message payload",-1),_4=e("td",{style:{"text-align":"left"}},[e("code",null,"correlationId?")],-1),f4={style:{"text-align":"left"}},g4=e("code",null,"CorrelationId",-1),m4=e("td",{style:{"text-align":"left"}},"correlation id to know which command response referrs to which command",-1),y4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name for this message")],-1),b4=e("td",{style:{"text-align":"left"}},[e("code",null,"id")],-1),x4={style:{"text-align":"left"}},v4=e("code",null,"EBMessageId",-1),S4=e("td",{style:{"text-align":"left"}},"global unique id of message",-1),T4=e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId")],-1),k4={style:{"text-align":"left"}},C4=e("code",null,"InstanceId",-1),P4=e("td",{style:{"text-align":"left"}},"instance id of eventbridge which was creating the message",-1),w4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"otp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"stringified Opentelemetry parent trace id")],-1),M4=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),D4={style:{"text-align":"left"}},E4=e("code",null,"PrincipalId",-1),I4=e("td",{style:{"text-align":"left"}},"principal id",-1),R4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"timestamp of message creation time")],-1),F4=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId?")],-1),B4={style:{"text-align":"left"}},N4=e("code",null,"TraceId",-1),L4=e("td",{style:{"text-align":"left"}},"trace id of message",-1),O4=e("h4",{id:"defined-in-73",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-73","aria-hidden":"true"},"#"),t(" Defined in")],-1),H4={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/EBMessageBase.ts#L11",target:"_blank",rel:"noopener noreferrer"},j4=e("hr",null,null,-1),A4=e("h3",{id:"ebmessageid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessageid","aria-hidden":"true"},"#"),t(" EBMessageId")],-1),q4=e("p",null,[t("Ƭ "),e("strong",null,"EBMessageId"),t(": "),e("code",null,"string")],-1),G4=e("p",null,"Unique id of the event bridge message",-1),V4=e("h4",{id:"defined-in-74",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-74","aria-hidden":"true"},"#"),t(" Defined in")],-1),z4={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/EBMessageId.ts#L4",target:"_blank",rel:"noopener noreferrer"},U4=e("hr",null,null,-1),Z4=e("h3",{id:"emitcustommessagefunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#emitcustommessagefunction","aria-hidden":"true"},"#"),t(" EmitCustomMessageFunction")],-1),Q4=e("strong",null,"EmitCustomMessageFunction",-1),W4=e("code",null,"eventName",-1),K4=e("code",null,"string",-1),$4=e("code",null,"payload?",-1),Y4=e("code",null,"Payload",-1),X4=e("code",null,"contentType?",-1),J4=e("code",null,"ContentType",-1),e6=e("code",null,"contentEncoding?",-1),t6=e("code",null,"string",-1),n6=e("code",null,"Promise",-1),s6=e("code",null,"void",-1),l6=a(`<h4 id="type-declaration-33" tabindex="-1"><a class="header-anchor" href="#type-declaration-33" aria-hidden="true">#</a> Type declaration</h4><p>▸ &lt;<code>Payload</code>&gt;(<code>eventName</code>, <code>payload?</code>, <code>contentType?</code>, <code>contentEncoding?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Emits the given payload as custom message with the given event name.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">await</span> <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;my-custom-event-name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> the<span class="token operator">:</span> <span class="token string">&#39;payload&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="type-parameters-32" tabindex="-1"><a class="header-anchor" href="#type-parameters-32" aria-hidden="true">#</a> Type parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="parameters-24" tabindex="-1"><a class="header-anchor" href="#parameters-24" aria-hidden="true">#</a> Parameters</h5>`,8),o6=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),a6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),d6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Payload")])],-1),i6=e("td",{style:{"text-align":"left"}},[e("code",null,"contentType?")],-1),c6={style:{"text-align":"left"}},r6=e("code",null,"ContentType",-1),u6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),h6=e("h5",{id:"returns-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-24","aria-hidden":"true"},"#"),t(" Returns")],-1),p6=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),_6=e("h4",{id:"defined-in-75",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-75","aria-hidden":"true"},"#"),t(" Defined in")],-1),f6={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/EmitCustomMessageFunction.ts#L10",target:"_blank",rel:"noopener noreferrer"},g6=e("hr",null,null,-1),m6=e("h3",{id:"errorresponsepayload",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#errorresponsepayload","aria-hidden":"true"},"#"),t(" ErrorResponsePayload")],-1),y6=e("p",null,[t("Ƭ "),e("strong",null,"ErrorResponsePayload"),t(": "),e("code",null,"Object")],-1),b6=e("p",null,"Error message payload",-1),x6=e("h4",{id:"type-declaration-34",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-34","aria-hidden":"true"},"#"),t(" Type declaration")],-1),v6=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),S6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"data?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"addition data")],-1),T6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"message")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"a human readable error message")],-1),k6=e("td",{style:{"text-align":"left"}},[e("code",null,"status")],-1),C6={style:{"text-align":"left"}},P6=e("code",null,"StatusCode",-1),w6=e("td",{style:{"text-align":"left"}},"the error status code",-1),M6=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId?")],-1),D6={style:{"text-align":"left"}},E6=e("code",null,"TraceId",-1),I6=e("td",{style:{"text-align":"left"}},"the trace if of the request",-1),R6=e("h4",{id:"defined-in-76",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-76","aria-hidden":"true"},"#"),t(" Defined in")],-1),F6={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/ErrorResponsePayload.ts#L7",target:"_blank",rel:"noopener noreferrer"},B6=a('<hr><h3 id="eventbridgeconfig" tabindex="-1"><a class="header-anchor" href="#eventbridgeconfig" aria-hidden="true">#</a> EventBridgeConfig</h3><p>Ƭ <strong>EventBridgeConfig</strong>&lt;<code>CustomConfig</code>&gt;: <code>Object</code></p><p>The config object for an event bridge. Every event bridge implementation must use this type for configuration.</p><h4 id="type-parameters-33" tabindex="-1"><a class="header-anchor" href="#type-parameters-33" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>CustomConfig</code></td></tr></tbody></table><h4 id="type-declaration-35" tabindex="-1"><a class="header-anchor" href="#type-declaration-35" aria-hidden="true">#</a> Type declaration</h4>',7),N6=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),L6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"CustomConfig")]),e("td",{style:{"text-align":"left"}},"Specific configuration settings for the event bridge depending on the used message broker")],-1),O6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"defaultCommandTimeout?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"Overwrite the hardcoded default timeout of command invocations")],-1),H6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The instance id of the event bridge. If not set, a id will generated each time a instance is created. Use this if there is a need to always have the same instance id.")],-1),j6=e("td",{style:{"text-align":"left"}},[e("code",null,"logger?")],-1),A6={style:{"text-align":"left"}},q6=e("code",null,"Logger",-1),G6=e("td",{style:{"text-align":"left"}},"A logger instance",-1),V6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"spanProcessor?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SpanProcessor")]),e("td",{style:{"text-align":"left"}},"A OpenTelemetry span processor")],-1),z6=e("h4",{id:"defined-in-77",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-77","aria-hidden":"true"},"#"),t(" Defined in")],-1),U6={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/EventBridge/types/EventBridgeConfig.ts#L10",target:"_blank",rel:"noopener noreferrer"},Z6=e("hr",null,null,-1),Q6=e("h3",{id:"eventbridgeevents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#eventbridgeevents","aria-hidden":"true"},"#"),t(" EventBridgeEvents")],-1),W6=e("strong",null,"EventBridgeEvents",-1),K6=e("code",null,"EventBridgeEventsBasic",-1),$6=e("code",null,"addPrefixToObject",-1),Y6=e("code",null,"CustomEvents",-1),X6=e("code",null,'"adapter-"',-1),J6=e("h4",{id:"defined-in-78",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-78","aria-hidden":"true"},"#"),t(" Defined in")],-1),e3={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/EventBridge/types/EventBridgeEvents.ts#L30",target:"_blank",rel:"noopener noreferrer"},t3=a('<hr><h3 id="eventkey" tabindex="-1"><a class="header-anchor" href="#eventkey" aria-hidden="true">#</a> EventKey</h3><p>Ƭ <strong>EventKey</strong>&lt;<code>T</code>&gt;: <code>string</code> &amp; keyof <code>T</code></p><h4 id="type-parameters-34" tabindex="-1"><a class="header-anchor" href="#type-parameters-34" aria-hidden="true">#</a> Type parameters</h4>',4),n3=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),s3=e("td",{style:{"text-align":"left"}},[e("code",null,"T")],-1),l3={style:{"text-align":"left"}},o3=e("code",null,"EventMap",-1),a3=e("h4",{id:"defined-in-79",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-79","aria-hidden":"true"},"#"),t(" Defined in")],-1),d3={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/GenericEventEmitter.ts#L5",target:"_blank",rel:"noopener noreferrer"},i3=a('<hr><h3 id="eventmap" tabindex="-1"><a class="header-anchor" href="#eventmap" aria-hidden="true">#</a> EventMap</h3><p>Ƭ <strong>EventMap</strong>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p><h4 id="defined-in-80" tabindex="-1"><a class="header-anchor" href="#defined-in-80" aria-hidden="true">#</a> Defined in</h4>',4),c3={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/GenericEventEmitter.ts#L3",target:"_blank",rel:"noopener noreferrer"},r3=e("hr",null,null,-1),u3=e("h3",{id:"httpexposedservicemeta",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#httpexposedservicemeta","aria-hidden":"true"},"#"),t(" HttpExposedServiceMeta")],-1),h3=e("strong",null,"HttpExposedServiceMeta",-1),p3=e("code",null,"ParameterType",-1),_3=e("code",null,"CommandDefinitionMetadataBase",-1),f3=e("code",null,"expose",-1),g3=e("code",null,"http",-1),m3=e("code",null,"method",-1),y3=e("code",null,'"GET"',-1),b3=e("code",null,'"POST"',-1),x3=e("code",null,'"PATCH"',-1),v3=e("code",null,'"PUT"',-1),S3=e("code",null,'"DELETE"',-1),T3=e("code",null,"openApi?",-1),k3=e("code",null,"additionalStatusCodes?",-1),C3=e("code",null,"StatusCode",-1),P3=e("code",null,"description",-1),w3=e("code",null,"string",-1),M3=e("code",null,"isSecure",-1),D3=e("code",null,"boolean",-1),E3=e("code",null,"operationId?",-1),I3=e("code",null,"string",-1),R3=e("code",null,"query?",-1),F3=e("code",null,"QueryParameter",-1),B3=e("code",null,"ParameterType",-1),N3=e("code",null,"summary",-1),L3=e("code",null,"string",-1),O3=e("code",null,"tags?",-1),H3=e("code",null,"string",-1),j3=e("code",null,"path",-1),A3=e("code",null,"string",-1),q3=a('<h4 id="type-parameters-35" tabindex="-1"><a class="header-anchor" href="#type-parameters-35" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;">{}</td></tr></tbody></table><h4 id="defined-in-81" tabindex="-1"><a class="header-anchor" href="#defined-in-81" aria-hidden="true">#</a> Defined in</h4>',3),G3={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/HttpServer/types/HttpExposedServiceMeta.ts#L4",target:"_blank",rel:"noopener noreferrer"},V3=e("hr",null,null,-1),z3=e("h3",{id:"infoinvoketimeout",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoinvoketimeout","aria-hidden":"true"},"#"),t(" InfoInvokeTimeout")],-1),U3=e("strong",null,"InfoInvokeTimeout",-1),Z3=e("code",null,"messageType",-1),Q3=e("code",null,"InfoInvokeTimeout",-1),W3=e("code",null,"InfoServiceBase",-1),K3=e("h4",{id:"defined-in-82",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-82","aria-hidden":"true"},"#"),t(" Defined in")],-1),$3={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/infoType/InfoInvokeTimeout.ts#L22",target:"_blank",rel:"noopener noreferrer"},Y3=e("hr",null,null,-1),X3=e("h3",{id:"infoinvoketimeoutpayload",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoinvoketimeoutpayload","aria-hidden":"true"},"#"),t(" InfoInvokeTimeoutPayload")],-1),J3=e("p",null,[t("Ƭ "),e("strong",null,"InfoInvokeTimeoutPayload"),t(": "),e("code",null,"Object")],-1),eT=e("h4",{id:"type-declaration-36",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-36","aria-hidden":"true"},"#"),t(" Type declaration")],-1),tT=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),nT=e("td",{style:{"text-align":"left"}},[e("code",null,"correlationId")],-1),sT={style:{"text-align":"left"}},lT=e("code",null,"CorrelationId",-1),oT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"serviceName"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceTarget"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceVersion"),t(": "),e("code",null,"string"),t(" }")])],-1),aT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),dT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),iT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),cT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"serviceName"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceTarget"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceVersion"),t(": "),e("code",null,"string"),t(" }")])],-1),rT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),uT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),hT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),pT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")])],-1),_T=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId")],-1),fT={style:{"text-align":"left"}},gT=e("code",null,"TraceId",-1),mT=e("h4",{id:"defined-in-83",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-83","aria-hidden":"true"},"#"),t(" Defined in")],-1),yT={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/infoType/InfoInvokeTimeout.ts#L6",target:"_blank",rel:"noopener noreferrer"},bT=e("hr",null,null,-1),xT=e("h3",{id:"infomessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infomessage","aria-hidden":"true"},"#"),t(" InfoMessage")],-1),vT=e("strong",null,"InfoMessage",-1),ST=e("code",null,"InfoServiceDrain",-1),TT=e("code",null,"InfoServiceFunctionAdded",-1),kT=e("code",null,"InfoServiceInit",-1),CT=e("code",null,"InfoServiceNotReady",-1),PT=e("code",null,"InfoServiceReady",-1),wT=e("code",null,"InfoServiceShutdown",-1),MT=e("code",null,"InfoInvokeTimeout",-1),DT=e("code",null,"InfoSubscriptionError",-1),ET=e("h4",{id:"defined-in-84",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-84","aria-hidden":"true"},"#"),t(" Defined in")],-1),IT={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/infoType/InfoMessage.ts#L11",target:"_blank",rel:"noopener noreferrer"},RT=e("hr",null,null,-1),FT=e("h3",{id:"infomessagetype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infomessagetype","aria-hidden":"true"},"#"),t(" InfoMessageType")],-1),BT=e("strong",null,"InfoMessageType",-1),NT=e("code",null,"InfoServiceDrain",-1),LT=e("code",null,"InfoServiceFunctionAdded",-1),OT=e("code",null,"InfoServiceInit",-1),HT=e("code",null,"InfoServiceNotReady",-1),jT=e("code",null,"InfoServiceReady",-1),AT=e("code",null,"InfoServiceShutdown",-1),qT=e("code",null,"InfoInvokeTimeout",-1),GT=e("code",null,"InfoSubscriptionError",-1),VT=e("h4",{id:"defined-in-85",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-85","aria-hidden":"true"},"#"),t(" Defined in")],-1),zT={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/infoType/InfoMessage.ts#L21",target:"_blank",rel:"noopener noreferrer"},UT=e("hr",null,null,-1),ZT=e("h3",{id:"infoservicebase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicebase","aria-hidden":"true"},"#"),t(" InfoServiceBase")],-1),QT=e("strong",null,"InfoServiceBase",-1),WT=e("code",null,"contentEncoding",-1),KT=e("code",null,'"utf-8"',-1),$T=e("code",null,"contentType",-1),YT=e("code",null,'"application/json"',-1),XT=e("code",null,"payload?",-1),JT=e("code",null,"unknown",-1),ek=e("code",null,"sender",-1),tk=e("code",null,"serviceName",-1),nk=e("code",null,"string",-1),sk=e("code",null,"serviceTarget",-1),lk=e("code",null,"string",-1),ok=e("code",null,"serviceVersion",-1),ak=e("code",null,"string",-1),dk=e("code",null,"EBMessageBase",-1),ik=e("h4",{id:"defined-in-86",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-86","aria-hidden":"true"},"#"),t(" Defined in")],-1),ck={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/infoType/InfoServiceBase.ts#L3",target:"_blank",rel:"noopener noreferrer"},rk=e("hr",null,null,-1),uk=e("h3",{id:"infoservicedrain",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicedrain","aria-hidden":"true"},"#"),t(" InfoServiceDrain")],-1),hk=e("strong",null,"InfoServiceDrain",-1),pk=e("code",null,"messageType",-1),_k=e("code",null,"InfoServiceDrain",-1),fk=e("code",null,"InfoServiceBase",-1),gk=e("h4",{id:"defined-in-87",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-87","aria-hidden":"true"},"#"),t(" Defined in")],-1),mk={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/infoType/InfoServiceDrain.ts#L4",target:"_blank",rel:"noopener noreferrer"},yk=e("hr",null,null,-1),bk=e("h3",{id:"infoservicefunctionadded",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicefunctionadded","aria-hidden":"true"},"#"),t(" InfoServiceFunctionAdded")],-1),xk=e("strong",null,"InfoServiceFunctionAdded",-1),vk=e("code",null,"messageType",-1),Sk=e("code",null,"InfoServiceFunctionAdded",-1),Tk=e("code",null,"InfoServiceBase",-1),kk=e("h4",{id:"defined-in-88",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-88","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ck={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/infoType/InfoServiceFunctionAdded.ts#L4",target:"_blank",rel:"noopener noreferrer"},Pk=e("hr",null,null,-1),wk=e("h3",{id:"infoserviceinit",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoserviceinit","aria-hidden":"true"},"#"),t(" InfoServiceInit")],-1),Mk=e("strong",null,"InfoServiceInit",-1),Dk=e("code",null,"messageType",-1),Ek=e("code",null,"InfoServiceInit",-1),Ik=e("code",null,"InfoServiceBase",-1),Rk=e("h4",{id:"defined-in-89",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-89","aria-hidden":"true"},"#"),t(" Defined in")],-1),Fk={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/infoType/InfoServiceInit.ts#L4",target:"_blank",rel:"noopener noreferrer"},Bk=e("hr",null,null,-1),Nk=e("h3",{id:"infoservicenotready",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicenotready","aria-hidden":"true"},"#"),t(" InfoServiceNotReady")],-1),Lk=e("strong",null,"InfoServiceNotReady",-1),Ok=e("code",null,"messageType",-1),Hk=e("code",null,"InfoServiceNotReady",-1),jk=e("code",null,"InfoServiceBase",-1),Ak=e("h4",{id:"defined-in-90",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-90","aria-hidden":"true"},"#"),t(" Defined in")],-1),qk={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/infoType/InfoServiceNotReady.ts#L4",target:"_blank",rel:"noopener noreferrer"},Gk=e("hr",null,null,-1),Vk=e("h3",{id:"infoserviceready",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoserviceready","aria-hidden":"true"},"#"),t(" InfoServiceReady")],-1),zk=e("strong",null,"InfoServiceReady",-1),Uk=e("code",null,"messageType",-1),Zk=e("code",null,"InfoServiceReady",-1),Qk=e("code",null,"InfoServiceBase",-1),Wk=e("h4",{id:"defined-in-91",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-91","aria-hidden":"true"},"#"),t(" Defined in")],-1),Kk={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/infoType/InfoServiceReady.ts#L4",target:"_blank",rel:"noopener noreferrer"},$k=e("hr",null,null,-1),Yk=e("h3",{id:"infoserviceshutdown",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoserviceshutdown","aria-hidden":"true"},"#"),t(" InfoServiceShutdown")],-1),Xk=e("strong",null,"InfoServiceShutdown",-1),Jk=e("code",null,"messageType",-1),e5=e("code",null,"InfoServiceShutdown",-1),t5=e("code",null,"InfoServiceBase",-1),n5=e("h4",{id:"defined-in-92",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-92","aria-hidden":"true"},"#"),t(" Defined in")],-1),s5={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/infoType/InfoServiceShutdown.ts#L4",target:"_blank",rel:"noopener noreferrer"},l5=e("hr",null,null,-1),o5=e("h3",{id:"infosubscriptionerror",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infosubscriptionerror","aria-hidden":"true"},"#"),t(" InfoSubscriptionError")],-1),a5=e("strong",null,"InfoSubscriptionError",-1),d5=e("code",null,"messageType",-1),i5=e("code",null,"InfoSubscriptionError",-1),c5=e("code",null,"InfoServiceBase",-1),r5=e("h4",{id:"defined-in-93",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-93","aria-hidden":"true"},"#"),t(" Defined in")],-1),u5={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/infoType/InfoSubscriptionError.ts#L4",target:"_blank",rel:"noopener noreferrer"},h5=e("hr",null,null,-1),p5=e("h3",{id:"instanceid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#instanceid","aria-hidden":"true"},"#"),t(" InstanceId")],-1),_5=e("p",null,[t("Ƭ "),e("strong",null,"InstanceId"),t(": "),e("code",null,"string")],-1),f5=e("p",null,"the instance id of the event bridge",-1),g5=e("h4",{id:"defined-in-94",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-94","aria-hidden":"true"},"#"),t(" Defined in")],-1),m5={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/InstanceId.ts#L2",target:"_blank",rel:"noopener noreferrer"},y5=a('<hr><h3 id="logfnparamtype" tabindex="-1"><a class="header-anchor" href="#logfnparamtype" aria-hidden="true">#</a> LogFnParamType</h3><p>Ƭ <strong>LogFnParamType</strong>: [<code>unknown</code>, string?, ...any] | [<code>string</code>, ...any]</p><h4 id="defined-in-95" tabindex="-1"><a class="header-anchor" href="#defined-in-95" aria-hidden="true">#</a> Defined in</h4>',4),b5={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/Logger.ts#L17",target:"_blank",rel:"noopener noreferrer"},x5=a('<hr><h3 id="loglevelname" tabindex="-1"><a class="header-anchor" href="#loglevelname" aria-hidden="true">#</a> LogLevelName</h3><p>Ƭ <strong>LogLevelName</strong>: <code>&quot;info&quot;</code> | <code>&quot;error&quot;</code> | <code>&quot;warn&quot;</code> | <code>&quot;debug&quot;</code> | <code>&quot;trace&quot;</code> | <code>&quot;fatal&quot;</code></p><h4 id="defined-in-96" tabindex="-1"><a class="header-anchor" href="#defined-in-96" aria-hidden="true">#</a> Defined in</h4>',4),v5={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/LogLevelName.ts#L1",target:"_blank",rel:"noopener noreferrer"},S5=e("hr",null,null,-1),T5=e("h3",{id:"loggeroptions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#loggeroptions","aria-hidden":"true"},"#"),t(" LoggerOptions")],-1),k5=e("p",null,[t("Ƭ "),e("strong",null,"LoggerOptions"),t(": "),e("code",null,"Object")],-1),C5=e("h4",{id:"type-declaration-37",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-37","aria-hidden":"true"},"#"),t(" Type declaration")],-1),P5=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),w5=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hostname?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),M5=e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId?")],-1),D5={style:{"text-align":"left"}},E5=e("code",null,"InstanceId",-1),I5=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"name?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),R5=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),F5={style:{"text-align":"left"}},B5=e("code",null,"PrincipalId",-1),N5=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"puristaVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),L5=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),O5=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),H5=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),j5=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId?")],-1),A5={style:{"text-align":"left"}},q5=e("code",null,"TraceId",-1),G5=e("h4",{id:"defined-in-97",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-97","aria-hidden":"true"},"#"),t(" Defined in")],-1),V5={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/Logger.ts#L5",target:"_blank",rel:"noopener noreferrer"},z5=a('<hr><h3 id="loggerstubs" tabindex="-1"><a class="header-anchor" href="#loggerstubs" aria-hidden="true">#</a> LoggerStubs</h3><p>Ƭ <strong>LoggerStubs</strong>: <code>Object</code></p><h4 id="type-declaration-38" tabindex="-1"><a class="header-anchor" href="#type-declaration-38" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>debug</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>error</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>info</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>trace</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>warn</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr></tbody></table><h4 id="defined-in-98" tabindex="-1"><a class="header-anchor" href="#defined-in-98" aria-hidden="true">#</a> Defined in</h4>',6),U5={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/mocks/getLogger.mock.ts#L41",target:"_blank",rel:"noopener noreferrer"},Z5=e("hr",null,null,-1),Q5=e("h3",{id:"newable",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#newable","aria-hidden":"true"},"#"),t(" Newable")],-1),W5=e("strong",null,"Newable",-1),K5=e("code",null,"T",-1),$5=e("code",null,"ConfigType",-1),Y5=e("code",null,"config",-1),X5=e("code",null,"ServiceConstructorInput",-1),J5=e("code",null,"ConfigType",-1),e9=e("code",null,"T",-1),t9=a('<h4 id="type-parameters-36" tabindex="-1"><a class="header-anchor" href="#type-parameters-36" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="type-declaration-39" tabindex="-1"><a class="header-anchor" href="#type-declaration-39" aria-hidden="true">#</a> Type declaration</h4><p>• <strong>new Newable</strong>(<code>config</code>): <code>T</code></p><h5 id="parameters-25" tabindex="-1"><a class="header-anchor" href="#parameters-25" aria-hidden="true">#</a> Parameters</h5>',5),n9=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),s9=e("td",{style:{"text-align":"left"}},[e("code",null,"config")],-1),l9={style:{"text-align":"left"}},o9=e("code",null,"ServiceConstructorInput",-1),a9=e("code",null,"ConfigType",-1),d9=e("h5",{id:"returns-25",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-25","aria-hidden":"true"},"#"),t(" Returns")],-1),i9=e("p",null,[e("code",null,"T")],-1),c9=e("h4",{id:"defined-in-99",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-99","aria-hidden":"true"},"#"),t(" Defined in")],-1),r9={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L28",target:"_blank",rel:"noopener noreferrer"},u9=e("hr",null,null,-1),h9=e("h3",{id:"pendiginvocation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pendiginvocation","aria-hidden":"true"},"#"),t(" PendigInvocation")],-1),p9=e("p",null,[t("Ƭ "),e("strong",null,"PendigInvocation"),t(": "),e("code",null,"Object")],-1),_9=e("h4",{id:"type-declaration-40",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-40","aria-hidden":"true"},"#"),t(" Type declaration")],-1),f9=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),g9=e("td",{style:{"text-align":"left"}},[e("code",null,"reject")],-1),m9={style:{"text-align":"left"}},y9=e("code",null,"error",-1),b9=e("code",null,"HandledError",-1),x9=e("code",null,"UnhandledError",-1),v9=e("code",null,"void",-1),S9=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"resolve")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"responsePayload"),t(": "),e("code",null,"unknown"),t(") => "),e("code",null,"void")])],-1),T9=e("h4",{id:"defined-in-100",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-100","aria-hidden":"true"},"#"),t(" Defined in")],-1),k9={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/DefaultEventBridge/types/PendingInvocations.ts#L3",target:"_blank",rel:"noopener noreferrer"},C9=e("hr",null,null,-1),P9=e("h3",{id:"principalid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#principalid","aria-hidden":"true"},"#"),t(" PrincipalId")],-1),w9=e("p",null,[t("Ƭ "),e("strong",null,"PrincipalId"),t(": "),e("code",null,"string")],-1),M9=e("p",null,"the principal id",-1),D9=e("h4",{id:"defined-in-101",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-101","aria-hidden":"true"},"#"),t(" Defined in")],-1),E9={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/PrincipalId.ts#L2",target:"_blank",rel:"noopener noreferrer"},I9=a('<hr><h3 id="queryparameter" tabindex="-1"><a class="header-anchor" href="#queryparameter" aria-hidden="true">#</a> QueryParameter</h3><p>Ƭ <strong>QueryParameter</strong>&lt;<code>ParameterType</code>&gt;: <code>Object</code></p><h4 id="type-parameters-37" tabindex="-1"><a class="header-anchor" href="#type-parameters-37" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;">{}</td></tr></tbody></table><h4 id="type-declaration-41" tabindex="-1"><a class="header-anchor" href="#type-declaration-41" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;">keyof <code>ParameterType</code></td></tr><tr><td style="text-align:left;"><code>required</code></td><td style="text-align:left;"><code>boolean</code></td></tr></tbody></table><h4 id="defined-in-102" tabindex="-1"><a class="header-anchor" href="#defined-in-102" aria-hidden="true">#</a> Defined in</h4>',8),R9={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/HttpServer/types/QueryParameter.ts#L1",target:"_blank",rel:"noopener noreferrer"},F9=e("hr",null,null,-1),B9=e("h3",{id:"serviceevents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#serviceevents","aria-hidden":"true"},"#"),t(" ServiceEvents")],-1),N9=e("strong",null,"ServiceEvents",-1),L9=e("code",null,"ServiceEventsInternal",-1),O9=e("code",null,"addPrefixToObject",-1),H9=e("code",null,"CustomEvents",-1),j9=e("code",null,'"custom-"',-1),A9=e("code",null,"addPrefixToObject",-1),q9=e("code",null,"CustomEvents",-1),G9=e("code",null,'"misc-"',-1),V9=e("p",null,"ServiceEvents are plain javascript events sent by the service. There are three types:",-1),z9=e("ul",null,[e("li",null,[t("technical events when a services starts, stops, an error occurs and so on are prefixed with "),e("code",null,"service-")]),e("li",null,[t("response messages, which have a event name assigned, are prefixed with "),e("code",null,"custom-")]),e("li",null,[t("additional events, free defined by developer are prefixed with "),e("code",null,"misc-")])],-1),U9=e("h4",{id:"defined-in-103",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-103","aria-hidden":"true"},"#"),t(" Defined in")],-1),Z9={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/ServiceEvents.ts#L98",target:"_blank",rel:"noopener noreferrer"},Q9=a('<hr><h3 id="serviceinfotype" tabindex="-1"><a class="header-anchor" href="#serviceinfotype" aria-hidden="true">#</a> ServiceInfoType</h3><p>Ƭ <strong>ServiceInfoType</strong>: <code>Object</code></p><p>General service information</p><h4 id="type-declaration-42" tabindex="-1"><a class="header-anchor" href="#type-declaration-42" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>serviceDescription</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>serviceName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>serviceVersion</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="defined-in-104" tabindex="-1"><a class="header-anchor" href="#defined-in-104" aria-hidden="true">#</a> Defined in</h4>',7),W9={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/infoType/ServiceInfoType.ts#L4",target:"_blank",rel:"noopener noreferrer"},K9=a('<hr><h3 id="shutdownentry" tabindex="-1"><a class="header-anchor" href="#shutdownentry" aria-hidden="true">#</a> ShutdownEntry</h3><p>Ƭ <strong>ShutdownEntry</strong>: <code>Object</code></p><p>Entry of thing you like to shutdown gracefully</p><h4 id="type-declaration-43" tabindex="-1"><a class="header-anchor" href="#type-declaration-43" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>destroy</code></td><td style="text-align:left;">() =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</td><td style="text-align:left;">a async function that is called during shutdown</td></tr><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the name</td></tr></tbody></table><h4 id="defined-in-105" tabindex="-1"><a class="header-anchor" href="#defined-in-105" aria-hidden="true">#</a> Defined in</h4>',7),$9={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/helper/types/ShutdownEntry.ts#L4",target:"_blank",rel:"noopener noreferrer"},Y9=a('<hr><h3 id="storebaseconfig" tabindex="-1"><a class="header-anchor" href="#storebaseconfig" aria-hidden="true">#</a> StoreBaseConfig</h3><p>Ƭ <strong>StoreBaseConfig</strong>&lt;<code>Config</code>&gt;: <code>Object</code></p><h4 id="type-parameters-38" tabindex="-1"><a class="header-anchor" href="#type-parameters-38" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Config</code></td></tr></tbody></table><h4 id="type-declaration-44" tabindex="-1"><a class="header-anchor" href="#type-declaration-44" aria-hidden="true">#</a> Type declaration</h4>',6),X9=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),J9=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Config")])],-1),e8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"enableGet?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")])],-1),t8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"enableRemove?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")])],-1),n8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"enableSet?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")])],-1),s8=e("td",{style:{"text-align":"left"}},[e("code",null,"logger?")],-1),l8={style:{"text-align":"left"}},o8=e("code",null,"Logger",-1),a8=e("h4",{id:"defined-in-106",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-106","aria-hidden":"true"},"#"),t(" Defined in")],-1),d8={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/StoreBaseConfig.ts#L3",target:"_blank",rel:"noopener noreferrer"},i8=e("hr",null,null,-1),c8=e("h3",{id:"subscriptiondefinitionlist",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiondefinitionlist","aria-hidden":"true"},"#"),t(" SubscriptionDefinitionList")],-1),r8=e("strong",null,"SubscriptionDefinitionList",-1),u8=e("code",null,"ServiceClassType",-1),h8=e("code",null,"SubscriptionDefinition",-1),p8=e("code",null,"ServiceClassType",-1),_8=e("code",null,"any",-1),f8=e("code",null,"any",-1),g8=e("code",null,"any",-1),m8=e("code",null,"any",-1),y8=a(`<p>Helper type for creating list of service commands to be passed as input to service class</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> userServiceCommands<span class="token operator">:</span> SubscriptionDefinitionList<span class="token operator">&lt;</span>UserService<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span>signUp<span class="token punctuation">.</span><span class="token function">getDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="type-parameters-39" tabindex="-1"><a class="header-anchor" href="#type-parameters-39" aria-hidden="true">#</a> Type parameters</h4>`,3),b8=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),x8=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),v8={style:{"text-align":"left"}},S8=e("code",null,"ServiceClass",-1),T8=e("h4",{id:"defined-in-107",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-107","aria-hidden":"true"},"#"),t(" Defined in")],-1),k8={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/subscription/SubscriptionDefinitionList.ts#L11",target:"_blank",rel:"noopener noreferrer"},C8=e("hr",null,null,-1),P8=e("h3",{id:"subscriptiondefinitionmetadatabase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiondefinitionmetadatabase","aria-hidden":"true"},"#"),t(" SubscriptionDefinitionMetadataBase")],-1),w8=e("p",null,[t("Ƭ "),e("strong",null,"SubscriptionDefinitionMetadataBase"),t(": "),e("code",null,"Object")],-1),M8=e("h4",{id:"type-declaration-45",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-45","aria-hidden":"true"},"#"),t(" Type declaration")],-1),D8=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),E8=e("td",{style:{"text-align":"left"}},[e("code",null,"expose")],-1),I8={style:{"text-align":"left"}},R8=e("code",null,"contentEncodingRequest?",-1),F8=e("code",null,"string",-1),B8=e("code",null,"contentEncodingResponse?",-1),N8=e("code",null,"string",-1),L8=e("code",null,"contentTypeRequest?",-1),O8=e("code",null,"ContentType",-1),H8=e("code",null,"contentTypeResponse?",-1),j8=e("code",null,"ContentType",-1),A8=e("code",null,"inputPayload?",-1),q8=e("code",null,"SchemaObject",-1),G8=e("code",null,"outputPayload?",-1),V8=e("code",null,"SchemaObject",-1),z8=e("code",null,"parameter?",-1),U8=e("code",null,"SchemaObject",-1),Z8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingRequest?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Q8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingResponse?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),W8=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeRequest?")],-1),K8={style:{"text-align":"left"}},$8=e("code",null,"ContentType",-1),Y8=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeResponse?")],-1),X8={style:{"text-align":"left"}},J8=e("code",null,"ContentType",-1),e7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.inputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),t7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.outputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),n7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.parameter?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),s7=e("h4",{id:"defined-in-108",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-108","aria-hidden":"true"},"#"),t(" Defined in")],-1),l7={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/subscription/SubscriptionDefinitionMetadataBase.ts#L5",target:"_blank",rel:"noopener noreferrer"},o7=e("hr",null,null,-1),a7=e("h3",{id:"subscriptionstorageentry",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionstorageentry","aria-hidden":"true"},"#"),t(" SubscriptionStorageEntry")],-1),d7=e("p",null,[t("Ƭ "),e("strong",null,"SubscriptionStorageEntry"),t(": "),e("code",null,"Object")],-1),i7=e("h4",{id:"type-declaration-46",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-46","aria-hidden":"true"},"#"),t(" Type declaration")],-1),c7=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),r7=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),u7={style:{"text-align":"left"}},h7=e("code",null,"message",-1),p7=e("code",null,"EBMessage",-1),_7=e("code",null,"Promise",-1),f7=e("code",null,"Omit",-1),g7=e("code",null,"CustomMessage",-1),m7=e("code",null,'"id"',-1),y7=e("code",null,'"timestamp"',-1),b7=e("code",null,'"instanceId"',-1),x7=e("code",null,"undefined",-1),v7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"emitEventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),S7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingEventName")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),T7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingInstanceId")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),k7=e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingMessageType")],-1),C7={style:{"text-align":"left"}},P7=e("code",null,"input",-1),w7=e("code",null,"EBMessageType",-1),M7=e("code",null,"boolean",-1),D7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingPrincipalId")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),E7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingReceiverServiceName")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),I7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingReceiverServiceTarget")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),R7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingReceiverServiceVersion")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),F7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingSenderServiceName")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),B7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingSenderServiceTarget")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),N7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingSenderServiceVersion")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),L7=e("h4",{id:"defined-in-109",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-109","aria-hidden":"true"},"#"),t(" Defined in")],-1),O7={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/DefaultEventBridge/types/SubscriptionStorageEntry.ts#L3",target:"_blank",rel:"noopener noreferrer"},H7=a('<hr><h3 id="supportedhttpmethod" tabindex="-1"><a class="header-anchor" href="#supportedhttpmethod" aria-hidden="true">#</a> SupportedHttpMethod</h3><p>Ƭ <strong>SupportedHttpMethod</strong>: <code>&quot;GET&quot;</code> | <code>&quot;POST&quot;</code> | <code>&quot;PATCH&quot;</code> | <code>&quot;PUT&quot;</code> | <code>&quot;DELETE&quot;</code></p><p>Supported HTTP-Methods for defining endpoints</p><h4 id="defined-in-110" tabindex="-1"><a class="header-anchor" href="#defined-in-110" aria-hidden="true">#</a> Defined in</h4>',5),j7={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/HttpServer/types/SupportedHttpMethod.ts#L2",target:"_blank",rel:"noopener noreferrer"},A7=e("hr",null,null,-1),q7=e("h3",{id:"traceid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#traceid","aria-hidden":"true"},"#"),t(" TraceId")],-1),G7=e("p",null,[t("Ƭ "),e("strong",null,"TraceId"),t(": "),e("code",null,"string")],-1),V7=e("p",null,"The trace id which will be passed through all commands, invocations and subscriptions",-1),z7=e("h4",{id:"defined-in-111",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-111","aria-hidden":"true"},"#"),t(" Defined in")],-1),U7={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/TraceId.ts#L4",target:"_blank",rel:"noopener noreferrer"},Z7=a(`<hr><h3 id="addprefixtoobject" tabindex="-1"><a class="header-anchor" href="#addprefixtoobject" aria-hidden="true">#</a> addPrefixToObject</h3><p>Ƭ <strong>addPrefixToObject</strong>&lt;<code>T</code>, <code>P</code>&gt;: { [K in keyof T as K extends string ? \`\${P}\${K}\` : never]: T[K] }</p><p>Helper for better typescript type. All keys of given object must start with the given prefix. Otherwise Typescript will complain.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>
#### Type parameters

| Name | Type |
| :------ | :------ |
| \`T\` | \`T\` |
| \`P\` | extends \`string\` |

#### Defined in

[packages/core/src/core/types/addPrefixToObject.ts:7](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/addPrefixToObject.ts#L7)

## Variables

### MIN\\_CONTENT\\_SIZE\\_FOR\\_COMPRESSION

• \`Const\` **MIN\\_CONTENT\\_SIZE\\_FOR\\_COMPRESSION**: \`\`1024\`\`

#### Defined in

[packages/core/src/core/HttpServer/MinContentSizeForCompression.const.ts:1](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/HttpServer/MinContentSizeForCompression.const.ts#L1)

___

### ServiceInfoValidator

• \`Const\` **ServiceInfoValidator**: \`Object\`

#### Type declaration

| Name | Type |
| :------ | :------ |
| \`set\` | (\`obj\`: [\`ServiceInfoType\`](purista_core.md#serviceinfotype), \`prop\`: keyof [\`ServiceInfoType\`](purista_core.md#serviceinfotype), \`value\`: \`string\`) =&gt; \`boolean\` |

#### Defined in

[packages/core/src/core/Service/ServiceInfoValidator.impl.ts:5](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/Service/ServiceInfoValidator.impl.ts#L5)

___

### infoMessageTypes

• \`Const\` **infoMessageTypes**: [\`EBMessageType\`](../enums/purista_core.EBMessageType.md)[]

#### Defined in

[packages/core/src/core/types/infoType/InfoMessage.ts:30](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/infoType/InfoMessage.ts#L30)

___

### puristaVersion

• \`Const\` **puristaVersion**: \`\`&quot;1.4.9&quot;\`\`

#### Defined in

[packages/core/src/version.ts:1](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/version.ts#L1)

## Helper

### convertToCamelCase

▸ **convertToCamelCase**(\`str\`): \`string\`

Converts a string into camelCase

**\`Link\`**

https://github.com/30-seconds/30-seconds-of-code

#### Parameters

| Name | Type | Description |
| :------ | :------ | :------ |
| \`str\` | \`string\` | string |

#### Returns

\`string\`

string converted to camelCase

#### Defined in

[packages/core/src/helper/string/convertToCamelCase.impl.ts:9](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/helper/string/convertToCamelCase.impl.ts#L9)

___

### convertToKebabCase

▸ **convertToKebabCase**(\`str\`): \`string\`

Converts a string into kebab-case

**\`Link\`**

https://github.com/30-seconds/30-seconds-of-code

#### Parameters

| Name | Type | Description |
| :------ | :------ | :------ |
| \`str\` | \`string\` | string |

#### Returns

\`string\`

string converted to kebab-case

#### Defined in

[packages/core/src/helper/string/convertToKebabCase.impl.ts:9](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/helper/string/convertToKebabCase.impl.ts#L9)

___

### convertToPascalCase

▸ **convertToPascalCase**(\`str\`): \`string\`

Converts a string into PascalCase

**\`Link\`**

https://github.com/30-seconds/30-seconds-of-code

#### Parameters

| Name | Type | Description |
| :------ | :------ | :------ |
| \`str\` | \`string\` | string |

#### Returns

\`string\`

string converted to PascalCase

#### Defined in

[packages/core/src/helper/string/convertToPascalCase.impl.ts:9](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/helper/string/convertToPascalCase.impl.ts#L9)

___

### convertToSnakeCase

▸ **convertToSnakeCase**(\`str\`): \`string\`

Converts a string into snake_case

**\`Link\`**

https://github.com/30-seconds/30-seconds-of-code

#### Parameters

| Name | Type | Description |
| :------ | :------ | :------ |
| \`str\` | \`string\` | string |

#### Returns

\`string\`

string converted to snake_case

#### Defined in

[packages/core/src/helper/string/convertToSnakeCase.impl.ts:9](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/helper/string/convertToSnakeCase.impl.ts#L9)

___

### createErrorResponse

▸ **createErrorResponse**(\`originalEBMessage\`, \`statusCode?\`, \`error?\`): \`Readonly\`&lt;\`Omit\`&lt;[\`CommandErrorResponse\`](purista_core.md#commanderrorresponse), \`\`&quot;instanceId&quot;\`\`\\&gt;\\&gt;

Creates a error response object based on original command
Toggles sender and receiver

#### Parameters

| Name | Type | Default value |
| :------ | :------ | :------ |
| \`originalEBMessage\` | \`Readonly\`&lt;[\`Command\`](purista_core.md#command)\\&gt; | \`undefined\` |
| \`statusCode\` | [\`StatusCode\`](../enums/purista_core.StatusCode.md) | \`StatusCode.InternalServerError\` |
| \`error?\` | \`unknown\` | \`undefined\` |

#### Returns

\`Readonly\`&lt;\`Omit\`&lt;[\`CommandErrorResponse\`](purista_core.md#commanderrorresponse), \`\`&quot;instanceId&quot;\`\`\\&gt;\\&gt;

CommandErrorResponse message object

#### Defined in

[packages/core/src/core/helper/createErrorResponse.impl.ts:18](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/helper/createErrorResponse.impl.ts#L18)

___

### createInfoMessage

▸ **createInfoMessage**(\`messageType\`, \`sender\`, \`additional?\`): \`Omit\`&lt;[\`InfoMessage\`](purista_core.md#infomessage), \`\`&quot;instanceId&quot;\`\`\\&gt;

#### Parameters

| Name | Type |
| :------ | :------ |
| \`messageType\` | [\`InfoMessageType\`](purista_core.md#infomessagetype) |
| \`sender\` | [\`EBMessageAddress\`](purista_core.md#ebmessageaddress) |
| \`additional?\` | \`Partial\`&lt;[\`InfoMessage\`](purista_core.md#infomessage)\\&gt; |

#### Returns

\`Omit\`&lt;[\`InfoMessage\`](purista_core.md#infomessage), \`\`&quot;instanceId&quot;\`\`\\&gt;

#### Defined in

[packages/core/src/core/helper/createInfoMessage.impl.ts:14](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/helper/createInfoMessage.impl.ts#L14)

___

### createSuccessResponse

▸ **createSuccessResponse**&lt;\`T\`\\&gt;(\`originalEBMessage\`, \`payload\`, \`eventName?\`, \`contentType?\`, \`contentEncoding?\`): \`Readonly\`&lt;\`Omit\`&lt;[\`CommandSuccessResponse\`](purista_core.md#commandsuccessresponse)&lt;\`T\`\\&gt;, \`\`&quot;instanceId&quot;\`\`\\&gt;\\&gt;

#### Type parameters

| Name |
| :------ |
| \`T\` |

#### Parameters

| Name | Type | Default value |
| :------ | :------ | :------ |
| \`originalEBMessage\` | \`Readonly\`&lt;[\`Command\`](purista_core.md#command)\\&gt; | \`undefined\` |
| \`payload\` | \`T\` | \`undefined\` |
| \`eventName?\` | \`string\` | \`undefined\` |
| \`contentType\` | \`string\` | \`&#39;application/json&#39;\` |
| \`contentEncoding\` | \`string\` | \`&#39;utf-8&#39;\` |

#### Returns

\`Readonly\`&lt;\`Omit\`&lt;[\`CommandSuccessResponse\`](purista_core.md#commandsuccessresponse)&lt;\`T\`\\&gt;, \`\`&quot;instanceId&quot;\`\`\\&gt;\\&gt;

#### Defined in

[packages/core/src/core/helper/createSuccessResponse.impl.ts:15](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/helper/createSuccessResponse.impl.ts#L15)

___

### deserializeOtp

▸ **deserializeOtp**(\`logger\`, \`otp?\`): \`Promise\`&lt;\`undefined\` \\| \`Context\`\\&gt;

#### Parameters

| Name | Type |
| :------ | :------ |
| \`logger\` | [\`Logger\`](../classes/purista_core.Logger.md) |
| \`otp?\` | \`string\` |

#### Returns

\`Promise\`&lt;\`undefined\` \\| \`Context\`\\&gt;

#### Defined in

[packages/core/src/core/helper/serializeOtp.impl.ts:26](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/helper/serializeOtp.impl.ts#L26)

___

### getCleanedMessage

▸ **getCleanedMessage**(\`message\`, \`stripeOutContent?\`): \`Record\`&lt;\`string\`, \`unknown\`\\&gt;

Helper function for logging.
Returns a message object, where fields which might contain sensitive data, are overwritten with string values.
For command messages, parameter and payload are overwritten with string values.

For command success responses, the response field is overwritten.

Command error responses are not changed.

#### Parameters

| Name | Type | Default value |
| :------ | :------ | :------ |
| \`message\` | \`Readonly\`&lt;[\`EBMessage\`](purista_core.md#ebmessage)\\&gt; | \`undefined\` |
| \`stripeOutContent\` | \`boolean\` | \`!isDevelop()\` |

#### Returns

\`Record\`&lt;\`string\`, \`unknown\`\\&gt;

#### Defined in

[packages/core/src/core/helper/getCleanedMessage.impl.ts:15](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/helper/getCleanedMessage.impl.ts#L15)

___

### getErrorMessageForCode

▸ **getErrorMessageForCode**(\`code\`): \`string\`

#### Parameters

| Name | Type |
| :------ | :------ |
| \`code\` | [\`StatusCode\`](../enums/purista_core.StatusCode.md) |

#### Returns

\`string\`

#### Defined in

[packages/core/src/core/helper/getErrorMessageForCode.impl.ts:10](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/helper/getErrorMessageForCode.impl.ts#L10)

___

### getNewCorrelationId

▸ **getNewCorrelationId**(): \`string\`

Create a new unique event bridge correlation id

#### Returns

\`string\`

EBMessageId

#### Defined in

[packages/core/src/core/helper/getNewCorrelationId.impl.ts:10](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/helper/getNewCorrelationId.impl.ts#L10)

___

### getNewEBMessageId

▸ **getNewEBMessageId**(): \`string\`

Create a new unique event bridge message id

#### Returns

\`string\`

EBMessageId

#### Defined in

[packages/core/src/core/helper/getNewEBMessageId.impl.ts:11](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/helper/getNewEBMessageId.impl.ts#L11)

___

### getNewInstanceId

▸ **getNewInstanceId**(): \`string\`

#### Returns

\`string\`

#### Defined in

[packages/core/src/core/helper/getNewInstanceId.impl.ts:9](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/helper/getNewInstanceId.impl.ts#L9)

___

### getNewTraceId

▸ **getNewTraceId**(): \`string\`

#### Returns

\`string\`

#### Defined in

[packages/core/src/core/helper/getNewTraceId.impl.ts:9](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/helper/getNewTraceId.impl.ts#L9)

___

### getSubscriptionQueueName

▸ **getSubscriptionQueueName**(\`address\`): \`string\`

#### Parameters

| Name | Type |
| :------ | :------ |
| \`address\` | [\`EBMessageAddress\`](purista_core.md#ebmessageaddress) |

#### Returns

\`string\`

#### Defined in

[packages/core/src/core/helper/getSubscriptionQueueName.impl.ts:10](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/helper/getSubscriptionQueueName.impl.ts#L10)

___

### getUniqueId

▸ **getUniqueId**(): \`string\`

#### Returns

\`string\`

#### Defined in

[packages/core/src/core/helper/getUniqueId.impl.ts:11](https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/helper/getUniqueId.impl.ts#L11)

___

### gracefulShutdown

▸ **gracefulShutdown**(\`logger\`, \`list\`, \`timeoutMs?\`): \`void\`

Helps to gracefully shut down your application.
Provide in list objects. The objects contains a name and a promise function which should be executed.

The execution of array list functions is done sequential.

**\`Example\`**

\`\`\`typescript
const shutDownList = [
 {
   name: \`\${serviceA.info.serviceName} version \${serviceA.info.serviceVersion}\`,
   fn: serviceA.destroy
 },
 {
   name: \`\${serviceB.info.serviceName} version \${serviceB.info.serviceVersion}\`,
   fn: serviceB.destroy
 },
{
   name: eventbridge.name,
   fn: eventbridge.destroy
 }
]
gracefulShutdown(logger, shutDownList)

// will shutdown ServiceA, then ServiceB, then the event bridge
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>Default</code></strong></p><p>30000 milliseconds</p><h4 id="parameters-26" tabindex="-1"><a class="header-anchor" href="#parameters-26" aria-hidden="true">#</a> Parameters</h4>`,8),Q7=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value"),e("th",{style:{"text-align":"left"}},"Description")])],-1),W7=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),K7={style:{"text-align":"left"}},$7=e("code",null,"Logger",-1),Y7=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),X7=e("td",{style:{"text-align":"left"}},"the logger object",-1),J7=e("td",{style:{"text-align":"left"}},[e("code",null,"list")],-1),eC={style:{"text-align":"left"}},tC=e("code",null,"ShutdownEntry",-1),nC=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),sC=e("td",{style:{"text-align":"left"}},"a object containing name and function",-1),lC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"timeoutMs")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},[e("code",null,"30000")]),e("td",{style:{"text-align":"left"}},"in ms to shut")],-1),oC=e("h4",{id:"returns-26",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-26","aria-hidden":"true"},"#"),t(" Returns")],-1),aC=e("p",null,[e("code",null,"void")],-1),dC=e("h4",{id:"defined-in-112",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-112","aria-hidden":"true"},"#"),t(" Defined in")],-1),iC={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/helper/gracefulShutdown.ts#L36",target:"_blank",rel:"noopener noreferrer"},cC=a('<hr><h3 id="isdevelop" tabindex="-1"><a class="header-anchor" href="#isdevelop" aria-hidden="true">#</a> isDevelop</h3><p>▸ <strong>isDevelop</strong>(): <code>boolean</code></p><p>returns true if NODE_ENV is set to value starting with &quot;develop&quot;</p><h4 id="returns-27" tabindex="-1"><a class="header-anchor" href="#returns-27" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-113" tabindex="-1"><a class="header-anchor" href="#defined-in-113" aria-hidden="true">#</a> Defined in</h4>',7),rC={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/helper/isDevelop.impl.ts#L6",target:"_blank",rel:"noopener noreferrer"},uC=a('<hr><h3 id="serializeotp" tabindex="-1"><a class="header-anchor" href="#serializeotp" aria-hidden="true">#</a> serializeOtp</h3><p>▸ <strong>serializeOtp</strong>(): <code>string</code></p><h4 id="returns-28" tabindex="-1"><a class="header-anchor" href="#returns-28" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-114" tabindex="-1"><a class="header-anchor" href="#defined-in-114" aria-hidden="true">#</a> Defined in</h4>',6),hC={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/helper/serializeOtp.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},pC=a('<h2 id="unit-test-helper-1" tabindex="-1"><a class="header-anchor" href="#unit-test-helper-1" aria-hidden="true">#</a> Unit test helper</h2><h3 id="getcommandcontextmock" tabindex="-1"><a class="header-anchor" href="#getcommandcontextmock" aria-hidden="true">#</a> getCommandContextMock</h3><p>▸ <strong>getCommandContextMock</strong>&lt;<code>MessagePayloadType</code>, <code>MessageParamsType</code>&gt;(<code>payload</code>, <code>parameter</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for command function context</p><h4 id="type-parameters-40" tabindex="-1"><a class="header-anchor" href="#type-parameters-40" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-27" tabindex="-1"><a class="header-anchor" href="#parameters-27" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>payload</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>parameter</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-29" tabindex="-1"><a class="header-anchor" href="#returns-29" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p>',10),_C=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),fC=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),gC={style:{"text-align":"left"}},mC=e("code",null,"CommandFunctionContext",-1),yC=e("code",null,"MessagePayloadType",-1),bC=e("code",null,"MessageParamsType",-1),xC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"emit"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"invoke"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),vC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.emit")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),SC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),TC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),kC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),CC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.invoke")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),PC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),wC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),MC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),DC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),EC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),IC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),RC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),FC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),BC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),NC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),LC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),OC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),HC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),jC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),AC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),qC=e("h4",{id:"defined-in-115",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-115","aria-hidden":"true"},"#"),t(" Defined in")],-1),GC={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/mocks/getCommandContext.mock.ts#L12",target:"_blank",rel:"noopener noreferrer"},VC=e("hr",null,null,-1),zC=e("h3",{id:"getcommanderrormessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommanderrormessagemock","aria-hidden":"true"},"#"),t(" getCommandErrorMessageMock")],-1),UC=e("strong",null,"getCommandErrorMessageMock",-1),ZC=e("code",null,"error?",-1),QC=e("code",null,"input?",-1),WC=e("code",null,"commandMessage?",-1),KC=e("code",null,"Readonly",-1),$C=e("code",null,"CommandErrorResponse",-1),YC=e("p",null,"A function that returns a mocked command error response message",-1),XC=e("h4",{id:"parameters-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-28","aria-hidden":"true"},"#"),t(" Parameters")],-1),JC=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),e0=e("td",{style:{"text-align":"left"}},[e("code",null,"error?")],-1),t0={style:{"text-align":"left"}},n0=e("code",null,"HandledError",-1),s0=e("code",null,"UnhandledError",-1),l0=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),o0={style:{"text-align":"left"}},a0=e("code",null,"Partial",-1),d0=e("code",null,"CommandErrorResponse",-1),i0=e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage?")],-1),c0={style:{"text-align":"left"}},r0=e("code",null,"Command",-1),u0=e("h4",{id:"returns-30",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-30","aria-hidden":"true"},"#"),t(" Returns")],-1),h0=e("code",null,"Readonly",-1),p0=e("code",null,"CommandErrorResponse",-1),_0=e("h4",{id:"defined-in-116",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-116","aria-hidden":"true"},"#"),t(" Defined in")],-1),f0={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/mocks/messages/getCommandErrorMessage.mock.ts#L16",target:"_blank",rel:"noopener noreferrer"},g0=e("hr",null,null,-1),m0=e("h3",{id:"getcommandmessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommandmessagemock","aria-hidden":"true"},"#"),t(" getCommandMessageMock")],-1),y0=e("strong",null,"getCommandMessageMock",-1),b0=e("code",null,"Payload",-1),x0=e("code",null,"Parameter",-1),v0=e("code",null,"input?",-1),S0=e("code",null,"Readonly",-1),T0=e("code",null,"Command",-1),k0=e("code",null,"Payload",-1),C0=e("code",null,"Parameter",-1),P0=a('<p>A function that returns a mocked command message.</p><h4 id="type-parameters-41" tabindex="-1"><a class="header-anchor" href="#type-parameters-41" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>Parameter</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-29" tabindex="-1"><a class="header-anchor" href="#parameters-29" aria-hidden="true">#</a> Parameters</h4>',4),w0=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),M0=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),D0={style:{"text-align":"left"}},E0=e("code",null,"Partial",-1),I0=e("code",null,"Command",-1),R0=e("code",null,"Payload",-1),F0=e("code",null,"Parameter",-1),B0=e("code",null,"payload?",-1),N0=e("code",null,"parameter?",-1),L0=e("code",null,"Parameter",-1),O0=e("code",null,"payload?",-1),H0=e("code",null,"Payload",-1),j0=e("h4",{id:"returns-31",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-31","aria-hidden":"true"},"#"),t(" Returns")],-1),A0=e("code",null,"Readonly",-1),q0=e("code",null,"Command",-1),G0=e("code",null,"Payload",-1),V0=e("code",null,"Parameter",-1),z0=e("h4",{id:"defined-in-117",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-117","aria-hidden":"true"},"#"),t(" Defined in")],-1),U0={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/mocks/messages/getCommandMessage.mock.ts#L15",target:"_blank",rel:"noopener noreferrer"},Z0=e("hr",null,null,-1),Q0=e("h3",{id:"getcommandsuccessmessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommandsuccessmessagemock","aria-hidden":"true"},"#"),t(" getCommandSuccessMessageMock")],-1),W0=e("strong",null,"getCommandSuccessMessageMock",-1),K0=e("code",null,"PayloadType",-1),$0=e("code",null,"payload",-1),Y0=e("code",null,"input?",-1),X0=e("code",null,"commandMessage?",-1),J0=e("code",null,"Readonly",-1),eP=e("code",null,"CommandSuccessResponse",-1),tP=e("code",null,"PayloadType",-1),nP=a('<p>A function that returns a mocked command success response message.</p><h4 id="type-parameters-42" tabindex="-1"><a class="header-anchor" href="#type-parameters-42" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td></tr></tbody></table><h4 id="parameters-30" tabindex="-1"><a class="header-anchor" href="#parameters-30" aria-hidden="true">#</a> Parameters</h4>',4),sP=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),lP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")])],-1),oP=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),aP={style:{"text-align":"left"}},dP=e("code",null,"Partial",-1),iP=e("code",null,"CommandSuccessResponse",-1),cP=e("code",null,"PayloadType",-1),rP=e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage?")],-1),uP={style:{"text-align":"left"}},hP=e("code",null,"Command",-1),pP=e("h4",{id:"returns-32",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-32","aria-hidden":"true"},"#"),t(" Returns")],-1),_P=e("code",null,"Readonly",-1),fP=e("code",null,"CommandSuccessResponse",-1),gP=e("code",null,"PayloadType",-1),mP=e("h4",{id:"defined-in-118",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-118","aria-hidden":"true"},"#"),t(" Defined in")],-1),yP={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/mocks/messages/getCommandSuccessMessage.mock.ts#L9",target:"_blank",rel:"noopener noreferrer"},bP=a('<hr><h3 id="getcommandtransformcontextmock" tabindex="-1"><a class="header-anchor" href="#getcommandtransformcontextmock" aria-hidden="true">#</a> getCommandTransformContextMock</h3><p>▸ <strong>getCommandTransformContextMock</strong>&lt;<code>MessagePayloadType</code>, <code>MessageParamsType</code>&gt;(<code>payload</code>, <code>parameter</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for command transform function context</p><h4 id="type-parameters-43" tabindex="-1"><a class="header-anchor" href="#type-parameters-43" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-31" tabindex="-1"><a class="header-anchor" href="#parameters-31" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>payload</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>parameter</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-33" tabindex="-1"><a class="header-anchor" href="#returns-33" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p>',10),xP=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),vP=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),SP={style:{"text-align":"left"}},TP=e("code",null,"CommandTransformFunctionContext",-1),kP=e("code",null,"MessagePayloadType",-1),CP=e("code",null,"MessageParamsType",-1),PP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),wP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),MP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),DP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),EP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),IP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),RP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),FP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),BP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),NP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),LP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),OP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),HP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),jP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),AP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),qP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),GP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),VP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),zP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),UP=e("h4",{id:"defined-in-119",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-119","aria-hidden":"true"},"#"),t(" Defined in")],-1),ZP={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/mocks/getCommandTransformContext.mock.ts#L12",target:"_blank",rel:"noopener noreferrer"},QP=e("hr",null,null,-1),WP=e("h3",{id:"getcustommessagemessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcustommessagemessagemock","aria-hidden":"true"},"#"),t(" getCustomMessageMessageMock")],-1),KP=e("strong",null,"getCustomMessageMessageMock",-1),$P=e("code",null,"PayloadType",-1),YP=e("code",null,"eventName",-1),XP=e("code",null,"payload",-1),JP=e("code",null,"input?",-1),ew=e("code",null,"Readonly",-1),tw=e("code",null,"CustomMessage",-1),nw=e("code",null,"PayloadType",-1),sw=a('<p>A function that returns a mocked custom message.</p><h4 id="type-parameters-44" tabindex="-1"><a class="header-anchor" href="#type-parameters-44" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td></tr></tbody></table><h4 id="parameters-32" tabindex="-1"><a class="header-anchor" href="#parameters-32" aria-hidden="true">#</a> Parameters</h4>',4),lw=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ow=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),aw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")])],-1),dw=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),iw={style:{"text-align":"left"}},cw=e("code",null,"Partial",-1),rw=e("code",null,"CustomMessage",-1),uw=e("code",null,"PayloadType",-1),hw=e("h4",{id:"returns-34",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-34","aria-hidden":"true"},"#"),t(" Returns")],-1),pw=e("code",null,"Readonly",-1),_w=e("code",null,"CustomMessage",-1),fw=e("code",null,"PayloadType",-1),gw=e("h4",{id:"defined-in-120",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-120","aria-hidden":"true"},"#"),t(" Defined in")],-1),mw={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/mocks/messages/getCustomMessage.mock.ts#L15",target:"_blank",rel:"noopener noreferrer"},yw=a('<hr><h3 id="geteventbridgemock" tabindex="-1"><a class="header-anchor" href="#geteventbridgemock" aria-hidden="true">#</a> getEventBridgeMock</h3><p>▸ <strong>getEventBridgeMock</strong>(<code>sandbox?</code>): <code>Object</code></p><p>Mocks the eventBridge and stubs the methods</p><h4 id="parameters-33" tabindex="-1"><a class="header-anchor" href="#parameters-33" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-35" tabindex="-1"><a class="header-anchor" href="#returns-35" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p><p>EventBridge mocked</p>',9),bw=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),xw=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),vw={style:{"text-align":"left"}},Sw=e("code",null,"EventBridge",-1),Tw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">>")])],-1),kw=e("h4",{id:"defined-in-121",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-121","aria-hidden":"true"},"#"),t(" Defined in")],-1),Cw={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/mocks/getEventBridge.mock.ts#L10",target:"_blank",rel:"noopener noreferrer"},Pw=a('<hr><h3 id="getloggermock" tabindex="-1"><a class="header-anchor" href="#getloggermock" aria-hidden="true">#</a> getLoggerMock</h3><p>▸ <strong>getLoggerMock</strong>(<code>sandbox?</code>): <code>Object</code></p><p>Mocks the logger and methods are stubs</p><h4 id="parameters-34" tabindex="-1"><a class="header-anchor" href="#parameters-34" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-36" tabindex="-1"><a class="header-anchor" href="#returns-36" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p><p>logger mocked</p>',9),ww=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Mw=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),Dw={style:{"text-align":"left"}},Ew=e("code",null,"Logger",-1),Iw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),Rw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Fw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Bw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Nw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Lw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Ow=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Hw=e("h4",{id:"defined-in-122",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-122","aria-hidden":"true"},"#"),t(" Defined in")],-1),jw={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/mocks/getLogger.mock.ts#L10",target:"_blank",rel:"noopener noreferrer"},Aw=a('<hr><h3 id="getsubscriptioncontextmock" tabindex="-1"><a class="header-anchor" href="#getsubscriptioncontextmock" aria-hidden="true">#</a> getSubscriptionContextMock</h3><p>▸ <strong>getSubscriptionContextMock</strong>(<code>message</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for subscription function context</p><h4 id="parameters-35" tabindex="-1"><a class="header-anchor" href="#parameters-35" aria-hidden="true">#</a> Parameters</h4>',5),qw=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Gw=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),Vw={style:{"text-align":"left"}},zw=e("code",null,"EBMessage",-1),Uw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sandbox?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonSandbox")])],-1),Zw=e("h4",{id:"returns-37",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-37","aria-hidden":"true"},"#"),t(" Returns")],-1),Qw=e("p",null,[e("code",null,"Object")],-1),Ww=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Kw=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),$w={style:{"text-align":"left"}},Yw=e("code",null,"SubscriptionFunctionContext",-1),Xw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"emit"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"invoke"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),Jw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.emit")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),eM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),tM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),nM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),sM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.invoke")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),lM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),oM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),aM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),dM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),iM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),cM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),rM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),uM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),hM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),pM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),_M=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),fM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),gM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),mM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),yM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),bM=e("h4",{id:"defined-in-123",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-123","aria-hidden":"true"},"#"),t(" Defined in")],-1),xM={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/mocks/getSubscriptionContext.mock.ts#L11",target:"_blank",rel:"noopener noreferrer"},vM=a('<hr><h3 id="getsubscriptiontransformcontextmock" tabindex="-1"><a class="header-anchor" href="#getsubscriptiontransformcontextmock" aria-hidden="true">#</a> getSubscriptionTransformContextMock</h3><p>▸ <strong>getSubscriptionTransformContextMock</strong>(<code>message</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for subscription transform function context</p><h4 id="parameters-36" tabindex="-1"><a class="header-anchor" href="#parameters-36" aria-hidden="true">#</a> Parameters</h4>',5),SM=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),TM=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),kM={style:{"text-align":"left"}},CM=e("code",null,"EBMessage",-1),PM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sandbox?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonSandbox")])],-1),wM=e("h4",{id:"returns-38",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-38","aria-hidden":"true"},"#"),t(" Returns")],-1),MM=e("p",null,[e("code",null,"Object")],-1),DM=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),EM=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),IM={style:{"text-align":"left"}},RM=e("code",null,"SubscriptionTransformFunctionContext",-1),FM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),BM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),NM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),LM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),OM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),HM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),jM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),AM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),qM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),GM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),VM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),zM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),UM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),ZM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),QM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),WM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),KM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),$M=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),YM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),XM=e("h4",{id:"defined-in-124",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-124","aria-hidden":"true"},"#"),t(" Defined in")],-1),JM={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/mocks/getSubscriptionTransformContext.mock.ts#L11",target:"_blank",rel:"noopener noreferrer"},eD=e("h2",{id:"functions-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#functions-1","aria-hidden":"true"},"#"),t(" Functions")],-1),tD=e("h3",{id:"getcommandfunctionwithvalidation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommandfunctionwithvalidation","aria-hidden":"true"},"#"),t(" getCommandFunctionWithValidation")],-1),nD=e("strong",null,"getCommandFunctionWithValidation",-1),sD=e("code",null,"ServiceClassType",-1),lD=e("code",null,"MessagePayloadType",-1),oD=e("code",null,"MessageParamsType",-1),aD=e("code",null,"MessageResultType",-1),dD=e("code",null,"FunctionPayloadType",-1),iD=e("code",null,"FunctionParamsType",-1),cD=e("code",null,"FunctionResultType",-1),rD=e("code",null,"fn",-1),uD=e("code",null,"inputPayloadSchema",-1),hD=e("code",null,"inputParameterSchema",-1),pD=e("code",null,"outputPayloadSchema",-1),_D=e("code",null,"beforeGuards?",-1),fD=e("code",null,"CommandFunction",-1),gD=e("code",null,"ServiceClassType",-1),mD=e("code",null,"MessagePayloadType",-1),yD=e("code",null,"MessageParamsType",-1),bD=e("code",null,"MessagePayloadType",-1),xD=e("code",null,"MessageParamsType",-1),vD=e("code",null,"MessageResultType",-1),SD=e("h4",{id:"type-parameters-45",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-45","aria-hidden":"true"},"#"),t(" Type parameters")],-1),TD=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),kD=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),CD={style:{"text-align":"left"}},PD=e("code",null,"ServiceClass",-1),wD=e("code",null,"unknown",-1),MD=e("code",null,"ServiceClassType",-1),DD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),ED=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),ID=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),RD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),FD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),BD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),ND=e("h4",{id:"parameters-37",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-37","aria-hidden":"true"},"#"),t(" Parameters")],-1),LD=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),OD=e("td",{style:{"text-align":"left"}},[e("code",null,"fn")],-1),HD={style:{"text-align":"left"}},jD=e("code",null,"CommandFunction",-1),AD=e("code",null,"ServiceClassType",-1),qD=e("code",null,"MessagePayloadType",-1),GD=e("code",null,"MessageParamsType",-1),VD=e("code",null,"FunctionPayloadType",-1),zD=e("code",null,"FunctionParamsType",-1),UD=e("code",null,"FunctionResultType",-1),ZD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"inputPayloadSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined"),t(" | "),e("code",null,"ZodType"),t("<"),e("code",null,"FunctionPayloadType"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"MessagePayloadType"),t(">")])],-1),QD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"inputParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined"),t(" | "),e("code",null,"ZodType"),t("<"),e("code",null,"FunctionParamsType"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"MessageParamsType"),t(">")])],-1),WD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"outputPayloadSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined"),t(" | "),e("code",null,"ZodType"),t("<"),e("code",null,"MessageResultType"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"FunctionResultType"),t(">")])],-1),KD=e("td",{style:{"text-align":"left"}},[e("code",null,"beforeGuards")],-1),$D={style:{"text-align":"left"}},YD=e("code",null,"Record",-1),XD=e("code",null,"string",-1),JD=e("code",null,"CommandBeforeGuardHook",-1),eE=e("code",null,"ServiceClassType",-1),tE=e("code",null,"MessagePayloadType",-1),nE=e("code",null,"MessageParamsType",-1),sE=e("code",null,"FunctionPayloadType",-1),lE=e("code",null,"FunctionParamsType",-1),oE=e("h4",{id:"returns-39",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-39","aria-hidden":"true"},"#"),t(" Returns")],-1),aE=e("code",null,"CommandFunction",-1),dE=e("code",null,"ServiceClassType",-1),iE=e("code",null,"MessagePayloadType",-1),cE=e("code",null,"MessageParamsType",-1),rE=e("code",null,"MessagePayloadType",-1),uE=e("code",null,"MessageParamsType",-1),hE=e("code",null,"MessageResultType",-1),pE=e("h4",{id:"defined-in-125",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-125","aria-hidden":"true"},"#"),t(" Defined in")],-1),_E={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/CommandDefinitionBuilder/getCommandFunctionWithValidation.impl.ts#L13",target:"_blank",rel:"noopener noreferrer"},fE=e("hr",null,null,-1),gE=e("h3",{id:"getdefaulteventbridgeconfig",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getdefaulteventbridgeconfig","aria-hidden":"true"},"#"),t(" getDefaultEventBridgeConfig")],-1),mE=e("strong",null,"getDefaultEventBridgeConfig",-1),yE=e("code",null,"Complete",-1),bE=e("code",null,"DefaultEventBridgeConfig",-1),xE=e("h4",{id:"returns-40",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-40","aria-hidden":"true"},"#"),t(" Returns")],-1),vE=e("code",null,"Complete",-1),SE=e("code",null,"DefaultEventBridgeConfig",-1),TE=e("h4",{id:"defined-in-126",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-126","aria-hidden":"true"},"#"),t(" Defined in")],-1),kE={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/DefaultEventBridge/getDefaultEventBridgeConfig.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},CE=e("hr",null,null,-1),PE=e("h3",{id:"getdefaultloglevel",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getdefaultloglevel","aria-hidden":"true"},"#"),t(" getDefaultLogLevel")],-1),wE=e("strong",null,"getDefaultLogLevel",-1),ME=e("code",null,"LogLevelName",-1),DE=e("h4",{id:"returns-41",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-41","aria-hidden":"true"},"#"),t(" Returns")],-1),EE=e("code",null,"LogLevelName",-1),IE=e("h4",{id:"defined-in-127",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-127","aria-hidden":"true"},"#"),t(" Defined in")],-1),RE={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/DefaultLogger/getDefaultLogLevel.ts#L4",target:"_blank",rel:"noopener noreferrer"},FE=e("hr",null,null,-1),BE=e("h3",{id:"getnewsubscriptionstorageentry",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getnewsubscriptionstorageentry","aria-hidden":"true"},"#"),t(" getNewSubscriptionStorageEntry")],-1),NE=e("strong",null,"getNewSubscriptionStorageEntry",-1),LE=e("code",null,"subscription",-1),OE=e("code",null,"cb",-1),HE=e("code",null,"SubscriptionStorageEntry",-1),jE=e("h4",{id:"parameters-38",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-38","aria-hidden":"true"},"#"),t(" Parameters")],-1),AE=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),qE=e("td",{style:{"text-align":"left"}},[e("code",null,"subscription")],-1),GE={style:{"text-align":"left"}},VE=e("code",null,"Subscription",-1),zE=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),UE={style:{"text-align":"left"}},ZE=e("code",null,"message",-1),QE=e("code",null,"EBMessage",-1),WE=e("code",null,"Promise",-1),KE=e("code",null,"undefined",-1),$E=e("code",null,"Omit",-1),YE=e("code",null,"CustomMessage",-1),XE=e("code",null,'"id"',-1),JE=e("code",null,'"instanceId"',-1),eI=e("code",null,'"timestamp"',-1),tI=e("h4",{id:"returns-42",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-42","aria-hidden":"true"},"#"),t(" Returns")],-1),nI=e("code",null,"SubscriptionStorageEntry",-1),sI=e("h4",{id:"defined-in-128",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-128","aria-hidden":"true"},"#"),t(" Defined in")],-1),lI={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/DefaultEventBridge/getNewSubscriptionStorageEntry.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},oI=e("hr",null,null,-1),aI=e("h3",{id:"getsubscriptionfunctionwithvalidation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getsubscriptionfunctionwithvalidation","aria-hidden":"true"},"#"),t(" getSubscriptionFunctionWithValidation")],-1),dI=e("strong",null,"getSubscriptionFunctionWithValidation",-1),iI=e("code",null,"ServiceClassType",-1),cI=e("code",null,"MessagePayloadType",-1),rI=e("code",null,"MessageParamsType",-1),uI=e("code",null,"MessageResultType",-1),hI=e("code",null,"FunctionPayloadType",-1),pI=e("code",null,"FunctionParamsType",-1),_I=e("code",null,"FunctionResultType",-1),fI=e("code",null,"fn",-1),gI=e("code",null,"inputPayloadSchema",-1),mI=e("code",null,"inputParameterSchema",-1),yI=e("code",null,"outputPayloadSchema",-1),bI=e("code",null,"beforeGuards?",-1),xI=e("code",null,"SubscriptionFunction",-1),vI=e("code",null,"ServiceClassType",-1),SI=e("code",null,"MessagePayloadType",-1),TI=e("code",null,"MessageParamsType",-1),kI=e("code",null,"MessagePayloadType",-1),CI=e("code",null,"MessageParamsType",-1),PI=e("code",null,"MessageResultType",-1),wI=e("h4",{id:"type-parameters-46",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-46","aria-hidden":"true"},"#"),t(" Type parameters")],-1),MI=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),DI=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),EI={style:{"text-align":"left"}},II=e("code",null,"ServiceClass",-1),RI=e("code",null,"unknown",-1),FI=e("code",null,"ServiceClassType",-1),BI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),NI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),LI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),OI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),HI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),jI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),AI=e("h4",{id:"parameters-39",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-39","aria-hidden":"true"},"#"),t(" Parameters")],-1),qI=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),GI=e("td",{style:{"text-align":"left"}},[e("code",null,"fn")],-1),VI={style:{"text-align":"left"}},zI=e("code",null,"SubscriptionFunction",-1),UI=e("code",null,"ServiceClassType",-1),ZI=e("code",null,"MessagePayloadType",-1),QI=e("code",null,"MessageParamsType",-1),WI=e("code",null,"FunctionPayloadType",-1),KI=e("code",null,"FunctionParamsType",-1),$I=e("code",null,"FunctionResultType",-1),YI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"inputPayloadSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined"),t(" | "),e("code",null,"ZodType"),t("<"),e("code",null,"FunctionPayloadType"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"MessagePayloadType"),t(">")])],-1),XI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"inputParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined"),t(" | "),e("code",null,"ZodType"),t("<"),e("code",null,"FunctionParamsType"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"MessageParamsType"),t(">")])],-1),JI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"outputPayloadSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined"),t(" | "),e("code",null,"ZodType"),t("<"),e("code",null,"MessageResultType"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"FunctionResultType"),t(">")])],-1),eR=e("td",{style:{"text-align":"left"}},[e("code",null,"beforeGuards")],-1),tR={style:{"text-align":"left"}},nR=e("code",null,"Record",-1),sR=e("code",null,"string",-1),lR=e("code",null,"SubscriptionBeforeGuardHook",-1),oR=e("code",null,"ServiceClassType",-1),aR=e("code",null,"FunctionPayloadType",-1),dR=e("code",null,"FunctionParamsType",-1),iR=e("h4",{id:"returns-43",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-43","aria-hidden":"true"},"#"),t(" Returns")],-1),cR=e("code",null,"SubscriptionFunction",-1),rR=e("code",null,"ServiceClassType",-1),uR=e("code",null,"MessagePayloadType",-1),hR=e("code",null,"MessageParamsType",-1),pR=e("code",null,"MessagePayloadType",-1),_R=e("code",null,"MessageParamsType",-1),fR=e("code",null,"MessageResultType",-1),gR=e("h4",{id:"defined-in-129",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-129","aria-hidden":"true"},"#"),t(" Defined in")],-1),mR={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/SubscriptionDefinitionBuilder/getSubscriptionFunctionWithValidation.impl.ts#L13",target:"_blank",rel:"noopener noreferrer"},yR=e("hr",null,null,-1),bR=e("h3",{id:"initdefaultconfigstore",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initdefaultconfigstore","aria-hidden":"true"},"#"),t(" initDefaultConfigStore")],-1),xR=e("strong",null,"initDefaultConfigStore",-1),vR=e("code",null,"options",-1),SR=e("code",null,"DefaultConfigStore",-1),TR=e("h4",{id:"parameters-40",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-40","aria-hidden":"true"},"#"),t(" Parameters")],-1),kR=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),CR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"options")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")])],-1),PR=e("td",{style:{"text-align":"left"}},[e("code",null,"options.logger")],-1),wR={style:{"text-align":"left"}},MR=e("code",null,"Logger",-1),DR=e("h4",{id:"returns-44",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-44","aria-hidden":"true"},"#"),t(" Returns")],-1),ER=e("code",null,"DefaultConfigStore",-1),IR=e("h4",{id:"defined-in-130",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-130","aria-hidden":"true"},"#"),t(" Defined in")],-1),RR={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/DefaultConfigStore/initDefaultConfigStore.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},FR=e("hr",null,null,-1),BR=e("h3",{id:"initdefaultsecretstore",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initdefaultsecretstore","aria-hidden":"true"},"#"),t(" initDefaultSecretStore")],-1),NR=e("strong",null,"initDefaultSecretStore",-1),LR=e("code",null,"options",-1),OR=e("code",null,"DefaultSecretStore",-1),HR=e("h4",{id:"parameters-41",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-41","aria-hidden":"true"},"#"),t(" Parameters")],-1),jR=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),AR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"options")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")])],-1),qR=e("td",{style:{"text-align":"left"}},[e("code",null,"options.logger")],-1),GR={style:{"text-align":"left"}},VR=e("code",null,"Logger",-1),zR=e("h4",{id:"returns-45",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-45","aria-hidden":"true"},"#"),t(" Returns")],-1),UR=e("code",null,"DefaultSecretStore",-1),ZR=e("h4",{id:"defined-in-131",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-131","aria-hidden":"true"},"#"),t(" Defined in")],-1),QR={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/DefaultSecretStore/initDefaultSecretStore.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},WR=e("hr",null,null,-1),KR=e("h3",{id:"initdefaultstatestore",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initdefaultstatestore","aria-hidden":"true"},"#"),t(" initDefaultStateStore")],-1),$R=e("strong",null,"initDefaultStateStore",-1),YR=e("code",null,"options",-1),XR=e("code",null,"DefaultStateStore",-1),JR=e("h4",{id:"parameters-42",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-42","aria-hidden":"true"},"#"),t(" Parameters")],-1),eF=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),tF=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"options")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")])],-1),nF=e("td",{style:{"text-align":"left"}},[e("code",null,"options.logger")],-1),sF={style:{"text-align":"left"}},lF=e("code",null,"Logger",-1),oF=e("h4",{id:"returns-46",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-46","aria-hidden":"true"},"#"),t(" Returns")],-1),aF=e("code",null,"DefaultStateStore",-1),dF=e("h4",{id:"defined-in-132",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-132","aria-hidden":"true"},"#"),t(" Defined in")],-1),iF={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/DefaultStateStore/initDefaultStateStore.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},cF=e("hr",null,null,-1),rF=e("h3",{id:"initlogger",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initlogger","aria-hidden":"true"},"#"),t(" initLogger")],-1),uF=e("strong",null,"initLogger",-1),hF=e("code",null,"level?",-1),pF=e("code",null,"opt?",-1),_F=e("code",null,"Logger",-1),fF=e("p",null,"Create a new logger with the given minimum log level",-1),gF=e("h4",{id:"parameters-43",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-43","aria-hidden":"true"},"#"),t(" Parameters")],-1),mF=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),yF=e("td",{style:{"text-align":"left"}},[e("code",null,"level")],-1),bF={style:{"text-align":"left"}},xF=e("code",null,"LogLevelName",-1),vF=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"opt?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"LoggerOptions")])],-1),SF=e("h4",{id:"returns-47",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-47","aria-hidden":"true"},"#"),t(" Returns")],-1),TF=e("code",null,"Logger",-1),kF=e("h4",{id:"defined-in-133",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-133","aria-hidden":"true"},"#"),t(" Defined in")],-1),CF={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/DefaultLogger/initLogger.impl.ts#L13",target:"_blank",rel:"noopener noreferrer"},PF=e("hr",null,null,-1),wF=e("h3",{id:"iscustommessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscustommessage","aria-hidden":"true"},"#"),t(" isCustomMessage")],-1),MF=e("p",null,[t("▸ "),e("strong",null,"isCustomMessage"),t("("),e("code",null,"message"),t("): message is CustomMessage")],-1),DF=e("p",null,"Checks if a PURISTA message is type of custom message",-1),EF=e("h4",{id:"parameters-44",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-44","aria-hidden":"true"},"#"),t(" Parameters")],-1),IF=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),RF=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),FF={style:{"text-align":"left"}},BF=e("code",null,"EBMessage",-1),NF=e("td",{style:{"text-align":"left"}},"any PURISTA message",-1),LF=e("h4",{id:"returns-48",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-48","aria-hidden":"true"},"#"),t(" Returns")],-1),OF=e("p",null,"message is CustomMessage",-1),HF=e("p",null,"true if message is type of custom message",-1),jF=e("h4",{id:"defined-in-134",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-134","aria-hidden":"true"},"#"),t(" Defined in")],-1),AF={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/isCustomMessage.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},qF=a('<hr><h3 id="ishttpexposedservicemeta" tabindex="-1"><a class="header-anchor" href="#ishttpexposedservicemeta" aria-hidden="true">#</a> isHttpExposedServiceMeta</h3><p>▸ <strong>isHttpExposedServiceMeta</strong>(<code>input?</code>): input is HttpExposedServiceMeta</p><p>Checks if given input is type of HttpExposedServiceMeta</p><h4 id="parameters-45" tabindex="-1"><a class="header-anchor" href="#parameters-45" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input?</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns-49" tabindex="-1"><a class="header-anchor" href="#returns-49" aria-hidden="true">#</a> Returns</h4><p>input is HttpExposedServiceMeta</p><p>boolean - true if input is type of HttpExposedServiceMeta</p><h4 id="defined-in-135" tabindex="-1"><a class="header-anchor" href="#defined-in-135" aria-hidden="true">#</a> Defined in</h4>',10),GF={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/HttpServer/types/isHttpExposedServiceMeta.impl.ts#L8",target:"_blank",rel:"noopener noreferrer"},VF=e("hr",null,null,-1),zF=e("h3",{id:"isinfomessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#isinfomessage","aria-hidden":"true"},"#"),t(" isInfoMessage")],-1),UF=e("p",null,[t("▸ "),e("strong",null,"isInfoMessage"),t("("),e("code",null,"message"),t("): message is InfoMessage")],-1),ZF=e("h4",{id:"parameters-46",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-46","aria-hidden":"true"},"#"),t(" Parameters")],-1),QF=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),WF=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),KF={style:{"text-align":"left"}},$F=e("code",null,"EBMessage",-1),YF=e("h4",{id:"returns-50",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-50","aria-hidden":"true"},"#"),t(" Returns")],-1),XF=e("p",null,"message is InfoMessage",-1),JF=e("h4",{id:"defined-in-136",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-136","aria-hidden":"true"},"#"),t(" Defined in")],-1),eB={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/infoType/isInfoMessage.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},tB=e("hr",null,null,-1),nB=e("h3",{id:"isinfoservicefunctionadded",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#isinfoservicefunctionadded","aria-hidden":"true"},"#"),t(" isInfoServiceFunctionAdded")],-1),sB=e("p",null,[t("▸ "),e("strong",null,"isInfoServiceFunctionAdded"),t("("),e("code",null,"message"),t("): message is InfoServiceFunctionAdded")],-1),lB=e("h4",{id:"parameters-47",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-47","aria-hidden":"true"},"#"),t(" Parameters")],-1),oB=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),aB=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),dB={style:{"text-align":"left"}},iB=e("code",null,"EBMessage",-1),cB=e("h4",{id:"returns-51",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-51","aria-hidden":"true"},"#"),t(" Returns")],-1),rB=e("p",null,"message is InfoServiceFunctionAdded",-1),uB=e("h4",{id:"defined-in-137",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-137","aria-hidden":"true"},"#"),t(" Defined in")],-1),hB={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/core/types/infoType/isInfoServiceFunctionAdded.impl.ts#L5",target:"_blank",rel:"noopener noreferrer"},pB=a('<hr><h3 id="ismessagematchingsubscription" tabindex="-1"><a class="header-anchor" href="#ismessagematchingsubscription" aria-hidden="true">#</a> isMessageMatchingSubscription</h3><p>▸ <strong>isMessageMatchingSubscription</strong>(<code>_log</code>, <code>message</code>, <code>subscription</code>): <code>boolean</code></p><h4 id="parameters-48" tabindex="-1"><a class="header-anchor" href="#parameters-48" aria-hidden="true">#</a> Parameters</h4>',4),_B=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),fB=e("td",{style:{"text-align":"left"}},[e("code",null,"_log")],-1),gB={style:{"text-align":"left"}},mB=e("code",null,"Logger",-1),yB=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),bB={style:{"text-align":"left"}},xB=e("code",null,"EBMessage",-1),vB=e("td",{style:{"text-align":"left"}},[e("code",null,"subscription")],-1),SB={style:{"text-align":"left"}},TB=e("code",null,"SubscriptionStorageEntry",-1),kB=e("h4",{id:"returns-52",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-52","aria-hidden":"true"},"#"),t(" Returns")],-1),CB=e("p",null,[e("code",null,"boolean")],-1),PB=e("h4",{id:"defined-in-138",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-138","aria-hidden":"true"},"#"),t(" Defined in")],-1),wB={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/core/src/DefaultEventBridge/isMessageMatchingSubscription.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"};function MB(DB,EB){const s=d("RouterLink"),o=d("ExternalLinkIcon");return c(),r("div",null,[e("p",null,[n(s,{to:"/api/"},{default:l(()=>[t("PURISTA API - v1.4.9")]),_:1}),t(" / "),n(s,{to:"/api/modules.html"},{default:l(()=>[t("Modules")]),_:1}),t(" / @purista/core")]),h,p,_,f,g,e("p",null,[t("It contains the builders, classes & types and some helper functions. For easier testing of commands and subscriptions, the package contains different mock creation helper based on "),e("a",m,[t("jest"),n(o)]),t(" and "),e("a",y,[t("sinon"),n(o)])]),e("p",null,[t("Learn PURIST at "),e("a",b,[t("purista.dev"),n(o)])]),x,v,e("ul",null,[e("li",null,[n(s,{to:"/api/modules/purista_core.internal.html"},{default:l(()=>[t("internal")]),_:1})])]),S,e("ul",null,[e("li",null,[n(s,{to:"/api/enums/purista_core.EBMessageType.html"},{default:l(()=>[t("EBMessageType")]),_:1})]),e("li",null,[n(s,{to:"/api/enums/purista_core.PuristaSpanName.html"},{default:l(()=>[t("PuristaSpanName")]),_:1})]),e("li",null,[n(s,{to:"/api/enums/purista_core.PuristaSpanTag.html"},{default:l(()=>[t("PuristaSpanTag")]),_:1})]),e("li",null,[n(s,{to:"/api/enums/purista_core.StatusCode.html"},{default:l(()=>[t("StatusCode")]),_:1})]),e("li",null,[n(s,{to:"/api/enums/purista_core.StoreType.html"},{default:l(()=>[t("StoreType")]),_:1})])]),T,e("ul",null,[e("li",null,[n(s,{to:"/api/enums/purista_core.ServiceEventsNames.html"},{default:l(()=>[t("ServiceEventsNames")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.Service.html"},{default:l(()=>[t("Service")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.ServiceBuilder.html"},{default:l(()=>[t("ServiceBuilder")]),_:1})]),e("li",null,[n(s,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:l(()=>[t("ServiceClass")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#serviceconstructorinput"},{default:l(()=>[t("ServiceConstructorInput")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#serviceeventsinternal"},{default:l(()=>[t("ServiceEventsInternal")]),_:1})])]),k,e("ul",null,[e("li",null,[n(s,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:l(()=>[t("CommandDefinitionBuilder")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:l(()=>[t("CommandAfterGuardHook")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:l(()=>[t("CommandBeforeGuardHook")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#commanddefinition"},{default:l(()=>[t("CommandDefinition")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#commanderrorresponse"},{default:l(()=>[t("CommandErrorResponse")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#commandfunction"},{default:l(()=>[t("CommandFunction")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:l(()=>[t("CommandFunctionContext")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#commandfunctioncontextenhancements"},{default:l(()=>[t("CommandFunctionContextEnhancements")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#commandresponse"},{default:l(()=>[t("CommandResponse")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#commandsuccessresponse"},{default:l(()=>[t("CommandSuccessResponse")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:l(()=>[t("CommandTransformFunctionContext")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:l(()=>[t("CommandTransformInputHook")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:l(()=>[t("CommandTransformOutputHook")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#iscommand"},{default:l(()=>[t("isCommand")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#iscommanderrorresponse"},{default:l(()=>[t("isCommandErrorResponse")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#iscommandresponse"},{default:l(()=>[t("isCommandResponse")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#iscommandsuccessresponse"},{default:l(()=>[t("isCommandSuccessResponse")]),_:1})])]),C,e("ul",null,[e("li",null,[n(s,{to:"/api/classes/purista_core.ConfigStoreBaseClass.html"},{default:l(()=>[t("ConfigStoreBaseClass")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultConfigStore.html"},{default:l(()=>[t("DefaultConfigStore")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultSecretStore.html"},{default:l(()=>[t("DefaultSecretStore")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultStateStore.html"},{default:l(()=>[t("DefaultStateStore")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.SecretStoreBaseClass.html"},{default:l(()=>[t("SecretStoreBaseClass")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.StateStoreBaseClass.html"},{default:l(()=>[t("StateStoreBaseClass")]),_:1})]),e("li",null,[n(s,{to:"/api/interfaces/purista_core.ConfigStore.html"},{default:l(()=>[t("ConfigStore")]),_:1})]),e("li",null,[n(s,{to:"/api/interfaces/purista_core.SecretStore.html"},{default:l(()=>[t("SecretStore")]),_:1})]),e("li",null,[n(s,{to:"/api/interfaces/purista_core.StateStore.html"},{default:l(()=>[t("StateStore")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:l(()=>[t("ConfigDeleteFunction")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:l(()=>[t("ConfigGetterFunction")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:l(()=>[t("ConfigSetterFunction")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:l(()=>[t("SecretDeleteFunction")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:l(()=>[t("SecretGetterFunction")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:l(()=>[t("SecretSetterFunction")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:l(()=>[t("StateDeleteFunction")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:l(()=>[t("StateGetterFunction")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:l(()=>[t("StateSetterFunction")]),_:1})])]),P,e("ul",null,[e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html"},{default:l(()=>[t("DefaultEventBridge")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:l(()=>[t("EventBridgeBaseClass")]),_:1})]),e("li",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:l(()=>[t("EventBridge")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#eventbridgeeventsbasic"},{default:l(()=>[t("EventBridgeEventsBasic")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getcommandqueuename"},{default:l(()=>[t("getCommandQueueName")]),_:1})])]),w,e("ul",null,[e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultLogger.html"},{default:l(()=>[t("DefaultLogger")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:l(()=>[t("GenericEventEmitter")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.HandledError.html"},{default:l(()=>[t("HandledError")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.Logger.html"},{default:l(()=>[t("Logger")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.UnhandledError.html"},{default:l(()=>[t("UnhandledError")]),_:1})])]),M,e("ul",null,[e("li",null,[n(s,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:l(()=>[t("SubscriptionDefinitionBuilder")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#subscription"},{default:l(()=>[t("Subscription")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#subscriptionafterguardhook"},{default:l(()=>[t("SubscriptionAfterGuardHook")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#subscriptionbeforeguardhook"},{default:l(()=>[t("SubscriptionBeforeGuardHook")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#subscriptiondefinition"},{default:l(()=>[t("SubscriptionDefinition")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#subscriptionfunction"},{default:l(()=>[t("SubscriptionFunction")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:l(()=>[t("SubscriptionFunctionContext")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#subscriptionfunctioncontextenhancements"},{default:l(()=>[t("SubscriptionFunctionContextEnhancements")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:l(()=>[t("SubscriptionTransformFunctionContext")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:l(()=>[t("SubscriptionTransformInputHook")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:l(()=>[t("SubscriptionTransformOutputHook")]),_:1})])]),D,e("ul",null,[e("li",null,[n(s,{to:"/api/interfaces/purista_core.IEmitter.html"},{default:l(()=>[t("IEmitter")]),_:1})]),e("li",null,[n(s,{to:"/api/interfaces/purista_core.ILogger.html"},{default:l(()=>[t("ILogger")]),_:1})])]),E,e("ul",null,[e("li",null,[n(s,{to:"/api/modules/purista_core.html#command"},{default:l(()=>[t("Command")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#commanddefinitionlist"},{default:l(()=>[t("CommandDefinitionList")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:l(()=>[t("CommandDefinitionMetadataBase")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#complete"},{default:l(()=>[t("Complete")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#compressionmethod"},{default:l(()=>[t("CompressionMethod")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#contenttype"},{default:l(()=>[t("ContentType")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#contextbase"},{default:l(()=>[t("ContextBase")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#correlationid"},{default:l(()=>[t("CorrelationId")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#custommessage"},{default:l(()=>[t("CustomMessage")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#defaultconfigstoreconfig"},{default:l(()=>[t("DefaultConfigStoreConfig")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#defaulteventbridgeconfig"},{default:l(()=>[t("DefaultEventBridgeConfig")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#defaultsecretstoreconfig"},{default:l(()=>[t("DefaultSecretStoreConfig")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#defaultstatestoreconfig"},{default:l(()=>[t("DefaultStateStoreConfig")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:l(()=>[t("DefinitionEventBridgeConfig")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:l(()=>[t("EBMessage")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:l(()=>[t("EBMessageAddress")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:l(()=>[t("EBMessageBase")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#ebmessageid"},{default:l(()=>[t("EBMessageId")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:l(()=>[t("EmitCustomMessageFunction")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#errorresponsepayload"},{default:l(()=>[t("ErrorResponsePayload")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#eventbridgeconfig"},{default:l(()=>[t("EventBridgeConfig")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#eventbridgeevents"},{default:l(()=>[t("EventBridgeEvents")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#eventkey"},{default:l(()=>[t("EventKey")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#eventmap"},{default:l(()=>[t("EventMap")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#httpexposedservicemeta"},{default:l(()=>[t("HttpExposedServiceMeta")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#infoinvoketimeout"},{default:l(()=>[t("InfoInvokeTimeout")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#infoinvoketimeoutpayload"},{default:l(()=>[t("InfoInvokeTimeoutPayload")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#infomessage"},{default:l(()=>[t("InfoMessage")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#infomessagetype"},{default:l(()=>[t("InfoMessageType")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#infoservicebase"},{default:l(()=>[t("InfoServiceBase")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#infoservicedrain"},{default:l(()=>[t("InfoServiceDrain")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#infoservicefunctionadded"},{default:l(()=>[t("InfoServiceFunctionAdded")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#infoserviceinit"},{default:l(()=>[t("InfoServiceInit")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#infoservicenotready"},{default:l(()=>[t("InfoServiceNotReady")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#infoserviceready"},{default:l(()=>[t("InfoServiceReady")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#infoserviceshutdown"},{default:l(()=>[t("InfoServiceShutdown")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#infosubscriptionerror"},{default:l(()=>[t("InfoSubscriptionError")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#instanceid"},{default:l(()=>[t("InstanceId")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#logfnparamtype"},{default:l(()=>[t("LogFnParamType")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#loglevelname"},{default:l(()=>[t("LogLevelName")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#loggeroptions"},{default:l(()=>[t("LoggerOptions")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#loggerstubs"},{default:l(()=>[t("LoggerStubs")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#newable"},{default:l(()=>[t("Newable")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#pendiginvocation"},{default:l(()=>[t("PendigInvocation")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#principalid"},{default:l(()=>[t("PrincipalId")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#queryparameter"},{default:l(()=>[t("QueryParameter")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#serviceevents"},{default:l(()=>[t("ServiceEvents")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#serviceinfotype"},{default:l(()=>[t("ServiceInfoType")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#shutdownentry"},{default:l(()=>[t("ShutdownEntry")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#storebaseconfig"},{default:l(()=>[t("StoreBaseConfig")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#subscriptiondefinitionlist"},{default:l(()=>[t("SubscriptionDefinitionList")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#subscriptiondefinitionmetadatabase"},{default:l(()=>[t("SubscriptionDefinitionMetadataBase")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#subscriptionstorageentry"},{default:l(()=>[t("SubscriptionStorageEntry")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#supportedhttpmethod"},{default:l(()=>[t("SupportedHttpMethod")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#traceid"},{default:l(()=>[t("TraceId")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:l(()=>[t("addPrefixToObject")]),_:1})])]),I,e("ul",null,[e("li",null,[n(s,{to:"/api/modules/purista_core.html#min_content_size_for_compression"},{default:l(()=>[t("MIN_CONTENT_SIZE_FOR_COMPRESSION")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#serviceinfovalidator"},{default:l(()=>[t("ServiceInfoValidator")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#infomessagetypes"},{default:l(()=>[t("infoMessageTypes")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#puristaversion"},{default:l(()=>[t("puristaVersion")]),_:1})])]),R,e("ul",null,[e("li",null,[n(s,{to:"/api/modules/purista_core.html#converttocamelcase"},{default:l(()=>[t("convertToCamelCase")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#converttokebabcase"},{default:l(()=>[t("convertToKebabCase")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#converttopascalcase"},{default:l(()=>[t("convertToPascalCase")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#converttosnakecase"},{default:l(()=>[t("convertToSnakeCase")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#createerrorresponse"},{default:l(()=>[t("createErrorResponse")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#createinfomessage"},{default:l(()=>[t("createInfoMessage")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#createsuccessresponse"},{default:l(()=>[t("createSuccessResponse")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#deserializeotp"},{default:l(()=>[t("deserializeOtp")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getcleanedmessage"},{default:l(()=>[t("getCleanedMessage")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#geterrormessageforcode"},{default:l(()=>[t("getErrorMessageForCode")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getnewcorrelationid"},{default:l(()=>[t("getNewCorrelationId")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getnewebmessageid"},{default:l(()=>[t("getNewEBMessageId")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getnewinstanceid"},{default:l(()=>[t("getNewInstanceId")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getnewtraceid"},{default:l(()=>[t("getNewTraceId")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getsubscriptionqueuename"},{default:l(()=>[t("getSubscriptionQueueName")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getuniqueid"},{default:l(()=>[t("getUniqueId")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#gracefulshutdown"},{default:l(()=>[t("gracefulShutdown")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#isdevelop"},{default:l(()=>[t("isDevelop")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#serializeotp"},{default:l(()=>[t("serializeOtp")]),_:1})])]),F,e("ul",null,[e("li",null,[n(s,{to:"/api/modules/purista_core.html#getcommandcontextmock"},{default:l(()=>[t("getCommandContextMock")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getcommanderrormessagemock"},{default:l(()=>[t("getCommandErrorMessageMock")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getcommandmessagemock"},{default:l(()=>[t("getCommandMessageMock")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getcommandsuccessmessagemock"},{default:l(()=>[t("getCommandSuccessMessageMock")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getcommandtransformcontextmock"},{default:l(()=>[t("getCommandTransformContextMock")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getcustommessagemessagemock"},{default:l(()=>[t("getCustomMessageMessageMock")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#geteventbridgemock"},{default:l(()=>[t("getEventBridgeMock")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getloggermock"},{default:l(()=>[t("getLoggerMock")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getsubscriptioncontextmock"},{default:l(()=>[t("getSubscriptionContextMock")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getsubscriptiontransformcontextmock"},{default:l(()=>[t("getSubscriptionTransformContextMock")]),_:1})])]),B,e("ul",null,[e("li",null,[n(s,{to:"/api/modules/purista_core.html#getcommandfunctionwithvalidation"},{default:l(()=>[t("getCommandFunctionWithValidation")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getdefaulteventbridgeconfig"},{default:l(()=>[t("getDefaultEventBridgeConfig")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getdefaultloglevel"},{default:l(()=>[t("getDefaultLogLevel")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getnewsubscriptionstorageentry"},{default:l(()=>[t("getNewSubscriptionStorageEntry")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#getsubscriptionfunctionwithvalidation"},{default:l(()=>[t("getSubscriptionFunctionWithValidation")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#initdefaultconfigstore"},{default:l(()=>[t("initDefaultConfigStore")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#initdefaultsecretstore"},{default:l(()=>[t("initDefaultSecretStore")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#initdefaultstatestore"},{default:l(()=>[t("initDefaultStateStore")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#initlogger"},{default:l(()=>[t("initLogger")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#iscustommessage"},{default:l(()=>[t("isCustomMessage")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#ishttpexposedservicemeta"},{default:l(()=>[t("isHttpExposedServiceMeta")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#isinfomessage"},{default:l(()=>[t("isInfoMessage")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#isinfoservicefunctionadded"},{default:l(()=>[t("isInfoServiceFunctionAdded")]),_:1})]),e("li",null,[n(s,{to:"/api/modules/purista_core.html#ismessagematchingsubscription"},{default:l(()=>[t("isMessageMatchingSubscription")]),_:1})])]),N,L,O,H,e("p",null,[e("a",j,[t("packages/core/src/core/types/ServiceEvents.ts:11"),n(o)])]),A,e("p",null,[e("a",q,[t("packages/core/src/core/Service/Service.impl.ts:73"),n(o)])]),G,e("table",null,[V,e("tbody",null,[z,U,e("tr",null,[Z,e("td",Q,[t("extends "),n(s,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:l(()=>[W]),_:1}),t(" = "),n(s,{to:"/api/classes/purista_core.Service.html"},{default:l(()=>[K]),_:1}),t("<"),$,t(">")])])])]),Y,e("p",null,[e("a",X,[t("packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:38"),n(o)])]),J,e("p",null,[e("a",ee,[t("packages/core/src/core/types/ServiceClass.ts:11"),n(o)])]),te,e("table",null,[ne,e("tbody",null,[e("tr",null,[se,e("td",le,[n(s,{to:"/api/modules/purista_core.html#commanddefinitionlist"},{default:l(()=>[oe]),_:1}),t("<"),ae,t(">")]),de]),ie,e("tr",null,[ce,e("td",re,[n(s,{to:"/api/interfaces/purista_core.ConfigStore.html"},{default:l(()=>[ue]),_:1})]),he]),e("tr",null,[pe,e("td",_e,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:l(()=>[fe]),_:1})]),ge]),e("tr",null,[me,e("td",ye,[n(s,{to:"/api/modules/purista_core.html#serviceinfotype"},{default:l(()=>[be]),_:1})]),xe]),e("tr",null,[ve,e("td",Se,[n(s,{to:"/api/classes/purista_core.Logger.html"},{default:l(()=>[Te]),_:1})]),ke]),e("tr",null,[Ce,e("td",Pe,[n(s,{to:"/api/interfaces/purista_core.SecretStore.html"},{default:l(()=>[we]),_:1})]),Me]),De,e("tr",null,[Ee,e("td",Ie,[n(s,{to:"/api/interfaces/purista_core.StateStore.html"},{default:l(()=>[Re]),_:1})]),Fe]),e("tr",null,[Be,e("td",Ne,[n(s,{to:"/api/modules/purista_core.html#subscriptiondefinitionlist"},{default:l(()=>[Le]),_:1}),t("<"),Oe,t(">")]),He])])]),je,e("p",null,[e("a",Ae,[t("packages/core/src/core/types/ServiceConstructorInput.ts:15"),n(o)])]),qe,e("table",null,[Ge,e("tbody",null,[Ve,ze,e("tr",null,[Ue,e("td",Ze,[t("{ "),Qe,t(": "),We,t(" ; "),Ke,t(": "),n(s,{to:"/api/classes/purista_core.HandledError.html"},{default:l(()=>[$e]),_:1}),t(" ; "),Ye,t(": "),n(s,{to:"/api/modules/purista_core.html#traceid"},{default:l(()=>[Xe]),_:1}),t(" }")]),Je]),et,e("tr",null,[tt,e("td",nt,[n(s,{to:"/api/classes/purista_core.HandledError.html"},{default:l(()=>[st]),_:1})]),lt]),e("tr",null,[ot,e("td",at,[n(s,{to:"/api/modules/purista_core.html#traceid"},{default:l(()=>[dt]),_:1})]),it]),e("tr",null,[ct,e("td",rt,[t("{ "),ut,t(": "),n(s,{to:"/api/classes/purista_core.HandledError.html"},{default:l(()=>[ht]),_:1}),t(" ; "),pt,t(": "),_t,t(" ; "),ft,t(": "),n(s,{to:"/api/modules/purista_core.html#traceid"},{default:l(()=>[gt]),_:1}),t(" }")]),mt]),e("tr",null,[yt,e("td",bt,[n(s,{to:"/api/classes/purista_core.HandledError.html"},{default:l(()=>[xt]),_:1})]),vt]),St,e("tr",null,[Tt,e("td",kt,[n(s,{to:"/api/modules/purista_core.html#traceid"},{default:l(()=>[Ct]),_:1})]),Pt]),wt,Mt,Dt,e("tr",null,[Et,e("td",It,[t("{ "),Rt,t(": "),Ft,t(" ; "),Bt,t(": "),Nt,t(" ; "),Lt,t(": "),n(s,{to:"/api/modules/purista_core.html#traceid"},{default:l(()=>[Ot]),_:1}),t(" }")]),Ht]),jt,At,e("tr",null,[qt,e("td",Gt,[n(s,{to:"/api/modules/purista_core.html#traceid"},{default:l(()=>[Vt]),_:1})]),zt]),e("tr",null,[Ut,e("td",Zt,[t("{ "),Qt,t(": "),Wt,t(" ; "),Kt,t(": "),$t,t(" ; "),Yt,t(": "),n(s,{to:"/api/modules/purista_core.html#traceid"},{default:l(()=>[Xt]),_:1}),t(" }")]),Jt]),en,tn,e("tr",null,[nn,e("td",sn,[n(s,{to:"/api/modules/purista_core.html#traceid"},{default:l(()=>[ln]),_:1})]),on])])]),an,e("p",null,[e("a",dn,[t("packages/core/src/core/types/ServiceEvents.ts:54"),n(o)])]),cn,e("table",null,[rn,e("tbody",null,[e("tr",null,[un,e("td",hn,[t("extends "),n(s,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:l(()=>[pn]),_:1})])]),_n,fn,gn,mn,yn,bn])]),xn,e("p",null,[e("a",vn,[t("packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:31"),n(o)])]),Sn,e("p",null,[t("Ƭ "),Tn,t("<"),kn,t(", "),Cn,t(", "),Pn,t(", "),wn,t(", "),Mn,t(", "),Dn,t(">: ("),En,t(": "),In,t(", "),Rn,t(": "),n(s,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:l(()=>[Fn]),_:1}),t("<"),Bn,t(", "),Nn,t(">, "),Ln,t(": "),On,t("<"),Hn,t(">, "),jn,t(": "),An,t("<"),qn,t(">, "),Gn,t(": "),Vn,t("<"),zn,t(">) => "),Un,t("<"),Zn,t(">")]),Qn,e("table",null,[Wn,e("tbody",null,[e("tr",null,[Kn,e("td",$n,[n(s,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:l(()=>[Yn]),_:1})])]),Xn,Jn,es,ts,ns])]),ss,e("table",null,[ls,e("tbody",null,[os,e("tr",null,[as,e("td",ds,[n(s,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:l(()=>[is]),_:1}),t("<"),cs,t(", "),rs,t(">")])]),us,hs,ps])]),_s,fs,gs,e("p",null,[e("a",ms,[t("packages/core/src/core/types/commandType/CommandAfterGuardHook.ts:10"),n(o)])]),ys,bs,e("p",null,[t("Ƭ "),xs,t("<"),vs,t(", "),Ss,t(", "),Ts,t(", "),ks,t(", "),Cs,t(">: ("),Ps,t(": "),ws,t(", "),Ms,t(": "),n(s,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:l(()=>[Ds]),_:1}),t("<"),Es,t(", "),Is,t(">, "),Rs,t(": "),Fs,t("<"),Bs,t(">, "),Ns,t(": "),Ls,t("<"),Os,t(">) => "),Hs,t("<"),js,t(">")]),As,e("table",null,[qs,e("tbody",null,[e("tr",null,[Gs,e("td",Vs,[n(s,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:l(()=>[zs]),_:1})])]),Us,Zs,Qs,Ws])]),Ks,e("table",null,[$s,e("tbody",null,[Ys,e("tr",null,[Xs,e("td",Js,[n(s,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:l(()=>[el]),_:1}),t("<"),tl,t(", "),nl,t(">")])]),sl,ll])]),ol,al,dl,e("p",null,[e("a",il,[t("packages/core/src/core/types/commandType/CommandBeforeGuardHook.ts:11"),n(o)])]),cl,e("table",null,[rl,e("tbody",null,[e("tr",null,[ul,e("td",hl,[t("extends "),n(s,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:l(()=>[pl]),_:1}),t(" = "),n(s,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:l(()=>[_l]),_:1})])]),e("tr",null,[fl,e("td",gl,[n(s,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:l(()=>[ml]),_:1})])]),yl,bl,xl,vl,Sl,Tl])]),kl,e("table",null,[Cl,e("tbody",null,[e("tr",null,[Pl,e("td",wl,[n(s,{to:"/api/modules/purista_core.html#commandfunction"},{default:l(()=>[Ml]),_:1}),t("<"),Dl,t(", "),El,t(", "),Il,t(", "),Rl,t(", "),Fl,t(", "),Bl,t(">")]),Nl]),Ll,Ol,e("tr",null,[Hl,e("td",jl,[n(s,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:l(()=>[Al]),_:1})]),ql]),Gl,e("tr",null,[Vl,e("td",zl,[t("{ "),Ul,t(": "),Zl,t("<"),Ql,t(", "),n(s,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:l(()=>[Wl]),_:1}),t("<"),Kl,t(", "),$l,t(", "),Yl,t(", "),Xl,t(", "),Jl,t(", "),eo,t(">> ; "),to,t(": "),no,t("<"),so,t(", "),n(s,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:l(()=>[lo]),_:1}),t("<"),oo,t(", "),ao,t(", "),io,t(", "),co,t(", "),ro,t(">> ; "),uo,t(": { "),ho,t(": "),n(s,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:l(()=>[po]),_:1}),t("<"),_o,t(", "),fo,t(", "),go,t("> ; "),mo,t(": "),yo,t(" ; "),bo,t(": "),xo,t(" } ; "),vo,t(": { "),So,t(": "),n(s,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:l(()=>[To]),_:1}),t("<"),ko,t(", "),Co,t(", "),Po,t(", "),wo,t(", "),Mo,t("> ; "),Do,t(": "),Eo,t(" } }")]),Io]),e("tr",null,[Ro,e("td",Fo,[Bo,t("<"),No,t(", "),n(s,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:l(()=>[Lo]),_:1}),t("<"),Oo,t(", "),Ho,t(", "),jo,t(", "),Ao,t(", "),qo,t(", "),Go,t(">>")]),Vo]),e("tr",null,[zo,e("td",Uo,[Zo,t("<"),Qo,t(", "),n(s,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:l(()=>[Wo]),_:1}),t("<"),Ko,t(", "),$o,t(", "),Yo,t(", "),Xo,t(", "),Jo,t(">>")]),ea]),e("tr",null,[ta,e("td",na,[t("{ "),sa,t(": "),n(s,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:l(()=>[la]),_:1}),t("<"),oa,t(", "),aa,t(", "),da,t("> ; "),ia,t(": "),ca,t(" ; "),ra,t(": "),ua,t(" }")]),ha]),e("tr",null,[pa,e("td",_a,[n(s,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:l(()=>[fa]),_:1}),t("<"),ga,t(", "),ma,t(", "),ya,t(">")]),ba]),xa,va,e("tr",null,[Sa,e("td",Ta,[t("{ "),ka,t(": "),n(s,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:l(()=>[Ca]),_:1}),t("<"),Pa,t(", "),wa,t(", "),Ma,t(", "),Da,t(", "),Ea,t("> ; "),Ia,t(": "),Ra,t(" }")]),Fa]),e("tr",null,[Ba,e("td",Na,[n(s,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:l(()=>[La]),_:1}),t("<"),Oa,t(", "),Ha,t(", "),ja,t(", "),Aa,t(", "),qa,t(">")]),Ga]),Va,za])]),Ua,e("p",null,[e("a",Za,[t("packages/core/src/core/types/commandType/CommandDefinition.ts:17"),n(o)])]),Qa,Wa,e("p",null,[t("Ƭ "),Ka,t(": { "),$a,t(": "),Ya,t(" ; "),Xa,t(": "),Ja,t(" ; "),ed,t(": "),n(s,{to:"/api/modules/purista_core.html#correlationid"},{default:l(()=>[td]),_:1}),t(" ; "),nd,t(": "),sd,t(" ; "),ld,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:l(()=>[od]),_:1}),t(" ; "),ad,t(": { "),dd,t(": "),id,t(" ; "),cd,t(": "),rd,t(" ; "),ud,t(": "),n(s,{to:"/api/enums/purista_core.StatusCode.html"},{default:l(()=>[hd]),_:1}),t(" } ; "),pd,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:l(()=>[_d]),_:1}),t(" ; "),fd,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:l(()=>[gd]),_:1}),t(" } & "),n(s,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:l(()=>[md]),_:1})]),yd,bd,e("p",null,[e("a",xd,[t("packages/core/src/core/types/commandType/CommandErrorResponse.ts:12"),n(o)])]),vd,Sd,e("p",null,[t("Ƭ "),Td,t("<"),kd,t(", "),Cd,t(", "),Pd,t(", "),wd,t(", "),Md,t(", "),Dd,t(">: ("),Ed,t(": "),Id,t(", "),Rd,t(": "),n(s,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:l(()=>[Fd]),_:1}),t("<"),Bd,t(", "),Nd,t(">, "),Ld,t(": "),Od,t("<"),Hd,t(">, "),jd,t(": "),Ad,t("<"),qd,t(">) => "),Gd,t("<"),Vd,t(">")]),zd,e("table",null,[Ud,e("tbody",null,[e("tr",null,[Zd,e("td",Qd,[t("extends "),n(s,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:l(()=>[Wd]),_:1})])]),Kd,$d,Yd,Xd,Jd])]),ei,e("table",null,[ti,e("tbody",null,[ni,e("tr",null,[si,e("td",li,[n(s,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:l(()=>[oi]),_:1}),t("<"),ai,t(", "),di,t(">")])]),ii,ci])]),ri,ui,hi,e("p",null,[e("a",pi,[t("packages/core/src/core/types/commandType/CommandFunction.ts:9"),n(o)])]),_i,fi,e("p",null,[t("Ƭ "),gi,t("<"),mi,t(", "),yi,t(">: "),n(s,{to:"/api/modules/purista_core.html#contextbase"},{default:l(()=>[bi]),_:1}),t(" & "),n(s,{to:"/api/modules/purista_core.html#commandfunctioncontextenhancements"},{default:l(()=>[xi]),_:1}),t("<"),vi,t(", "),Si,t(">")]),Ti,e("p",null,[e("a",ki,[t("packages/core/src/core/types/commandType/CommandFunctionContext.ts:46"),n(o)])]),Ci,e("table",null,[Pi,e("tbody",null,[e("tr",null,[wi,e("td",Mi,[n(s,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:l(()=>[Di]),_:1})]),Ei]),e("tr",null,[Ii,e("td",Ri,[n(s,{to:"/api/modules/purista_core.internal.html#invokefunction"},{default:l(()=>[Fi]),_:1})]),Bi]),e("tr",null,[Ni,e("td",Li,[Oi,t("<"),n(s,{to:"/api/modules/purista_core.html#command"},{default:l(()=>[Hi]),_:1}),t("<"),ji,t(", "),Ai,t(">>")]),qi])])]),Gi,e("p",null,[e("a",Vi,[t("packages/core/src/core/types/commandType/CommandFunctionContext.ts:15"),n(o)])]),zi,Ui,e("p",null,[t("Ƭ "),Zi,t("<"),Qi,t(">: "),n(s,{to:"/api/modules/purista_core.html#commandsuccessresponse"},{default:l(()=>[Wi]),_:1}),t("<"),Ki,t("> | "),n(s,{to:"/api/modules/purista_core.html#commanderrorresponse"},{default:l(()=>[$i]),_:1})]),Yi,e("p",null,[e("a",Xi,[t("packages/core/src/core/types/commandType/CommandResponse.ts:9"),n(o)])]),Ji,ec,e("p",null,[t("Ƭ "),tc,t("<"),nc,t(">: { "),sc,t(": "),n(s,{to:"/api/modules/purista_core.html#correlationid"},{default:l(()=>[lc]),_:1}),t(" ; "),oc,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:l(()=>[ac]),_:1}),t(" ; "),dc,t(": "),ic,t(" ; "),cc,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:l(()=>[rc]),_:1}),t(" ; "),uc,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:l(()=>[hc]),_:1}),t(" } & "),n(s,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:l(()=>[pc]),_:1})]),_c,e("p",null,[e("a",fc,[t("packages/core/src/core/types/commandType/CommandSuccessResponse.ts:12"),n(o)])]),gc,mc,e("p",null,[t("Ƭ "),yc,t("<"),bc,t(", "),xc,t(">: "),n(s,{to:"/api/modules/purista_core.html#contextbase"},{default:l(()=>[vc]),_:1}),t(" & { "),Sc,t(": "),Tc,t("<"),n(s,{to:"/api/modules/purista_core.html#command"},{default:l(()=>[kc]),_:1}),t("<"),Cc,t(", "),Pc,t(">> }")]),wc,e("p",null,[e("a",Mc,[t("packages/core/src/core/types/commandType/CommandTransformFunctionContext.ts:7"),n(o)])]),Dc,Ec,e("p",null,[t("Ƭ "),Ic,t("<"),Rc,t(", "),Fc,t(", "),Bc,t(", "),Nc,t(", "),Lc,t(">: ("),Oc,t(": "),Hc,t(", "),jc,t(": "),n(s,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:l(()=>[Ac]),_:1}),t("<"),qc,t(", "),Gc,t(">, "),Vc,t(": "),zc,t("<"),Uc,t(">, "),Zc,t(": "),Qc,t("<"),Wc,t(">) => "),Kc,t("<{ "),$c,t(": "),Yc,t("<"),Xc,t("> ; "),Jc,t(": "),er,t("<"),tr,t("> }>")]),nr,e("table",null,[sr,e("tbody",null,[lr,e("tr",null,[or,e("td",ar,[n(s,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:l(()=>[dr]),_:1}),t("<"),ir,t(", "),cr,t(">")])]),rr,ur])]),hr,e("p",null,[e("a",pr,[t("packages/core/src/core/types/commandType/CommandTransformInputHook.ts:12"),n(o)])]),_r,fr,e("p",null,[t("Ƭ "),gr,t("<"),mr,t(", "),yr,t(", "),br,t(", "),xr,t(", "),vr,t(">: ("),Sr,t(": "),Tr,t(", "),kr,t(": "),n(s,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:l(()=>[Cr]),_:1}),t("<"),Pr,t(", "),wr,t(">, "),Mr,t(": "),Dr,t("<"),Er,t(">, "),Ir,t(": "),Rr,t("<"),Fr,t(">) => "),Br,t("<"),Nr,t(">")]),Lr,e("table",null,[Or,e("tbody",null,[Hr,e("tr",null,[jr,e("td",Ar,[n(s,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:l(()=>[qr]),_:1}),t("<"),Gr,t(", "),Vr,t(">")])]),zr,Ur])]),Zr,Qr,Wr,e("p",null,[e("a",Kr,[t("packages/core/src/core/types/commandType/CommandTransformOutputHook.ts:7"),n(o)])]),$r,Yr,Xr,Jr,eu,e("table",null,[tu,e("tbody",null,[e("tr",null,[nu,e("td",su,[n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:l(()=>[lu]),_:1})])])])]),ou,au,du,iu,e("p",null,[e("a",cu,[t("packages/core/src/core/types/commandType/isCommand.impl.ts:12"),n(o)])]),ru,e("p",null,[e("a",uu,[t("packages/core/src/core/types/commandType/isCommandErrorResponse.impl.ts:12"),n(o)])]),hu,pu,_u,fu,gu,e("table",null,[mu,e("tbody",null,[e("tr",null,[yu,e("td",bu,[n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:l(()=>[xu]),_:1})])])])]),vu,Su,Tu,ku,e("p",null,[e("a",Cu,[t("packages/core/src/core/types/commandType/isCommandResponse.impl.ts:12"),n(o)])]),Pu,wu,Mu,Du,Eu,e("table",null,[Iu,e("tbody",null,[e("tr",null,[Ru,e("td",Fu,[n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:l(()=>[Bu]),_:1})])])])]),Nu,Lu,Ou,Hu,e("p",null,[e("a",ju,[t("packages/core/src/core/types/commandType/isCommandSuccessResponse.impl.ts:12"),n(o)])]),Au,e("p",null,[e("a",qu,[t("packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts:11"),n(o)])]),Gu,e("p",null,[e("a",Vu,[t("packages/core/src/DefaultConfigStore/DefaultConfigStore.impl.ts:25"),n(o)])]),zu,e("p",null,[e("a",Uu,[t("packages/core/src/DefaultSecretStore/DefaultSecretStore.impl.ts:33"),n(o)])]),Zu,Qu,Wu,e("p",null,[e("a",Ku,[t("packages/core/src/DefaultStateStore/DefaultStateStore.impl.ts:11"),n(o)])]),$u,e("p",null,[e("a",Yu,[t("packages/core/src/core/SecretStore/SecretStoreBaseClass.impl.ts:11"),n(o)])]),Xu,e("p",null,[e("a",Ju,[t("packages/core/src/core/StateStore/StateStoreBaseClass.impl.ts:11"),n(o)])]),eh,th,nh,e("p",null,[e("a",sh,[t("packages/core/src/core/ConfigStore/types/ConfigStore.ts:10"),n(o)])]),lh,oh,ah,e("p",null,[e("a",dh,[t("packages/core/src/core/SecretStore/types/SecretStore.ts:9"),n(o)])]),ih,ch,rh,e("p",null,[e("a",uh,[t("packages/core/src/core/StateStore/types/StateStore.ts:10"),n(o)])]),hh,e("p",null,[e("a",ph,[t("packages/core/src/core/ConfigStore/types/ConfigDeleteFunction.ts:2"),n(o)])]),_h,e("p",null,[e("a",fh,[t("packages/core/src/core/ConfigStore/types/ConfigGetterFunction.ts:2"),n(o)])]),gh,e("p",null,[e("a",mh,[t("packages/core/src/core/ConfigStore/types/ConfigSetterFunction.ts:2"),n(o)])]),yh,e("p",null,[e("a",bh,[t("packages/core/src/core/SecretStore/types/SecretDeleteFunction.ts:2"),n(o)])]),xh,e("p",null,[e("a",vh,[t("packages/core/src/core/SecretStore/types/SecretGetterFunction.ts:2"),n(o)])]),Sh,e("p",null,[e("a",Th,[t("packages/core/src/core/SecretStore/types/SecretSetterFunction.ts:2"),n(o)])]),kh,e("p",null,[e("a",Ch,[t("packages/core/src/core/StateStore/types/StateDeleteFunction.ts:2"),n(o)])]),Ph,e("p",null,[e("a",wh,[t("packages/core/src/core/StateStore/types/StateGetterFunction.ts:2"),n(o)])]),Mh,e("p",null,[e("a",Dh,[t("packages/core/src/core/StateStore/types/StateSetterFunction.ts:2"),n(o)])]),Eh,Ih,Rh,Fh,e("p",null,[e("a",Bh,[t("packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts:50"),n(o)])]),Nh,e("p",null,[e("a",Lh,[t("packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts:17"),n(o)])]),Oh,Hh,jh,e("p",null,[e("a",Ah,[t("packages/core/src/core/EventBridge/types/EventBridge.ts:19"),n(o)])]),qh,Gh,Vh,zh,e("table",null,[Uh,e("tbody",null,[Zh,Qh,Wh,e("tr",null,[Kh,e("td",$h,[n(s,{to:"/api/classes/purista_core.UnhandledError.html"},{default:l(()=>[Yh]),_:1}),t(" | "),Xh]),Jh]),ep])]),tp,e("p",null,[e("a",np,[t("packages/core/src/core/EventBridge/types/EventBridgeEvents.ts:9"),n(o)])]),sp,lp,op,ap,e("table",null,[dp,e("tbody",null,[e("tr",null,[ip,e("td",cp,[n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:l(()=>[rp]),_:1})])])])]),up,hp,pp,e("p",null,[e("a",_p,[t("packages/core/src/core/helper/getCommandQueueName.impl.ts:10"),n(o)])]),fp,e("table",null,[gp,e("tbody",null,[e("tr",null,[mp,e("td",yp,[t("extends "),n(s,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:l(()=>[bp]),_:1}),t(" = "),n(s,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:l(()=>[xp]),_:1})])]),vp,Sp,Tp,kp,Cp,Pp])]),wp,e("p",null,[e("a",Mp,[t("packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:30"),n(o)])]),Dp,e("table",null,[Ep,e("tbody",null,[Ip,e("tr",null,[Rp,e("td",Fp,[n(s,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:l(()=>[Bp]),_:1})]),Np]),Lp,e("tr",null,[Op,e("td",Hp,[n(s,{to:"/api/modules/purista_core.html#instanceid"},{default:l(()=>[jp]),_:1})]),Ap]),e("tr",null,[qp,e("td",Gp,[n(s,{to:"/api/enums/purista_core.EBMessageType.html"},{default:l(()=>[Vp]),_:1})]),zp]),Up,Zp,Qp,e("tr",null,[Wp,e("td",Kp,[n(s,{to:"/api/modules/purista_core.html#principalid"},{default:l(()=>[$p]),_:1})]),Yp]),Xp,Jp,e_,t_,n_,s_,l_,o_,e("tr",null,[a_,e("td",d_,[n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:l(()=>[i_]),_:1})]),c_])])]),r_,e("p",null,[e("a",u_,[t("packages/core/src/core/types/subscription/Subscription.ts:12"),n(o)])]),h_,p_,e("p",null,[t("Ƭ "),__,t("<"),f_,t(", "),g_,t(", "),m_,t(", "),y_,t(">: ("),b_,t(": "),x_,t(", "),v_,t(": "),n(s,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:l(()=>[S_]),_:1}),t(", "),T_,t(": "),k_,t("<"),C_,t(">, "),P_,t(": "),w_,t("<"),M_,t(">, "),D_,t(": "),E_,t("<"),I_,t(">) => "),R_,t("<"),F_,t(">")]),B_,e("table",null,[N_,e("tbody",null,[e("tr",null,[L_,e("td",O_,[n(s,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:l(()=>[H_]),_:1})])]),j_,A_,q_])]),G_,e("table",null,[V_,e("tbody",null,[z_,e("tr",null,[U_,e("td",Z_,[n(s,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:l(()=>[Q_]),_:1})])]),W_,K_,$_])]),Y_,X_,J_,e("p",null,[e("a",e1,[t("packages/core/src/core/types/subscription/SubscriptionAfterGuardHook.ts:10"),n(o)])]),t1,n1,e("p",null,[t("Ƭ "),s1,t("<"),l1,t(", "),o1,t(", "),a1,t(">: ("),d1,t(": "),i1,t(", "),c1,t(": "),n(s,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:l(()=>[r1]),_:1}),t(", "),u1,t(": "),h1,t("<"),p1,t(">, "),_1,t(": "),f1,t("<"),g1,t(">) => "),m1,t("<"),y1,t(">")]),b1,e("table",null,[x1,e("tbody",null,[e("tr",null,[v1,e("td",S1,[n(s,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:l(()=>[T1]),_:1})])]),k1,C1])]),P1,e("table",null,[w1,e("tbody",null,[M1,e("tr",null,[D1,e("td",E1,[n(s,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:l(()=>[I1]),_:1})])]),R1,F1])]),B1,N1,L1,e("p",null,[e("a",O1,[t("packages/core/src/core/types/subscription/SubscriptionBeforeGuardHook.ts:11"),n(o)])]),H1,e("table",null,[j1,e("tbody",null,[e("tr",null,[A1,e("td",q1,[t("extends "),n(s,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:l(()=>[G1]),_:1}),t(" = "),n(s,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:l(()=>[V1]),_:1})])]),e("tr",null,[z1,e("td",U1,[n(s,{to:"/api/modules/purista_core.html#subscriptiondefinitionmetadatabase"},{default:l(()=>[Z1]),_:1})])]),Q1,W1,K1,$1,Y1,X1])]),J1,e("table",null,[ef,e("tbody",null,[e("tr",null,[tf,e("td",nf,[n(s,{to:"/api/modules/purista_core.html#subscriptionfunction"},{default:l(()=>[sf]),_:1}),t("<"),lf,t(", "),of,t(", "),af,t(", "),df,t(", "),cf,t(", "),rf,t(">")]),uf]),hf,e("tr",null,[pf,e("td",_f,[n(s,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:l(()=>[ff]),_:1})]),gf]),mf,e("tr",null,[yf,e("td",bf,[t("{ "),xf,t(": "),vf,t("<"),Sf,t(", "),n(s,{to:"/api/modules/purista_core.html#subscriptionafterguardhook"},{default:l(()=>[Tf]),_:1}),t("<"),kf,t(", "),Cf,t(", "),Pf,t(", "),wf,t(">> ; "),Mf,t(": "),Df,t("<"),Ef,t(", "),n(s,{to:"/api/modules/purista_core.html#subscriptionbeforeguardhook"},{default:l(()=>[If]),_:1}),t("<"),Rf,t(", "),Ff,t(", "),Bf,t(">> ; "),Nf,t(": { "),Lf,t(": "),n(s,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:l(()=>[Of]),_:1}),t("<"),Hf,t(", "),jf,t(", "),Af,t("> ; "),qf,t(": "),Gf,t(" ; "),Vf,t(": "),zf,t(" } ; "),Uf,t(": { "),Zf,t(": "),n(s,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:l(()=>[Qf]),_:1}),t("<"),Wf,t(", "),Kf,t(", "),$f,t(", "),Yf,t("> ; "),Xf,t(": "),Jf,t(" } }")]),eg]),e("tr",null,[tg,e("td",ng,[sg,t("<"),lg,t(", "),n(s,{to:"/api/modules/purista_core.html#subscriptionafterguardhook"},{default:l(()=>[og]),_:1}),t("<"),ag,t(", "),dg,t(", "),ig,t(", "),cg,t(">>")]),rg]),e("tr",null,[ug,e("td",hg,[pg,t("<"),_g,t(", "),n(s,{to:"/api/modules/purista_core.html#subscriptionbeforeguardhook"},{default:l(()=>[fg]),_:1}),t("<"),gg,t(", "),mg,t(", "),yg,t(">>")]),bg]),e("tr",null,[xg,e("td",vg,[t("{ "),Sg,t(": "),n(s,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:l(()=>[Tg]),_:1}),t("<"),kg,t(", "),Cg,t(", "),Pg,t("> ; "),wg,t(": "),Mg,t(" ; "),Dg,t(": "),Eg,t(" }")]),Ig]),e("tr",null,[Rg,e("td",Fg,[n(s,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:l(()=>[Bg]),_:1}),t("<"),Ng,t(", "),Lg,t(", "),Og,t(">")]),Hg]),jg,Ag,e("tr",null,[qg,e("td",Gg,[t("{ "),Vg,t(": "),n(s,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:l(()=>[zg]),_:1}),t("<"),Ug,t(", "),Zg,t(", "),Qg,t(", "),Wg,t("> ; "),Kg,t(": "),$g,t(" }")]),Yg]),e("tr",null,[Xg,e("td",Jg,[n(s,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:l(()=>[em]),_:1}),t("<"),tm,t(", "),nm,t(", "),sm,t(", "),lm,t(">")]),om]),am,e("tr",null,[dm,e("td",im,[n(s,{to:"/api/modules/purista_core.html#instanceid"},{default:l(()=>[cm]),_:1})]),rm]),e("tr",null,[um,e("td",hm,[n(s,{to:"/api/enums/purista_core.EBMessageType.html"},{default:l(()=>[pm]),_:1})]),_m]),fm,e("tr",null,[gm,e("td",mm,[n(s,{to:"/api/modules/purista_core.html#principalid"},{default:l(()=>[ym]),_:1})]),bm]),xm,vm,Sm,Tm,km,Cm,Pm,wm,Mm,Dm])]),Em,e("p",null,[e("a",Im,[t("packages/core/src/core/types/subscription/SubscriptionDefinition.ts:20"),n(o)])]),Rm,Fm,e("p",null,[t("Ƭ "),Bm,t("<"),Nm,t(", "),Lm,t(", "),Om,t(", "),Hm,t(", "),jm,t(", "),Am,t(">: ("),qm,t(": "),Gm,t(", "),Vm,t(": "),n(s,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:l(()=>[zm]),_:1}),t(", "),Um,t(": "),Zm,t("<"),Qm,t(">, "),Wm,t(": "),Km,t("<"),$m,t(">) => "),Ym,t("<"),Xm,t(">")]),Jm,e("table",null,[ey,e("tbody",null,[e("tr",null,[ty,e("td",ny,[t("extends "),n(s,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:l(()=>[sy]),_:1})])]),ly,oy,ay,dy,iy])]),cy,e("table",null,[ry,e("tbody",null,[uy,e("tr",null,[hy,e("td",py,[n(s,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:l(()=>[_y]),_:1})])]),fy,gy])]),my,yy,by,e("p",null,[e("a",xy,[t("packages/core/src/core/types/subscription/SubscriptionFunction.ts:8"),n(o)])]),vy,Sy,e("p",null,[t("Ƭ "),Ty,t(": "),n(s,{to:"/api/modules/purista_core.html#contextbase"},{default:l(()=>[ky]),_:1}),t(" & "),n(s,{to:"/api/modules/purista_core.html#subscriptionfunctioncontextenhancements"},{default:l(()=>[Cy]),_:1})]),Py,wy,e("p",null,[e("a",My,[t("packages/core/src/core/types/subscription/SubscriptionFunctionContext.ts:46"),n(o)])]),Dy,e("table",null,[Ey,e("tbody",null,[e("tr",null,[Iy,e("td",Ry,[n(s,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:l(()=>[Fy]),_:1})]),By]),e("tr",null,[Ny,e("td",Ly,[n(s,{to:"/api/modules/purista_core.internal.html#invokefunction"},{default:l(()=>[Oy]),_:1})]),Hy]),e("tr",null,[jy,e("td",Ay,[qy,t("<"),n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:l(()=>[Gy]),_:1}),t(">")]),Vy])])]),zy,e("p",null,[e("a",Uy,[t("packages/core/src/core/types/subscription/SubscriptionFunctionContext.ts:15"),n(o)])]),Zy,Qy,e("p",null,[t("Ƭ "),Wy,t(": "),n(s,{to:"/api/modules/purista_core.html#contextbase"},{default:l(()=>[Ky]),_:1}),t(" & { "),$y,t(": "),Yy,t("<"),n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:l(()=>[Xy]),_:1}),t("> }")]),Jy,e("p",null,[e("a",eb,[t("packages/core/src/core/types/subscription/SubscriptionTransformFunctionContext.ts:7"),n(o)])]),tb,nb,e("p",null,[t("Ƭ "),sb,t("<"),lb,t(", "),ob,t(", "),ab,t(", "),db,t(", "),ib,t(">: ("),cb,t(": "),rb,t(", "),ub,t(": "),n(s,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:l(()=>[hb]),_:1}),t(", "),pb,t(": "),_b,t("<"),fb,t(">, "),gb,t(": "),mb,t("<"),yb,t(">) => "),bb,t("<{ "),xb,t(": "),vb,t("<"),Sb,t("> ; "),Tb,t(": "),kb,t("<"),Cb,t("> }>")]),Pb,e("table",null,[wb,e("tbody",null,[Mb,e("tr",null,[Db,e("td",Eb,[n(s,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:l(()=>[Ib]),_:1})])]),Rb,Fb])]),Bb,e("p",null,[e("a",Nb,[t("packages/core/src/core/types/subscription/SubscriptionTransformInputHook.ts:6"),n(o)])]),Lb,Ob,e("p",null,[t("Ƭ "),Hb,t("<"),jb,t(", "),Ab,t(", "),qb,t(", "),Gb,t(">: ("),Vb,t(": "),zb,t(", "),Ub,t(": "),n(s,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:l(()=>[Zb]),_:1}),t(", "),Qb,t(": "),Wb,t("<"),Kb,t(">, "),$b,t(": "),Yb,t("<"),Xb,t(">) => "),Jb,t("<"),ex,t(">")]),tx,e("table",null,[nx,e("tbody",null,[sx,e("tr",null,[lx,e("td",ox,[n(s,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:l(()=>[ax]),_:1})])]),dx,ix])]),cx,rx,ux,e("p",null,[e("a",hx,[t("packages/core/src/core/types/subscription/SubscriptionTransformOutputHook.ts:8"),n(o)])]),px,_x,e("p",null,[t("Ƭ "),fx,t("<"),gx,t(", "),mx,t(">: { "),yx,t(": "),n(s,{to:"/api/modules/purista_core.html#correlationid"},{default:l(()=>[bx]),_:1}),t(" ; "),xx,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:l(()=>[vx]),_:1}),t(" ; "),Sx,t(": { "),Tx,t(": "),kx,t(" ; "),Cx,t(": "),Px,t(" } ; "),wx,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:l(()=>[Mx]),_:1}),t(" ; "),Dx,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:l(()=>[Ex]),_:1}),t(" } & "),n(s,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:l(()=>[Ix]),_:1})]),Rx,e("p",null,[e("a",Fx,[t("packages/core/src/core/types/commandType/Command.ts:17"),n(o)])]),Bx,Nx,e("p",null,[t("Ƭ "),Lx,t("<"),Ox,t(">: "),n(s,{to:"/api/modules/purista_core.html#commanddefinition"},{default:l(()=>[Hx]),_:1}),t("<"),jx,t(", "),n(s,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:l(()=>[Ax]),_:1}),t(", "),qx,t(", "),Gx,t(", "),Vx,t(", "),zx,t(", "),Ux,t(", "),Zx,t(">[]")]),Qx,e("table",null,[Wx,e("tbody",null,[e("tr",null,[Kx,e("td",$x,[t("extends "),n(s,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:l(()=>[Yx]),_:1})])])])]),Xx,e("p",null,[e("a",Jx,[t("packages/core/src/core/types/commandType/CommandDefinitionList.ts:12"),n(o)])]),ev,tv,nv,sv,e("table",null,[lv,e("tbody",null,[e("tr",null,[ov,e("td",av,[t("{ "),dv,t(": "),iv,t(" ; "),cv,t(": "),rv,t(" ; "),uv,t(": "),n(s,{to:"/api/modules/purista_core.html#contenttype"},{default:l(()=>[hv]),_:1}),t(" ; "),pv,t(": "),n(s,{to:"/api/modules/purista_core.html#contenttype"},{default:l(()=>[_v]),_:1}),t(" ; "),fv,t(": "),gv,t(" ; "),mv,t(": "),yv,t(" ; "),bv,t(": "),xv,t(" ; "),vv,t(": "),Sv,t(" }")])]),Tv,kv,e("tr",null,[Cv,e("td",Pv,[n(s,{to:"/api/modules/purista_core.html#contenttype"},{default:l(()=>[wv]),_:1})])]),e("tr",null,[Mv,e("td",Dv,[n(s,{to:"/api/modules/purista_core.html#contenttype"},{default:l(()=>[Ev]),_:1})])]),Iv,Rv,Fv,Bv])]),Nv,e("p",null,[e("a",Lv,[t("packages/core/src/core/types/commandType/CommandDefinitionMetadataBase.ts:5"),n(o)])]),Ov,e("p",null,[e("a",Hv,[t("packages/core/src/core/types/Complete.ts:20"),n(o)])]),jv,e("p",null,[e("a",Av,[t("packages/core/src/core/HttpServer/types/CompressionMethod.ts:1"),n(o)])]),qv,e("p",null,[e("a",Gv,[t("packages/core/src/core/types/ContentType.ts:6"),n(o)])]),Vv,zv,Uv,Zv,Qv,e("table",null,[Wv,e("tbody",null,[e("tr",null,[Kv,e("td",$v,[t("{ "),Yv,t(": "),n(s,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:l(()=>[Xv]),_:1}),t(" ; "),Jv,t(": "),n(s,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:l(()=>[e2]),_:1}),t(" ; "),t2,t(": "),n(s,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:l(()=>[n2]),_:1}),t(" }")]),s2]),e("tr",null,[l2,e("td",o2,[n(s,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:l(()=>[a2]),_:1})]),d2]),e("tr",null,[i2,e("td",c2,[n(s,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:l(()=>[r2]),_:1})]),u2]),e("tr",null,[h2,e("td",p2,[n(s,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:l(()=>[_2]),_:1})]),f2]),e("tr",null,[g2,e("td",m2,[n(s,{to:"/api/classes/purista_core.Logger.html"},{default:l(()=>[y2]),_:1})]),b2]),e("tr",null,[x2,e("td",v2,[t("{ "),S2,t(": "),n(s,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:l(()=>[T2]),_:1}),t(" ; "),k2,t(": "),n(s,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:l(()=>[C2]),_:1}),t(" ; "),P2,t(": "),n(s,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:l(()=>[w2]),_:1}),t(" }")]),M2]),e("tr",null,[D2,e("td",E2,[n(s,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:l(()=>[I2]),_:1})]),R2]),e("tr",null,[F2,e("td",B2,[n(s,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:l(()=>[N2]),_:1})]),L2]),e("tr",null,[O2,e("td",H2,[n(s,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:l(()=>[j2]),_:1})]),A2]),q2,e("tr",null,[G2,e("td",V2,[t("{ "),z2,t(": "),n(s,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:l(()=>[U2]),_:1}),t(" ; "),Z2,t(": "),n(s,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:l(()=>[Q2]),_:1}),t(" ; "),W2,t(": "),n(s,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:l(()=>[K2]),_:1}),t(" }")]),$2]),e("tr",null,[Y2,e("td",X2,[n(s,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:l(()=>[J2]),_:1})]),eS]),e("tr",null,[tS,e("td",nS,[n(s,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:l(()=>[sS]),_:1})]),lS]),e("tr",null,[oS,e("td",aS,[n(s,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:l(()=>[dS]),_:1})]),iS]),cS])]),rS,e("p",null,[e("a",uS,[t("packages/core/src/core/types/ContextBase.ts:12"),n(o)])]),hS,pS,_S,fS,gS,e("p",null,[e("a",mS,[t("packages/core/src/core/types/CorrelationId.ts:2"),n(o)])]),yS,bS,e("p",null,[t("Ƭ "),xS,t("<"),vS,t(">: { "),SS,t(": "),TS,t(" ; "),kS,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:l(()=>[CS]),_:1}),t(" ; "),PS,t(": "),wS,t(" ; "),MS,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:l(()=>[DS]),_:1}),t(" ; "),ES,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:l(()=>[IS]),_:1}),t(" } & "),n(s,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:l(()=>[RS]),_:1})]),FS,e("p",null,[e("a",BS,[t("packages/core/src/core/types/CustomMessage.ts:10"),n(o)])]),NS,e("p",null,[e("a",LS,[t("packages/core/src/DefaultConfigStore/types/DefaultConfigStoreConfig.ts:1"),n(o)])]),OS,e("p",null,[e("a",HS,[t("packages/core/src/DefaultEventBridge/types/DefaultEventBridgeConfig.ts:4"),n(o)])]),jS,e("p",null,[e("a",AS,[t("packages/core/src/DefaultSecretStore/types/DefaultSecretStoreConfig.ts:1"),n(o)])]),qS,e("p",null,[e("a",GS,[t("packages/core/src/DefaultStateStore/types/DefaultStateStoreConfig.ts:1"),n(o)])]),VS,e("p",null,[e("a",zS,[t("packages/core/src/core/types/DefinitionEventBridgeConfig.ts:6"),n(o)])]),US,ZS,e("p",null,[t("Ƭ "),QS,t(": "),n(s,{to:"/api/modules/purista_core.html#command"},{default:l(()=>[WS]),_:1}),t(" | "),n(s,{to:"/api/modules/purista_core.html#commandresponse"},{default:l(()=>[KS]),_:1}),t(" | "),n(s,{to:"/api/modules/purista_core.html#infomessage"},{default:l(()=>[$S]),_:1}),t(" | "),n(s,{to:"/api/modules/purista_core.html#custommessage"},{default:l(()=>[YS]),_:1})]),XS,JS,e("p",null,[e("a",e4,[t("packages/core/src/core/types/EBMessage.ts:8"),n(o)])]),t4,e("p",null,[e("a",n4,[t("packages/core/src/core/types/EBMessageAddress.ts:4"),n(o)])]),s4,l4,o4,a4,d4,e("table",null,[i4,e("tbody",null,[c4,e("tr",null,[r4,e("td",u4,[n(s,{to:"/api/modules/purista_core.html#contenttype"},{default:l(()=>[h4]),_:1})]),p4]),e("tr",null,[_4,e("td",f4,[n(s,{to:"/api/modules/purista_core.html#correlationid"},{default:l(()=>[g4]),_:1})]),m4]),y4,e("tr",null,[b4,e("td",x4,[n(s,{to:"/api/modules/purista_core.html#ebmessageid"},{default:l(()=>[v4]),_:1})]),S4]),e("tr",null,[T4,e("td",k4,[n(s,{to:"/api/modules/purista_core.html#instanceid"},{default:l(()=>[C4]),_:1})]),P4]),w4,e("tr",null,[M4,e("td",D4,[n(s,{to:"/api/modules/purista_core.html#principalid"},{default:l(()=>[E4]),_:1})]),I4]),R4,e("tr",null,[F4,e("td",B4,[n(s,{to:"/api/modules/purista_core.html#traceid"},{default:l(()=>[N4]),_:1})]),L4])])]),O4,e("p",null,[e("a",H4,[t("packages/core/src/core/types/EBMessageBase.ts:11"),n(o)])]),j4,A4,q4,G4,V4,e("p",null,[e("a",z4,[t("packages/core/src/core/types/EBMessageId.ts:4"),n(o)])]),U4,Z4,e("p",null,[t("Ƭ "),Q4,t(": <Payload>("),W4,t(": "),K4,t(", "),$4,t(": "),Y4,t(", "),X4,t(": "),n(s,{to:"/api/modules/purista_core.html#contenttype"},{default:l(()=>[J4]),_:1}),t(", "),e6,t(": "),t6,t(") => "),n6,t("<"),s6,t(">")]),l6,e("table",null,[o6,e("tbody",null,[a6,d6,e("tr",null,[i6,e("td",c6,[n(s,{to:"/api/modules/purista_core.html#contenttype"},{default:l(()=>[r6]),_:1})])]),u6])]),h6,p6,_6,e("p",null,[e("a",f6,[t("packages/core/src/core/types/EmitCustomMessageFunction.ts:10"),n(o)])]),g6,m6,y6,b6,x6,e("table",null,[v6,e("tbody",null,[S6,T6,e("tr",null,[k6,e("td",C6,[n(s,{to:"/api/enums/purista_core.StatusCode.html"},{default:l(()=>[P6]),_:1})]),w6]),e("tr",null,[M6,e("td",D6,[n(s,{to:"/api/modules/purista_core.html#traceid"},{default:l(()=>[E6]),_:1})]),I6])])]),R6,e("p",null,[e("a",F6,[t("packages/core/src/core/types/ErrorResponsePayload.ts:7"),n(o)])]),B6,e("table",null,[N6,e("tbody",null,[L6,O6,H6,e("tr",null,[j6,e("td",A6,[n(s,{to:"/api/classes/purista_core.Logger.html"},{default:l(()=>[q6]),_:1})]),G6]),V6])]),z6,e("p",null,[e("a",U6,[t("packages/core/src/core/EventBridge/types/EventBridgeConfig.ts:10"),n(o)])]),Z6,Q6,e("p",null,[t("Ƭ "),W6,t(": "),n(s,{to:"/api/modules/purista_core.html#eventbridgeeventsbasic"},{default:l(()=>[K6]),_:1}),t(" & "),n(s,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:l(()=>[$6]),_:1}),t("<"),n(s,{to:"/api/modules/purista_core.internal.html#customevents-1"},{default:l(()=>[Y6]),_:1}),t(", "),X6,t(">")]),J6,e("p",null,[e("a",e3,[t("packages/core/src/core/EventBridge/types/EventBridgeEvents.ts:30"),n(o)])]),t3,e("table",null,[n3,e("tbody",null,[e("tr",null,[s3,e("td",l3,[t("extends "),n(s,{to:"/api/modules/purista_core.html#eventmap"},{default:l(()=>[o3]),_:1})])])])]),a3,e("p",null,[e("a",d3,[t("packages/core/src/core/types/GenericEventEmitter.ts:5"),n(o)])]),i3,e("p",null,[e("a",c3,[t("packages/core/src/core/types/GenericEventEmitter.ts:3"),n(o)])]),r3,u3,e("p",null,[t("Ƭ "),h3,t("<"),p3,t(">: "),n(s,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:l(()=>[_3]),_:1}),t(" & { "),f3,t(": { "),g3,t(": { "),m3,t(": "),y3,t(" | "),b3,t(" | "),x3,t(" | "),v3,t(" | "),S3,t(" ; "),T3,t(": { "),k3,t(": "),n(s,{to:"/api/enums/purista_core.StatusCode.html"},{default:l(()=>[C3]),_:1}),t("[] ; "),P3,t(": "),w3,t(" ; "),M3,t(": "),D3,t(" ; "),E3,t(": "),I3,t(" ; "),R3,t(": "),n(s,{to:"/api/modules/purista_core.html#queryparameter"},{default:l(()=>[F3]),_:1}),t("<"),B3,t(">[] ; "),N3,t(": "),L3,t(" ; "),O3,t(": "),H3,t("[] } ; "),j3,t(": "),A3,t(" } } }")]),q3,e("p",null,[e("a",G3,[t("packages/core/src/core/HttpServer/types/HttpExposedServiceMeta.ts:4"),n(o)])]),V3,z3,e("p",null,[t("Ƭ "),U3,t(": { "),Z3,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#infoinvoketimeout"},{default:l(()=>[Q3]),_:1}),t(" } & "),n(s,{to:"/api/modules/purista_core.html#infoservicebase"},{default:l(()=>[W3]),_:1})]),K3,e("p",null,[e("a",$3,[t("packages/core/src/core/types/infoType/InfoInvokeTimeout.ts:22"),n(o)])]),Y3,X3,J3,eT,e("table",null,[tT,e("tbody",null,[e("tr",null,[nT,e("td",sT,[n(s,{to:"/api/modules/purista_core.html#correlationid"},{default:l(()=>[lT]),_:1})])]),oT,aT,dT,iT,cT,rT,uT,hT,pT,e("tr",null,[_T,e("td",fT,[n(s,{to:"/api/modules/purista_core.html#traceid"},{default:l(()=>[gT]),_:1})])])])]),mT,e("p",null,[e("a",yT,[t("packages/core/src/core/types/infoType/InfoInvokeTimeout.ts:6"),n(o)])]),bT,xT,e("p",null,[t("Ƭ "),vT,t(": "),n(s,{to:"/api/modules/purista_core.html#infoservicedrain"},{default:l(()=>[ST]),_:1}),t(" | "),n(s,{to:"/api/modules/purista_core.html#infoservicefunctionadded"},{default:l(()=>[TT]),_:1}),t(" | "),n(s,{to:"/api/modules/purista_core.html#infoserviceinit"},{default:l(()=>[kT]),_:1}),t(" | "),n(s,{to:"/api/modules/purista_core.html#infoservicenotready"},{default:l(()=>[CT]),_:1}),t(" | "),n(s,{to:"/api/modules/purista_core.html#infoserviceready"},{default:l(()=>[PT]),_:1}),t(" | "),n(s,{to:"/api/modules/purista_core.html#infoserviceshutdown"},{default:l(()=>[wT]),_:1}),t(" | "),n(s,{to:"/api/modules/purista_core.html#infoinvoketimeout"},{default:l(()=>[MT]),_:1}),t(" | "),n(s,{to:"/api/modules/purista_core.html#infosubscriptionerror"},{default:l(()=>[DT]),_:1})]),ET,e("p",null,[e("a",IT,[t("packages/core/src/core/types/infoType/InfoMessage.ts:11"),n(o)])]),RT,FT,e("p",null,[t("Ƭ "),BT,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#infoservicedrain"},{default:l(()=>[NT]),_:1}),t(" | "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#infoservicefunctionadded"},{default:l(()=>[LT]),_:1}),t(" | "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceinit"},{default:l(()=>[OT]),_:1}),t(" | "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#infoservicenotready"},{default:l(()=>[HT]),_:1}),t(" | "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceready"},{default:l(()=>[jT]),_:1}),t(" | "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceshutdown"},{default:l(()=>[AT]),_:1}),t(" | "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#infoinvoketimeout"},{default:l(()=>[qT]),_:1}),t(" | "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#infosubscriptionerror"},{default:l(()=>[GT]),_:1})]),VT,e("p",null,[e("a",zT,[t("packages/core/src/core/types/infoType/InfoMessage.ts:21"),n(o)])]),UT,ZT,e("p",null,[t("Ƭ "),QT,t(": { "),WT,t(": "),KT,t(" ; "),$T,t(": "),YT,t(" ; "),XT,t(": "),JT,t(" ; "),ek,t(": { "),tk,t(": "),nk,t(" ; "),sk,t(": "),lk,t(" ; "),ok,t(": "),ak,t(" } } & "),n(s,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:l(()=>[dk]),_:1})]),ik,e("p",null,[e("a",ck,[t("packages/core/src/core/types/infoType/InfoServiceBase.ts:3"),n(o)])]),rk,uk,e("p",null,[t("Ƭ "),hk,t(": { "),pk,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#infoservicedrain"},{default:l(()=>[_k]),_:1}),t(" } & "),n(s,{to:"/api/modules/purista_core.html#infoservicebase"},{default:l(()=>[fk]),_:1})]),gk,e("p",null,[e("a",mk,[t("packages/core/src/core/types/infoType/InfoServiceDrain.ts:4"),n(o)])]),yk,bk,e("p",null,[t("Ƭ "),xk,t(": { "),vk,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#infoservicefunctionadded"},{default:l(()=>[Sk]),_:1}),t(" } & "),n(s,{to:"/api/modules/purista_core.html#infoservicebase"},{default:l(()=>[Tk]),_:1})]),kk,e("p",null,[e("a",Ck,[t("packages/core/src/core/types/infoType/InfoServiceFunctionAdded.ts:4"),n(o)])]),Pk,wk,e("p",null,[t("Ƭ "),Mk,t(": { "),Dk,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceinit"},{default:l(()=>[Ek]),_:1}),t(" } & "),n(s,{to:"/api/modules/purista_core.html#infoservicebase"},{default:l(()=>[Ik]),_:1})]),Rk,e("p",null,[e("a",Fk,[t("packages/core/src/core/types/infoType/InfoServiceInit.ts:4"),n(o)])]),Bk,Nk,e("p",null,[t("Ƭ "),Lk,t(": { "),Ok,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#infoservicenotready"},{default:l(()=>[Hk]),_:1}),t(" } & "),n(s,{to:"/api/modules/purista_core.html#infoservicebase"},{default:l(()=>[jk]),_:1})]),Ak,e("p",null,[e("a",qk,[t("packages/core/src/core/types/infoType/InfoServiceNotReady.ts:4"),n(o)])]),Gk,Vk,e("p",null,[t("Ƭ "),zk,t(": { "),Uk,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceready"},{default:l(()=>[Zk]),_:1}),t(" } & "),n(s,{to:"/api/modules/purista_core.html#infoservicebase"},{default:l(()=>[Qk]),_:1})]),Wk,e("p",null,[e("a",Kk,[t("packages/core/src/core/types/infoType/InfoServiceReady.ts:4"),n(o)])]),$k,Yk,e("p",null,[t("Ƭ "),Xk,t(": { "),Jk,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceshutdown"},{default:l(()=>[e5]),_:1}),t(" } & "),n(s,{to:"/api/modules/purista_core.html#infoservicebase"},{default:l(()=>[t5]),_:1})]),n5,e("p",null,[e("a",s5,[t("packages/core/src/core/types/infoType/InfoServiceShutdown.ts:4"),n(o)])]),l5,o5,e("p",null,[t("Ƭ "),a5,t(": { "),d5,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#infosubscriptionerror"},{default:l(()=>[i5]),_:1}),t(" } & "),n(s,{to:"/api/modules/purista_core.html#infoservicebase"},{default:l(()=>[c5]),_:1})]),r5,e("p",null,[e("a",u5,[t("packages/core/src/core/types/infoType/InfoSubscriptionError.ts:4"),n(o)])]),h5,p5,_5,f5,g5,e("p",null,[e("a",m5,[t("packages/core/src/core/types/InstanceId.ts:2"),n(o)])]),y5,e("p",null,[e("a",b5,[t("packages/core/src/core/types/Logger.ts:17"),n(o)])]),x5,e("p",null,[e("a",v5,[t("packages/core/src/core/types/LogLevelName.ts:1"),n(o)])]),S5,T5,k5,C5,e("table",null,[P5,e("tbody",null,[w5,e("tr",null,[M5,e("td",D5,[n(s,{to:"/api/modules/purista_core.html#instanceid"},{default:l(()=>[E5]),_:1})])]),I5,e("tr",null,[R5,e("td",F5,[n(s,{to:"/api/modules/purista_core.html#principalid"},{default:l(()=>[B5]),_:1})])]),N5,L5,O5,H5,e("tr",null,[j5,e("td",A5,[n(s,{to:"/api/modules/purista_core.html#traceid"},{default:l(()=>[q5]),_:1})])])])]),G5,e("p",null,[e("a",V5,[t("packages/core/src/core/types/Logger.ts:5"),n(o)])]),z5,e("p",null,[e("a",U5,[t("packages/core/src/mocks/getLogger.mock.ts:41"),n(o)])]),Z5,Q5,e("p",null,[t("Ƭ "),W5,t("<"),K5,t(", "),$5,t(">: ("),Y5,t(": "),n(s,{to:"/api/modules/purista_core.html#serviceconstructorinput"},{default:l(()=>[X5]),_:1}),t("<"),J5,t(">) => "),e9]),t9,e("table",null,[n9,e("tbody",null,[e("tr",null,[s9,e("td",l9,[n(s,{to:"/api/modules/purista_core.html#serviceconstructorinput"},{default:l(()=>[o9]),_:1}),t("<"),a9,t(">")])])])]),d9,i9,c9,e("p",null,[e("a",r9,[t("packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:28"),n(o)])]),u9,h9,p9,_9,e("table",null,[f9,e("tbody",null,[e("tr",null,[g9,e("td",m9,[t("("),y9,t(": "),n(s,{to:"/api/classes/purista_core.HandledError.html"},{default:l(()=>[b9]),_:1}),t(" | "),n(s,{to:"/api/classes/purista_core.UnhandledError.html"},{default:l(()=>[x9]),_:1}),t(") => "),v9])]),S9])]),T9,e("p",null,[e("a",k9,[t("packages/core/src/DefaultEventBridge/types/PendingInvocations.ts:3"),n(o)])]),C9,P9,w9,M9,D9,e("p",null,[e("a",E9,[t("packages/core/src/core/types/PrincipalId.ts:2"),n(o)])]),I9,e("p",null,[e("a",R9,[t("packages/core/src/core/HttpServer/types/QueryParameter.ts:1"),n(o)])]),F9,B9,e("p",null,[t("Ƭ "),N9,t(": "),n(s,{to:"/api/modules/purista_core.html#serviceeventsinternal"},{default:l(()=>[L9]),_:1}),t(" & "),n(s,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:l(()=>[O9]),_:1}),t("<"),n(s,{to:"/api/modules/purista_core.internal.html#customevents"},{default:l(()=>[H9]),_:1}),t(", "),j9,t("> & "),n(s,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:l(()=>[A9]),_:1}),t("<"),n(s,{to:"/api/modules/purista_core.internal.html#customevents"},{default:l(()=>[q9]),_:1}),t(", "),G9,t(">")]),V9,z9,U9,e("p",null,[e("a",Z9,[t("packages/core/src/core/types/ServiceEvents.ts:98"),n(o)])]),Q9,e("p",null,[e("a",W9,[t("packages/core/src/core/types/infoType/ServiceInfoType.ts:4"),n(o)])]),K9,e("p",null,[e("a",$9,[t("packages/core/src/helper/types/ShutdownEntry.ts:4"),n(o)])]),Y9,e("table",null,[X9,e("tbody",null,[J9,e8,t8,n8,e("tr",null,[s8,e("td",l8,[n(s,{to:"/api/classes/purista_core.Logger.html"},{default:l(()=>[o8]),_:1})])])])]),a8,e("p",null,[e("a",d8,[t("packages/core/src/core/types/StoreBaseConfig.ts:3"),n(o)])]),i8,c8,e("p",null,[t("Ƭ "),r8,t("<"),u8,t(">: "),n(s,{to:"/api/modules/purista_core.html#subscriptiondefinition"},{default:l(()=>[h8]),_:1}),t("<"),p8,t(", "),_8,t(", "),f8,t(", "),g8,t(", "),m8,t(">[]")]),y8,e("table",null,[b8,e("tbody",null,[e("tr",null,[x8,e("td",v8,[t("extends "),n(s,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:l(()=>[S8]),_:1})])])])]),T8,e("p",null,[e("a",k8,[t("packages/core/src/core/types/subscription/SubscriptionDefinitionList.ts:11"),n(o)])]),C8,P8,w8,M8,e("table",null,[D8,e("tbody",null,[e("tr",null,[E8,e("td",I8,[t("{ "),R8,t(": "),F8,t(" ; "),B8,t(": "),N8,t(" ; "),L8,t(": "),n(s,{to:"/api/modules/purista_core.html#contenttype"},{default:l(()=>[O8]),_:1}),t(" ; "),H8,t(": "),n(s,{to:"/api/modules/purista_core.html#contenttype"},{default:l(()=>[j8]),_:1}),t(" ; "),A8,t(": "),q8,t(" ; "),G8,t(": "),V8,t(" ; "),z8,t(": "),U8,t(" }")])]),Z8,Q8,e("tr",null,[W8,e("td",K8,[n(s,{to:"/api/modules/purista_core.html#contenttype"},{default:l(()=>[$8]),_:1})])]),e("tr",null,[Y8,e("td",X8,[n(s,{to:"/api/modules/purista_core.html#contenttype"},{default:l(()=>[J8]),_:1})])]),e7,t7,n7])]),s7,e("p",null,[e("a",l7,[t("packages/core/src/core/types/subscription/SubscriptionDefinitionMetadataBase.ts:5"),n(o)])]),o7,a7,d7,i7,e("table",null,[c7,e("tbody",null,[e("tr",null,[r7,e("td",u7,[t("("),h7,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:l(()=>[p7]),_:1}),t(") => "),_7,t("<"),f7,t("<"),n(s,{to:"/api/modules/purista_core.html#custommessage"},{default:l(()=>[g7]),_:1}),t(", "),m7,t(" | "),y7,t(" | "),b7,t("> | "),x7,t(">")])]),v7,S7,T7,e("tr",null,[k7,e("td",C7,[t("("),P7,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html"},{default:l(()=>[w7]),_:1}),t(") => "),M7])]),D7,E7,I7,R7,F7,B7,N7])]),L7,e("p",null,[e("a",O7,[t("packages/core/src/DefaultEventBridge/types/SubscriptionStorageEntry.ts:3"),n(o)])]),H7,e("p",null,[e("a",j7,[t("packages/core/src/core/HttpServer/types/SupportedHttpMethod.ts:2"),n(o)])]),A7,q7,G7,V7,z7,e("p",null,[e("a",U7,[t("packages/core/src/core/types/TraceId.ts:4"),n(o)])]),Z7,e("table",null,[Q7,e("tbody",null,[e("tr",null,[W7,e("td",K7,[n(s,{to:"/api/classes/purista_core.Logger.html"},{default:l(()=>[$7]),_:1})]),Y7,X7]),e("tr",null,[J7,e("td",eC,[n(s,{to:"/api/modules/purista_core.html#shutdownentry"},{default:l(()=>[tC]),_:1}),t("[]")]),nC,sC]),lC])]),oC,aC,dC,e("p",null,[e("a",iC,[t("packages/core/src/helper/gracefulShutdown.ts:36"),n(o)])]),cC,e("p",null,[e("a",rC,[t("packages/core/src/core/helper/isDevelop.impl.ts:6"),n(o)])]),uC,e("p",null,[e("a",hC,[t("packages/core/src/core/helper/serializeOtp.impl.ts:11"),n(o)])]),pC,e("table",null,[_C,e("tbody",null,[e("tr",null,[fC,e("td",gC,[n(s,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:l(()=>[mC]),_:1}),t("<"),yC,t(", "),bC,t(">")])]),xC,vC,SC,TC,kC,CC,PC,wC,MC,DC,EC,IC,RC,FC,BC,NC,LC,OC,HC,jC,AC])]),qC,e("p",null,[e("a",GC,[t("packages/core/src/mocks/getCommandContext.mock.ts:12"),n(o)])]),VC,zC,e("p",null,[t("▸ "),UC,t("("),ZC,t(", "),QC,t(", "),WC,t("): "),KC,t("<"),n(s,{to:"/api/modules/purista_core.html#commanderrorresponse"},{default:l(()=>[$C]),_:1}),t(">")]),YC,XC,e("table",null,[JC,e("tbody",null,[e("tr",null,[e0,e("td",t0,[n(s,{to:"/api/classes/purista_core.HandledError.html"},{default:l(()=>[n0]),_:1}),t(" | "),n(s,{to:"/api/classes/purista_core.UnhandledError.html"},{default:l(()=>[s0]),_:1})])]),e("tr",null,[l0,e("td",o0,[a0,t("<"),n(s,{to:"/api/modules/purista_core.html#commanderrorresponse"},{default:l(()=>[d0]),_:1}),t(">")])]),e("tr",null,[i0,e("td",c0,[n(s,{to:"/api/modules/purista_core.html#command"},{default:l(()=>[r0]),_:1})])])])]),u0,e("p",null,[h0,t("<"),n(s,{to:"/api/modules/purista_core.html#commanderrorresponse"},{default:l(()=>[p0]),_:1}),t(">")]),_0,e("p",null,[e("a",f0,[t("packages/core/src/mocks/messages/getCommandErrorMessage.mock.ts:16"),n(o)])]),g0,m0,e("p",null,[t("▸ "),y0,t("<"),b0,t(", "),x0,t(">("),v0,t("): "),S0,t("<"),n(s,{to:"/api/modules/purista_core.html#command"},{default:l(()=>[T0]),_:1}),t("<"),k0,t(", "),C0,t(">>")]),P0,e("table",null,[w0,e("tbody",null,[e("tr",null,[M0,e("td",D0,[E0,t("<"),n(s,{to:"/api/modules/purista_core.html#command"},{default:l(()=>[I0]),_:1}),t("<"),R0,t(", "),F0,t(">> & { "),B0,t(": { "),N0,t(": "),L0,t(" ; "),O0,t(": "),H0,t(" } }")])])])]),j0,e("p",null,[A0,t("<"),n(s,{to:"/api/modules/purista_core.html#command"},{default:l(()=>[q0]),_:1}),t("<"),G0,t(", "),V0,t(">>")]),z0,e("p",null,[e("a",U0,[t("packages/core/src/mocks/messages/getCommandMessage.mock.ts:15"),n(o)])]),Z0,Q0,e("p",null,[t("▸ "),W0,t("<"),K0,t(">("),$0,t(", "),Y0,t(", "),X0,t("): "),J0,t("<"),n(s,{to:"/api/modules/purista_core.html#commandsuccessresponse"},{default:l(()=>[eP]),_:1}),t("<"),tP,t(">>")]),nP,e("table",null,[sP,e("tbody",null,[lP,e("tr",null,[oP,e("td",aP,[dP,t("<"),n(s,{to:"/api/modules/purista_core.html#commandsuccessresponse"},{default:l(()=>[iP]),_:1}),t("<"),cP,t(">>")])]),e("tr",null,[rP,e("td",uP,[n(s,{to:"/api/modules/purista_core.html#command"},{default:l(()=>[hP]),_:1})])])])]),pP,e("p",null,[_P,t("<"),n(s,{to:"/api/modules/purista_core.html#commandsuccessresponse"},{default:l(()=>[fP]),_:1}),t("<"),gP,t(">>")]),mP,e("p",null,[e("a",yP,[t("packages/core/src/mocks/messages/getCommandSuccessMessage.mock.ts:9"),n(o)])]),bP,e("table",null,[xP,e("tbody",null,[e("tr",null,[vP,e("td",SP,[n(s,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:l(()=>[TP]),_:1}),t("<"),kP,t(", "),CP,t(">")])]),PP,wP,MP,DP,EP,IP,RP,FP,BP,NP,LP,OP,HP,jP,AP,qP,GP,VP,zP])]),UP,e("p",null,[e("a",ZP,[t("packages/core/src/mocks/getCommandTransformContext.mock.ts:12"),n(o)])]),QP,WP,e("p",null,[t("▸ "),KP,t("<"),$P,t(">("),YP,t(", "),XP,t(", "),JP,t("): "),ew,t("<"),n(s,{to:"/api/modules/purista_core.html#custommessage"},{default:l(()=>[tw]),_:1}),t("<"),nw,t(">>")]),sw,e("table",null,[lw,e("tbody",null,[ow,aw,e("tr",null,[dw,e("td",iw,[cw,t("<"),n(s,{to:"/api/modules/purista_core.html#custommessage"},{default:l(()=>[rw]),_:1}),t("<"),uw,t(">>")])])])]),hw,e("p",null,[pw,t("<"),n(s,{to:"/api/modules/purista_core.html#custommessage"},{default:l(()=>[_w]),_:1}),t("<"),fw,t(">>")]),gw,e("p",null,[e("a",mw,[t("packages/core/src/mocks/messages/getCustomMessage.mock.ts:15"),n(o)])]),yw,e("table",null,[bw,e("tbody",null,[e("tr",null,[xw,e("td",vw,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:l(()=>[Sw]),_:1})])]),Tw])]),kw,e("p",null,[e("a",Cw,[t("packages/core/src/mocks/getEventBridge.mock.ts:10"),n(o)])]),Pw,e("table",null,[ww,e("tbody",null,[e("tr",null,[Mw,e("td",Dw,[n(s,{to:"/api/classes/purista_core.Logger.html"},{default:l(()=>[Ew]),_:1})])]),Iw,Rw,Fw,Bw,Nw,Lw,Ow])]),Hw,e("p",null,[e("a",jw,[t("packages/core/src/mocks/getLogger.mock.ts:10"),n(o)])]),Aw,e("table",null,[qw,e("tbody",null,[e("tr",null,[Gw,e("td",Vw,[n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:l(()=>[zw]),_:1})])]),Uw])]),Zw,Qw,e("table",null,[Ww,e("tbody",null,[e("tr",null,[Kw,e("td",$w,[n(s,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:l(()=>[Yw]),_:1})])]),Xw,Jw,eM,tM,nM,sM,lM,oM,aM,dM,iM,cM,rM,uM,hM,pM,_M,fM,gM,mM,yM])]),bM,e("p",null,[e("a",xM,[t("packages/core/src/mocks/getSubscriptionContext.mock.ts:11"),n(o)])]),vM,e("table",null,[SM,e("tbody",null,[e("tr",null,[TM,e("td",kM,[n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:l(()=>[CM]),_:1})])]),PM])]),wM,MM,e("table",null,[DM,e("tbody",null,[e("tr",null,[EM,e("td",IM,[n(s,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:l(()=>[RM]),_:1})])]),FM,BM,NM,LM,OM,HM,jM,AM,qM,GM,VM,zM,UM,ZM,QM,WM,KM,$M,YM])]),XM,e("p",null,[e("a",JM,[t("packages/core/src/mocks/getSubscriptionTransformContext.mock.ts:11"),n(o)])]),eD,tD,e("p",null,[t("▸ "),nD,t("<"),sD,t(", "),lD,t(", "),oD,t(", "),aD,t(", "),dD,t(", "),iD,t(", "),cD,t(">("),rD,t(", "),uD,t(", "),hD,t(", "),pD,t(", "),_D,t("): "),n(s,{to:"/api/modules/purista_core.html#commandfunction"},{default:l(()=>[fD]),_:1}),t("<"),gD,t(", "),mD,t(", "),yD,t(", "),bD,t(", "),xD,t(", "),vD,t(">")]),SD,e("table",null,[TD,e("tbody",null,[e("tr",null,[kD,e("td",CD,[t("extends "),n(s,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:l(()=>[PD]),_:1}),t("<"),wD,t(", "),MD,t(">")])]),DD,ED,ID,RD,FD,BD])]),ND,e("table",null,[LD,e("tbody",null,[e("tr",null,[OD,e("td",HD,[n(s,{to:"/api/modules/purista_core.html#commandfunction"},{default:l(()=>[jD]),_:1}),t("<"),AD,t(", "),qD,t(", "),GD,t(", "),VD,t(", "),zD,t(", "),UD,t(">")])]),ZD,QD,WD,e("tr",null,[KD,e("td",$D,[YD,t("<"),XD,t(", "),n(s,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:l(()=>[JD]),_:1}),t("<"),eE,t(", "),tE,t(", "),nE,t(", "),sE,t(", "),lE,t(">>")])])])]),oE,e("p",null,[n(s,{to:"/api/modules/purista_core.html#commandfunction"},{default:l(()=>[aE]),_:1}),t("<"),dE,t(", "),iE,t(", "),cE,t(", "),rE,t(", "),uE,t(", "),hE,t(">")]),pE,e("p",null,[e("a",_E,[t("packages/core/src/CommandDefinitionBuilder/getCommandFunctionWithValidation.impl.ts:13"),n(o)])]),fE,gE,e("p",null,[t("▸ "),mE,t("(): "),n(s,{to:"/api/modules/purista_core.html#complete"},{default:l(()=>[yE]),_:1}),t("<"),n(s,{to:"/api/modules/purista_core.html#defaulteventbridgeconfig"},{default:l(()=>[bE]),_:1}),t(">")]),xE,e("p",null,[n(s,{to:"/api/modules/purista_core.html#complete"},{default:l(()=>[vE]),_:1}),t("<"),n(s,{to:"/api/modules/purista_core.html#defaulteventbridgeconfig"},{default:l(()=>[SE]),_:1}),t(">")]),TE,e("p",null,[e("a",kE,[t("packages/core/src/DefaultEventBridge/getDefaultEventBridgeConfig.impl.ts:4"),n(o)])]),CE,PE,e("p",null,[t("▸ "),wE,t("(): "),n(s,{to:"/api/modules/purista_core.html#loglevelname"},{default:l(()=>[ME]),_:1})]),DE,e("p",null,[n(s,{to:"/api/modules/purista_core.html#loglevelname"},{default:l(()=>[EE]),_:1})]),IE,e("p",null,[e("a",RE,[t("packages/core/src/DefaultLogger/getDefaultLogLevel.ts:4"),n(o)])]),FE,BE,e("p",null,[t("▸ "),NE,t("("),LE,t(", "),OE,t("): "),n(s,{to:"/api/modules/purista_core.html#subscriptionstorageentry"},{default:l(()=>[HE]),_:1})]),jE,e("table",null,[AE,e("tbody",null,[e("tr",null,[qE,e("td",GE,[n(s,{to:"/api/modules/purista_core.html#subscription"},{default:l(()=>[VE]),_:1})])]),e("tr",null,[zE,e("td",UE,[t("("),ZE,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:l(()=>[QE]),_:1}),t(") => "),WE,t("<"),KE,t(" | "),$E,t("<"),n(s,{to:"/api/modules/purista_core.html#custommessage"},{default:l(()=>[YE]),_:1}),t(", "),XE,t(" | "),JE,t(" | "),eI,t(">>")])])])]),tI,e("p",null,[n(s,{to:"/api/modules/purista_core.html#subscriptionstorageentry"},{default:l(()=>[nI]),_:1})]),sI,e("p",null,[e("a",lI,[t("packages/core/src/DefaultEventBridge/getNewSubscriptionStorageEntry.impl.ts:4"),n(o)])]),oI,aI,e("p",null,[t("▸ "),dI,t("<"),iI,t(", "),cI,t(", "),rI,t(", "),uI,t(", "),hI,t(", "),pI,t(", "),_I,t(">("),fI,t(", "),gI,t(", "),mI,t(", "),yI,t(", "),bI,t("): "),n(s,{to:"/api/modules/purista_core.html#subscriptionfunction"},{default:l(()=>[xI]),_:1}),t("<"),vI,t(", "),SI,t(", "),TI,t(", "),kI,t(", "),CI,t(", "),PI,t(">")]),wI,e("table",null,[MI,e("tbody",null,[e("tr",null,[DI,e("td",EI,[t("extends "),n(s,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:l(()=>[II]),_:1}),t("<"),RI,t(", "),FI,t(">")])]),BI,NI,LI,OI,HI,jI])]),AI,e("table",null,[qI,e("tbody",null,[e("tr",null,[GI,e("td",VI,[n(s,{to:"/api/modules/purista_core.html#subscriptionfunction"},{default:l(()=>[zI]),_:1}),t("<"),UI,t(", "),ZI,t(", "),QI,t(", "),WI,t(", "),KI,t(", "),$I,t(">")])]),YI,XI,JI,e("tr",null,[eR,e("td",tR,[nR,t("<"),sR,t(", "),n(s,{to:"/api/modules/purista_core.html#subscriptionbeforeguardhook"},{default:l(()=>[lR]),_:1}),t("<"),oR,t(", "),aR,t(", "),dR,t(">>")])])])]),iR,e("p",null,[n(s,{to:"/api/modules/purista_core.html#subscriptionfunction"},{default:l(()=>[cR]),_:1}),t("<"),rR,t(", "),uR,t(", "),hR,t(", "),pR,t(", "),_R,t(", "),fR,t(">")]),gR,e("p",null,[e("a",mR,[t("packages/core/src/SubscriptionDefinitionBuilder/getSubscriptionFunctionWithValidation.impl.ts:13"),n(o)])]),yR,bR,e("p",null,[t("▸ "),xR,t("("),vR,t("): "),n(s,{to:"/api/classes/purista_core.DefaultConfigStore.html"},{default:l(()=>[SR]),_:1})]),TR,e("table",null,[kR,e("tbody",null,[CR,e("tr",null,[PR,e("td",wR,[n(s,{to:"/api/classes/purista_core.Logger.html"},{default:l(()=>[MR]),_:1})])])])]),DR,e("p",null,[n(s,{to:"/api/classes/purista_core.DefaultConfigStore.html"},{default:l(()=>[ER]),_:1})]),IR,e("p",null,[e("a",RR,[t("packages/core/src/DefaultConfigStore/initDefaultConfigStore.impl.ts:4"),n(o)])]),FR,BR,e("p",null,[t("▸ "),NR,t("("),LR,t("): "),n(s,{to:"/api/classes/purista_core.DefaultSecretStore.html"},{default:l(()=>[OR]),_:1})]),HR,e("table",null,[jR,e("tbody",null,[AR,e("tr",null,[qR,e("td",GR,[n(s,{to:"/api/classes/purista_core.Logger.html"},{default:l(()=>[VR]),_:1})])])])]),zR,e("p",null,[n(s,{to:"/api/classes/purista_core.DefaultSecretStore.html"},{default:l(()=>[UR]),_:1})]),ZR,e("p",null,[e("a",QR,[t("packages/core/src/DefaultSecretStore/initDefaultSecretStore.impl.ts:4"),n(o)])]),WR,KR,e("p",null,[t("▸ "),$R,t("("),YR,t("): "),n(s,{to:"/api/classes/purista_core.DefaultStateStore.html"},{default:l(()=>[XR]),_:1})]),JR,e("table",null,[eF,e("tbody",null,[tF,e("tr",null,[nF,e("td",sF,[n(s,{to:"/api/classes/purista_core.Logger.html"},{default:l(()=>[lF]),_:1})])])])]),oF,e("p",null,[n(s,{to:"/api/classes/purista_core.DefaultStateStore.html"},{default:l(()=>[aF]),_:1})]),dF,e("p",null,[e("a",iF,[t("packages/core/src/DefaultStateStore/initDefaultStateStore.impl.ts:4"),n(o)])]),cF,rF,e("p",null,[t("▸ "),uF,t("("),hF,t(", "),pF,t("): "),n(s,{to:"/api/classes/purista_core.Logger.html"},{default:l(()=>[_F]),_:1})]),fF,gF,e("table",null,[mF,e("tbody",null,[e("tr",null,[yF,e("td",bF,[n(s,{to:"/api/modules/purista_core.html#loglevelname"},{default:l(()=>[xF]),_:1})])]),vF])]),SF,e("p",null,[n(s,{to:"/api/classes/purista_core.Logger.html"},{default:l(()=>[TF]),_:1})]),kF,e("p",null,[e("a",CF,[t("packages/core/src/DefaultLogger/initLogger.impl.ts:13"),n(o)])]),PF,wF,MF,DF,EF,e("table",null,[IF,e("tbody",null,[e("tr",null,[RF,e("td",FF,[n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:l(()=>[BF]),_:1})]),NF])])]),LF,OF,HF,jF,e("p",null,[e("a",AF,[t("packages/core/src/core/types/isCustomMessage.impl.ts:10"),n(o)])]),qF,e("p",null,[e("a",GF,[t("packages/core/src/core/HttpServer/types/isHttpExposedServiceMeta.impl.ts:8"),n(o)])]),VF,zF,UF,ZF,e("table",null,[QF,e("tbody",null,[e("tr",null,[WF,e("td",KF,[n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:l(()=>[$F]),_:1})])])])]),YF,XF,JF,e("p",null,[e("a",eB,[t("packages/core/src/core/types/infoType/isInfoMessage.impl.ts:4"),n(o)])]),tB,nB,sB,lB,e("table",null,[oB,e("tbody",null,[e("tr",null,[aB,e("td",dB,[n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:l(()=>[iB]),_:1})])])])]),cB,rB,uB,e("p",null,[e("a",hB,[t("packages/core/src/core/types/infoType/isInfoServiceFunctionAdded.impl.ts:5"),n(o)])]),pB,e("table",null,[_B,e("tbody",null,[e("tr",null,[fB,e("td",gB,[n(s,{to:"/api/classes/purista_core.Logger.html"},{default:l(()=>[mB]),_:1})])]),e("tr",null,[yB,e("td",bB,[n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:l(()=>[xB]),_:1})])]),e("tr",null,[vB,e("td",SB,[n(s,{to:"/api/modules/purista_core.html#subscriptionstorageentry"},{default:l(()=>[TB]),_:1})])])])]),kB,CB,PB,e("p",null,[e("a",wB,[t("packages/core/src/DefaultEventBridge/isMessageMatchingSubscription.impl.ts:4"),n(o)])])])}const RB=i(u,[["render",MB],["__file","purista_core.html.vue"]]);export{RB as default};
