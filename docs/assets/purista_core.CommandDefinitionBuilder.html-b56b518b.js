import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o as c,c as r,b as e,e as n,w as s,d as t,a as i}from"./app-9aedf0b4.js";const u={},h=e("h1",{id:"class-commanddefinitionbuilder-serviceclasstype-messagepayloadtype-messageparamstype-messageresulttype-functionpayloadtype-functionparamstype-functionresulttype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-commanddefinitionbuilder-serviceclasstype-messagepayloadtype-messageparamstype-messageresulttype-functionpayloadtype-functionparamstype-functionresulttype","aria-hidden":"true"},"#"),t(" Class: CommandDefinitionBuilder<ServiceClassType, MessagePayloadType, MessageParamsType, MessageResultType, FunctionPayloadType, FunctionParamsType, FunctionResultType>")],-1),_=e("p",null,"Command definition builder is a helper to create and define a command for a service. It helps to set all needed information like schemas and hooks. With these information, the types are automatically set and extended.",-1),p=e("p",null,"A working schema definition needs at least a command name, a short description and the function implementation.",-1),m=e("h2",{id:"type-parameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters","aria-hidden":"true"},"#"),t(" Type parameters")],-1),f=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),y=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),g={style:{"text-align":"left"}},b=e("code",null,"ServiceClass",-1),T=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),C=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),x=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),D=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),P=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),B=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),k=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),v=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),F=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),M=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),S=i('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new CommandDefinitionBuilder</strong>&lt;<code>ServiceClassType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;(<code>commandName</code>, <code>commandDescription</code>, <code>eventName?</code>)</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4>',4),R=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),w=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),O={style:{"text-align":"left"}},I=e("code",null,"ServiceClass",-1),L=e("code",null,"unknown",-1),N=e("code",null,"ServiceClassType",-1),E=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),A=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),H=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),Z=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),q=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),G=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),Q=i('<h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>commandName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>commandDescription</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>eventName?</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',3),j={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L113",target:"_blank",rel:"noopener noreferrer"},W=i('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="autoacknowledge" tabindex="-1"><a class="header-anchor" href="#autoacknowledge" aria-hidden="true">#</a> autoacknowledge</h3><p>• <code>Private</code> <strong>autoacknowledge</strong>: <code>boolean</code> = <code>true</code></p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4>',4),V={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L63",target:"_blank",rel:"noopener noreferrer"},U=e("hr",null,null,-1),z=e("h3",{id:"commanddescription",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commanddescription","aria-hidden":"true"},"#"),t(" commandDescription")],-1),J=e("p",null,[t("• "),e("code",null,"Private"),t(),e("strong",null,"commandDescription"),t(": "),e("code",null,"string")],-1),K=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),X={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L113",target:"_blank",rel:"noopener noreferrer"},Y=e("hr",null,null,-1),$=e("h3",{id:"commandname",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandname","aria-hidden":"true"},"#"),t(" commandName")],-1),ee=e("p",null,[t("• "),e("code",null,"Private"),t(),e("strong",null,"commandName"),t(": "),e("code",null,"string")],-1),te=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),ne={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L113",target:"_blank",rel:"noopener noreferrer"},oe=i('<hr><h3 id="deprecated" tabindex="-1"><a class="header-anchor" href="#deprecated" aria-hidden="true">#</a> deprecated</h3><p>• <code>Private</code> <strong>deprecated</strong>: <code>boolean</code> = <code>false</code></p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4>',4),se={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L52",target:"_blank",rel:"noopener noreferrer"},ae=i('<hr><h3 id="durable" tabindex="-1"><a class="header-anchor" href="#durable" aria-hidden="true">#</a> durable</h3><p>• <code>Private</code> <strong>durable</strong>: <code>boolean</code> = <code>false</code></p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4>',4),ie={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L62",target:"_blank",rel:"noopener noreferrer"},de=e("hr",null,null,-1),le=e("h3",{id:"errorstatuscodes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#errorstatuscodes","aria-hidden":"true"},"#"),t(" errorStatusCodes")],-1),ce=e("code",null,"Private",-1),re=e("strong",null,"errorStatusCodes",-1),ue=e("code",null,"StatusCode",-1),he=e("code",null,"[]",-1),_e=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),pe={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L56",target:"_blank",rel:"noopener noreferrer"},me=i('<hr><h3 id="eventname" tabindex="-1"><a class="header-anchor" href="#eventname" aria-hidden="true">#</a> eventName</h3><p>• <code>Private</code> <code>Optional</code> <strong>eventName</strong>: <code>string</code></p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>',4),fe={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L113",target:"_blank",rel:"noopener noreferrer"},ye=e("hr",null,null,-1),ge=e("h3",{id:"fn",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#fn","aria-hidden":"true"},"#"),t(" fn")],-1),be=e("code",null,"Private",-1),Te=e("code",null,"Optional",-1),Ce=e("strong",null,"fn",-1),xe=e("code",null,"CommandFunction",-1),De=e("code",null,"ServiceClassType",-1),Pe=e("code",null,"MessagePayloadType",-1),Be=e("code",null,"MessageParamsType",-1),ke=e("code",null,"FunctionPayloadType",-1),ve=e("code",null,"FunctionParamsType",-1),Fe=e("code",null,"FunctionResultType",-1),Me=e("h4",{id:"defined-in-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-8","aria-hidden":"true"},"#"),t(" Defined in")],-1),Se={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L103",target:"_blank",rel:"noopener noreferrer"},Re=e("hr",null,null,-1),we=e("h3",{id:"hooks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hooks","aria-hidden":"true"},"#"),t(" hooks")],-1),Oe=e("p",null,[t("• "),e("code",null,"Private"),t(),e("strong",null,"hooks"),t(": "),e("code",null,"Object")],-1),Ie=e("h4",{id:"type-declaration",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Le=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ne=e("td",{style:{"text-align":"left"}},[e("code",null,"afterGuard")],-1),Ee={style:{"text-align":"left"}},Ae=e("code",null,"Record",-1),He=e("code",null,"string",-1),Ze=e("code",null,"CommandAfterGuardHook",-1),qe=e("code",null,"ServiceClassType",-1),Ge=e("code",null,"MessagePayloadType",-1),Qe=e("code",null,"MessageParamsType",-1),je=e("code",null,"FunctionResultType",-1),We=e("code",null,"FunctionPayloadType",-1),Ve=e("code",null,"FunctionParamsType",-1),Ue=e("td",{style:{"text-align":"left"}},[e("code",null,"beforeGuard")],-1),ze={style:{"text-align":"left"}},Je=e("code",null,"Record",-1),Ke=e("code",null,"string",-1),Xe=e("code",null,"CommandBeforeGuardHook",-1),Ye=e("code",null,"ServiceClassType",-1),$e=e("code",null,"MessagePayloadType",-1),et=e("code",null,"MessageParamsType",-1),tt=e("code",null,"FunctionPayloadType",-1),nt=e("code",null,"FunctionParamsType",-1),ot=e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput?")],-1),st={style:{"text-align":"left"}},at=e("code",null,"transformFunction",-1),it=e("code",null,"CommandTransformInputHook",-1),dt=e("code",null,"ServiceClassType",-1),lt=e("code",null,"any",-1),ct=e("code",null,"any",-1),rt=e("code",null,"any",-1),ut=e("code",null,"any",-1),ht=e("code",null,"transformInputSchema",-1),_t=e("code",null,"ZodType",-1),pt=e("code",null,"any",-1),mt=e("code",null,"ZodTypeDef",-1),ft=e("code",null,"any",-1),yt=e("code",null,"transformParameterSchema",-1),gt=e("code",null,"ZodType",-1),bt=e("code",null,"any",-1),Tt=e("code",null,"ZodTypeDef",-1),Ct=e("code",null,"any",-1),xt=e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput.transformFunction")],-1),Dt={style:{"text-align":"left"}},Pt=e("code",null,"CommandTransformInputHook",-1),Bt=e("code",null,"ServiceClassType",-1),kt=e("code",null,"any",-1),vt=e("code",null,"any",-1),Ft=e("code",null,"any",-1),Mt=e("code",null,"any",-1),St=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput.transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"any"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"any"),t(">")])],-1),Rt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput.transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"any"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"any"),t(">")])],-1),wt=e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutput?")],-1),Ot={style:{"text-align":"left"}},It=e("code",null,"transformFunction",-1),Lt=e("code",null,"CommandTransformOutputHook",-1),Nt=e("code",null,"ServiceClassType",-1),Et=e("code",null,"any",-1),At=e("code",null,"any",-1),Ht=e("code",null,"FunctionParamsType",-1),Zt=e("code",null,"any",-1),qt=e("code",null,"transformOutputSchema",-1),Gt=e("code",null,"ZodType",-1),Qt=e("code",null,"any",-1),jt=e("code",null,"ZodTypeDef",-1),Wt=e("code",null,"any",-1),Vt=e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutput.transformFunction")],-1),Ut={style:{"text-align":"left"}},zt=e("code",null,"CommandTransformOutputHook",-1),Jt=e("code",null,"ServiceClassType",-1),Kt=e("code",null,"any",-1),Xt=e("code",null,"any",-1),Yt=e("code",null,"FunctionParamsType",-1),$t=e("code",null,"any",-1),en=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutput.transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"any"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"any"),t(">")])],-1),tn=e("h4",{id:"defined-in-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-9","aria-hidden":"true"},"#"),t(" Defined in")],-1),nn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L65",target:"_blank",rel:"noopener noreferrer"},on=i('<hr><h3 id="httpmetadata" tabindex="-1"><a class="header-anchor" href="#httpmetadata" aria-hidden="true">#</a> httpMetadata</h3><p>• <code>Private</code> <code>Optional</code> <strong>httpMetadata</strong>: <code>Object</code></p><h4 id="type-declaration-1" tabindex="-1"><a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a> Type declaration</h4>',4),sn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),an=e("td",{style:{"text-align":"left"}},[e("code",null,"expose")],-1),dn={style:{"text-align":"left"}},ln=e("code",null,"contentEncodingRequest?",-1),cn=e("code",null,"string",-1),rn=e("code",null,"contentEncodingResponse?",-1),un=e("code",null,"string",-1),hn=e("code",null,"contentTypeRequest?",-1),_n=e("code",null,"string",-1),pn=e("code",null,"contentTypeResponse?",-1),mn=e("code",null,"string",-1),fn=e("code",null,"deprecated?",-1),yn=e("code",null,"boolean",-1),gn=e("code",null,"inputPayload?",-1),bn=e("code",null,"SchemaObject",-1),Tn=e("code",null,"outputPayload?",-1),Cn=e("code",null,"SchemaObject",-1),xn=e("code",null,"parameter?",-1),Dn=e("code",null,"SchemaObject",-1),Pn=e("code",null,"http",-1),Bn=e("code",null,"method",-1),kn=e("code",null,'"DELETE"',-1),vn=e("code",null,'"GET"',-1),Fn=e("code",null,'"POST"',-1),Mn=e("code",null,'"PATCH"',-1),Sn=e("code",null,'"PUT"',-1),Rn=e("code",null,"openApi?",-1),wn=e("code",null,"additionalStatusCodes?",-1),On=e("code",null,"StatusCode",-1),In=e("code",null,"description",-1),Ln=e("code",null,"string",-1),Nn=e("code",null,"isSecure",-1),En=e("code",null,"boolean",-1),An=e("code",null,"operationId?",-1),Hn=e("code",null,"string",-1),Zn=e("code",null,"query?",-1),qn=e("code",null,"QueryParameter",-1),Gn=e("code",null,"FunctionParamsType",-1),Qn=e("code",null,"summary",-1),jn=e("code",null,"string",-1),Wn=e("code",null,"tags?",-1),Vn=e("code",null,"string",-1),Un=e("code",null,"path",-1),zn=e("code",null,"string",-1),Jn=e("h4",{id:"defined-in-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-10","aria-hidden":"true"},"#"),t(" Defined in")],-1),Kn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L40",target:"_blank",rel:"noopener noreferrer"},Xn=i('<hr><h3 id="inputcontentencoding" tabindex="-1"><a class="header-anchor" href="#inputcontentencoding" aria-hidden="true">#</a> inputContentEncoding</h3><p>• <code>Private</code> <strong>inputContentEncoding</strong>: <code>undefined</code> | <code>string</code></p><h4 id="defined-in-11" tabindex="-1"><a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a> Defined in</h4>',4),Yn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L43",target:"_blank",rel:"noopener noreferrer"},$n=i('<hr><h3 id="inputcontenttype" tabindex="-1"><a class="header-anchor" href="#inputcontenttype" aria-hidden="true">#</a> inputContentType</h3><p>• <code>Private</code> <strong>inputContentType</strong>: <code>undefined</code> | <code>string</code></p><h4 id="defined-in-12" tabindex="-1"><a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a> Defined in</h4>',4),eo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L42",target:"_blank",rel:"noopener noreferrer"},to=i('<hr><h3 id="inputschema" tabindex="-1"><a class="header-anchor" href="#inputschema" aria-hidden="true">#</a> inputSchema</h3><p>• <code>Private</code> <code>Optional</code> <strong>inputSchema</strong>: <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;</p><h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4>',4),no={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L41",target:"_blank",rel:"noopener noreferrer"},oo=i('<hr><h3 id="issecure" tabindex="-1"><a class="header-anchor" href="#issecure" aria-hidden="true">#</a> isSecure</h3><p>• <code>Private</code> <strong>isSecure</strong>: <code>boolean</code> = <code>true</code></p><h4 id="defined-in-14" tabindex="-1"><a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a> Defined in</h4>',4),so={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L58",target:"_blank",rel:"noopener noreferrer"},ao=i('<hr><h3 id="operationid" tabindex="-1"><a class="header-anchor" href="#operationid" aria-hidden="true">#</a> operationId</h3><p>• <code>Private</code> <code>Optional</code> <strong>operationId</strong>: <code>string</code></p><h4 id="defined-in-15" tabindex="-1"><a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a> Defined in</h4>',4),io={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L60",target:"_blank",rel:"noopener noreferrer"},lo=i('<hr><h3 id="outputcontentencoding" tabindex="-1"><a class="header-anchor" href="#outputcontentencoding" aria-hidden="true">#</a> outputContentEncoding</h3><p>• <code>Private</code> <strong>outputContentEncoding</strong>: <code>undefined</code> | <code>string</code></p><h4 id="defined-in-16" tabindex="-1"><a class="header-anchor" href="#defined-in-16" aria-hidden="true">#</a> Defined in</h4>',4),co={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L46",target:"_blank",rel:"noopener noreferrer"},ro=i('<hr><h3 id="outputcontenttype" tabindex="-1"><a class="header-anchor" href="#outputcontenttype" aria-hidden="true">#</a> outputContentType</h3><p>• <code>Private</code> <strong>outputContentType</strong>: <code>undefined</code> | <code>string</code></p><h4 id="defined-in-17" tabindex="-1"><a class="header-anchor" href="#defined-in-17" aria-hidden="true">#</a> Defined in</h4>',4),uo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L45",target:"_blank",rel:"noopener noreferrer"},ho=i('<hr><h3 id="outputschema" tabindex="-1"><a class="header-anchor" href="#outputschema" aria-hidden="true">#</a> outputSchema</h3><p>• <code>Private</code> <code>Optional</code> <strong>outputSchema</strong>: <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;</p><h4 id="defined-in-18" tabindex="-1"><a class="header-anchor" href="#defined-in-18" aria-hidden="true">#</a> Defined in</h4>',4),_o={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L44",target:"_blank",rel:"noopener noreferrer"},po=i('<hr><h3 id="parameterschema" tabindex="-1"><a class="header-anchor" href="#parameterschema" aria-hidden="true">#</a> parameterSchema</h3><p>• <code>Private</code> <code>Optional</code> <strong>parameterSchema</strong>: <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;</p><h4 id="defined-in-19" tabindex="-1"><a class="header-anchor" href="#defined-in-19" aria-hidden="true">#</a> Defined in</h4>',4),mo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L47",target:"_blank",rel:"noopener noreferrer"},fo=e("hr",null,null,-1),yo=e("h3",{id:"queryparameter",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#queryparameter","aria-hidden":"true"},"#"),t(" queryParameter")],-1),go=e("code",null,"Private",-1),bo=e("strong",null,"queryParameter",-1),To=e("code",null,"QueryParameter",-1),Co=e("code",null,"FunctionParamsType",-1),xo=e("code",null,"[]",-1),Do=e("h4",{id:"defined-in-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-20","aria-hidden":"true"},"#"),t(" Defined in")],-1),Po={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L48",target:"_blank",rel:"noopener noreferrer"},Bo=i('<hr><h3 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> summary</h3><p>• <code>Private</code> <code>Optional</code> <strong>summary</strong>: <code>string</code></p><h4 id="defined-in-21" tabindex="-1"><a class="header-anchor" href="#defined-in-21" aria-hidden="true">#</a> Defined in</h4>',4),ko={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L54",target:"_blank",rel:"noopener noreferrer"},vo=i('<hr><h3 id="tags" tabindex="-1"><a class="header-anchor" href="#tags" aria-hidden="true">#</a> tags</h3><p>• <code>Private</code> <strong>tags</strong>: <code>string</code>[] = <code>[]</code></p><h4 id="defined-in-22" tabindex="-1"><a class="header-anchor" href="#defined-in-22" aria-hidden="true">#</a> Defined in</h4>',4),Fo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L50",target:"_blank",rel:"noopener noreferrer"},Mo=e("h2",{id:"methods-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods-1","aria-hidden":"true"},"#"),t(" Methods")],-1),So=e("h3",{id:"addopenapierrorstatuscodes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addopenapierrorstatuscodes","aria-hidden":"true"},"#"),t(" addOpenApiErrorStatusCodes")],-1),Ro=e("strong",null,"addOpenApiErrorStatusCodes",-1),wo=e("code",null,"...codes",-1),Oo=e("code",null,"CommandDefinitionBuilder",-1),Io=e("code",null,"ServiceClassType",-1),Lo=e("code",null,"MessagePayloadType",-1),No=e("code",null,"MessageParamsType",-1),Eo=e("code",null,"MessageResultType",-1),Ao=e("code",null,"FunctionPayloadType",-1),Ho=e("code",null,"FunctionParamsType",-1),Zo=e("code",null,"FunctionResultType",-1),qo=i(`<p>If a function can return other status codes, than the default ones, you should add them to openApi definition. Per default, 200, 204, 400, 401 and 500 can be autogenerated in most cases. Special cases or different status codes should be added with this function.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">addErrorStatusCodes</span><span class="token punctuation">(</span>StatusCode<span class="token punctuation">.</span>PaymentRequired<span class="token punctuation">,</span> StatusCode<span class="token punctuation">.</span>Conflict<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4>`,4),Go=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Qo=e("td",{style:{"text-align":"left"}},[e("code",null,"...codes")],-1),jo={style:{"text-align":"left"}},Wo=e("code",null,"StatusCode",-1),Vo=e("td",{style:{"text-align":"left"}},"List of status codes",-1),Uo=e("h4",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns","aria-hidden":"true"},"#"),t(" Returns")],-1),zo=e("code",null,"CommandDefinitionBuilder",-1),Jo=e("code",null,"ServiceClassType",-1),Ko=e("code",null,"MessagePayloadType",-1),Xo=e("code",null,"MessageParamsType",-1),Yo=e("code",null,"MessageResultType",-1),$o=e("code",null,"FunctionPayloadType",-1),es=e("code",null,"FunctionParamsType",-1),ts=e("code",null,"FunctionResultType",-1),ns=e("p",null,"CommandDefinitionBuilder",-1),os=e("h4",{id:"defined-in-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-23","aria-hidden":"true"},"#"),t(" Defined in")],-1),ss={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L265",target:"_blank",rel:"noopener noreferrer"},as=e("hr",null,null,-1),is=e("h3",{id:"addopenapitags",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addopenapitags","aria-hidden":"true"},"#"),t(" addOpenApiTags")],-1),ds=e("strong",null,"addOpenApiTags",-1),ls=e("code",null,"...tags",-1),cs=e("code",null,"CommandDefinitionBuilder",-1),rs=e("code",null,"ServiceClassType",-1),us=e("code",null,"MessagePayloadType",-1),hs=e("code",null,"MessageParamsType",-1),_s=e("code",null,"MessageResultType",-1),ps=e("code",null,"FunctionPayloadType",-1),ms=e("code",null,"FunctionParamsType",-1),fs=e("code",null,"FunctionResultType",-1),ys=i(`<p>Add tags for openApi definition for given function. It is recommended to use some enum for tags to avoid typo issues.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">addTags</span><span class="token punctuation">(</span><span class="token string">&#39;User&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Public&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...tags</code></td><td style="text-align:left;"><code>string</code>[]</td><td style="text-align:left;">List of tag strings</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4>`,6),gs=e("code",null,"CommandDefinitionBuilder",-1),bs=e("code",null,"ServiceClassType",-1),Ts=e("code",null,"MessagePayloadType",-1),Cs=e("code",null,"MessageParamsType",-1),xs=e("code",null,"MessageResultType",-1),Ds=e("code",null,"FunctionPayloadType",-1),Ps=e("code",null,"FunctionParamsType",-1),Bs=e("code",null,"FunctionResultType",-1),ks=e("p",null,"CommandDefinitionBuilder",-1),vs=e("h4",{id:"defined-in-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-24","aria-hidden":"true"},"#"),t(" Defined in")],-1),Fs={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L247",target:"_blank",rel:"noopener noreferrer"},Ms=e("hr",null,null,-1),Ss=e("h3",{id:"addoutputschema",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addoutputschema","aria-hidden":"true"},"#"),t(" addOutputSchema")],-1),Rs=e("strong",null,"addOutputSchema",-1),ws=e("code",null,"I",-1),Os=e("code",null,"D",-1),Is=e("code",null,"O",-1),Ls=e("code",null,"outputSchema",-1),Ns=e("code",null,"outputContentType?",-1),Es=e("code",null,"outputContentEncoding?",-1),As=e("code",null,"CommandDefinitionBuilder",-1),Hs=e("code",null,"ServiceClassType",-1),Zs=e("code",null,"MessagePayloadType",-1),qs=e("code",null,"MessageParamsType",-1),Gs=e("code",null,"O",-1),Qs=e("code",null,"FunctionPayloadType",-1),js=e("code",null,"FunctionParamsType",-1),Ws=e("code",null,"I",-1),Vs=i('<p>Add a schema for output payload validation. Types for payload of message and function payload output are generated from given schema.</p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>I</code></td><td style="text-align:left;"><code>I</code></td></tr><tr><td style="text-align:left;"><code>D</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>O</code></td><td style="text-align:left;"><code>O</code></td></tr></tbody></table><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>outputSchema</code></td><td style="text-align:left;"><code>ZodType</code>&lt;<code>O</code>, <code>D</code>, <code>I</code>&gt;</td><td style="text-align:left;">The schema validation for output payload</td></tr><tr><td style="text-align:left;"><code>outputContentType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">optional the content type of payload</td></tr><tr><td style="text-align:left;"><code>outputContentEncoding?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">optional the content encoding</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4>',6),Us=e("code",null,"CommandDefinitionBuilder",-1),zs=e("code",null,"ServiceClassType",-1),Js=e("code",null,"MessagePayloadType",-1),Ks=e("code",null,"MessageParamsType",-1),Xs=e("code",null,"O",-1),Ys=e("code",null,"FunctionPayloadType",-1),$s=e("code",null,"FunctionParamsType",-1),ea=e("code",null,"I",-1),ta=e("p",null,"CommandDefinitionBuilder",-1),na=e("h4",{id:"defined-in-25",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-25","aria-hidden":"true"},"#"),t(" Defined in")],-1),oa={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L161",target:"_blank",rel:"noopener noreferrer"},sa=e("hr",null,null,-1),aa=e("h3",{id:"addparameterschema",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addparameterschema","aria-hidden":"true"},"#"),t(" addParameterSchema")],-1),ia=e("strong",null,"addParameterSchema",-1),da=e("code",null,"I",-1),la=e("code",null,"D",-1),ca=e("code",null,"O",-1),ra=e("code",null,"parameterSchema",-1),ua=e("code",null,"CommandDefinitionBuilder",-1),ha=e("code",null,"ServiceClassType",-1),_a=e("code",null,"MessagePayloadType",-1),pa=e("code",null,"I",-1),ma=e("code",null,"MessageResultType",-1),fa=e("code",null,"FunctionPayloadType",-1),ya=e("code",null,"O",-1),ga=e("code",null,"FunctionResultType",-1),ba=i('<p>Add a schema for output parameter validation. Types for parameter of message and function parameter output are generated from given schema.</p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>I</code></td><td style="text-align:left;"><code>I</code></td></tr><tr><td style="text-align:left;"><code>D</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>O</code></td><td style="text-align:left;"><code>O</code></td></tr></tbody></table><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>parameterSchema</code></td><td style="text-align:left;"><code>ZodType</code>&lt;<code>O</code>, <code>D</code>, <code>I</code>&gt;</td><td style="text-align:left;">The schema validation for output parameter</td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4>',6),Ta=e("code",null,"CommandDefinitionBuilder",-1),Ca=e("code",null,"ServiceClassType",-1),xa=e("code",null,"MessagePayloadType",-1),Da=e("code",null,"I",-1),Pa=e("code",null,"MessageResultType",-1),Ba=e("code",null,"FunctionPayloadType",-1),ka=e("code",null,"O",-1),va=e("code",null,"FunctionResultType",-1),Fa=e("p",null,"CommandDefinitionBuilder",-1),Ma=e("h4",{id:"defined-in-26",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-26","aria-hidden":"true"},"#"),t(" Defined in")],-1),Sa={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L195",target:"_blank",rel:"noopener noreferrer"},Ra=e("hr",null,null,-1),wa=e("h3",{id:"addpayloadschema",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addpayloadschema","aria-hidden":"true"},"#"),t(" addPayloadSchema")],-1),Oa=e("strong",null,"addPayloadSchema",-1),Ia=e("code",null,"I",-1),La=e("code",null,"D",-1),Na=e("code",null,"O",-1),Ea=e("code",null,"inputSchema",-1),Aa=e("code",null,"inputContentType?",-1),Ha=e("code",null,"inputContentEncoding?",-1),Za=e("code",null,"CommandDefinitionBuilder",-1),qa=e("code",null,"ServiceClassType",-1),Ga=e("code",null,"I",-1),Qa=e("code",null,"MessageParamsType",-1),ja=e("code",null,"MessageResultType",-1),Wa=e("code",null,"O",-1),Va=e("code",null,"FunctionParamsType",-1),Ua=e("code",null,"FunctionResultType",-1),za=i('<p>Add a schema for input payload validation. Types for payload of message and function payload input are generated from given schema.</p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>I</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>D</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code> = <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>O</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>inputSchema</code></td><td style="text-align:left;"><code>ZodType</code>&lt;<code>O</code>, <code>D</code>, <code>I</code>&gt;</td><td style="text-align:left;">The schema validation for input payload</td></tr><tr><td style="text-align:left;"><code>inputContentType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">optional the content type of payload</td></tr><tr><td style="text-align:left;"><code>inputContentEncoding?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">optional the content encoding</td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4>',6),Ja=e("code",null,"CommandDefinitionBuilder",-1),Ka=e("code",null,"ServiceClassType",-1),Xa=e("code",null,"I",-1),Ya=e("code",null,"MessageParamsType",-1),$a=e("code",null,"MessageResultType",-1),ei=e("code",null,"O",-1),ti=e("code",null,"FunctionParamsType",-1),ni=e("code",null,"FunctionResultType",-1),oi=e("p",null,"CommandDefinitionBuilder",-1),si=e("h4",{id:"defined-in-27",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-27","aria-hidden":"true"},"#"),t(" Defined in")],-1),ai={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L134",target:"_blank",rel:"noopener noreferrer"},ii=e("hr",null,null,-1),di=e("h3",{id:"addqueryparameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addqueryparameters","aria-hidden":"true"},"#"),t(" addQueryParameters")],-1),li=e("strong",null,"addQueryParameters",-1),ci=e("code",null,"...queryParams",-1),ri=e("code",null,"CommandDefinitionBuilder",-1),ui=e("code",null,"ServiceClassType",-1),hi=e("code",null,"MessagePayloadType",-1),_i=e("code",null,"MessageParamsType",-1),pi=e("code",null,"MessageResultType",-1),mi=e("code",null,"FunctionPayloadType",-1),fi=e("code",null,"FunctionParamsType",-1),yi=e("code",null,"FunctionResultType",-1),gi=i(`<p>Define query parameters if you expose the function as http endpoint. Query parameters are add to openApi definition. Query parameters are add to input parameters.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token punctuation">.</span><span class="token function">addQueryParameters</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span>
    required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">&#39;search&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">&#39;limit&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4>`,4),bi=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Ti=e("td",{style:{"text-align":"left"}},[e("code",null,"...queryParams")],-1),Ci={style:{"text-align":"left"}},xi=e("code",null,"QueryParameter",-1),Di=e("code",null,"FunctionParamsType",-1),Pi=e("td",{style:{"text-align":"left"}},"Add one or more query parameter definitions",-1),Bi=e("h4",{id:"returns-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-5","aria-hidden":"true"},"#"),t(" Returns")],-1),ki=e("code",null,"CommandDefinitionBuilder",-1),vi=e("code",null,"ServiceClassType",-1),Fi=e("code",null,"MessagePayloadType",-1),Mi=e("code",null,"MessageParamsType",-1),Si=e("code",null,"MessageResultType",-1),Ri=e("code",null,"FunctionPayloadType",-1),wi=e("code",null,"FunctionParamsType",-1),Oi=e("code",null,"FunctionResultType",-1),Ii=e("p",null,"CommandDefinitionBuilder",-1),Li=e("h4",{id:"defined-in-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-28","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ni={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L230",target:"_blank",rel:"noopener noreferrer"},Ei=e("hr",null,null,-1),Ai=e("h3",{id:"adviceautoacknowledgemessages",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#adviceautoacknowledgemessages","aria-hidden":"true"},"#"),t(" adviceAutoacknowledgeMessages")],-1),Hi=e("strong",null,"adviceAutoacknowledgeMessages",-1),Zi=e("code",null,"acknowledge?",-1),qi=e("code",null,"CommandDefinitionBuilder",-1),Gi=e("code",null,"ServiceClassType",-1),Qi=e("code",null,"MessagePayloadType",-1),ji=e("code",null,"MessageParamsType",-1),Wi=e("code",null,"MessageResultType",-1),Vi=e("code",null,"FunctionPayloadType",-1),Ui=e("code",null,"FunctionParamsType",-1),zi=e("code",null,"FunctionResultType",-1),Ji=i('<p>Instruct the event bridge message broker to autoacknowledge commands as soon as they arrive. This means, a message will not be resent, if the command execution fails unexpected.</p><p>If set to false, the command message will be resent from message broker to eventbridge, if:</p><ul><li>the underlaying message broker supports it</li><li>if the command execution fails unexpected</li><li>if sending of command response failed</li></ul><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>acknowledge</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>true</code></td><td style="text-align:left;">Enable (true) and disable (false)</td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4>',6),Ki=e("code",null,"CommandDefinitionBuilder",-1),Xi=e("code",null,"ServiceClassType",-1),Yi=e("code",null,"MessagePayloadType",-1),$i=e("code",null,"MessageParamsType",-1),ed=e("code",null,"MessageResultType",-1),td=e("code",null,"FunctionPayloadType",-1),nd=e("code",null,"FunctionParamsType",-1),od=e("code",null,"FunctionResultType",-1),sd=e("p",null,"CommandDefinition",-1),ad=e("h4",{id:"defined-in-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-29","aria-hidden":"true"},"#"),t(" Defined in")],-1),id={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L589",target:"_blank",rel:"noopener noreferrer"},dd=e("hr",null,null,-1),ld=e("h3",{id:"disablehttpsecurity",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#disablehttpsecurity","aria-hidden":"true"},"#"),t(" disableHttpSecurity")],-1),cd=e("strong",null,"disableHttpSecurity",-1),rd=e("code",null,"disabled?",-1),ud=e("code",null,"CommandDefinitionBuilder",-1),hd=e("code",null,"ServiceClassType",-1),_d=e("code",null,"MessagePayloadType",-1),pd=e("code",null,"MessageParamsType",-1),md=e("code",null,"MessageResultType",-1),fd=e("code",null,"FunctionPayloadType",-1),yd=e("code",null,"FunctionParamsType",-1),gd=e("code",null,"FunctionResultType",-1),bd=i('<p>enable or disable security for this endpoint</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th></tr></thead><tbody><tr><td style="text-align:left;"><code>disabled</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>true</code></td></tr></tbody></table><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4>',4),Td=e("code",null,"CommandDefinitionBuilder",-1),Cd=e("code",null,"ServiceClassType",-1),xd=e("code",null,"MessagePayloadType",-1),Dd=e("code",null,"MessageParamsType",-1),Pd=e("code",null,"MessageResultType",-1),Bd=e("code",null,"FunctionPayloadType",-1),kd=e("code",null,"FunctionParamsType",-1),vd=e("code",null,"FunctionResultType",-1),Fd=e("p",null,"CommandDefinitionBuilder",-1),Md=e("h4",{id:"defined-in-30",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-30","aria-hidden":"true"},"#"),t(" Defined in")],-1),Sd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L493",target:"_blank",rel:"noopener noreferrer"},Rd=e("hr",null,null,-1),wd=e("h3",{id:"enablehttpsecurity",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#enablehttpsecurity","aria-hidden":"true"},"#"),t(" enableHttpSecurity")],-1),Od=e("strong",null,"enableHttpSecurity",-1),Id=e("code",null,"enabled?",-1),Ld=e("code",null,"CommandDefinitionBuilder",-1),Nd=e("code",null,"ServiceClassType",-1),Ed=e("code",null,"MessagePayloadType",-1),Ad=e("code",null,"MessageParamsType",-1),Hd=e("code",null,"MessageResultType",-1),Zd=e("code",null,"FunctionPayloadType",-1),qd=e("code",null,"FunctionParamsType",-1),Gd=e("code",null,"FunctionResultType",-1),Qd=i('<p>enable or disable security for this endpoint</p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>enabled</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>true</code></td><td style="text-align:left;">Defaults to true if not set means &quot;enable security&quot;</td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4>',4),jd=e("code",null,"CommandDefinitionBuilder",-1),Wd=e("code",null,"ServiceClassType",-1),Vd=e("code",null,"MessagePayloadType",-1),Ud=e("code",null,"MessageParamsType",-1),zd=e("code",null,"MessageResultType",-1),Jd=e("code",null,"FunctionPayloadType",-1),Kd=e("code",null,"FunctionParamsType",-1),Xd=e("code",null,"FunctionResultType",-1),Yd=e("p",null,"CommandDefinitionBuilder",-1),$d=e("h4",{id:"defined-in-31",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-31","aria-hidden":"true"},"#"),t(" Defined in")],-1),el={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L483",target:"_blank",rel:"noopener noreferrer"},tl=e("hr",null,null,-1),nl=e("h3",{id:"exposeashttpendpoint",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#exposeashttpendpoint","aria-hidden":"true"},"#"),t(" exposeAsHttpEndpoint")],-1),ol=e("strong",null,"exposeAsHttpEndpoint",-1),sl=e("code",null,"method",-1),al=e("code",null,"path",-1),il=e("code",null,"contentTypeRequest?",-1),dl=e("code",null,"contentEncodingRequest?",-1),ll=e("code",null,"contentTypeResponse?",-1),cl=e("code",null,"contentEncodingResponse?",-1),rl=e("code",null,"CommandDefinitionBuilder",-1),ul=e("code",null,"ServiceClassType",-1),hl=e("code",null,"MessagePayloadType",-1),_l=e("code",null,"MessageParamsType",-1),pl=e("code",null,"MessageResultType",-1),ml=e("code",null,"FunctionPayloadType",-1),fl=e("code",null,"FunctionParamsType",-1),yl=e("code",null,"FunctionResultType",-1),gl=e("p",null,"Mark the function to be exposed as http endpoint.",-1),bl=e("p",null,"Api url prefix and service version are prepended automatically",-1),Tl=e("p",null,[t("For exposing a url like: "),e("code",null,"/api/V1/user/login"),t(" simply provide "),e("code",null,"user/login"),t("as path")],-1),Cl=e("h4",{id:"parameters-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-10","aria-hidden":"true"},"#"),t(" Parameters")],-1),xl=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Dl=e("td",{style:{"text-align":"left"}},[e("code",null,"method")],-1),Pl={style:{"text-align":"left"}},Bl=e("code",null,"SupportedHttpMethod",-1),kl=e("td",{style:{"text-align":"left"}},"Http method POST, PUT, PATCH, GET, DELETE",-1),vl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"path")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The url path")],-1),Fl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentTypeRequest?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"input content type defaults to application/json")],-1),Ml=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncodingRequest?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"input content encoding defaults to utf-8")],-1),Sl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentTypeResponse?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"input content type defaults to application/json")],-1),Rl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncodingResponse?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"input content encoding defaults to utf-8")],-1),wl=e("h4",{id:"returns-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-9","aria-hidden":"true"},"#"),t(" Returns")],-1),Ol=e("code",null,"CommandDefinitionBuilder",-1),Il=e("code",null,"ServiceClassType",-1),Ll=e("code",null,"MessagePayloadType",-1),Nl=e("code",null,"MessageParamsType",-1),El=e("code",null,"MessageResultType",-1),Al=e("code",null,"FunctionPayloadType",-1),Hl=e("code",null,"FunctionParamsType",-1),Zl=e("code",null,"FunctionResultType",-1),ql=e("p",null,"CommandDefinitionBuilder",-1),Gl=e("h4",{id:"defined-in-32",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-32","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ql={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L455",target:"_blank",rel:"noopener noreferrer"},jl=e("hr",null,null,-1),Wl=e("h3",{id:"extendwithhttpmetadata",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#extendwithhttpmetadata","aria-hidden":"true"},"#"),t(" extendWithHttpMetadata")],-1),Vl=e("code",null,"Private",-1),Ul=e("strong",null,"extendWithHttpMetadata",-1),zl=e("code",null,"definition",-1),Jl=e("code",null,"Complete",-1),Kl=e("code",null,"CommandDefinition",-1),Xl=e("code",null,"ServiceClassType",-1),Yl=e("code",null,"CommandDefinitionMetadataBase",-1),$l=e("code",null,"MessagePayloadType",-1),ec=e("code",null,"MessageParamsType",-1),tc=e("code",null,"MessageResultType",-1),nc=e("code",null,"FunctionPayloadType",-1),oc=e("code",null,"FunctionParamsType",-1),sc=e("code",null,"FunctionResultType",-1),ac=e("h4",{id:"parameters-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-11","aria-hidden":"true"},"#"),t(" Parameters")],-1),ic=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),dc=e("td",{style:{"text-align":"left"}},[e("code",null,"definition")],-1),lc={style:{"text-align":"left"}},cc=e("code",null,"Complete",-1),rc=e("code",null,"CommandDefinition",-1),uc=e("code",null,"ServiceClassType",-1),hc=e("code",null,"CommandDefinitionMetadataBase",-1),_c=e("code",null,"MessagePayloadType",-1),pc=e("code",null,"MessageParamsType",-1),mc=e("code",null,"MessageResultType",-1),fc=e("code",null,"FunctionPayloadType",-1),yc=e("code",null,"FunctionParamsType",-1),gc=e("code",null,"FunctionResultType",-1),bc=e("h4",{id:"returns-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-10","aria-hidden":"true"},"#"),t(" Returns")],-1),Tc=e("code",null,"Complete",-1),Cc=e("code",null,"CommandDefinition",-1),xc=e("code",null,"ServiceClassType",-1),Dc=e("code",null,"CommandDefinitionMetadataBase",-1),Pc=e("code",null,"MessagePayloadType",-1),Bc=e("code",null,"MessageParamsType",-1),kc=e("code",null,"MessageResultType",-1),vc=e("code",null,"FunctionPayloadType",-1),Fc=e("code",null,"FunctionParamsType",-1),Mc=e("code",null,"FunctionResultType",-1),Sc=e("h4",{id:"defined-in-33",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-33","aria-hidden":"true"},"#"),t(" Defined in")],-1),Rc={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L524",target:"_blank",rel:"noopener noreferrer"},wc=e("hr",null,null,-1),Oc=e("h3",{id:"getcommandfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommandfunction","aria-hidden":"true"},"#"),t(" getCommandFunction")],-1),Ic=e("strong",null,"getCommandFunction",-1),Lc=e("code",null,"CommandFunction",-1),Nc=e("code",null,"ServiceClassType",-1),Ec=e("code",null,"MessagePayloadType",-1),Ac=e("code",null,"MessageParamsType",-1),Hc=e("code",null,"FunctionPayloadType",-1),Zc=e("code",null,"FunctionParamsType",-1),qc=e("code",null,"FunctionResultType",-1),Gc=e("p",null,"Get the function implementation",-1),Qc=e("h4",{id:"returns-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-11","aria-hidden":"true"},"#"),t(" Returns")],-1),jc=e("code",null,"CommandFunction",-1),Wc=e("code",null,"ServiceClassType",-1),Vc=e("code",null,"MessagePayloadType",-1),Uc=e("code",null,"MessageParamsType",-1),zc=e("code",null,"FunctionPayloadType",-1),Jc=e("code",null,"FunctionParamsType",-1),Kc=e("code",null,"FunctionResultType",-1),Xc=e("p",null,"the function",-1),Yc=e("h4",{id:"defined-in-34",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-34","aria-hidden":"true"},"#"),t(" Defined in")],-1),$c={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L731",target:"_blank",rel:"noopener noreferrer"},er=e("hr",null,null,-1),tr=e("h3",{id:"getdefinition",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getdefinition","aria-hidden":"true"},"#"),t(" getDefinition")],-1),nr=e("strong",null,"getDefinition",-1),or=e("code",null,"CommandDefinition",-1),sr=e("code",null,"ServiceClassType",-1),ar=e("code",null,"CommandDefinitionMetadataBase",-1),ir=e("code",null,"MessagePayloadType",-1),dr=e("code",null,"MessageParamsType",-1),lr=e("code",null,"MessageResultType",-1),cr=e("code",null,"FunctionPayloadType",-1),rr=e("code",null,"FunctionParamsType",-1),ur=e("code",null,"FunctionResultType",-1),hr=e("p",null,"Creates and returns the CommandDefinition used as input for the service.",-1),_r=e("h4",{id:"returns-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-12","aria-hidden":"true"},"#"),t(" Returns")],-1),pr=e("code",null,"CommandDefinition",-1),mr=e("code",null,"ServiceClassType",-1),fr=e("code",null,"CommandDefinitionMetadataBase",-1),yr=e("code",null,"MessagePayloadType",-1),gr=e("code",null,"MessageParamsType",-1),br=e("code",null,"MessageResultType",-1),Tr=e("code",null,"FunctionPayloadType",-1),Cr=e("code",null,"FunctionParamsType",-1),xr=e("code",null,"FunctionResultType",-1),Dr=e("p",null,"CommandDefinition",-1),Pr=e("h4",{id:"defined-in-35",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-35","aria-hidden":"true"},"#"),t(" Defined in")],-1),Br={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L598",target:"_blank",rel:"noopener noreferrer"},kr=e("hr",null,null,-1),vr=e("h3",{id:"gettransforminputfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#gettransforminputfunction","aria-hidden":"true"},"#"),t(" getTransformInputFunction")],-1),Fr=e("strong",null,"getTransformInputFunction",-1),Mr=e("code",null,"undefined",-1),Sr=e("code",null,"CommandTransformInputHook",-1),Rr=e("code",null,"ServiceClassType",-1),wr=e("code",null,"FunctionPayloadType",-1),Or=e("code",null,"FunctionParamsType",-1),Ir=e("code",null,"MessagePayloadType",-1),Lr=e("code",null,"MessageParamsType",-1),Nr=e("p",null,"Return the transform input function",-1),Er=e("h4",{id:"returns-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-13","aria-hidden":"true"},"#"),t(" Returns")],-1),Ar=e("code",null,"undefined",-1),Hr=e("code",null,"CommandTransformInputHook",-1),Zr=e("code",null,"ServiceClassType",-1),qr=e("code",null,"FunctionPayloadType",-1),Gr=e("code",null,"FunctionParamsType",-1),Qr=e("code",null,"MessagePayloadType",-1),jr=e("code",null,"MessageParamsType",-1),Wr=e("p",null,"the input transform function if defined",-1),Vr=e("h4",{id:"defined-in-36",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-36","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ur={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L324",target:"_blank",rel:"noopener noreferrer"},zr=e("hr",null,null,-1),Jr=e("h3",{id:"gettransformoutputfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#gettransformoutputfunction","aria-hidden":"true"},"#"),t(" getTransformOutputFunction")],-1),Kr=e("strong",null,"getTransformOutputFunction",-1),Xr=e("code",null,"undefined",-1),Yr=e("code",null,"CommandTransformOutputHook",-1),$r=e("code",null,"ServiceClassType",-1),eu=e("code",null,"MessagePayloadType",-1),tu=e("code",null,"FunctionResultType",-1),nu=e("code",null,"FunctionParamsType",-1),ou=e("code",null,"MessageResultType",-1),su=e("p",null,"Return the transform output function",-1),au=e("h4",{id:"returns-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-14","aria-hidden":"true"},"#"),t(" Returns")],-1),iu=e("code",null,"undefined",-1),du=e("code",null,"CommandTransformOutputHook",-1),lu=e("code",null,"ServiceClassType",-1),cu=e("code",null,"MessagePayloadType",-1),ru=e("code",null,"FunctionResultType",-1),uu=e("code",null,"FunctionParamsType",-1),hu=e("code",null,"MessageResultType",-1),_u=e("p",null,"the transform output function if defined",-1),pu=e("h4",{id:"defined-in-37",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-37","aria-hidden":"true"},"#"),t(" Defined in")],-1),mu={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L381",target:"_blank",rel:"noopener noreferrer"},fu=e("hr",null,null,-1),yu=e("h3",{id:"markasdeprecated",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#markasdeprecated","aria-hidden":"true"},"#"),t(" markAsDeprecated")],-1),gu=e("strong",null,"markAsDeprecated",-1),bu=e("code",null,"CommandDefinitionBuilder",-1),Tu=e("code",null,"ServiceClassType",-1),Cu=e("code",null,"MessagePayloadType",-1),xu=e("code",null,"MessageParamsType",-1),Du=e("code",null,"MessageResultType",-1),Pu=e("code",null,"FunctionPayloadType",-1),Bu=e("code",null,"FunctionParamsType",-1),ku=e("code",null,"FunctionResultType",-1),vu=e("p",null,"Mark this endpoint/command as deprecated",-1),Fu=e("h4",{id:"returns-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-15","aria-hidden":"true"},"#"),t(" Returns")],-1),Mu=e("code",null,"CommandDefinitionBuilder",-1),Su=e("code",null,"ServiceClassType",-1),Ru=e("code",null,"MessagePayloadType",-1),wu=e("code",null,"MessageParamsType",-1),Ou=e("code",null,"MessageResultType",-1),Iu=e("code",null,"FunctionPayloadType",-1),Lu=e("code",null,"FunctionParamsType",-1),Nu=e("code",null,"FunctionResultType",-1),Eu=e("p",null,"CommandDefinitionBuilder",-1),Au=e("h4",{id:"defined-in-38",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-38","aria-hidden":"true"},"#"),t(" Defined in")],-1),Hu={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L184",target:"_blank",rel:"noopener noreferrer"},Zu=e("hr",null,null,-1),qu=e("h3",{id:"setafterguardhooks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setafterguardhooks","aria-hidden":"true"},"#"),t(" setAfterGuardHooks")],-1),Gu=e("strong",null,"setAfterGuardHooks",-1),Qu=e("code",null,"afterGuards",-1),ju=e("code",null,"CommandDefinitionBuilder",-1),Wu=e("code",null,"ServiceClassType",-1),Vu=e("code",null,"MessagePayloadType",-1),Uu=e("code",null,"MessageParamsType",-1),zu=e("code",null,"MessageResultType",-1),Ju=e("code",null,"FunctionPayloadType",-1),Ku=e("code",null,"FunctionParamsType",-1),Xu=e("code",null,"FunctionResultType",-1),Yu=e("p",null,"Set one or more after guard hook(s). If there are multiple after guard hooks, they are executed in parallel",-1),$u=e("h4",{id:"parameters-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-12","aria-hidden":"true"},"#"),t(" Parameters")],-1),eh=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),th=e("td",{style:{"text-align":"left"}},[e("code",null,"afterGuards")],-1),nh={style:{"text-align":"left"}},oh=e("code",null,"Record",-1),sh=e("code",null,"string",-1),ah=e("code",null,"CommandAfterGuardHook",-1),ih=e("code",null,"ServiceClassType",-1),dh=e("code",null,"MessagePayloadType",-1),lh=e("code",null,"MessageParamsType",-1),ch=e("code",null,"FunctionResultType",-1),rh=e("code",null,"FunctionPayloadType",-1),uh=e("code",null,"FunctionParamsType",-1),hh=e("h4",{id:"returns-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-16","aria-hidden":"true"},"#"),t(" Returns")],-1),_h=e("code",null,"CommandDefinitionBuilder",-1),ph=e("code",null,"ServiceClassType",-1),mh=e("code",null,"MessagePayloadType",-1),fh=e("code",null,"MessageParamsType",-1),yh=e("code",null,"MessageResultType",-1),gh=e("code",null,"FunctionPayloadType",-1),bh=e("code",null,"FunctionParamsType",-1),Th=e("code",null,"FunctionResultType",-1),Ch=e("p",null,"CommandDefinitionBuilder",-1),xh=e("h4",{id:"defined-in-39",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-39","aria-hidden":"true"},"#"),t(" Defined in")],-1),Dh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L423",target:"_blank",rel:"noopener noreferrer"},Ph=e("hr",null,null,-1),Bh=e("h3",{id:"setbeforeguardhooks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setbeforeguardhooks","aria-hidden":"true"},"#"),t(" setBeforeGuardHooks")],-1),kh=e("strong",null,"setBeforeGuardHooks",-1),vh=e("code",null,"beforeGuards",-1),Fh=e("code",null,"CommandDefinitionBuilder",-1),Mh=e("code",null,"ServiceClassType",-1),Sh=e("code",null,"MessagePayloadType",-1),Rh=e("code",null,"MessageParamsType",-1),wh=e("code",null,"MessageResultType",-1),Oh=e("code",null,"FunctionPayloadType",-1),Ih=e("code",null,"FunctionParamsType",-1),Lh=e("code",null,"FunctionResultType",-1),Nh=e("p",null,"Set one or more before guard hook(s). If there are multiple before guard hooks, they are executed in parallel",-1),Eh=e("h4",{id:"parameters-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-13","aria-hidden":"true"},"#"),t(" Parameters")],-1),Ah=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Hh=e("td",{style:{"text-align":"left"}},[e("code",null,"beforeGuards")],-1),Zh={style:{"text-align":"left"}},qh=e("code",null,"Record",-1),Gh=e("code",null,"string",-1),Qh=e("code",null,"CommandBeforeGuardHook",-1),jh=e("code",null,"ServiceClassType",-1),Wh=e("code",null,"MessagePayloadType",-1),Vh=e("code",null,"MessageParamsType",-1),Uh=e("code",null,"FunctionPayloadType",-1),zh=e("code",null,"FunctionParamsType",-1),Jh=e("td",{style:{"text-align":"left"}},"Object of key = name of guard, value = function",-1),Kh=e("h4",{id:"returns-17",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-17","aria-hidden":"true"},"#"),t(" Returns")],-1),Xh=e("code",null,"CommandDefinitionBuilder",-1),Yh=e("code",null,"ServiceClassType",-1),$h=e("code",null,"MessagePayloadType",-1),e_=e("code",null,"MessageParamsType",-1),t_=e("code",null,"MessageResultType",-1),n_=e("code",null,"FunctionPayloadType",-1),o_=e("code",null,"FunctionParamsType",-1),s_=e("code",null,"FunctionResultType",-1),a_=e("p",null,"CommandDefinitionBuilder",-1),i_=e("h4",{id:"defined-in-40",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-40","aria-hidden":"true"},"#"),t(" Defined in")],-1),d_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L401",target:"_blank",rel:"noopener noreferrer"},l_=e("hr",null,null,-1),c_=e("h3",{id:"setcommandfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setcommandfunction","aria-hidden":"true"},"#"),t(" setCommandFunction")],-1),r_=e("strong",null,"setCommandFunction",-1),u_=e("code",null,"fn",-1),h_=e("code",null,"CommandDefinitionBuilder",-1),__=e("code",null,"ServiceClassType",-1),p_=e("code",null,"MessagePayloadType",-1),m_=e("code",null,"MessageParamsType",-1),f_=e("code",null,"MessageResultType",-1),y_=e("code",null,"FunctionPayloadType",-1),g_=e("code",null,"FunctionParamsType",-1),b_=e("code",null,"FunctionResultType",-1),T_=i(`<p>Required: Set the function implementation. The types should be automatically set as soon as schemas previously defined. As the function will be a a function of a service class you need to implement as function declaration. Anonymous functions do not have access to the <code>this</code> scope.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> parameter<span class="token punctuation">)</span> <span class="token punctuation">{</span>

   <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">the result output payload</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14" aria-hidden="true">#</a> Parameters</h4>`,4),C_=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),x_=e("td",{style:{"text-align":"left"}},[e("code",null,"fn")],-1),D_={style:{"text-align":"left"}},P_=e("code",null,"CommandFunction",-1),B_=e("code",null,"ServiceClassType",-1),k_=e("code",null,"MessagePayloadType",-1),v_=e("code",null,"MessageParamsType",-1),F_=e("code",null,"FunctionPayloadType",-1),M_=e("code",null,"FunctionParamsType",-1),S_=e("code",null,"FunctionResultType",-1),R_=e("td",{style:{"text-align":"left"}},"the function implementation",-1),w_=e("h4",{id:"returns-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-18","aria-hidden":"true"},"#"),t(" Returns")],-1),O_=e("code",null,"CommandDefinitionBuilder",-1),I_=e("code",null,"ServiceClassType",-1),L_=e("code",null,"MessagePayloadType",-1),N_=e("code",null,"MessageParamsType",-1),E_=e("code",null,"MessageResultType",-1),A_=e("code",null,"FunctionPayloadType",-1),H_=e("code",null,"FunctionParamsType",-1),Z_=e("code",null,"FunctionResultType",-1),q_=e("p",null,"CommandDefinitionBuilder",-1),G_=e("h4",{id:"defined-in-41",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-41","aria-hidden":"true"},"#"),t(" Defined in")],-1),Q_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L689",target:"_blank",rel:"noopener noreferrer"},j_=e("hr",null,null,-1),W_=e("h3",{id:"setopenapioperationid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setopenapioperationid","aria-hidden":"true"},"#"),t(" setOpenApiOperationId")],-1),V_=e("strong",null,"setOpenApiOperationId",-1),U_=e("code",null,"operationId",-1),z_=e("code",null,"CommandDefinitionBuilder",-1),J_=e("code",null,"ServiceClassType",-1),K_=e("code",null,"MessagePayloadType",-1),X_=e("code",null,"MessageParamsType",-1),Y_=e("code",null,"MessageResultType",-1),$_=e("code",null,"FunctionPayloadType",-1),ep=e("code",null,"FunctionParamsType",-1),tp=e("code",null,"FunctionResultType",-1),np=i('<p>Set the operationId for openApi documentation</p><h4 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>operationId</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-19" tabindex="-1"><a class="header-anchor" href="#returns-19" aria-hidden="true">#</a> Returns</h4>',4),op=e("code",null,"CommandDefinitionBuilder",-1),sp=e("code",null,"ServiceClassType",-1),ap=e("code",null,"MessagePayloadType",-1),ip=e("code",null,"MessageParamsType",-1),dp=e("code",null,"MessageResultType",-1),lp=e("code",null,"FunctionPayloadType",-1),cp=e("code",null,"FunctionParamsType",-1),rp=e("code",null,"FunctionResultType",-1),up=e("p",null,"CommandDefinitionBuilder",-1),hp=e("h4",{id:"defined-in-42",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-42","aria-hidden":"true"},"#"),t(" Defined in")],-1),_p={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L519",target:"_blank",rel:"noopener noreferrer"},pp=e("hr",null,null,-1),mp=e("h3",{id:"setopenapisummary",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setopenapisummary","aria-hidden":"true"},"#"),t(" setOpenApiSummary")],-1),fp=e("strong",null,"setOpenApiSummary",-1),yp=e("code",null,"summary",-1),gp=e("code",null,"CommandDefinitionBuilder",-1),bp=e("code",null,"ServiceClassType",-1),Tp=e("code",null,"MessagePayloadType",-1),Cp=e("code",null,"MessageParamsType",-1),xp=e("code",null,"MessageResultType",-1),Dp=e("code",null,"FunctionPayloadType",-1),Pp=e("code",null,"FunctionParamsType",-1),Bp=e("code",null,"FunctionResultType",-1),kp=i(`<p>Set the function summary text used for example in openApi documentation</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">setSummary</span><span class="token punctuation">(</span><span class="token string">&#39;Some function summary&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="parameters-16" tabindex="-1"><a class="header-anchor" href="#parameters-16" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>summary</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Summary text</td></tr></tbody></table><h4 id="returns-20" tabindex="-1"><a class="header-anchor" href="#returns-20" aria-hidden="true">#</a> Returns</h4>`,6),vp=e("code",null,"CommandDefinitionBuilder",-1),Fp=e("code",null,"ServiceClassType",-1),Mp=e("code",null,"MessagePayloadType",-1),Sp=e("code",null,"MessageParamsType",-1),Rp=e("code",null,"MessageResultType",-1),wp=e("code",null,"FunctionPayloadType",-1),Op=e("code",null,"FunctionParamsType",-1),Ip=e("code",null,"FunctionResultType",-1),Lp=e("p",null,"CommandDefinitionBuilder",-1),Np=e("h4",{id:"defined-in-43",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-43","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ep={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L509",target:"_blank",rel:"noopener noreferrer"},Ap=e("hr",null,null,-1),Hp=e("h3",{id:"setsuccesseventname",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setsuccesseventname","aria-hidden":"true"},"#"),t(" setSuccessEventName")],-1),Zp=e("strong",null,"setSuccessEventName",-1),qp=e("code",null,"eventName",-1),Gp=e("code",null,"CommandDefinitionBuilder",-1),Qp=e("code",null,"ServiceClassType",-1),jp=e("code",null,"MessagePayloadType",-1),Wp=e("code",null,"MessageParamsType",-1),Vp=e("code",null,"MessageResultType",-1),Up=e("code",null,"FunctionPayloadType",-1),zp=e("code",null,"FunctionParamsType",-1),Jp=e("code",null,"FunctionResultType",-1),Kp=i('<h4 id="parameters-17" tabindex="-1"><a class="header-anchor" href="#parameters-17" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-21" tabindex="-1"><a class="header-anchor" href="#returns-21" aria-hidden="true">#</a> Returns</h4>',3),Xp=e("code",null,"CommandDefinitionBuilder",-1),Yp=e("code",null,"ServiceClassType",-1),$p=e("code",null,"MessagePayloadType",-1),em=e("code",null,"MessageParamsType",-1),tm=e("code",null,"MessageResultType",-1),nm=e("code",null,"FunctionPayloadType",-1),om=e("code",null,"FunctionParamsType",-1),sm=e("code",null,"FunctionResultType",-1),am=e("h4",{id:"defined-in-44",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-44","aria-hidden":"true"},"#"),t(" Defined in")],-1),im={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L121",target:"_blank",rel:"noopener noreferrer"},dm=e("hr",null,null,-1),lm=e("h3",{id:"settransforminput",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#settransforminput","aria-hidden":"true"},"#"),t(" setTransformInput")],-1),cm=e("strong",null,"setTransformInput",-1),rm=e("code",null,"PayloadIn",-1),um=e("code",null,"ParamsIn",-1),hm=e("code",null,"PayloadOut",-1),_m=e("code",null,"ParamsOut",-1),pm=e("code",null,"PayloadD",-1),mm=e("code",null,"ParamsD",-1),fm=e("code",null,"transformInputSchema",-1),ym=e("code",null,"transformParameterSchema",-1),gm=e("code",null,"transformFunction",-1),bm=e("code",null,"inputContentType?",-1),Tm=e("code",null,"inputContentEncoding?",-1),Cm=e("code",null,"CommandDefinitionBuilder",-1),xm=e("code",null,"ServiceClassType",-1),Dm=e("code",null,"PayloadIn",-1),Pm=e("code",null,"ParamsIn",-1),Bm=e("code",null,"MessageResultType",-1),km=e("code",null,"FunctionPayloadType",-1),vm=e("code",null,"FunctionParamsType",-1),Fm=e("code",null,"FunctionResultType",-1),Mm=i('<p>Set a transform input hook which will encode or transform the input payload and parameters. Will be executed as first step before input validation, before guard and the function itself. This will change the type of input message payload and input message parameter.</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadIn</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>ParamsIn</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>PayloadOut</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>ParamsOut</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>PayloadD</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code> = <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>ParamsD</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code> = <code>ZodTypeDef</code></td></tr></tbody></table><h4 id="parameters-18" tabindex="-1"><a class="header-anchor" href="#parameters-18" aria-hidden="true">#</a> Parameters</h4>',4),Sm=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Rm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"PayloadOut"),t(", "),e("code",null,"PayloadD"),t(", "),e("code",null,"PayloadIn"),t(">")]),e("td",{style:{"text-align":"left"}},"Input payload validation schema")],-1),wm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"ParamsOut"),t(", "),e("code",null,"ParamsD"),t(", "),e("code",null,"ParamsIn"),t(">")]),e("td",{style:{"text-align":"left"}},"Input parameter validation schema")],-1),Om=e("td",{style:{"text-align":"left"}},[e("code",null,"transformFunction")],-1),Im={style:{"text-align":"left"}},Lm=e("code",null,"CommandTransformInputHook",-1),Nm=e("code",null,"ServiceClassType",-1),Em=e("code",null,"FunctionPayloadType",-1),Am=e("code",null,"FunctionParamsType",-1),Hm=e("code",null,"PayloadIn",-1),Zm=e("code",null,"ParamsIn",-1),qm=e("td",{style:{"text-align":"left"}},"Transform input function",-1),Gm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"inputContentType?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"optional the content type of payload")],-1),Qm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"inputContentEncoding?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"optional the content encoding")],-1),jm=e("h4",{id:"returns-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-22","aria-hidden":"true"},"#"),t(" Returns")],-1),Wm=e("code",null,"CommandDefinitionBuilder",-1),Vm=e("code",null,"ServiceClassType",-1),Um=e("code",null,"PayloadIn",-1),zm=e("code",null,"ParamsIn",-1),Jm=e("code",null,"MessageResultType",-1),Km=e("code",null,"FunctionPayloadType",-1),Xm=e("code",null,"FunctionParamsType",-1),Ym=e("code",null,"FunctionResultType",-1),$m=e("p",null,"CommandDefinitionBuilder",-1),e1=e("h4",{id:"defined-in-45",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-45","aria-hidden":"true"},"#"),t(" Defined in")],-1),t1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L281",target:"_blank",rel:"noopener noreferrer"},n1=e("hr",null,null,-1),o1=e("h3",{id:"settransformoutput",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#settransformoutput","aria-hidden":"true"},"#"),t(" setTransformOutput")],-1),s1=e("strong",null,"setTransformOutput",-1),a1=e("code",null,"PayloadOut",-1),i1=e("code",null,"PayloadD",-1),d1=e("code",null,"PayloadIn",-1),l1=e("code",null,"transformOutputSchema",-1),c1=e("code",null,"transformFunction",-1),r1=e("code",null,"outputContentType?",-1),u1=e("code",null,"outputContentEncoding?",-1),h1=e("code",null,"CommandDefinitionBuilder",-1),_1=e("code",null,"ServiceClassType",-1),p1=e("code",null,"MessagePayloadType",-1),m1=e("code",null,"MessageParamsType",-1),f1=e("code",null,"PayloadOut",-1),y1=e("code",null,"FunctionPayloadType",-1),g1=e("code",null,"FunctionParamsType",-1),b1=e("code",null,"FunctionResultType",-1),T1=i('<p>Set a transform output hook which will encode or transform the response payload. Will be executed at very last step after function execution, output validation and after guard hooks. This will change the type of output message payload.</p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadOut</code></td><td style="text-align:left;"><code>PayloadOut</code></td></tr><tr><td style="text-align:left;"><code>PayloadD</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>PayloadIn</code></td><td style="text-align:left;"><code>PayloadIn</code></td></tr></tbody></table><h4 id="parameters-19" tabindex="-1"><a class="header-anchor" href="#parameters-19" aria-hidden="true">#</a> Parameters</h4>',4),C1=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),x1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"PayloadOut"),t(", "),e("code",null,"PayloadD"),t(", "),e("code",null,"PayloadIn"),t(">")]),e("td",{style:{"text-align":"left"}},"The output validation schema")],-1),D1=e("td",{style:{"text-align":"left"}},[e("code",null,"transformFunction")],-1),P1={style:{"text-align":"left"}},B1=e("code",null,"CommandTransformOutputHook",-1),k1=e("code",null,"ServiceClassType",-1),v1=e("code",null,"MessagePayloadType",-1),F1=e("code",null,"FunctionResultType",-1),M1=e("code",null,"FunctionParamsType",-1),S1=e("code",null,"PayloadIn",-1),R1=e("td",{style:{"text-align":"left"}},"Transform output function",-1),w1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"outputContentType?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"optional the content type of payload")],-1),O1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"outputContentEncoding?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"optional the content encoding")],-1),I1=e("h4",{id:"returns-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-23","aria-hidden":"true"},"#"),t(" Returns")],-1),L1=e("code",null,"CommandDefinitionBuilder",-1),N1=e("code",null,"ServiceClassType",-1),E1=e("code",null,"MessagePayloadType",-1),A1=e("code",null,"MessageParamsType",-1),H1=e("code",null,"PayloadOut",-1),Z1=e("code",null,"FunctionPayloadType",-1),q1=e("code",null,"FunctionParamsType",-1),G1=e("code",null,"FunctionResultType",-1),Q1=e("p",null,"CommandDefinitionBuilder",-1),j1=e("h4",{id:"defined-in-46",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-46","aria-hidden":"true"},"#"),t(" Defined in")],-1),W1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L348",target:"_blank",rel:"noopener noreferrer"};function V1(U1,z1){const o=d("RouterLink"),a=d("ExternalLinkIcon");return c(),r("div",null,[e("p",null,[n(o,{to:"/api/"},{default:s(()=>[t("PURISTA API")]),_:1}),t(" / "),n(o,{to:"/api/modules.html"},{default:s(()=>[t("Modules")]),_:1}),t(" / "),n(o,{to:"/api/modules/purista_core.html"},{default:s(()=>[t("@purista/core")]),_:1}),t(" / CommandDefinitionBuilder")]),h,e("p",null,[n(o,{to:"/api/modules/purista_core.html"},{default:s(()=>[t("@purista/core")]),_:1}),t(".CommandDefinitionBuilder")]),_,p,m,e("table",null,[f,e("tbody",null,[e("tr",null,[y,e("td",g,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[b]),_:1})])]),T,C,x,D,P,B])]),k,v,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#constructor"},{default:s(()=>[t("constructor")]),_:1})])]),F,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#autoacknowledge"},{default:s(()=>[t("autoacknowledge")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#commanddescription"},{default:s(()=>[t("commandDescription")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#commandname"},{default:s(()=>[t("commandName")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#deprecated"},{default:s(()=>[t("deprecated")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#durable"},{default:s(()=>[t("durable")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#errorstatuscodes"},{default:s(()=>[t("errorStatusCodes")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#eventname"},{default:s(()=>[t("eventName")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#fn"},{default:s(()=>[t("fn")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#hooks"},{default:s(()=>[t("hooks")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#httpmetadata"},{default:s(()=>[t("httpMetadata")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#inputcontentencoding"},{default:s(()=>[t("inputContentEncoding")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#inputcontenttype"},{default:s(()=>[t("inputContentType")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#inputschema"},{default:s(()=>[t("inputSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#issecure"},{default:s(()=>[t("isSecure")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#operationid"},{default:s(()=>[t("operationId")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#outputcontentencoding"},{default:s(()=>[t("outputContentEncoding")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#outputcontenttype"},{default:s(()=>[t("outputContentType")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#outputschema"},{default:s(()=>[t("outputSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#parameterschema"},{default:s(()=>[t("parameterSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#queryparameter"},{default:s(()=>[t("queryParameter")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#summary"},{default:s(()=>[t("summary")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#tags"},{default:s(()=>[t("tags")]),_:1})])]),M,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#addopenapierrorstatuscodes"},{default:s(()=>[t("addOpenApiErrorStatusCodes")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#addopenapitags"},{default:s(()=>[t("addOpenApiTags")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#addoutputschema"},{default:s(()=>[t("addOutputSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#addparameterschema"},{default:s(()=>[t("addParameterSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#addpayloadschema"},{default:s(()=>[t("addPayloadSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#addqueryparameters"},{default:s(()=>[t("addQueryParameters")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#adviceautoacknowledgemessages"},{default:s(()=>[t("adviceAutoacknowledgeMessages")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#disablehttpsecurity"},{default:s(()=>[t("disableHttpSecurity")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#enablehttpsecurity"},{default:s(()=>[t("enableHttpSecurity")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#exposeashttpendpoint"},{default:s(()=>[t("exposeAsHttpEndpoint")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#extendwithhttpmetadata"},{default:s(()=>[t("extendWithHttpMetadata")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#getcommandfunction"},{default:s(()=>[t("getCommandFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#getdefinition"},{default:s(()=>[t("getDefinition")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#gettransforminputfunction"},{default:s(()=>[t("getTransformInputFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#gettransformoutputfunction"},{default:s(()=>[t("getTransformOutputFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#markasdeprecated"},{default:s(()=>[t("markAsDeprecated")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#setafterguardhooks"},{default:s(()=>[t("setAfterGuardHooks")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#setbeforeguardhooks"},{default:s(()=>[t("setBeforeGuardHooks")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#setcommandfunction"},{default:s(()=>[t("setCommandFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#setopenapioperationid"},{default:s(()=>[t("setOpenApiOperationId")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#setopenapisummary"},{default:s(()=>[t("setOpenApiSummary")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#setsuccesseventname"},{default:s(()=>[t("setSuccessEventName")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#settransforminput"},{default:s(()=>[t("setTransformInput")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#settransformoutput"},{default:s(()=>[t("setTransformOutput")]),_:1})])]),S,e("table",null,[R,e("tbody",null,[e("tr",null,[w,e("td",O,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[I]),_:1}),t("<"),L,t(", "),N,t(">")])]),E,A,H,Z,q,G])]),Q,e("p",null,[e("a",j,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:113"),n(a)])]),W,e("p",null,[e("a",V,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:63"),n(a)])]),U,z,J,K,e("p",null,[e("a",X,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:113"),n(a)])]),Y,$,ee,te,e("p",null,[e("a",ne,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:113"),n(a)])]),oe,e("p",null,[e("a",se,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:52"),n(a)])]),ae,e("p",null,[e("a",ie,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:62"),n(a)])]),de,le,e("p",null,[t("• "),ce,t(),re,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[ue]),_:1}),t("[] = "),he]),_e,e("p",null,[e("a",pe,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:56"),n(a)])]),me,e("p",null,[e("a",fe,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:113"),n(a)])]),ye,ge,e("p",null,[t("• "),be,t(),Te,t(),Ce,t(": "),n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[xe]),_:1}),t("<"),De,t(", "),Pe,t(", "),Be,t(", "),ke,t(", "),ve,t(", "),Fe,t(">")]),Me,e("p",null,[e("a",Se,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:103"),n(a)])]),Re,we,Oe,Ie,e("table",null,[Le,e("tbody",null,[e("tr",null,[Ne,e("td",Ee,[Ae,t("<"),He,t(", "),n(o,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:s(()=>[Ze]),_:1}),t("<"),qe,t(", "),Ge,t(", "),Qe,t(", "),je,t(", "),We,t(", "),Ve,t(">>")])]),e("tr",null,[Ue,e("td",ze,[Je,t("<"),Ke,t(", "),n(o,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:s(()=>[Xe]),_:1}),t("<"),Ye,t(", "),$e,t(", "),et,t(", "),tt,t(", "),nt,t(">>")])]),e("tr",null,[ot,e("td",st,[t("{ "),at,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[it]),_:1}),t("<"),dt,t(", "),lt,t(", "),ct,t(", "),rt,t(", "),ut,t("> ; "),ht,t(": "),_t,t("<"),pt,t(", "),mt,t(", "),ft,t("> ; "),yt,t(": "),gt,t("<"),bt,t(", "),Tt,t(", "),Ct,t("> }")])]),e("tr",null,[xt,e("td",Dt,[n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[Pt]),_:1}),t("<"),Bt,t(", "),kt,t(", "),vt,t(", "),Ft,t(", "),Mt,t(">")])]),St,Rt,e("tr",null,[wt,e("td",Ot,[t("{ "),It,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[Lt]),_:1}),t("<"),Nt,t(", "),Et,t(", "),At,t(", "),Ht,t(", "),Zt,t("> ; "),qt,t(": "),Gt,t("<"),Qt,t(", "),jt,t(", "),Wt,t("> }")])]),e("tr",null,[Vt,e("td",Ut,[n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[zt]),_:1}),t("<"),Jt,t(", "),Kt,t(", "),Xt,t(", "),Yt,t(", "),$t,t(">")])]),en])]),tn,e("p",null,[e("a",nn,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:65"),n(a)])]),on,e("table",null,[sn,e("tbody",null,[e("tr",null,[an,e("td",dn,[t("{ "),ln,t(": "),cn,t(" ; "),rn,t(": "),un,t(" ; "),hn,t(": "),_n,t(" ; "),pn,t(": "),mn,t(" ; "),fn,t(": "),yn,t(" ; "),gn,t(": "),bn,t(" ; "),Tn,t(": "),Cn,t(" ; "),xn,t(": "),Dn,t(" } & { "),Pn,t(": { "),Bn,t(": "),kn,t(" | "),vn,t(" | "),Fn,t(" | "),Mn,t(" | "),Sn,t(" ; "),Rn,t(": { "),wn,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[On]),_:1}),t("[] ; "),In,t(": "),Ln,t(" ; "),Nn,t(": "),En,t(" ; "),An,t(": "),Hn,t(" ; "),Zn,t(": "),n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[qn]),_:1}),t("<"),Gn,t(">[] ; "),Qn,t(": "),jn,t(" ; "),Wn,t(": "),Vn,t("[] } ; "),Un,t(": "),zn,t(" } }")])])])]),Jn,e("p",null,[e("a",Kn,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:40"),n(a)])]),Xn,e("p",null,[e("a",Yn,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:43"),n(a)])]),$n,e("p",null,[e("a",eo,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:42"),n(a)])]),to,e("p",null,[e("a",no,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:41"),n(a)])]),oo,e("p",null,[e("a",so,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:58"),n(a)])]),ao,e("p",null,[e("a",io,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:60"),n(a)])]),lo,e("p",null,[e("a",co,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:46"),n(a)])]),ro,e("p",null,[e("a",uo,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:45"),n(a)])]),ho,e("p",null,[e("a",_o,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:44"),n(a)])]),po,e("p",null,[e("a",mo,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:47"),n(a)])]),fo,yo,e("p",null,[t("• "),go,t(),bo,t(": "),n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[To]),_:1}),t("<"),Co,t(">[] = "),xo]),Do,e("p",null,[e("a",Po,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:48"),n(a)])]),Bo,e("p",null,[e("a",ko,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:54"),n(a)])]),vo,e("p",null,[e("a",Fo,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:50"),n(a)])]),Mo,So,e("p",null,[t("▸ "),Ro,t("("),wo,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Oo]),_:1}),t("<"),Io,t(", "),Lo,t(", "),No,t(", "),Eo,t(", "),Ao,t(", "),Ho,t(", "),Zo,t(">")]),qo,e("table",null,[Go,e("tbody",null,[e("tr",null,[Qo,e("td",jo,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[Wo]),_:1}),t("[]")]),Vo])])]),Uo,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[zo]),_:1}),t("<"),Jo,t(", "),Ko,t(", "),Xo,t(", "),Yo,t(", "),$o,t(", "),es,t(", "),ts,t(">")]),ns,os,e("p",null,[e("a",ss,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:265"),n(a)])]),as,is,e("p",null,[t("▸ "),ds,t("("),ls,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[cs]),_:1}),t("<"),rs,t(", "),us,t(", "),hs,t(", "),_s,t(", "),ps,t(", "),ms,t(", "),fs,t(">")]),ys,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[gs]),_:1}),t("<"),bs,t(", "),Ts,t(", "),Cs,t(", "),xs,t(", "),Ds,t(", "),Ps,t(", "),Bs,t(">")]),ks,vs,e("p",null,[e("a",Fs,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:247"),n(a)])]),Ms,Ss,e("p",null,[t("▸ "),Rs,t("<"),ws,t(", "),Os,t(", "),Is,t(">("),Ls,t(", "),Ns,t(", "),Es,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[As]),_:1}),t("<"),Hs,t(", "),Zs,t(", "),qs,t(", "),Gs,t(", "),Qs,t(", "),js,t(", "),Ws,t(">")]),Vs,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Us]),_:1}),t("<"),zs,t(", "),Js,t(", "),Ks,t(", "),Xs,t(", "),Ys,t(", "),$s,t(", "),ea,t(">")]),ta,na,e("p",null,[e("a",oa,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:161"),n(a)])]),sa,aa,e("p",null,[t("▸ "),ia,t("<"),da,t(", "),la,t(", "),ca,t(">("),ra,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[ua]),_:1}),t("<"),ha,t(", "),_a,t(", "),pa,t(", "),ma,t(", "),fa,t(", "),ya,t(", "),ga,t(">")]),ba,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Ta]),_:1}),t("<"),Ca,t(", "),xa,t(", "),Da,t(", "),Pa,t(", "),Ba,t(", "),ka,t(", "),va,t(">")]),Fa,Ma,e("p",null,[e("a",Sa,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:195"),n(a)])]),Ra,wa,e("p",null,[t("▸ "),Oa,t("<"),Ia,t(", "),La,t(", "),Na,t(">("),Ea,t(", "),Aa,t(", "),Ha,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Za]),_:1}),t("<"),qa,t(", "),Ga,t(", "),Qa,t(", "),ja,t(", "),Wa,t(", "),Va,t(", "),Ua,t(">")]),za,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Ja]),_:1}),t("<"),Ka,t(", "),Xa,t(", "),Ya,t(", "),$a,t(", "),ei,t(", "),ti,t(", "),ni,t(">")]),oi,si,e("p",null,[e("a",ai,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:134"),n(a)])]),ii,di,e("p",null,[t("▸ "),li,t("("),ci,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[ri]),_:1}),t("<"),ui,t(", "),hi,t(", "),_i,t(", "),pi,t(", "),mi,t(", "),fi,t(", "),yi,t(">")]),gi,e("table",null,[bi,e("tbody",null,[e("tr",null,[Ti,e("td",Ci,[n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[xi]),_:1}),t("<"),Di,t(">[]")]),Pi])])]),Bi,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[ki]),_:1}),t("<"),vi,t(", "),Fi,t(", "),Mi,t(", "),Si,t(", "),Ri,t(", "),wi,t(", "),Oi,t(">")]),Ii,Li,e("p",null,[e("a",Ni,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:230"),n(a)])]),Ei,Ai,e("p",null,[t("▸ "),Hi,t("("),Zi,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[qi]),_:1}),t("<"),Gi,t(", "),Qi,t(", "),ji,t(", "),Wi,t(", "),Vi,t(", "),Ui,t(", "),zi,t(">")]),Ji,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Ki]),_:1}),t("<"),Xi,t(", "),Yi,t(", "),$i,t(", "),ed,t(", "),td,t(", "),nd,t(", "),od,t(">")]),sd,ad,e("p",null,[e("a",id,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:589"),n(a)])]),dd,ld,e("p",null,[t("▸ "),cd,t("("),rd,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[ud]),_:1}),t("<"),hd,t(", "),_d,t(", "),pd,t(", "),md,t(", "),fd,t(", "),yd,t(", "),gd,t(">")]),bd,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Td]),_:1}),t("<"),Cd,t(", "),xd,t(", "),Dd,t(", "),Pd,t(", "),Bd,t(", "),kd,t(", "),vd,t(">")]),Fd,Md,e("p",null,[e("a",Sd,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:493"),n(a)])]),Rd,wd,e("p",null,[t("▸ "),Od,t("("),Id,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Ld]),_:1}),t("<"),Nd,t(", "),Ed,t(", "),Ad,t(", "),Hd,t(", "),Zd,t(", "),qd,t(", "),Gd,t(">")]),Qd,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[jd]),_:1}),t("<"),Wd,t(", "),Vd,t(", "),Ud,t(", "),zd,t(", "),Jd,t(", "),Kd,t(", "),Xd,t(">")]),Yd,$d,e("p",null,[e("a",el,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:483"),n(a)])]),tl,nl,e("p",null,[t("▸ "),ol,t("("),sl,t(", "),al,t(", "),il,t(", "),dl,t(", "),ll,t(", "),cl,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[rl]),_:1}),t("<"),ul,t(", "),hl,t(", "),_l,t(", "),pl,t(", "),ml,t(", "),fl,t(", "),yl,t(">")]),gl,bl,Tl,Cl,e("table",null,[xl,e("tbody",null,[e("tr",null,[Dl,e("td",Pl,[n(o,{to:"/api/modules/purista_core.html#supportedhttpmethod"},{default:s(()=>[Bl]),_:1})]),kl]),vl,Fl,Ml,Sl,Rl])]),wl,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Ol]),_:1}),t("<"),Il,t(", "),Ll,t(", "),Nl,t(", "),El,t(", "),Al,t(", "),Hl,t(", "),Zl,t(">")]),ql,Gl,e("p",null,[e("a",Ql,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:455"),n(a)])]),jl,Wl,e("p",null,[t("▸ "),Vl,t(),Ul,t("("),zl,t("): "),n(o,{to:"/api/modules/purista_core.html#complete"},{default:s(()=>[Jl]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[Kl]),_:1}),t("<"),Xl,t(", "),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[Yl]),_:1}),t(", "),$l,t(", "),ec,t(", "),tc,t(", "),nc,t(", "),oc,t(", "),sc,t(">>")]),ac,e("table",null,[ic,e("tbody",null,[e("tr",null,[dc,e("td",lc,[n(o,{to:"/api/modules/purista_core.html#complete"},{default:s(()=>[cc]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[rc]),_:1}),t("<"),uc,t(", "),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[hc]),_:1}),t(", "),_c,t(", "),pc,t(", "),mc,t(", "),fc,t(", "),yc,t(", "),gc,t(">>")])])])]),bc,e("p",null,[n(o,{to:"/api/modules/purista_core.html#complete"},{default:s(()=>[Tc]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[Cc]),_:1}),t("<"),xc,t(", "),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[Dc]),_:1}),t(", "),Pc,t(", "),Bc,t(", "),kc,t(", "),vc,t(", "),Fc,t(", "),Mc,t(">>")]),Sc,e("p",null,[e("a",Rc,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:524"),n(a)])]),wc,Oc,e("p",null,[t("▸ "),Ic,t("(): "),n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[Lc]),_:1}),t("<"),Nc,t(", "),Ec,t(", "),Ac,t(", "),Hc,t(", "),Zc,t(", "),qc,t(">")]),Gc,Qc,e("p",null,[n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[jc]),_:1}),t("<"),Wc,t(", "),Vc,t(", "),Uc,t(", "),zc,t(", "),Jc,t(", "),Kc,t(">")]),Xc,Yc,e("p",null,[e("a",$c,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:731"),n(a)])]),er,tr,e("p",null,[t("▸ "),nr,t("(): "),n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[or]),_:1}),t("<"),sr,t(", "),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[ar]),_:1}),t(", "),ir,t(", "),dr,t(", "),lr,t(", "),cr,t(", "),rr,t(", "),ur,t(">")]),hr,_r,e("p",null,[n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[pr]),_:1}),t("<"),mr,t(", "),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[fr]),_:1}),t(", "),yr,t(", "),gr,t(", "),br,t(", "),Tr,t(", "),Cr,t(", "),xr,t(">")]),Dr,Pr,e("p",null,[e("a",Br,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:598"),n(a)])]),kr,vr,e("p",null,[t("▸ "),Fr,t("(): "),Mr,t(" | "),n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[Sr]),_:1}),t("<"),Rr,t(", "),wr,t(", "),Or,t(", "),Ir,t(", "),Lr,t(">")]),Nr,Er,e("p",null,[Ar,t(" | "),n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[Hr]),_:1}),t("<"),Zr,t(", "),qr,t(", "),Gr,t(", "),Qr,t(", "),jr,t(">")]),Wr,Vr,e("p",null,[e("a",Ur,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:324"),n(a)])]),zr,Jr,e("p",null,[t("▸ "),Kr,t("(): "),Xr,t(" | "),n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[Yr]),_:1}),t("<"),$r,t(", "),eu,t(", "),tu,t(", "),nu,t(", "),ou,t(">")]),su,au,e("p",null,[iu,t(" | "),n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[du]),_:1}),t("<"),lu,t(", "),cu,t(", "),ru,t(", "),uu,t(", "),hu,t(">")]),_u,pu,e("p",null,[e("a",mu,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:381"),n(a)])]),fu,yu,e("p",null,[t("▸ "),gu,t("(): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[bu]),_:1}),t("<"),Tu,t(", "),Cu,t(", "),xu,t(", "),Du,t(", "),Pu,t(", "),Bu,t(", "),ku,t(">")]),vu,Fu,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Mu]),_:1}),t("<"),Su,t(", "),Ru,t(", "),wu,t(", "),Ou,t(", "),Iu,t(", "),Lu,t(", "),Nu,t(">")]),Eu,Au,e("p",null,[e("a",Hu,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:184"),n(a)])]),Zu,qu,e("p",null,[t("▸ "),Gu,t("("),Qu,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[ju]),_:1}),t("<"),Wu,t(", "),Vu,t(", "),Uu,t(", "),zu,t(", "),Ju,t(", "),Ku,t(", "),Xu,t(">")]),Yu,$u,e("table",null,[eh,e("tbody",null,[e("tr",null,[th,e("td",nh,[oh,t("<"),sh,t(", "),n(o,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:s(()=>[ah]),_:1}),t("<"),ih,t(", "),dh,t(", "),lh,t(", "),ch,t(", "),rh,t(", "),uh,t(">>")])])])]),hh,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[_h]),_:1}),t("<"),ph,t(", "),mh,t(", "),fh,t(", "),yh,t(", "),gh,t(", "),bh,t(", "),Th,t(">")]),Ch,xh,e("p",null,[e("a",Dh,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:423"),n(a)])]),Ph,Bh,e("p",null,[t("▸ "),kh,t("("),vh,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Fh]),_:1}),t("<"),Mh,t(", "),Sh,t(", "),Rh,t(", "),wh,t(", "),Oh,t(", "),Ih,t(", "),Lh,t(">")]),Nh,Eh,e("table",null,[Ah,e("tbody",null,[e("tr",null,[Hh,e("td",Zh,[qh,t("<"),Gh,t(", "),n(o,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:s(()=>[Qh]),_:1}),t("<"),jh,t(", "),Wh,t(", "),Vh,t(", "),Uh,t(", "),zh,t(">>")]),Jh])])]),Kh,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Xh]),_:1}),t("<"),Yh,t(", "),$h,t(", "),e_,t(", "),t_,t(", "),n_,t(", "),o_,t(", "),s_,t(">")]),a_,i_,e("p",null,[e("a",d_,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:401"),n(a)])]),l_,c_,e("p",null,[t("▸ "),r_,t("("),u_,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[h_]),_:1}),t("<"),__,t(", "),p_,t(", "),m_,t(", "),f_,t(", "),y_,t(", "),g_,t(", "),b_,t(">")]),T_,e("table",null,[C_,e("tbody",null,[e("tr",null,[x_,e("td",D_,[n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[P_]),_:1}),t("<"),B_,t(", "),k_,t(", "),v_,t(", "),F_,t(", "),M_,t(", "),S_,t(">")]),R_])])]),w_,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[O_]),_:1}),t("<"),I_,t(", "),L_,t(", "),N_,t(", "),E_,t(", "),A_,t(", "),H_,t(", "),Z_,t(">")]),q_,G_,e("p",null,[e("a",Q_,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:689"),n(a)])]),j_,W_,e("p",null,[t("▸ "),V_,t("("),U_,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[z_]),_:1}),t("<"),J_,t(", "),K_,t(", "),X_,t(", "),Y_,t(", "),$_,t(", "),ep,t(", "),tp,t(">")]),np,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[op]),_:1}),t("<"),sp,t(", "),ap,t(", "),ip,t(", "),dp,t(", "),lp,t(", "),cp,t(", "),rp,t(">")]),up,hp,e("p",null,[e("a",_p,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:519"),n(a)])]),pp,mp,e("p",null,[t("▸ "),fp,t("("),yp,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[gp]),_:1}),t("<"),bp,t(", "),Tp,t(", "),Cp,t(", "),xp,t(", "),Dp,t(", "),Pp,t(", "),Bp,t(">")]),kp,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[vp]),_:1}),t("<"),Fp,t(", "),Mp,t(", "),Sp,t(", "),Rp,t(", "),wp,t(", "),Op,t(", "),Ip,t(">")]),Lp,Np,e("p",null,[e("a",Ep,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:509"),n(a)])]),Ap,Hp,e("p",null,[t("▸ "),Zp,t("("),qp,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Gp]),_:1}),t("<"),Qp,t(", "),jp,t(", "),Wp,t(", "),Vp,t(", "),Up,t(", "),zp,t(", "),Jp,t(">")]),Kp,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Xp]),_:1}),t("<"),Yp,t(", "),$p,t(", "),em,t(", "),tm,t(", "),nm,t(", "),om,t(", "),sm,t(">")]),am,e("p",null,[e("a",im,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:121"),n(a)])]),dm,lm,e("p",null,[t("▸ "),cm,t("<"),rm,t(", "),um,t(", "),hm,t(", "),_m,t(", "),pm,t(", "),mm,t(">("),fm,t(", "),ym,t(", "),gm,t(", "),bm,t(", "),Tm,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Cm]),_:1}),t("<"),xm,t(", "),Dm,t(", "),Pm,t(", "),Bm,t(", "),km,t(", "),vm,t(", "),Fm,t(">")]),Mm,e("table",null,[Sm,e("tbody",null,[Rm,wm,e("tr",null,[Om,e("td",Im,[n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[Lm]),_:1}),t("<"),Nm,t(", "),Em,t(", "),Am,t(", "),Hm,t(", "),Zm,t(">")]),qm]),Gm,Qm])]),jm,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Wm]),_:1}),t("<"),Vm,t(", "),Um,t(", "),zm,t(", "),Jm,t(", "),Km,t(", "),Xm,t(", "),Ym,t(">")]),$m,e1,e("p",null,[e("a",t1,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:281"),n(a)])]),n1,o1,e("p",null,[t("▸ "),s1,t("<"),a1,t(", "),i1,t(", "),d1,t(">("),l1,t(", "),c1,t(", "),r1,t(", "),u1,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[h1]),_:1}),t("<"),_1,t(", "),p1,t(", "),m1,t(", "),f1,t(", "),y1,t(", "),g1,t(", "),b1,t(">")]),T1,e("table",null,[C1,e("tbody",null,[x1,e("tr",null,[D1,e("td",P1,[n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[B1]),_:1}),t("<"),k1,t(", "),v1,t(", "),F1,t(", "),M1,t(", "),S1,t(">")]),R1]),w1,O1])]),I1,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[L1]),_:1}),t("<"),N1,t(", "),E1,t(", "),A1,t(", "),H1,t(", "),Z1,t(", "),q1,t(", "),G1,t(">")]),Q1,j1,e("p",null,[e("a",W1,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:348"),n(a)])])])}const X1=l(u,[["render",V1],["__file","purista_core.CommandDefinitionBuilder.html.vue"]]);export{X1 as default};
