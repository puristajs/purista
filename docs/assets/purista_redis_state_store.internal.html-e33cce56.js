import{_ as i,W as s,X as o,Z as e,a0 as d,a1 as n,$ as t,Y as r,D as l}from"./framework-d89ed822.js";const c={},h=e("h1",{id:"namespace-internal",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#namespace-internal","aria-hidden":"true"},"#"),t(" Namespace: internal")],-1),p=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),u=e("h3",{id:"classes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#classes","aria-hidden":"true"},"#"),t(" Classes")],-1),f=e("h3",{id:"store",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#store","aria-hidden":"true"},"#"),t(" Store")],-1),g=e("h3",{id:"type-aliases",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),t(" Type Aliases")],-1),_=r('<h2 id="store-1" tabindex="-1"><a class="header-anchor" href="#store-1" aria-hidden="true">#</a> Store</h2><p>• <strong>StateStoreBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for config store implementations</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/StateStore/StateStoreBaseClass.impl.d.ts:8</p><p>• <strong>StateStore</strong>: <code>Object</code></p><p>Interface definition for state store implementations</p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/StateStore/types/StateStore.d.ts:9</p><h3 id="statedeletefunction" tabindex="-1"><a class="header-anchor" href="#statedeletefunction" aria-hidden="true">#</a> StateDeleteFunction</h3><p>Ƭ <strong>StateDeleteFunction</strong>: (<code>stateName</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>stateName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>delete a state value from the state store</p><h5 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>stateName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/StateStore/types/StateDeleteFunction.d.ts:2</p><hr><h3 id="stategetterfunction" tabindex="-1"><a class="header-anchor" href="#stategetterfunction" aria-hidden="true">#</a> StateGetterFunction</h3><p>Ƭ <strong>StateGetterFunction</strong>: (...<code>stateNames</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="type-declaration-1" tabindex="-1"><a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>...stateNames</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><p>get a state value from the state store</p><h5 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...stateNames</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h5 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/StateStore/types/StateGetterFunction.d.ts:2</p><hr><h3 id="statesetterfunction" tabindex="-1"><a class="header-anchor" href="#statesetterfunction" aria-hidden="true">#</a> StateSetterFunction</h3><p>Ƭ <strong>StateSetterFunction</strong>: (<code>secretName</code>: <code>string</code>, <code>secretValue</code>: <code>unknown</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-2" tabindex="-1"><a class="header-anchor" href="#type-declaration-2" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>set a state value in the state store</p><h5 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>secretValue</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/StateStore/types/StateSetterFunction.d.ts:2</p><h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="instanceid" tabindex="-1"><a class="header-anchor" href="#instanceid" aria-hidden="true">#</a> InstanceId</h3><p>Ƭ <strong>InstanceId</strong>: <code>string</code></p><p>the instance id of the event bridge</p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/InstanceId.d.ts:2</p><hr><h3 id="logfnparamtype" tabindex="-1"><a class="header-anchor" href="#logfnparamtype" aria-hidden="true">#</a> LogFnParamType</h3><p>Ƭ <strong>LogFnParamType</strong>: [<code>unknown</code>, string?, ...any] | [<code>string</code>, ...any]</p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/Logger.d.ts:15</p><hr><h3 id="loggeroptions" tabindex="-1"><a class="header-anchor" href="#loggeroptions" aria-hidden="true">#</a> LoggerOptions</h3><p>Ƭ <strong>LoggerOptions</strong>: <code>Object</code></p><h4 id="type-declaration-3" tabindex="-1"><a class="header-anchor" href="#type-declaration-3" aria-hidden="true">#</a> Type declaration</h4>',61),y=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),m=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hostname?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),x=e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId?")],-1),b={style:{"text-align":"left"}},S=e("code",null,"InstanceId",-1),T=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"name?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),I=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),N={style:{"text-align":"left"}},P=e("code",null,"PrincipalId",-1),k=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"puristaVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),v=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),C=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),D=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),F=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId?")],-1),L={style:{"text-align":"left"}},B=e("code",null,"TraceId",-1),R=r('<h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/Logger.d.ts:4</p><hr><h3 id="principalid" tabindex="-1"><a class="header-anchor" href="#principalid" aria-hidden="true">#</a> PrincipalId</h3><p>Ƭ <strong>PrincipalId</strong>: <code>string</code></p><p>the principal id</p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/PrincipalId.d.ts:2</p><hr><h3 id="storebaseconfig" tabindex="-1"><a class="header-anchor" href="#storebaseconfig" aria-hidden="true">#</a> StoreBaseConfig</h3><p>Ƭ <strong>StoreBaseConfig</strong>&lt;<code>Config</code>&gt;: <code>Object</code></p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Config</code></td></tr></tbody></table><h4 id="type-declaration-4" tabindex="-1"><a class="header-anchor" href="#type-declaration-4" aria-hidden="true">#</a> Type declaration</h4>',14),w=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),V=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Config")])],-1),O=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"enableGet?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")])],-1),G=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"enableRemove?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")])],-1),j=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"enableSet?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")])],-1),A=e("td",{style:{"text-align":"left"}},[e("code",null,"logger?")],-1),E={style:{"text-align":"left"}},M=e("code",null,"Logger",-1),U=r('<h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/StoreBaseConfig.d.ts:2</p><hr><h3 id="traceid" tabindex="-1"><a class="header-anchor" href="#traceid" aria-hidden="true">#</a> TraceId</h3><p>Ƭ <strong>TraceId</strong>: <code>string</code></p><p>The trace id which will be passed through all commands, invocations and subscriptions</p><h4 id="defined-in-10" tabindex="-1"><a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/TraceId.d.ts:4</p>',8);function W(X,Y){const a=l("RouterLink");return s(),o("div",null,[e("p",null,[d(a,{to:"/api/"},{default:n(()=>[t("PURISTA API - v1.4.9")]),_:1}),t(" / "),d(a,{to:"/api/modules.html"},{default:n(()=>[t("Modules")]),_:1}),t(" / "),d(a,{to:"/api/modules/purista_redis_state_store.html"},{default:n(()=>[t("@purista/redis-state-store")]),_:1}),t(" / internal")]),h,e("p",null,[d(a,{to:"/api/modules/purista_redis_state_store.html"},{default:n(()=>[t("@purista/redis-state-store")]),_:1}),t(".internal")]),p,u,e("ul",null,[e("li",null,[d(a,{to:"/api/classes/purista_redis_state_store.internal.Logger.html"},{default:n(()=>[t("Logger")]),_:1})])]),f,e("ul",null,[e("li",null,[d(a,{to:"/api/classes/purista_redis_state_store.internal.StateStoreBaseClass.html"},{default:n(()=>[t("StateStoreBaseClass")]),_:1})]),e("li",null,[d(a,{to:"/api/interfaces/purista_redis_state_store.internal.StateStore.html"},{default:n(()=>[t("StateStore")]),_:1})]),e("li",null,[d(a,{to:"/api/modules/purista_redis_state_store.internal.html#statedeletefunction"},{default:n(()=>[t("StateDeleteFunction")]),_:1})]),e("li",null,[d(a,{to:"/api/modules/purista_redis_state_store.internal.html#stategetterfunction"},{default:n(()=>[t("StateGetterFunction")]),_:1})]),e("li",null,[d(a,{to:"/api/modules/purista_redis_state_store.internal.html#statesetterfunction"},{default:n(()=>[t("StateSetterFunction")]),_:1})])]),g,e("ul",null,[e("li",null,[d(a,{to:"/api/modules/purista_redis_state_store.internal.html#instanceid"},{default:n(()=>[t("InstanceId")]),_:1})]),e("li",null,[d(a,{to:"/api/modules/purista_redis_state_store.internal.html#logfnparamtype"},{default:n(()=>[t("LogFnParamType")]),_:1})]),e("li",null,[d(a,{to:"/api/modules/purista_redis_state_store.internal.html#loggeroptions"},{default:n(()=>[t("LoggerOptions")]),_:1})]),e("li",null,[d(a,{to:"/api/modules/purista_redis_state_store.internal.html#principalid"},{default:n(()=>[t("PrincipalId")]),_:1})]),e("li",null,[d(a,{to:"/api/modules/purista_redis_state_store.internal.html#storebaseconfig"},{default:n(()=>[t("StoreBaseConfig")]),_:1})]),e("li",null,[d(a,{to:"/api/modules/purista_redis_state_store.internal.html#traceid"},{default:n(()=>[t("TraceId")]),_:1})])]),_,e("table",null,[y,e("tbody",null,[m,e("tr",null,[x,e("td",b,[d(a,{to:"/api/modules/purista_redis_state_store.internal.html#instanceid"},{default:n(()=>[S]),_:1})])]),T,e("tr",null,[I,e("td",N,[d(a,{to:"/api/modules/purista_redis_state_store.internal.html#principalid"},{default:n(()=>[P]),_:1})])]),k,v,C,D,e("tr",null,[F,e("td",L,[d(a,{to:"/api/modules/purista_redis_state_store.internal.html#traceid"},{default:n(()=>[B]),_:1})])])])]),R,e("table",null,[w,e("tbody",null,[V,O,G,j,e("tr",null,[A,e("td",E,[d(a,{to:"/api/classes/purista_redis_state_store.internal.Logger.html"},{default:n(()=>[M]),_:1})])])])]),U])}const $=i(c,[["render",W],["__file","purista_redis_state_store.internal.html.vue"]]);export{$ as default};
