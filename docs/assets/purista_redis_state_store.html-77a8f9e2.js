import{_ as l,W as i,X as c,Z as s,a0 as a,a1 as t,$ as n,Y as r,D as o}from"./framework-d89ed822.js";const u={},d=r(`<h1 id="module-purista-redis-state-store" tabindex="-1"><a class="header-anchor" href="#module-purista-redis-state-store" aria-hidden="true">#</a> Module: @purista/redis-state-store</h1><p>A state store for using redis as storage. State values are stored as stringified JSON.</p><p>Per default, setting/changing and removal of values are enabled.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
 enableGet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// optional, default is true</span>
 enableRemove<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// optional, default is true</span>
 enableSet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// optional, default is true</span>
 url<span class="token operator">:</span> <span class="token string">&#39;redis://alice:foobared@awesome.redis.server:6379&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedisStateStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span> config <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token string">&#39;stateKey&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span> myState<span class="token operator">:</span> <span class="token string">&#39;value&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token string">&#39;stateKey&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment">// outputs: { myState: &#39;value&#39; }</span>

<span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">removeState</span><span class="token punctuation">(</span><span class="token string">&#39;stateKey&#39;</span><span class="token punctuation">)</span>

value <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token string">&#39;stateKey&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment">// outputs: undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>See documentation of underlaying redis lib package for detailed configuration options.</p><p><strong><code>See</code></strong></p>`,7),k={href:"https://redis.js.org",target:"_blank",rel:"noopener noreferrer"},m=s("h2",{id:"table-of-contents",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),n(" Table of contents")],-1),v=s("h3",{id:"namespaces",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#namespaces","aria-hidden":"true"},"#"),n(" Namespaces")],-1),_=s("h3",{id:"classes",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#classes","aria-hidden":"true"},"#"),n(" Classes")],-1);function f(b,h){const e=o("RouterLink"),p=o("ExternalLinkIcon");return i(),c("div",null,[s("p",null,[a(e,{to:"/api/"},{default:t(()=>[n("PURISTA API - v1.4.9")]),_:1}),n(" / "),a(e,{to:"/api/modules.html"},{default:t(()=>[n("Modules")]),_:1}),n(" / @purista/redis-state-store")]),d,s("p",null,[s("a",k,[n("NODE-REDIS"),a(p)])]),m,v,s("ul",null,[s("li",null,[a(e,{to:"/api/modules/purista_redis_state_store.internal.html"},{default:t(()=>[n("internal")]),_:1})])]),_,s("ul",null,[s("li",null,[a(e,{to:"/api/classes/purista_redis_state_store.RedisStateStore.html"},{default:t(()=>[n("RedisStateStore")]),_:1})])])])}const S=l(u,[["render",f],["__file","purista_redis_state_store.html.vue"]]);export{S as default};
