import{_ as e,c as o,o as d,V as c}from"./chunks/framework.ITQiifkM.js";const u=JSON.parse('{"title":"Module: @purista/httpserver","description":"","frontmatter":{},"headers":[],"relativePath":"api/modules/purista_httpserver.md","filePath":"api/modules/purista_httpserver.md","lastUpdated":1708505616000}'),s={name:"api/modules/purista_httpserver.md"},t=c(`<p><a href="./../README.html">PURISTA API</a> / <a href="./../modules.html">Modules</a> / @purista/httpserver</p><h1 id="module-purista-httpserver" tabindex="-1">Module: @purista/httpserver <a class="header-anchor" href="#module-purista-httpserver" aria-label="Permalink to &quot;Module: @purista/httpserver&quot;">â€‹</a></h1><p><strong><code>Deprecated</code></strong></p><p>Since version 1.10.0. Use {@purista/hono-http-server} instead.</p><p>The HttpServerService is a service which exposes commands of services as http endpoints.<br> All exposed commands must be marked as exposed endpoints in the CommandBuilder.</p><p>While the main focus is on development and debug, the HttpServerService will also fit for small projects or running on IoT/edge.</p><p>Under the hood, <a href="https://www.fastify.io/" target="_blank" rel="noreferrer">fastify</a> is used as basement.<br> Because of this, the whole <a href="https://www.fastify.io/ecosystem/" target="_blank" rel="noreferrer">fastify ecosystem</a> can be used and integrated.</p><p>The HttpServerService can also be configured, to provide the OpenApi-UI in browsers.<br> The OpenApi definitions is created from the CommandBuilder settings of each command.<br> This means, that there are no additional steps or code required, to provide the OpenApi definition.<br> It is autogenerated mostly from input and output schema definitions.</p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fastifyStatic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@fastify/static&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { DefaultEventBridge, gracefulShutdown, initLogger } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@purista/core&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { httpServerV1Service, HttpServerServiceV1Config } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@purista/httpserver&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> logger</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> initLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> eventBridge</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DefaultEventBridge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> httpServerConfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpServerServiceV1Config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   fastify: {},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   port: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   logLevel: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;debug&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   domain: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localhost&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   apiMountPath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/api&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   openApi: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     enabled: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     info: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;backend api&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       description: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;OpenApi definition for server endpoints&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       version: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1.0.0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> httpServerService</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> httpServerV1Service.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(eventBridge, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   serviceConfig: httpServerConfig,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // static file handler</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> defaultPublicPath</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(__dirname, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;..&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;public&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> httpServerService.server?.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fastifyStatic, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   root: defaultPublicPath,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   decorateReply: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // start the webserver</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> httpServerService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // and and start your services here</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // ...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> gracefulShutdown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(logger, [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // begin with the event bridge to no longer accept incoming messages</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   eventBridge,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // shut down optional services</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // ...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   httpServerService,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">â€‹</a></h2><h3 id="enumerations" tabindex="-1">Enumerations <a class="header-anchor" href="#enumerations" aria-label="Permalink to &quot;Enumerations&quot;">â€‹</a></h3><ul><li><a href="./../enums/purista_httpserver.ServiceEvent.html">ServiceEvent</a></li></ul><h3 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">â€‹</a></h3><ul><li><a href="./purista_httpserver.html#beforeresponsehook">BeforeResponseHook</a></li><li><a href="./purista_httpserver.html#httpserverservicev1config">HttpServerServiceV1Config</a></li><li><a href="./purista_httpserver.html#httpserverv1servicecommandstorestapiinputpayload">HttpServerV1ServiceCommandsToRestApiInputPayload</a></li></ul><h3 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-label="Permalink to &quot;Variables&quot;">â€‹</a></h3><ul><li><a href="./purista_httpserver.html#httpserverserviceinfo">httpServerServiceInfo</a></li><li><a href="./purista_httpserver.html#httpserverv1service">httpServerV1Service</a></li><li><a href="./purista_httpserver.html#httpserverv1servicebuilder">httpServerV1ServiceBuilder</a></li><li><a href="./purista_httpserver.html#puristaversion">puristaVersion</a></li></ul><h2 id="type-aliases-1" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases-1" aria-label="Permalink to &quot;Type Aliases&quot;">â€‹</a></h2><h3 id="beforeresponsehook" tabindex="-1">BeforeResponseHook <a class="header-anchor" href="#beforeresponsehook" aria-label="Permalink to &quot;BeforeResponseHook&quot;">â€‹</a></h3><p>Æ¬ <strong>BeforeResponseHook</strong>: &lt;T&gt;(<code>payload</code>: <code>T</code>, <code>request</code>: <code>FastifyRequest</code>, <code>reply</code>: <code>FastifyReply</code>, <code>parameter</code>: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;) =&gt; <code>void</code></p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">â€‹</a></h4><p>â–¸ &lt;<code>T</code>&gt;(<code>payload</code>, <code>request</code>, <code>reply</code>, <code>parameter</code>): <code>void</code></p><h5 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">â€‹</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">â€‹</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>payload</code></td><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>request</code></td><td style="text-align:left;"><code>FastifyRequest</code></td></tr><tr><td style="text-align:left;"><code>reply</code></td><td style="text-align:left;"><code>FastifyReply</code></td></tr><tr><td style="text-align:left;"><code>parameter</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</td></tr></tbody></table><h5 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h5><p><code>void</code></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/httpserver/src/service/httpServer/v1/types/BeforeResponseHook.ts#L3" target="_blank" rel="noreferrer">packages/httpserver/src/service/httpServer/v1/types/BeforeResponseHook.ts:3</a></p><hr><h3 id="httpserverservicev1config" tabindex="-1">HttpServerServiceV1Config <a class="header-anchor" href="#httpserverservicev1config" aria-label="Permalink to &quot;HttpServerServiceV1Config&quot;">â€‹</a></h3><p>Æ¬ <strong>HttpServerServiceV1Config</strong>: <code>HttpServerServiceV1ConfigRaw</code> &amp; { <code>compressOptions?</code>: <code>FastifyCompressOptions</code> ; <code>corsOptions?</code>: <code>FastifyCorsOptions</code> ; <code>fastify</code>: <code>Partial</code>&lt;<code>FastifyServerOptions</code>&gt; &amp; <code>Partial</code>&lt;<code>FastifyHttp2SecureOptions</code>&lt;<code>Http2SecureServer</code>&gt;&gt; }</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/httpserver/src/service/httpServer/v1/httpServerServiceConfig.ts#L94" target="_blank" rel="noreferrer">packages/httpserver/src/service/httpServer/v1/httpServerServiceConfig.ts:94</a></p><hr><h3 id="httpserverv1servicecommandstorestapiinputpayload" tabindex="-1">HttpServerV1ServiceCommandsToRestApiInputPayload <a class="header-anchor" href="#httpserverv1servicecommandstorestapiinputpayload" aria-label="Permalink to &quot;HttpServerV1ServiceCommandsToRestApiInputPayload&quot;">â€‹</a></h3><p>Æ¬ <strong>HttpServerV1ServiceCommandsToRestApiInputPayload</strong>: <code>z.output</code>&lt;typeof <code>httpServerV1ServiceCommandsToRestApiInputPayloadSchema</code>&gt;</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/httpserver/src/service/httpServer/v1/subscription/serviceCommandsToRestApi/types.ts#L5" target="_blank" rel="noreferrer">packages/httpserver/src/service/httpServer/v1/subscription/serviceCommandsToRestApi/types.ts:5</a></p><h2 id="variables-1" tabindex="-1">Variables <a class="header-anchor" href="#variables-1" aria-label="Permalink to &quot;Variables&quot;">â€‹</a></h2><h3 id="httpserverserviceinfo" tabindex="-1">httpServerServiceInfo <a class="header-anchor" href="#httpserverserviceinfo" aria-label="Permalink to &quot;httpServerServiceInfo&quot;">â€‹</a></h3><p>â€¢ <code>Const</code> <strong>httpServerServiceInfo</strong>: <a href="./purista_core.html#serviceinfotype"><code>ServiceInfoType</code></a></p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/httpserver/src/service/httpServer/v1/httpServerV1ServiceBuilder.ts#L12" target="_blank" rel="noreferrer">packages/httpserver/src/service/httpServer/v1/httpServerV1ServiceBuilder.ts:12</a></p><hr><h3 id="httpserverv1service" tabindex="-1">httpServerV1Service <a class="header-anchor" href="#httpserverv1service" aria-label="Permalink to &quot;httpServerV1Service&quot;">â€‹</a></h3><p>â€¢ <code>Const</code> <strong>httpServerV1Service</strong>: <a href="./../classes/purista_core.ServiceBuilder.html"><code>ServiceBuilder</code></a>&lt;{ <code>apiMountPath?</code>: <code>string</code> ; <code>compressOptions?</code>: <code>any</code> ; <code>cookieSecret?</code>: <code>string</code> ; <code>corsOptions?</code>: <code>any</code> ; <code>domain</code>: <code>string</code> ; <code>enableCompress</code>: <code>boolean</code> ; <code>enableCors</code>: <code>boolean</code> ; <code>enableHealthz</code>: <code>boolean</code> ; <code>enableHelmet</code>: <code>boolean</code> ; <code>fastify?</code>: <code>any</code> ; <code>healthzFunction?</code>: (...<code>args</code>: [<code>any</code>, <code>any</code>, ...unknown[]]) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; ; <code>helmetOptions?</code>: { <code>enableCSPNonces?</code>: <code>boolean</code> ; <code>global?</code>: <code>boolean</code> } ; <code>host</code>: <code>string</code> ; <code>logLevel?</code>: <code>&quot;info&quot;</code> | <code>&quot;error&quot;</code> | <code>&quot;warn&quot;</code> | <code>&quot;debug&quot;</code> | <code>&quot;trace&quot;</code> | <code>&quot;fatal&quot;</code> ; <code>openApi?</code>: { <code>components?</code>: <code>any</code> ; <code>enabled</code>: <code>boolean</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>info</code>: { <code>contact?</code>: { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>description</code>: <code>string</code> ; <code>license?</code>: { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>termsOfService?</code>: <code>string</code> ; <code>title</code>: <code>string</code> ; <code>version</code>: <code>string</code> } = InfoObjectSchema; <code>path</code>: <code>string</code> ; <code>paths?</code>: <code>Record</code>&lt;<code>string</code>, <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;&gt; ; <code>security?</code>: <code>any</code>[] ; <code>servers?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> ; <code>variables?</code>: <code>any</code> }[] ; <code>tags?</code>: { <code>description?</code>: <code>string</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>name</code>: <code>string</code> }[] } ; <code>port</code>: <code>number</code> ; <code>traceHeaderField</code>: <code>string</code> ; <code>uploadDir?</code>: <code>string</code> }, { <code>apiMountPath?</code>: <code>string</code> ; <code>compressOptions?</code>: <code>any</code> ; <code>cookieSecret?</code>: <code>string</code> ; <code>corsOptions?</code>: <code>any</code> ; <code>domain?</code>: <code>string</code> ; <code>enableCompress?</code>: <code>boolean</code> ; <code>enableCors?</code>: <code>boolean</code> ; <code>enableHealthz?</code>: <code>boolean</code> ; <code>enableHelmet?</code>: <code>boolean</code> ; <code>fastify?</code>: <code>any</code> ; <code>healthzFunction?</code>: (...<code>args</code>: [<code>any</code>, <code>any</code>, ...unknown[]]) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; ; <code>helmetOptions?</code>: { <code>enableCSPNonces?</code>: <code>boolean</code> ; <code>global?</code>: <code>boolean</code> } ; <code>host?</code>: <code>string</code> ; <code>logLevel?</code>: <code>&quot;info&quot;</code> | <code>&quot;error&quot;</code> | <code>&quot;warn&quot;</code> | <code>&quot;debug&quot;</code> | <code>&quot;trace&quot;</code> | <code>&quot;fatal&quot;</code> ; <code>openApi?</code>: { <code>components?</code>: <code>any</code> ; <code>enabled?</code>: <code>boolean</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>info</code>: { <code>contact?</code>: { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>description?</code>: <code>string</code> ; <code>license?</code>: { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>termsOfService?</code>: <code>string</code> ; <code>title?</code>: <code>string</code> ; <code>version?</code>: <code>string</code> } = InfoObjectSchema; <code>path?</code>: <code>string</code> ; <code>paths?</code>: <code>Record</code>&lt;<code>string</code>, <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;&gt; ; <code>security?</code>: <code>any</code>[] ; <code>servers?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> ; <code>variables?</code>: <code>any</code> }[] ; <code>tags?</code>: { <code>description?</code>: <code>string</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>name</code>: <code>string</code> }[] } ; <code>port</code>: <code>number</code> ; <code>traceHeaderField?</code>: <code>string</code> ; <code>uploadDir?</code>: <code>string</code> }, <code>HttpServerClass</code>&lt;{ <code>apiMountPath?</code>: <code>string</code> ; <code>compressOptions?</code>: <code>any</code> ; <code>cookieSecret?</code>: <code>string</code> ; <code>corsOptions?</code>: <code>any</code> ; <code>domain</code>: <code>string</code> ; <code>enableCompress</code>: <code>boolean</code> ; <code>enableCors</code>: <code>boolean</code> ; <code>enableHealthz</code>: <code>boolean</code> ; <code>enableHelmet</code>: <code>boolean</code> ; <code>fastify?</code>: <code>any</code> ; <code>healthzFunction?</code>: (...<code>args</code>: [<code>any</code>, <code>any</code>, ...unknown[]]) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; ; <code>helmetOptions?</code>: { <code>enableCSPNonces?</code>: <code>boolean</code> ; <code>global?</code>: <code>boolean</code> } ; <code>host</code>: <code>string</code> ; <code>logLevel?</code>: <code>&quot;info&quot;</code> | <code>&quot;error&quot;</code> | <code>&quot;warn&quot;</code> | <code>&quot;debug&quot;</code> | <code>&quot;trace&quot;</code> | <code>&quot;fatal&quot;</code> ; <code>openApi?</code>: { <code>components?</code>: <code>any</code> ; <code>enabled</code>: <code>boolean</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>info</code>: { <code>contact?</code>: { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>description</code>: <code>string</code> ; <code>license?</code>: { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>termsOfService?</code>: <code>string</code> ; <code>title</code>: <code>string</code> ; <code>version</code>: <code>string</code> } = InfoObjectSchema; <code>path</code>: <code>string</code> ; <code>paths?</code>: <code>Record</code>&lt;<code>string</code>, <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;&gt; ; <code>security?</code>: <code>any</code>[] ; <code>servers?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> ; <code>variables?</code>: <code>any</code> }[] ; <code>tags?</code>: { <code>description?</code>: <code>string</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>name</code>: <code>string</code> }[] } ; <code>port</code>: <code>number</code> ; <code>traceHeaderField</code>: <code>string</code> ; <code>uploadDir?</code>: <code>string</code> }&gt;&gt;</p><p><strong><code>Deprecated</code></strong></p><p>Since version 1.10.0. Use {@purista/hono-http-server} instead.</p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/httpserver/src/service/httpServer/v1/httpServerV1Service.ts#L19" target="_blank" rel="noreferrer">packages/httpserver/src/service/httpServer/v1/httpServerV1Service.ts:19</a></p><hr><h3 id="httpserverv1servicebuilder" tabindex="-1">httpServerV1ServiceBuilder <a class="header-anchor" href="#httpserverv1servicebuilder" aria-label="Permalink to &quot;httpServerV1ServiceBuilder&quot;">â€‹</a></h3><p>â€¢ <code>Const</code> <strong>httpServerV1ServiceBuilder</strong>: <a href="./../classes/purista_core.ServiceBuilder.html"><code>ServiceBuilder</code></a>&lt;{ <code>apiMountPath?</code>: <code>string</code> ; <code>compressOptions?</code>: <code>any</code> ; <code>cookieSecret?</code>: <code>string</code> ; <code>corsOptions?</code>: <code>any</code> ; <code>domain</code>: <code>string</code> ; <code>enableCompress</code>: <code>boolean</code> ; <code>enableCors</code>: <code>boolean</code> ; <code>enableHealthz</code>: <code>boolean</code> ; <code>enableHelmet</code>: <code>boolean</code> ; <code>fastify?</code>: <code>any</code> ; <code>healthzFunction?</code>: (...<code>args</code>: [<code>any</code>, <code>any</code>, ...unknown[]]) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; ; <code>helmetOptions?</code>: { <code>enableCSPNonces?</code>: <code>boolean</code> ; <code>global?</code>: <code>boolean</code> } ; <code>host</code>: <code>string</code> ; <code>logLevel?</code>: <code>&quot;info&quot;</code> | <code>&quot;error&quot;</code> | <code>&quot;warn&quot;</code> | <code>&quot;debug&quot;</code> | <code>&quot;trace&quot;</code> | <code>&quot;fatal&quot;</code> ; <code>openApi?</code>: { <code>components?</code>: <code>any</code> ; <code>enabled</code>: <code>boolean</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>info</code>: { <code>contact?</code>: { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>description</code>: <code>string</code> ; <code>license?</code>: { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>termsOfService?</code>: <code>string</code> ; <code>title</code>: <code>string</code> ; <code>version</code>: <code>string</code> } = InfoObjectSchema; <code>path</code>: <code>string</code> ; <code>paths?</code>: <code>Record</code>&lt;<code>string</code>, <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;&gt; ; <code>security?</code>: <code>any</code>[] ; <code>servers?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> ; <code>variables?</code>: <code>any</code> }[] ; <code>tags?</code>: { <code>description?</code>: <code>string</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>name</code>: <code>string</code> }[] } ; <code>port</code>: <code>number</code> ; <code>traceHeaderField</code>: <code>string</code> ; <code>uploadDir?</code>: <code>string</code> }, { <code>apiMountPath?</code>: <code>string</code> ; <code>compressOptions?</code>: <code>any</code> ; <code>cookieSecret?</code>: <code>string</code> ; <code>corsOptions?</code>: <code>any</code> ; <code>domain?</code>: <code>string</code> ; <code>enableCompress?</code>: <code>boolean</code> ; <code>enableCors?</code>: <code>boolean</code> ; <code>enableHealthz?</code>: <code>boolean</code> ; <code>enableHelmet?</code>: <code>boolean</code> ; <code>fastify?</code>: <code>any</code> ; <code>healthzFunction?</code>: (...<code>args</code>: [<code>any</code>, <code>any</code>, ...unknown[]]) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; ; <code>helmetOptions?</code>: { <code>enableCSPNonces?</code>: <code>boolean</code> ; <code>global?</code>: <code>boolean</code> } ; <code>host?</code>: <code>string</code> ; <code>logLevel?</code>: <code>&quot;info&quot;</code> | <code>&quot;error&quot;</code> | <code>&quot;warn&quot;</code> | <code>&quot;debug&quot;</code> | <code>&quot;trace&quot;</code> | <code>&quot;fatal&quot;</code> ; <code>openApi?</code>: { <code>components?</code>: <code>any</code> ; <code>enabled?</code>: <code>boolean</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>info</code>: { <code>contact?</code>: { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>description?</code>: <code>string</code> ; <code>license?</code>: { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>termsOfService?</code>: <code>string</code> ; <code>title?</code>: <code>string</code> ; <code>version?</code>: <code>string</code> } = InfoObjectSchema; <code>path?</code>: <code>string</code> ; <code>paths?</code>: <code>Record</code>&lt;<code>string</code>, <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;&gt; ; <code>security?</code>: <code>any</code>[] ; <code>servers?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> ; <code>variables?</code>: <code>any</code> }[] ; <code>tags?</code>: { <code>description?</code>: <code>string</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>name</code>: <code>string</code> }[] } ; <code>port</code>: <code>number</code> ; <code>traceHeaderField?</code>: <code>string</code> ; <code>uploadDir?</code>: <code>string</code> }, <code>HttpServerClass</code>&lt;{ <code>apiMountPath?</code>: <code>string</code> ; <code>compressOptions?</code>: <code>any</code> ; <code>cookieSecret?</code>: <code>string</code> ; <code>corsOptions?</code>: <code>any</code> ; <code>domain</code>: <code>string</code> ; <code>enableCompress</code>: <code>boolean</code> ; <code>enableCors</code>: <code>boolean</code> ; <code>enableHealthz</code>: <code>boolean</code> ; <code>enableHelmet</code>: <code>boolean</code> ; <code>fastify?</code>: <code>any</code> ; <code>healthzFunction?</code>: (...<code>args</code>: [<code>any</code>, <code>any</code>, ...unknown[]]) =&gt; <code>Promise</code>&lt;<code>void</code>&gt; ; <code>helmetOptions?</code>: { <code>enableCSPNonces?</code>: <code>boolean</code> ; <code>global?</code>: <code>boolean</code> } ; <code>host</code>: <code>string</code> ; <code>logLevel?</code>: <code>&quot;info&quot;</code> | <code>&quot;error&quot;</code> | <code>&quot;warn&quot;</code> | <code>&quot;debug&quot;</code> | <code>&quot;trace&quot;</code> | <code>&quot;fatal&quot;</code> ; <code>openApi?</code>: { <code>components?</code>: <code>any</code> ; <code>enabled</code>: <code>boolean</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>info</code>: { <code>contact?</code>: { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>description</code>: <code>string</code> ; <code>license?</code>: { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>termsOfService?</code>: <code>string</code> ; <code>title</code>: <code>string</code> ; <code>version</code>: <code>string</code> } = InfoObjectSchema; <code>path</code>: <code>string</code> ; <code>paths?</code>: <code>Record</code>&lt;<code>string</code>, <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;&gt; ; <code>security?</code>: <code>any</code>[] ; <code>servers?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> ; <code>variables?</code>: <code>any</code> }[] ; <code>tags?</code>: { <code>description?</code>: <code>string</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>name</code>: <code>string</code> }[] } ; <code>port</code>: <code>number</code> ; <code>traceHeaderField</code>: <code>string</code> ; <code>uploadDir?</code>: <code>string</code> }&gt;&gt;</p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/httpserver/src/service/httpServer/v1/httpServerV1ServiceBuilder.ts#L19" target="_blank" rel="noreferrer">packages/httpserver/src/service/httpServer/v1/httpServerV1ServiceBuilder.ts:19</a></p><hr><h3 id="puristaversion" tabindex="-1">puristaVersion <a class="header-anchor" href="#puristaversion" aria-label="Permalink to &quot;puristaVersion&quot;">â€‹</a></h3><p>â€¢ <code>Const</code> <strong>puristaVersion</strong>: <code>&quot;1.10.8&quot;</code></p><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/httpserver/src/version.ts#L1" target="_blank" rel="noreferrer">packages/httpserver/src/version.ts:1</a></p>`,62),i=[t];function a(n,r,l,p,h,g){return d(),o("div",null,i)}const v=e(s,[["render",a]]);export{u as __pageData,v as default};
