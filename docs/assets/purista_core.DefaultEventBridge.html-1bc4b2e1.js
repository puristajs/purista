import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as l,c,b as e,e as s,w as o,d as t,a}from"./app-2c9217f0.js";const h={},u=e("h1",{id:"class-defaulteventbridge",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-defaulteventbridge","aria-hidden":"true"},"#"),t(" Class: DefaultEventBridge")],-1),_=a(`<p>Simple implementation of some simple in-memory event bridge. Does not support threads and does not need any external databases.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> DefaultEventBridge <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@purista/core&#39;</span>

<span class="token keyword">const</span> eventBridge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultEventBridge</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> eventBridge<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// add your services</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hierarchy" tabindex="-1"><a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a> Hierarchy</h2>`,4),p=e("code",null,"EventBridgeBaseClass",-1),g=e("code",null,"DefaultEventBridgeConfig",-1),f=e("p",null,[t("↳ "),e("strong",null,[e("code",null,"DefaultEventBridge")])],-1),m=e("h2",{id:"implements",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implements","aria-hidden":"true"},"#"),t(" Implements")],-1),b=e("code",null,"EventBridge",-1),v=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),B=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),E=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),y=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),x=a('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new DefaultEventBridge</strong>(<code>config?</code>)</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4>',4),D=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),k=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),C=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.defaultCommandTimeout?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"Overwrite the hardcoded default timeout of command invocations")],-1),w=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.emitMessagesAsEventBridgeEvents?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},"Emit messages which have an event name set as javascript events on the event bridge instance")],-1),I=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.instanceId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The instance id of the event bridge. If not set, a id will generated each time a instance is created. Use this if there is a need to always have the same instance id.")],-1),T=e("td",{style:{"text-align":"left"}},[e("code",null,"config.logLevel?")],-1),P={style:{"text-align":"left"}},L=e("code",null,"LogLevelName",-1),S=e("td",{style:{"text-align":"left"}},"If no logger instance is given, use this log level",-1),M=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.logWarnOnMessagesWithoutReceiver?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},"Log warnings on messages which are emitted, but could not delivered to at least one receiver")],-1),N=e("td",{style:{"text-align":"left"}},[e("code",null,"config.logger?")],-1),R={style:{"text-align":"left"}},A=e("code",null,"Logger",-1),K=e("td",{style:{"text-align":"left"}},"A logger instance",-1),F=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.spanProcessor?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SpanProcessor")]),e("td",{style:{"text-align":"left"}},"A OpenTelemetry span processor")],-1),O=e("h4",{id:"overrides",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides","aria-hidden":"true"},"#"),t(" Overrides")],-1),G=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),H={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L83",target:"_blank",rel:"noopener noreferrer"},q=e("h2",{id:"properties-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties-1","aria-hidden":"true"},"#"),t(" Properties")],-1),W=e("h3",{id:"config",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#config","aria-hidden":"true"},"#"),t(" config")],-1),j=e("strong",null,"config",-1),U=e("code",null,"Complete",-1),V=e("code",null,"defaultCommandTimeout?",-1),z=e("code",null,"number",-1),J=e("code",null,"emitMessagesAsEventBridgeEvents?",-1),Q=e("code",null,"boolean",-1),X=e("code",null,"instanceId?",-1),Y=e("code",null,"string",-1),Z=e("code",null,"logLevel?",-1),$=e("code",null,"LogLevelName",-1),ee=e("code",null,"logWarnOnMessagesWithoutReceiver?",-1),te=e("code",null,"boolean",-1),se=e("code",null,"logger?",-1),ne=e("code",null,"Logger",-1),oe=e("code",null,"spanProcessor?",-1),de=e("code",null,"SpanProcessor",-1),ae=e("h4",{id:"inherited-from",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from","aria-hidden":"true"},"#"),t(" Inherited from")],-1),ie=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),re={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L21",target:"_blank",rel:"noopener noreferrer"},le=e("hr",null,null,-1),ce=e("h3",{id:"defaultcommandtimeout",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defaultcommandtimeout","aria-hidden":"true"},"#"),t(" defaultCommandTimeout")],-1),he=e("p",null,[t("• "),e("strong",null,"defaultCommandTimeout"),t(": "),e("code",null,"number")],-1),ue=e("p",null,"The default time until when a command invocation automatically returns a time out error",-1),_e=e("h4",{id:"implementation-of",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of","aria-hidden":"true"},"#"),t(" Implementation of")],-1),pe=e("h4",{id:"inherited-from-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-1","aria-hidden":"true"},"#"),t(" Inherited from")],-1),ge=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),fe={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L27",target:"_blank",rel:"noopener noreferrer"},me=a('<hr><h3 id="hasstarted" tabindex="-1"><a class="header-anchor" href="#hasstarted" aria-hidden="true">#</a> hasStarted</h3><p>• <code>Protected</code> <strong>hasStarted</strong>: <code>boolean</code> = <code>false</code></p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4>',4),be={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L80",target:"_blank",rel:"noopener noreferrer"},ve=a('<hr><h3 id="healthy" tabindex="-1"><a class="header-anchor" href="#healthy" aria-hidden="true">#</a> healthy</h3><p>• <code>Protected</code> <strong>healthy</strong>: <code>boolean</code> = <code>false</code></p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4>',4),Be={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L81",target:"_blank",rel:"noopener noreferrer"},Ee=e("hr",null,null,-1),ye=e("h3",{id:"instanceid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#instanceid","aria-hidden":"true"},"#"),t(" instanceId")],-1),xe=e("p",null,[t("• "),e("strong",null,"instanceId"),t(": "),e("code",null,"string")],-1),De=e("h4",{id:"inherited-from-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-2","aria-hidden":"true"},"#"),t(" Inherited from")],-1),ke=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ce={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L25",target:"_blank",rel:"noopener noreferrer"},we=e("hr",null,null,-1),Ie=e("h3",{id:"logger",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#logger","aria-hidden":"true"},"#"),t(" logger")],-1),Te=e("strong",null,"logger",-1),Pe=e("code",null,"Logger",-1),Le=e("h4",{id:"inherited-from-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-3","aria-hidden":"true"},"#"),t(" Inherited from")],-1),Se=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),Me={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L18",target:"_blank",rel:"noopener noreferrer"},Ne=e("hr",null,null,-1),Re=e("h3",{id:"name",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#name","aria-hidden":"true"},"#"),t(" name")],-1),Ae=e("p",null,[t("• "),e("strong",null,"name"),t(": "),e("code",null,"string")],-1),Ke=e("h4",{id:"implementation-of-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-1","aria-hidden":"true"},"#"),t(" Implementation of")],-1),Fe=e("h4",{id:"inherited-from-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-4","aria-hidden":"true"},"#"),t(" Inherited from")],-1),Oe=e("h4",{id:"defined-in-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-7","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ge={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L23",target:"_blank",rel:"noopener noreferrer"},He=e("hr",null,null,-1),qe=e("h3",{id:"pendinginvocations",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pendinginvocations","aria-hidden":"true"},"#"),t(" pendingInvocations")],-1),We=e("code",null,"Protected",-1),je=e("strong",null,"pendingInvocations",-1),Ue=e("code",null,"Map",-1),Ve=e("code",null,"string",-1),ze=e("code",null,"PendigInvocation",-1),Je=e("h4",{id:"defined-in-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-8","aria-hidden":"true"},"#"),t(" Defined in")],-1),Qe={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L75",target:"_blank",rel:"noopener noreferrer"},Xe=e("hr",null,null,-1),Ye=e("h3",{id:"readstream",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#readstream","aria-hidden":"true"},"#"),t(" readStream")],-1),Ze=e("p",null,[t("• "),e("code",null,"Protected"),t(),e("strong",null,"readStream"),t(": "),e("code",null,"Readable")],-1),$e=e("h4",{id:"defined-in-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-9","aria-hidden":"true"},"#"),t(" Defined in")],-1),et={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L63",target:"_blank",rel:"noopener noreferrer"},tt=a('<hr><h3 id="runningsubscriptioncount" tabindex="-1"><a class="header-anchor" href="#runningsubscriptioncount" aria-hidden="true">#</a> runningSubscriptionCount</h3><p>• <code>Protected</code> <strong>runningSubscriptionCount</strong>: <code>number</code> = <code>0</code></p><h4 id="defined-in-10" tabindex="-1"><a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a> Defined in</h4>',4),st={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L76",target:"_blank",rel:"noopener noreferrer"},nt=e("hr",null,null,-1),ot=e("h3",{id:"servicefunctions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#servicefunctions","aria-hidden":"true"},"#"),t(" serviceFunctions")],-1),dt=e("code",null,"Protected",-1),at=e("strong",null,"serviceFunctions",-1),it=e("code",null,"Map",-1),rt=e("code",null,"string",-1),lt=e("code",null,"message",-1),ct=e("code",null,"contentEncoding",-1),ht=e("code",null,"string",-1),ut=e("code",null,"contentType",-1),_t=e("code",null,"string",-1),pt=e("code",null,"correlationId",-1),gt=e("code",null,"string",-1),ft=e("code",null,"eventName?",-1),mt=e("code",null,"string",-1),bt=e("code",null,"id",-1),vt=e("code",null,"string",-1),Bt=e("code",null,"instanceId",-1),Et=e("code",null,"string",-1),yt=e("code",null,"messageType",-1),xt=e("code",null,"Command",-1),Dt=e("code",null,"otp?",-1),kt=e("code",null,"string",-1),Ct=e("code",null,"payload",-1),wt=e("code",null,"parameter",-1),It=e("code",null,"unknown",-1),Tt=e("code",null,"payload",-1),Pt=e("code",null,"unknown",-1),Lt=e("code",null,"principalId?",-1),St=e("code",null,"string",-1),Mt=e("code",null,"receiver",-1),Nt=e("code",null,"EBMessageAddress",-1),Rt=e("code",null,"sender",-1),At=e("code",null,"EBMessageAddress",-1),Kt=e("code",null,"timestamp",-1),Ft=e("code",null,"number",-1),Ot=e("code",null,"traceId?",-1),Gt=e("code",null,"string",-1),Ht=e("code",null,"Promise",-1),qt=e("code",null,"contentEncoding",-1),Wt=e("code",null,'"utf-8"',-1),jt=e("code",null,"contentType",-1),Ut=e("code",null,'"application/json"',-1),Vt=e("code",null,"correlationId",-1),zt=e("code",null,"string",-1),Jt=e("code",null,"eventName?",-1),Qt=e("code",null,"string",-1),Xt=e("code",null,"id",-1),Yt=e("code",null,"string",-1),Zt=e("code",null,"instanceId",-1),$t=e("code",null,"string",-1),es=e("code",null,"isHandledError",-1),ts=e("code",null,"boolean",-1),ss=e("code",null,"messageType",-1),ns=e("code",null,"CommandErrorResponse",-1),os=e("code",null,"otp?",-1),ds=e("code",null,"string",-1),as=e("code",null,"payload",-1),is=e("code",null,"data?",-1),rs=e("code",null,"unknown",-1),ls=e("code",null,"message",-1),cs=e("code",null,"string",-1),hs=e("code",null,"status",-1),us=e("code",null,"StatusCode",-1),_s=e("code",null,"principalId?",-1),ps=e("code",null,"string",-1),gs=e("code",null,"receiver",-1),fs=e("code",null,"EBMessageAddress",-1),ms=e("code",null,"sender",-1),bs=e("code",null,"EBMessageAddress",-1),vs=e("code",null,"timestamp",-1),Bs=e("code",null,"number",-1),Es=e("code",null,"traceId?",-1),ys=e("code",null,"string",-1),xs=e("code",null,"contentEncoding",-1),Ds=e("code",null,"string",-1),ks=e("code",null,"contentType",-1),Cs=e("code",null,"string",-1),ws=e("code",null,"correlationId",-1),Is=e("code",null,"string",-1),Ts=e("code",null,"eventName?",-1),Ps=e("code",null,"string",-1),Ls=e("code",null,"id",-1),Ss=e("code",null,"string",-1),Ms=e("code",null,"instanceId",-1),Ns=e("code",null,"string",-1),Rs=e("code",null,"messageType",-1),As=e("code",null,"CommandSuccessResponse",-1),Ks=e("code",null,"otp?",-1),Fs=e("code",null,"string",-1),Os=e("code",null,"payload",-1),Gs=e("code",null,"unknown",-1),Hs=e("code",null,"principalId?",-1),qs=e("code",null,"string",-1),Ws=e("code",null,"receiver",-1),js=e("code",null,"EBMessageAddress",-1),Us=e("code",null,"sender",-1),Vs=e("code",null,"EBMessageAddress",-1),zs=e("code",null,"timestamp",-1),Js=e("code",null,"number",-1),Qs=e("code",null,"traceId?",-1),Xs=e("code",null,"string",-1),Ys=e("h4",{id:"defined-in-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-11","aria-hidden":"true"},"#"),t(" Defined in")],-1),Zs={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L70",target:"_blank",rel:"noopener noreferrer"},$s=e("hr",null,null,-1),en=e("h3",{id:"subscriptions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptions","aria-hidden":"true"},"#"),t(" subscriptions")],-1),tn=e("code",null,"Protected",-1),sn=e("strong",null,"subscriptions",-1),nn=e("code",null,"Map",-1),on=e("code",null,"string",-1),dn=e("code",null,"SubscriptionStorageEntry",-1),an=e("h4",{id:"defined-in-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-12","aria-hidden":"true"},"#"),t(" Defined in")],-1),rn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L78",target:"_blank",rel:"noopener noreferrer"},ln=e("hr",null,null,-1),cn=e("h3",{id:"traceprovider",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#traceprovider","aria-hidden":"true"},"#"),t(" traceProvider")],-1),hn=e("p",null,[t("• "),e("strong",null,"traceProvider"),t(": "),e("code",null,"NodeTracerProvider")],-1),un=e("h4",{id:"inherited-from-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-5","aria-hidden":"true"},"#"),t(" Inherited from")],-1),_n=e("h4",{id:"defined-in-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-13","aria-hidden":"true"},"#"),t(" Defined in")],-1),pn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L19",target:"_blank",rel:"noopener noreferrer"},gn=e("hr",null,null,-1),fn=e("h3",{id:"writestream",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#writestream","aria-hidden":"true"},"#"),t(" writeStream")],-1),mn=e("p",null,[t("• "),e("code",null,"Protected"),t(),e("strong",null,"writeStream"),t(": "),e("code",null,"Writable")],-1),bn=e("h4",{id:"defined-in-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-14","aria-hidden":"true"},"#"),t(" Defined in")],-1),vn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L62",target:"_blank",rel:"noopener noreferrer"},Bn=a('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="destroy" tabindex="-1"><a class="header-anchor" href="#destroy" aria-hidden="true">#</a> destroy</h3><p>▸ <strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Shut down event bridge as gracefully as possible</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="implementation-of-2" tabindex="-1"><a class="header-anchor" href="#implementation-of-2" aria-hidden="true">#</a> Implementation of</h4>',7),En=e("h4",{id:"overrides-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-1","aria-hidden":"true"},"#"),t(" Overrides")],-1),yn=e("h4",{id:"defined-in-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-15","aria-hidden":"true"},"#"),t(" Defined in")],-1),xn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L375",target:"_blank",rel:"noopener noreferrer"},Dn=a('<hr><h3 id="emit" tabindex="-1"><a class="header-anchor" href="#emit" aria-hidden="true">#</a> emit</h3><p>▸ <strong>emit</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>parameter?</code>): <code>void</code></p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4>',4),kn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Cn=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),wn={style:{"text-align":"left"}},In=e("code",null,"EventKey",-1),Tn=e("code",null,"eventbridge-connected",-1),Pn=e("code",null,"never",-1),Ln=e("code",null,"eventbridge-connection-error",-1),Sn=e("code",null,"unknown",-1),Mn=e("code",null,"eventbridge-disconnected",-1),Nn=e("code",null,"never",-1),Rn=e("code",null,"eventbridge-error",-1),An=e("code",null,"unknown",-1),Kn=e("code",null,"eventbridge-reconnecting",-1),Fn=e("code",null,"never",-1),On=a('<h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>K</code></td></tr><tr><td style="text-align:left;"><code>parameter?</code></td><td style="text-align:left;">{ <code>eventbridge-connected</code>: <code>never</code> ; <code>eventbridge-connection-error</code>: <code>unknown</code> ; <code>eventbridge-disconnected</code>: <code>never</code> ; <code>eventbridge-error</code>: <code>unknown</code> ; <code>eventbridge-reconnecting</code>: <code>never</code> }[<code>K</code>]</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-6" tabindex="-1"><a class="header-anchor" href="#inherited-from-6" aria-hidden="true">#</a> Inherited from</h4>',5),Gn=e("h4",{id:"defined-in-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-16","aria-hidden":"true"},"#"),t(" Defined in")],-1),Hn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L24",target:"_blank",rel:"noopener noreferrer"},qn=e("hr",null,null,-1),Wn=e("h3",{id:"emitmessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#emitmessage","aria-hidden":"true"},"#"),t(" emitMessage")],-1),jn=e("strong",null,"emitMessage",-1),Un=e("code",null,"message",-1),Vn=e("code",null,"Promise",-1),zn=e("code",null,"Readonly",-1),Jn=e("code",null,"EBMessage",-1),Qn=e("p",null,"Emit a new message to event bridge to be delivered to receiver",-1),Xn=e("h4",{id:"parameters-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-2","aria-hidden":"true"},"#"),t(" Parameters")],-1),Yn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Zn=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),$n={style:{"text-align":"left"}},eo=e("code",null,"Omit",-1),to=e("code",null,"EBMessage",-1),so=e("code",null,'"id"',-1),no=e("code",null,'"instanceId"',-1),oo=e("code",null,'"correlationId"',-1),ao=e("code",null,'"timestamp"',-1),io=e("td",{style:{"text-align":"left"}},"EBMessage",-1),ro=e("h4",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),t(" Returns")],-1),lo=e("code",null,"Promise",-1),co=e("code",null,"Readonly",-1),ho=e("code",null,"EBMessage",-1),uo=e("h4",{id:"implementation-of-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-3","aria-hidden":"true"},"#"),t(" Implementation of")],-1),_o=e("h4",{id:"defined-in-17",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-17","aria-hidden":"true"},"#"),t(" Defined in")],-1),po={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L279",target:"_blank",rel:"noopener noreferrer"},go=a('<hr><h3 id="gettracer" tabindex="-1"><a class="header-anchor" href="#gettracer" aria-hidden="true">#</a> getTracer</h3><p>▸ <strong>getTracer</strong>(): <code>Tracer</code></p><p>Returns open telemetry tracer of this service</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>Tracer</code></p><p>Tracer</p><h4 id="inherited-from-7" tabindex="-1"><a class="header-anchor" href="#inherited-from-7" aria-hidden="true">#</a> Inherited from</h4>',8),fo=e("h4",{id:"defined-in-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-18","aria-hidden":"true"},"#"),t(" Defined in")],-1),mo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L68",target:"_blank",rel:"noopener noreferrer"},bo=a('<hr><h3 id="invoke" tabindex="-1"><a class="header-anchor" href="#invoke" aria-hidden="true">#</a> invoke</h3><p>▸ <strong>invoke</strong>&lt;<code>T</code>&gt;(<code>input</code>, <code>commandTimeout?</code>): <code>Promise</code>&lt;<code>T</code>&gt;</p><p>Call a command of a service and return the result of this command</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4>',7),vo=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Bo=e("td",{style:{"text-align":"left"}},[e("code",null,"input")],-1),Eo={style:{"text-align":"left"}},yo=e("code",null,"Omit",-1),xo=e("code",null,"contentEncoding",-1),Do=e("code",null,"string",-1),ko=e("code",null,"contentType",-1),Co=e("code",null,"string",-1),wo=e("code",null,"correlationId",-1),Io=e("code",null,"string",-1),To=e("code",null,"eventName?",-1),Po=e("code",null,"string",-1),Lo=e("code",null,"id",-1),So=e("code",null,"string",-1),Mo=e("code",null,"instanceId",-1),No=e("code",null,"string",-1),Ro=e("code",null,"messageType",-1),Ao=e("code",null,"Command",-1),Ko=e("code",null,"otp?",-1),Fo=e("code",null,"string",-1),Oo=e("code",null,"payload",-1),Go=e("code",null,"parameter",-1),Ho=e("code",null,"unknown",-1),qo=e("code",null,"payload",-1),Wo=e("code",null,"unknown",-1),jo=e("code",null,"principalId?",-1),Uo=e("code",null,"string",-1),Vo=e("code",null,"receiver",-1),zo=e("code",null,"EBMessageAddress",-1),Jo=e("code",null,"sender",-1),Qo=e("code",null,"EBMessageAddress",-1),Xo=e("code",null,"timestamp",-1),Yo=e("code",null,"number",-1),Zo=e("code",null,"traceId?",-1),$o=e("code",null,"string",-1),ed=e("code",null,'"id"',-1),td=e("code",null,'"messageType"',-1),sd=e("code",null,'"instanceId"',-1),nd=e("code",null,'"correlationId"',-1),od=e("code",null,'"timestamp"',-1),dd=e("td",{style:{"text-align":"left"}},"a partial command message",-1),ad=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandTimeout")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"the time to live (timeout) of the invocation")],-1),id=e("h4",{id:"returns-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-4","aria-hidden":"true"},"#"),t(" Returns")],-1),rd=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"T"),t(">")],-1),ld=e("h4",{id:"implementation-of-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-4","aria-hidden":"true"},"#"),t(" Implementation of")],-1),cd=e("h4",{id:"defined-in-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-19","aria-hidden":"true"},"#"),t(" Defined in")],-1),hd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L322",target:"_blank",rel:"noopener noreferrer"},ud=a('<hr><h3 id="ishealthy" tabindex="-1"><a class="header-anchor" href="#ishealthy" aria-hidden="true">#</a> isHealthy</h3><p>▸ <strong>isHealthy</strong>(): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>Indicates if the eventbridge is running and works correctly</p><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="implementation-of-5" tabindex="-1"><a class="header-anchor" href="#implementation-of-5" aria-hidden="true">#</a> Implementation of</h4>',7),_d=e("h4",{id:"defined-in-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-20","aria-hidden":"true"},"#"),t(" Defined in")],-1),pd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L96",target:"_blank",rel:"noopener noreferrer"},gd=a('<hr><h3 id="isready" tabindex="-1"><a class="header-anchor" href="#isready" aria-hidden="true">#</a> isReady</h3><p>▸ <strong>isReady</strong>(): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>Indicates if the eventbridge has been started and is connected to underlaying message broker</p><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="implementation-of-6" tabindex="-1"><a class="header-anchor" href="#implementation-of-6" aria-hidden="true">#</a> Implementation of</h4>',7),fd=e("h4",{id:"defined-in-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-21","aria-hidden":"true"},"#"),t(" Defined in")],-1),md={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L92",target:"_blank",rel:"noopener noreferrer"},bd=a('<hr><h3 id="off" tabindex="-1"><a class="header-anchor" href="#off" aria-hidden="true">#</a> off</h3><p>▸ <strong>off</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4>',4),vd=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Bd=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),Ed={style:{"text-align":"left"}},yd=e("code",null,"EventKey",-1),xd=e("code",null,"eventbridge-connected",-1),Dd=e("code",null,"never",-1),kd=e("code",null,"eventbridge-connection-error",-1),Cd=e("code",null,"unknown",-1),wd=e("code",null,"eventbridge-disconnected",-1),Id=e("code",null,"never",-1),Td=e("code",null,"eventbridge-error",-1),Pd=e("code",null,"unknown",-1),Ld=e("code",null,"eventbridge-reconnecting",-1),Sd=e("code",null,"never",-1),Md=a('<h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>K</code></td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;"><code>EventReceiver</code>&lt;{ <code>eventbridge-connected</code>: <code>never</code> ; <code>eventbridge-connection-error</code>: <code>unknown</code> ; <code>eventbridge-disconnected</code>: <code>never</code> ; <code>eventbridge-error</code>: <code>unknown</code> ; <code>eventbridge-reconnecting</code>: <code>never</code> }[<code>K</code>]&gt;</td></tr></tbody></table><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-8" tabindex="-1"><a class="header-anchor" href="#inherited-from-8" aria-hidden="true">#</a> Inherited from</h4>',5),Nd=e("h4",{id:"defined-in-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-22","aria-hidden":"true"},"#"),t(" Defined in")],-1),Rd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L20",target:"_blank",rel:"noopener noreferrer"},Ad=a('<hr><h3 id="on" tabindex="-1"><a class="header-anchor" href="#on" aria-hidden="true">#</a> on</h3><p>▸ <strong>on</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4>',4),Kd=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Fd=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),Od={style:{"text-align":"left"}},Gd=e("code",null,"EventKey",-1),Hd=e("code",null,"eventbridge-connected",-1),qd=e("code",null,"never",-1),Wd=e("code",null,"eventbridge-connection-error",-1),jd=e("code",null,"unknown",-1),Ud=e("code",null,"eventbridge-disconnected",-1),Vd=e("code",null,"never",-1),zd=e("code",null,"eventbridge-error",-1),Jd=e("code",null,"unknown",-1),Qd=e("code",null,"eventbridge-reconnecting",-1),Xd=e("code",null,"never",-1),Yd=a('<h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>K</code></td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;"><code>EventReceiver</code>&lt;{ <code>eventbridge-connected</code>: <code>never</code> ; <code>eventbridge-connection-error</code>: <code>unknown</code> ; <code>eventbridge-disconnected</code>: <code>never</code> ; <code>eventbridge-error</code>: <code>unknown</code> ; <code>eventbridge-reconnecting</code>: <code>never</code> }[<code>K</code>]&gt;</td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-9" tabindex="-1"><a class="header-anchor" href="#inherited-from-9" aria-hidden="true">#</a> Inherited from</h4>',5),Zd=e("h4",{id:"defined-in-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-23","aria-hidden":"true"},"#"),t(" Defined in")],-1),$d={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L16",target:"_blank",rel:"noopener noreferrer"},ea=a('<hr><h3 id="registercommand" tabindex="-1"><a class="header-anchor" href="#registercommand" aria-hidden="true">#</a> registerCommand</h3><p>▸ <strong>registerCommand</strong>(<code>address</code>, <code>cb</code>, <code>metadata</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p><p>Register a service command and ensure that there is a queue for all incoming command requests.</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4>',5),ta=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),sa=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),na={style:{"text-align":"left"}},oa=e("code",null,"EBMessageAddress",-1),da=e("td",{style:{"text-align":"left"}},"The service function address",-1),aa=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),ia={style:{"text-align":"left"}},ra=e("code",null,"message",-1),la=e("code",null,"contentEncoding",-1),ca=e("code",null,"string",-1),ha=e("code",null,"contentType",-1),ua=e("code",null,"string",-1),_a=e("code",null,"correlationId",-1),pa=e("code",null,"string",-1),ga=e("code",null,"eventName?",-1),fa=e("code",null,"string",-1),ma=e("code",null,"id",-1),ba=e("code",null,"string",-1),va=e("code",null,"instanceId",-1),Ba=e("code",null,"string",-1),Ea=e("code",null,"messageType",-1),ya=e("code",null,"Command",-1),xa=e("code",null,"otp?",-1),Da=e("code",null,"string",-1),ka=e("code",null,"payload",-1),Ca=e("code",null,"parameter",-1),wa=e("code",null,"unknown",-1),Ia=e("code",null,"payload",-1),Ta=e("code",null,"unknown",-1),Pa=e("code",null,"principalId?",-1),La=e("code",null,"string",-1),Sa=e("code",null,"receiver",-1),Ma=e("code",null,"EBMessageAddress",-1),Na=e("code",null,"sender",-1),Ra=e("code",null,"EBMessageAddress",-1),Aa=e("code",null,"timestamp",-1),Ka=e("code",null,"number",-1),Fa=e("code",null,"traceId?",-1),Oa=e("code",null,"string",-1),Ga=e("code",null,"Promise",-1),Ha=e("code",null,"contentEncoding",-1),qa=e("code",null,'"utf-8"',-1),Wa=e("code",null,"contentType",-1),ja=e("code",null,'"application/json"',-1),Ua=e("code",null,"correlationId",-1),Va=e("code",null,"string",-1),za=e("code",null,"eventName?",-1),Ja=e("code",null,"string",-1),Qa=e("code",null,"id",-1),Xa=e("code",null,"string",-1),Ya=e("code",null,"instanceId",-1),Za=e("code",null,"string",-1),$a=e("code",null,"isHandledError",-1),ei=e("code",null,"boolean",-1),ti=e("code",null,"messageType",-1),si=e("code",null,"CommandErrorResponse",-1),ni=e("code",null,"otp?",-1),oi=e("code",null,"string",-1),di=e("code",null,"payload",-1),ai=e("code",null,"data?",-1),ii=e("code",null,"unknown",-1),ri=e("code",null,"message",-1),li=e("code",null,"string",-1),ci=e("code",null,"status",-1),hi=e("code",null,"StatusCode",-1),ui=e("code",null,"principalId?",-1),_i=e("code",null,"string",-1),pi=e("code",null,"receiver",-1),gi=e("code",null,"EBMessageAddress",-1),fi=e("code",null,"sender",-1),mi=e("code",null,"EBMessageAddress",-1),bi=e("code",null,"timestamp",-1),vi=e("code",null,"number",-1),Bi=e("code",null,"traceId?",-1),Ei=e("code",null,"string",-1),yi=e("code",null,"contentEncoding",-1),xi=e("code",null,"string",-1),Di=e("code",null,"contentType",-1),ki=e("code",null,"string",-1),Ci=e("code",null,"correlationId",-1),wi=e("code",null,"string",-1),Ii=e("code",null,"eventName?",-1),Ti=e("code",null,"string",-1),Pi=e("code",null,"id",-1),Li=e("code",null,"string",-1),Si=e("code",null,"instanceId",-1),Mi=e("code",null,"string",-1),Ni=e("code",null,"messageType",-1),Ri=e("code",null,"CommandSuccessResponse",-1),Ai=e("code",null,"otp?",-1),Ki=e("code",null,"string",-1),Fi=e("code",null,"payload",-1),Oi=e("code",null,"unknown",-1),Gi=e("code",null,"principalId?",-1),Hi=e("code",null,"string",-1),qi=e("code",null,"receiver",-1),Wi=e("code",null,"EBMessageAddress",-1),ji=e("code",null,"sender",-1),Ui=e("code",null,"EBMessageAddress",-1),Vi=e("code",null,"timestamp",-1),zi=e("code",null,"number",-1),Ji=e("code",null,"traceId?",-1),Qi=e("code",null,"string",-1),Xi=e("td",{style:{"text-align":"left"}},"the function to call if a matching command message arrives",-1),Yi=e("td",{style:{"text-align":"left"}},[e("code",null,"metadata")],-1),Zi={style:{"text-align":"left"}},$i=e("code",null,"CommandDefinitionMetadataBase",-1),er=e("td",{style:{"text-align":"left"}},"-",-1),tr=e("h4",{id:"returns-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-9","aria-hidden":"true"},"#"),t(" Returns")],-1),sr=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"string"),t(">")],-1),nr=e("p",null,"the id of command function queue",-1),or=e("h4",{id:"implementation-of-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-7","aria-hidden":"true"},"#"),t(" Implementation of")],-1),dr=e("h4",{id:"defined-in-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-24","aria-hidden":"true"},"#"),t(" Defined in")],-1),ar={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L240",target:"_blank",rel:"noopener noreferrer"},ir=a('<hr><h3 id="registersubscription" tabindex="-1"><a class="header-anchor" href="#registersubscription" aria-hidden="true">#</a> registerSubscription</h3><p>▸ <strong>registerSubscription</strong>(<code>subscription</code>, <code>cb</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p><p>Register a new subscription</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4>',5),rr=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),lr=e("td",{style:{"text-align":"left"}},[e("code",null,"subscription")],-1),cr={style:{"text-align":"left"}},hr=e("code",null,"Subscription",-1),ur=e("td",{style:{"text-align":"left"}},"the subscription definition",-1),_r=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),pr={style:{"text-align":"left"}},gr=e("code",null,"message",-1),fr=e("code",null,"EBMessage",-1),mr=e("code",null,"Promise",-1),br=e("code",null,"undefined",-1),vr=e("code",null,"Omit",-1),Br=e("code",null,"contentEncoding",-1),Er=e("code",null,"string",-1),yr=e("code",null,"contentType",-1),xr=e("code",null,"string",-1),Dr=e("code",null,"correlationId?",-1),kr=e("code",null,"string",-1),Cr=e("code",null,"eventName",-1),wr=e("code",null,"string",-1),Ir=e("code",null,"id",-1),Tr=e("code",null,"string",-1),Pr=e("code",null,"instanceId",-1),Lr=e("code",null,"string",-1),Sr=e("code",null,"messageType",-1),Mr=e("code",null,"CustomMessage",-1),Nr=e("code",null,"otp?",-1),Rr=e("code",null,"string",-1),Ar=e("code",null,"payload?",-1),Kr=e("code",null,"unknown",-1),Fr=e("code",null,"principalId?",-1),Or=e("code",null,"string",-1),Gr=e("code",null,"receiver?",-1),Hr=e("code",null,"EBMessageAddress",-1),qr=e("code",null,"sender",-1),Wr=e("code",null,"EBMessageAddress",-1),jr=e("code",null,"timestamp",-1),Ur=e("code",null,"number",-1),Vr=e("code",null,"traceId?",-1),zr=e("code",null,"string",-1),Jr=e("code",null,'"id"',-1),Qr=e("code",null,'"instanceId"',-1),Xr=e("code",null,'"timestamp"',-1),Yr=e("td",{style:{"text-align":"left"}},"the function to be called if a matching message arrives",-1),Zr=e("h4",{id:"returns-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-10","aria-hidden":"true"},"#"),t(" Returns")],-1),$r=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"string"),t(">")],-1),el=e("h4",{id:"implementation-of-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-8","aria-hidden":"true"},"#"),t(" Implementation of")],-1),tl=e("h4",{id:"defined-in-25",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-25","aria-hidden":"true"},"#"),t(" Defined in")],-1),sl={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L259",target:"_blank",rel:"noopener noreferrer"},nl=a('<hr><h3 id="removealllisteners" tabindex="-1"><a class="header-anchor" href="#removealllisteners" aria-hidden="true">#</a> removeAllListeners</h3><p>▸ <strong>removeAllListeners</strong>(): <code>void</code></p><h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-10" tabindex="-1"><a class="header-anchor" href="#inherited-from-10" aria-hidden="true">#</a> Inherited from</h4>',6),ol=e("h4",{id:"defined-in-26",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-26","aria-hidden":"true"},"#"),t(" Defined in")],-1),dl={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L28",target:"_blank",rel:"noopener noreferrer"},al=a('<hr><h3 id="start" tabindex="-1"><a class="header-anchor" href="#start" aria-hidden="true">#</a> start</h3><p>▸ <strong>start</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Start the eventbridge and connect to the underlaying message broker</p><h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="implementation-of-9" tabindex="-1"><a class="header-anchor" href="#implementation-of-9" aria-hidden="true">#</a> Implementation of</h4>',7),il=e("h4",{id:"overrides-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-2","aria-hidden":"true"},"#"),t(" Overrides")],-1),rl=e("h4",{id:"defined-in-27",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-27","aria-hidden":"true"},"#"),t(" Defined in")],-1),ll={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L100",target:"_blank",rel:"noopener noreferrer"},cl=a('<hr><h3 id="startactivespan" tabindex="-1"><a class="header-anchor" href="#startactivespan" aria-hidden="true">#</a> startActiveSpan</h3><p>▸ <strong>startActiveSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>context?</code>, <code>fn</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p><p>Start a child span for opentelemetry tracking</p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">name of span</td></tr><tr><td style="text-align:left;"><code>opts</code></td><td style="text-align:left;"><code>SpanOptions</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">span options</td></tr><tr><td style="text-align:left;"><code>context</code></td><td style="text-align:left;"><code>undefined</code> | <code>Context</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">optional context</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(<code>span</code>: <code>Span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">function to be executed within the span</td></tr></tbody></table><h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><p>return value of fn</p><h4 id="inherited-from-11" tabindex="-1"><a class="header-anchor" href="#inherited-from-11" aria-hidden="true">#</a> Inherited from</h4>',12),hl=e("h4",{id:"defined-in-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-28","aria-hidden":"true"},"#"),t(" Defined in")],-1),ul={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L80",target:"_blank",rel:"noopener noreferrer"},_l=a('<hr><h3 id="unregistercommand" tabindex="-1"><a class="header-anchor" href="#unregistercommand" aria-hidden="true">#</a> unregisterCommand</h3><p>▸ <strong>unregisterCommand</strong>(<code>address</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Unregister a service command</p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a> Parameters</h4>',5),pl=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),gl=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),fl={style:{"text-align":"left"}},ml=e("code",null,"EBMessageAddress",-1),bl=e("td",{style:{"text-align":"left"}},"The address (service name, version and command name) of the command to be de-registered",-1),vl=e("h4",{id:"returns-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-14","aria-hidden":"true"},"#"),t(" Returns")],-1),Bl=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),El=e("h4",{id:"implementation-of-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-10","aria-hidden":"true"},"#"),t(" Implementation of")],-1),yl=e("h4",{id:"defined-in-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-29","aria-hidden":"true"},"#"),t(" Defined in")],-1),xl={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L254",target:"_blank",rel:"noopener noreferrer"},Dl=a('<hr><h3 id="unregistersubscription" tabindex="-1"><a class="header-anchor" href="#unregistersubscription" aria-hidden="true">#</a> unregisterSubscription</h3><p>▸ <strong>unregisterSubscription</strong>(<code>address</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a> Parameters</h4>',4),kl=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Cl=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),wl={style:{"text-align":"left"}},Il=e("code",null,"EBMessageAddress",-1),Tl=e("h4",{id:"returns-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-15","aria-hidden":"true"},"#"),t(" Returns")],-1),Pl=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),Ll=e("h4",{id:"implementation-of-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-11","aria-hidden":"true"},"#"),t(" Implementation of")],-1),Sl=e("h4",{id:"defined-in-30",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-30","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ml={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L269",target:"_blank",rel:"noopener noreferrer"},Nl=a('<hr><h3 id="wrapinspan" tabindex="-1"><a class="header-anchor" href="#wrapinspan" aria-hidden="true">#</a> wrapInSpan</h3><p>▸ <strong>wrapInSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>fn</code>, <code>context?</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p><p>Start span for opentelemetry tracking on same level. The created span will not become the &quot;active&quot; span within opentelemetry!</p><p>This means during logging and similar the spanId of parent span is logged.</p><p>Use wrapInSpan for marking points in flow of one bigger function, but not to trace the program flow itself</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">name of span</td></tr><tr><td style="text-align:left;"><code>opts</code></td><td style="text-align:left;"><code>SpanOptions</code></td><td style="text-align:left;">span options</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(<code>span</code>: <code>Span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</td><td style="text-align:left;">function te be executed in the span</td></tr><tr><td style="text-align:left;"><code>context?</code></td><td style="text-align:left;"><code>Context</code></td><td style="text-align:left;">span context</td></tr></tbody></table><h4 id="returns-16" tabindex="-1"><a class="header-anchor" href="#returns-16" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><p>return value of fn</p><h4 id="inherited-from-12" tabindex="-1"><a class="header-anchor" href="#inherited-from-12" aria-hidden="true">#</a> Inherited from</h4>',14),Rl=e("h4",{id:"defined-in-31",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-31","aria-hidden":"true"},"#"),t(" Defined in")],-1),Al={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L130",target:"_blank",rel:"noopener noreferrer"};function Kl(Fl,Ol){const n=i("RouterLink"),d=i("ExternalLinkIcon");return l(),c("div",null,[e("p",null,[s(n,{to:"/api/"},{default:o(()=>[t("PURISTA API")]),_:1}),t(" / "),s(n,{to:"/api/modules.html"},{default:o(()=>[t("Modules")]),_:1}),t(" / "),s(n,{to:"/api/modules/purista_core.html"},{default:o(()=>[t("@purista/core")]),_:1}),t(" / DefaultEventBridge")]),u,e("p",null,[s(n,{to:"/api/modules/purista_core.html"},{default:o(()=>[t("@purista/core")]),_:1}),t(".DefaultEventBridge")]),_,e("ul",null,[e("li",null,[e("p",null,[s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[p]),_:1}),t("<"),s(n,{to:"/api/modules/purista_core.html#defaulteventbridgeconfig"},{default:o(()=>[g]),_:1}),t(">")]),f])]),m,e("ul",null,[e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[b]),_:1})])]),v,B,e("ul",null,[e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#constructor"},{default:o(()=>[t("constructor")]),_:1})])]),E,e("ul",null,[e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#config"},{default:o(()=>[t("config")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#defaultcommandtimeout"},{default:o(()=>[t("defaultCommandTimeout")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#hasstarted"},{default:o(()=>[t("hasStarted")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#healthy"},{default:o(()=>[t("healthy")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#instanceid"},{default:o(()=>[t("instanceId")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#logger"},{default:o(()=>[t("logger")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#name"},{default:o(()=>[t("name")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#pendinginvocations"},{default:o(()=>[t("pendingInvocations")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#readstream"},{default:o(()=>[t("readStream")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#runningsubscriptioncount"},{default:o(()=>[t("runningSubscriptionCount")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#servicefunctions"},{default:o(()=>[t("serviceFunctions")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#subscriptions"},{default:o(()=>[t("subscriptions")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#traceprovider"},{default:o(()=>[t("traceProvider")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#writestream"},{default:o(()=>[t("writeStream")]),_:1})])]),y,e("ul",null,[e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#destroy"},{default:o(()=>[t("destroy")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#emit"},{default:o(()=>[t("emit")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#emitmessage"},{default:o(()=>[t("emitMessage")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#gettracer"},{default:o(()=>[t("getTracer")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#invoke"},{default:o(()=>[t("invoke")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#ishealthy"},{default:o(()=>[t("isHealthy")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#isready"},{default:o(()=>[t("isReady")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#off"},{default:o(()=>[t("off")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#on"},{default:o(()=>[t("on")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#registercommand"},{default:o(()=>[t("registerCommand")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#registersubscription"},{default:o(()=>[t("registerSubscription")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#removealllisteners"},{default:o(()=>[t("removeAllListeners")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#start"},{default:o(()=>[t("start")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#startactivespan"},{default:o(()=>[t("startActiveSpan")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#unregistercommand"},{default:o(()=>[t("unregisterCommand")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#unregistersubscription"},{default:o(()=>[t("unregisterSubscription")]),_:1})]),e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html#wrapinspan"},{default:o(()=>[t("wrapInSpan")]),_:1})])]),x,e("table",null,[D,e("tbody",null,[k,C,w,I,e("tr",null,[T,e("td",P,[s(n,{to:"/api/modules/purista_core.html#loglevelname"},{default:o(()=>[L]),_:1})]),S]),M,e("tr",null,[N,e("td",R,[s(n,{to:"/api/classes/purista_core.Logger.html"},{default:o(()=>[A]),_:1})]),K]),F])]),O,e("p",null,[s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#constructor"},{default:o(()=>[t("constructor")]),_:1})]),G,e("p",null,[e("a",H,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:83"),s(d)])]),q,W,e("p",null,[t("• "),j,t(": "),s(n,{to:"/api/modules/purista_core.html#complete"},{default:o(()=>[U]),_:1}),t("<{ "),V,t(": "),z,t(" ; "),J,t(": "),Q,t(" ; "),X,t(": "),Y,t(" ; "),Z,t(": "),s(n,{to:"/api/modules/purista_core.html#loglevelname"},{default:o(()=>[$]),_:1}),t(" ; "),ee,t(": "),te,t(" ; "),se,t(": "),s(n,{to:"/api/classes/purista_core.Logger.html"},{default:o(()=>[ne]),_:1}),t(" ; "),oe,t(": "),de,t(" }>")]),ae,e("p",null,[s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#config"},{default:o(()=>[t("config")]),_:1})]),ie,e("p",null,[e("a",re,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:21"),s(d)])]),le,ce,he,ue,_e,e("p",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),s(n,{to:"/api/interfaces/purista_core.EventBridge.html#defaultcommandtimeout"},{default:o(()=>[t("defaultCommandTimeout")]),_:1})]),pe,e("p",null,[s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#defaultcommandtimeout"},{default:o(()=>[t("defaultCommandTimeout")]),_:1})]),ge,e("p",null,[e("a",fe,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:27"),s(d)])]),me,e("p",null,[e("a",be,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:80"),s(d)])]),ve,e("p",null,[e("a",Be,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:81"),s(d)])]),Ee,ye,xe,De,e("p",null,[s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#instanceid"},{default:o(()=>[t("instanceId")]),_:1})]),ke,e("p",null,[e("a",Ce,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:25"),s(d)])]),we,Ie,e("p",null,[t("• "),Te,t(": "),s(n,{to:"/api/classes/purista_core.Logger.html"},{default:o(()=>[Pe]),_:1})]),Le,e("p",null,[s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#logger"},{default:o(()=>[t("logger")]),_:1})]),Se,e("p",null,[e("a",Me,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:18"),s(d)])]),Ne,Re,Ae,Ke,e("p",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),s(n,{to:"/api/interfaces/purista_core.EventBridge.html#name"},{default:o(()=>[t("name")]),_:1})]),Fe,e("p",null,[s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#name"},{default:o(()=>[t("name")]),_:1})]),Oe,e("p",null,[e("a",Ge,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:23"),s(d)])]),He,qe,e("p",null,[t("• "),We,t(),je,t(": "),Ue,t("<"),Ve,t(", "),s(n,{to:"/api/modules/purista_core.html#pendiginvocation"},{default:o(()=>[ze]),_:1}),t(">")]),Je,e("p",null,[e("a",Qe,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:75"),s(d)])]),Xe,Ye,Ze,$e,e("p",null,[e("a",et,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:63"),s(d)])]),tt,e("p",null,[e("a",st,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:76"),s(d)])]),nt,ot,e("p",null,[t("• "),dt,t(),at,t(": "),it,t("<"),rt,t(", ("),lt,t(": { "),ct,t(": "),ht,t(" ; "),ut,t(": "),_t,t(" ; "),pt,t(": "),gt,t(" ; "),ft,t(": "),mt,t(" ; "),bt,t(": "),vt,t(" ; "),Bt,t(": "),Et,t(" ; "),yt,t(": "),s(n,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:o(()=>[xt]),_:1}),t(" ; "),Dt,t(": "),kt,t(" ; "),Ct,t(": { "),wt,t(": "),It,t(" ; "),Tt,t(": "),Pt,t(" } ; "),Lt,t(": "),St,t(" ; "),Mt,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Nt]),_:1}),t(" ; "),Rt,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[At]),_:1}),t(" ; "),Kt,t(": "),Ft,t(" ; "),Ot,t(": "),Gt,t(" }) => "),Ht,t("<{ "),qt,t(": "),Wt,t(" ; "),jt,t(": "),Ut,t(" ; "),Vt,t(": "),zt,t(" ; "),Jt,t(": "),Qt,t(" ; "),Xt,t(": "),Yt,t(" ; "),Zt,t(": "),$t,t(" ; "),es,t(": "),ts,t(" ; "),ss,t(": "),s(n,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:o(()=>[ns]),_:1}),t(" ; "),os,t(": "),ds,t(" ; "),as,t(": { "),is,t(": "),rs,t(" ; "),ls,t(": "),cs,t(" ; "),hs,t(": "),s(n,{to:"/api/enums/purista_core.StatusCode.html"},{default:o(()=>[us]),_:1}),t(" } ; "),_s,t(": "),ps,t(" ; "),gs,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[fs]),_:1}),t(" ; "),ms,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[bs]),_:1}),t(" ; "),vs,t(": "),Bs,t(" ; "),Es,t(": "),ys,t(" } | { "),xs,t(": "),Ds,t(" ; "),ks,t(": "),Cs,t(" ; "),ws,t(": "),Is,t(" ; "),Ts,t(": "),Ps,t(" ; "),Ls,t(": "),Ss,t(" ; "),Ms,t(": "),Ns,t(" ; "),Rs,t(": "),s(n,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:o(()=>[As]),_:1}),t(" ; "),Ks,t(": "),Fs,t(" ; "),Os,t(": "),Gs,t(" ; "),Hs,t(": "),qs,t(" ; "),Ws,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[js]),_:1}),t(" ; "),Us,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Vs]),_:1}),t(" ; "),zs,t(": "),Js,t(" ; "),Qs,t(": "),Xs,t(" }>>")]),Ys,e("p",null,[e("a",Zs,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:70"),s(d)])]),$s,en,e("p",null,[t("• "),tn,t(),sn,t(": "),nn,t("<"),on,t(", "),s(n,{to:"/api/modules/purista_core.html#subscriptionstorageentry"},{default:o(()=>[dn]),_:1}),t(">")]),an,e("p",null,[e("a",rn,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:78"),s(d)])]),ln,cn,hn,un,e("p",null,[s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#traceprovider"},{default:o(()=>[t("traceProvider")]),_:1})]),_n,e("p",null,[e("a",pn,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:19"),s(d)])]),gn,fn,mn,bn,e("p",null,[e("a",vn,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:62"),s(d)])]),Bn,e("p",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),s(n,{to:"/api/interfaces/purista_core.EventBridge.html#destroy"},{default:o(()=>[t("destroy")]),_:1})]),En,e("p",null,[s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#destroy"},{default:o(()=>[t("destroy")]),_:1})]),yn,e("p",null,[e("a",xn,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:375"),s(d)])]),Dn,e("table",null,[kn,e("tbody",null,[e("tr",null,[Cn,e("td",wn,[t("extends "),s(n,{to:"/api/modules/purista_core.html#eventkey"},{default:o(()=>[In]),_:1}),t("<{ "),Tn,t(": "),Pn,t(" ; "),Ln,t(": "),Sn,t(" ; "),Mn,t(": "),Nn,t(" ; "),Rn,t(": "),An,t(" ; "),Kn,t(": "),Fn,t(" }>")])])])]),On,e("p",null,[s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#emit"},{default:o(()=>[t("emit")]),_:1})]),Gn,e("p",null,[e("a",Hn,[t("core/types/GenericEventEmitter.ts:24"),s(d)])]),qn,Wn,e("p",null,[t("▸ "),jn,t("("),Un,t("): "),Vn,t("<"),zn,t("<"),s(n,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[Jn]),_:1}),t(">>")]),Qn,Xn,e("table",null,[Yn,e("tbody",null,[e("tr",null,[Zn,e("td",$n,[eo,t("<"),s(n,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[to]),_:1}),t(", "),so,t(" | "),no,t(" | "),oo,t(" | "),ao,t(">")]),io])])]),ro,e("p",null,[lo,t("<"),co,t("<"),s(n,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[ho]),_:1}),t(">>")]),uo,e("p",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),s(n,{to:"/api/interfaces/purista_core.EventBridge.html#emitmessage"},{default:o(()=>[t("emitMessage")]),_:1})]),_o,e("p",null,[e("a",po,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:279"),s(d)])]),go,e("p",null,[s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#gettracer"},{default:o(()=>[t("getTracer")]),_:1})]),fo,e("p",null,[e("a",mo,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:68"),s(d)])]),bo,e("table",null,[vo,e("tbody",null,[e("tr",null,[Bo,e("td",Eo,[yo,t("<{ "),xo,t(": "),Do,t(" ; "),ko,t(": "),Co,t(" ; "),wo,t(": "),Io,t(" ; "),To,t(": "),Po,t(" ; "),Lo,t(": "),So,t(" ; "),Mo,t(": "),No,t(" ; "),Ro,t(": "),s(n,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:o(()=>[Ao]),_:1}),t(" ; "),Ko,t(": "),Fo,t(" ; "),Oo,t(": { "),Go,t(": "),Ho,t(" ; "),qo,t(": "),Wo,t(" } ; "),jo,t(": "),Uo,t(" ; "),Vo,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[zo]),_:1}),t(" ; "),Jo,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Qo]),_:1}),t(" ; "),Xo,t(": "),Yo,t(" ; "),Zo,t(": "),$o,t(" }, "),ed,t(" | "),td,t(" | "),sd,t(" | "),nd,t(" | "),od,t(">")]),dd]),ad])]),id,rd,ld,e("p",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),s(n,{to:"/api/interfaces/purista_core.EventBridge.html#invoke"},{default:o(()=>[t("invoke")]),_:1})]),cd,e("p",null,[e("a",hd,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:322"),s(d)])]),ud,e("p",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),s(n,{to:"/api/interfaces/purista_core.EventBridge.html#ishealthy"},{default:o(()=>[t("isHealthy")]),_:1})]),_d,e("p",null,[e("a",pd,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:96"),s(d)])]),gd,e("p",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),s(n,{to:"/api/interfaces/purista_core.EventBridge.html#isready"},{default:o(()=>[t("isReady")]),_:1})]),fd,e("p",null,[e("a",md,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:92"),s(d)])]),bd,e("table",null,[vd,e("tbody",null,[e("tr",null,[Bd,e("td",Ed,[t("extends "),s(n,{to:"/api/modules/purista_core.html#eventkey"},{default:o(()=>[yd]),_:1}),t("<{ "),xd,t(": "),Dd,t(" ; "),kd,t(": "),Cd,t(" ; "),wd,t(": "),Id,t(" ; "),Td,t(": "),Pd,t(" ; "),Ld,t(": "),Sd,t(" }>")])])])]),Md,e("p",null,[s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#off"},{default:o(()=>[t("off")]),_:1})]),Nd,e("p",null,[e("a",Rd,[t("core/types/GenericEventEmitter.ts:20"),s(d)])]),Ad,e("table",null,[Kd,e("tbody",null,[e("tr",null,[Fd,e("td",Od,[t("extends "),s(n,{to:"/api/modules/purista_core.html#eventkey"},{default:o(()=>[Gd]),_:1}),t("<{ "),Hd,t(": "),qd,t(" ; "),Wd,t(": "),jd,t(" ; "),Ud,t(": "),Vd,t(" ; "),zd,t(": "),Jd,t(" ; "),Qd,t(": "),Xd,t(" }>")])])])]),Yd,e("p",null,[s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#on"},{default:o(()=>[t("on")]),_:1})]),Zd,e("p",null,[e("a",$d,[t("core/types/GenericEventEmitter.ts:16"),s(d)])]),ea,e("table",null,[ta,e("tbody",null,[e("tr",null,[sa,e("td",na,[s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[oa]),_:1})]),da]),e("tr",null,[aa,e("td",ia,[t("("),ra,t(": { "),la,t(": "),ca,t(" ; "),ha,t(": "),ua,t(" ; "),_a,t(": "),pa,t(" ; "),ga,t(": "),fa,t(" ; "),ma,t(": "),ba,t(" ; "),va,t(": "),Ba,t(" ; "),Ea,t(": "),s(n,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:o(()=>[ya]),_:1}),t(" ; "),xa,t(": "),Da,t(" ; "),ka,t(": { "),Ca,t(": "),wa,t(" ; "),Ia,t(": "),Ta,t(" } ; "),Pa,t(": "),La,t(" ; "),Sa,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Ma]),_:1}),t(" ; "),Na,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Ra]),_:1}),t(" ; "),Aa,t(": "),Ka,t(" ; "),Fa,t(": "),Oa,t(" }) => "),Ga,t("<{ "),Ha,t(": "),qa,t(" ; "),Wa,t(": "),ja,t(" ; "),Ua,t(": "),Va,t(" ; "),za,t(": "),Ja,t(" ; "),Qa,t(": "),Xa,t(" ; "),Ya,t(": "),Za,t(" ; "),$a,t(": "),ei,t(" ; "),ti,t(": "),s(n,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:o(()=>[si]),_:1}),t(" ; "),ni,t(": "),oi,t(" ; "),di,t(": { "),ai,t(": "),ii,t(" ; "),ri,t(": "),li,t(" ; "),ci,t(": "),s(n,{to:"/api/enums/purista_core.StatusCode.html"},{default:o(()=>[hi]),_:1}),t(" } ; "),ui,t(": "),_i,t(" ; "),pi,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[gi]),_:1}),t(" ; "),fi,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[mi]),_:1}),t(" ; "),bi,t(": "),vi,t(" ; "),Bi,t(": "),Ei,t(" } | { "),yi,t(": "),xi,t(" ; "),Di,t(": "),ki,t(" ; "),Ci,t(": "),wi,t(" ; "),Ii,t(": "),Ti,t(" ; "),Pi,t(": "),Li,t(" ; "),Si,t(": "),Mi,t(" ; "),Ni,t(": "),s(n,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:o(()=>[Ri]),_:1}),t(" ; "),Ai,t(": "),Ki,t(" ; "),Fi,t(": "),Oi,t(" ; "),Gi,t(": "),Hi,t(" ; "),qi,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Wi]),_:1}),t(" ; "),ji,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Ui]),_:1}),t(" ; "),Vi,t(": "),zi,t(" ; "),Ji,t(": "),Qi,t(" }>")]),Xi]),e("tr",null,[Yi,e("td",Zi,[s(n,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:o(()=>[$i]),_:1})]),er])])]),tr,sr,nr,or,e("p",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),s(n,{to:"/api/interfaces/purista_core.EventBridge.html#registercommand"},{default:o(()=>[t("registerCommand")]),_:1})]),dr,e("p",null,[e("a",ar,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:240"),s(d)])]),ir,e("table",null,[rr,e("tbody",null,[e("tr",null,[lr,e("td",cr,[s(n,{to:"/api/modules/purista_core.html#subscription"},{default:o(()=>[hr]),_:1})]),ur]),e("tr",null,[_r,e("td",pr,[t("("),gr,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[fr]),_:1}),t(") => "),mr,t("<"),br,t(" | "),vr,t("<{ "),Br,t(": "),Er,t(" ; "),yr,t(": "),xr,t(" ; "),Dr,t(": "),kr,t(" ; "),Cr,t(": "),wr,t(" ; "),Ir,t(": "),Tr,t(" ; "),Pr,t(": "),Lr,t(" ; "),Sr,t(": "),s(n,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:o(()=>[Mr]),_:1}),t(" ; "),Nr,t(": "),Rr,t(" ; "),Ar,t(": "),Kr,t(" ; "),Fr,t(": "),Or,t(" ; "),Gr,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Hr]),_:1}),t(" ; "),qr,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Wr]),_:1}),t(" ; "),jr,t(": "),Ur,t(" ; "),Vr,t(": "),zr,t(" }, "),Jr,t(" | "),Qr,t(" | "),Xr,t(">>")]),Yr])])]),Zr,$r,el,e("p",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),s(n,{to:"/api/interfaces/purista_core.EventBridge.html#registersubscription"},{default:o(()=>[t("registerSubscription")]),_:1})]),tl,e("p",null,[e("a",sl,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:259"),s(d)])]),nl,e("p",null,[s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#removealllisteners"},{default:o(()=>[t("removeAllListeners")]),_:1})]),ol,e("p",null,[e("a",dl,[t("core/types/GenericEventEmitter.ts:28"),s(d)])]),al,e("p",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),s(n,{to:"/api/interfaces/purista_core.EventBridge.html#start"},{default:o(()=>[t("start")]),_:1})]),il,e("p",null,[s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#start"},{default:o(()=>[t("start")]),_:1})]),rl,e("p",null,[e("a",ll,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:100"),s(d)])]),cl,e("p",null,[s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#startactivespan"},{default:o(()=>[t("startActiveSpan")]),_:1})]),hl,e("p",null,[e("a",ul,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:80"),s(d)])]),_l,e("table",null,[pl,e("tbody",null,[e("tr",null,[gl,e("td",fl,[s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[ml]),_:1})]),bl])])]),vl,Bl,El,e("p",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),s(n,{to:"/api/interfaces/purista_core.EventBridge.html#unregistercommand"},{default:o(()=>[t("unregisterCommand")]),_:1})]),yl,e("p",null,[e("a",xl,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:254"),s(d)])]),Dl,e("table",null,[kl,e("tbody",null,[e("tr",null,[Cl,e("td",wl,[s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Il]),_:1})])])])]),Tl,Pl,Ll,e("p",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),s(n,{to:"/api/interfaces/purista_core.EventBridge.html#unregistersubscription"},{default:o(()=>[t("unregisterSubscription")]),_:1})]),Sl,e("p",null,[e("a",Ml,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:269"),s(d)])]),Nl,e("p",null,[s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),s(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#wrapinspan"},{default:o(()=>[t("wrapInSpan")]),_:1})]),Rl,e("p",null,[e("a",Al,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:130"),s(d)])])])}const ql=r(h,[["render",Kl],["__file","purista_core.DefaultEventBridge.html.vue"]]);export{ql as default};
