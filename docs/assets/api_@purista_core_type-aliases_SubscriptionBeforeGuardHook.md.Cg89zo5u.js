import{_ as o,c as a,o as t,ag as r}from"./chunks/framework.U_AETC1W.js";const m=JSON.parse('{"title":"Type Alias: SubscriptionBeforeGuardHook()<S, FunctionPayloadType, FunctionParamsType, Resources, Invokes, EmitList>","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/core/type-aliases/SubscriptionBeforeGuardHook.md","filePath":"api/@purista/core/type-aliases/SubscriptionBeforeGuardHook.md","lastUpdated":1740066608000}'),c={name:"api/@purista/core/type-aliases/SubscriptionBeforeGuardHook.md"};function s(i,e,n,d,p,u){return t(),a("div",null,e[0]||(e[0]=[r('<p><a href="./../README.html"><strong>@purista/core v2.0.5</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/core</a> / SubscriptionBeforeGuardHook</p><h1 id="type-alias-subscriptionbeforeguardhook-s-functionpayloadtype-functionparamstype-resources-invokes-emitlist" tabindex="-1">Type Alias: SubscriptionBeforeGuardHook()&lt;S, FunctionPayloadType, FunctionParamsType, Resources, Invokes, EmitList&gt; <a class="header-anchor" href="#type-alias-subscriptionbeforeguardhook-s-functionpayloadtype-functionparamstype-resources-invokes-emitlist" aria-label="Permalink to &quot;Type Alias: SubscriptionBeforeGuardHook()\\&lt;S, FunctionPayloadType, FunctionParamsType, Resources, Invokes, EmitList\\&gt;&quot;">​</a></h1><blockquote><p><strong>SubscriptionBeforeGuardHook</strong>&lt;<code>S</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>Resources</code>, <code>Invokes</code>, <code>EmitList</code>&gt;: (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionBeforeGuardHook.ts#L14" target="_blank" rel="noreferrer">packages/core/src/core/types/subscription/SubscriptionBeforeGuardHook.ts:14</a></p><p>Guard is called after command function input validation and before executing the command function. The guard is usefull to separate for example auth checks from business logic. It should throw HandledError or return void.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>S</strong> <em>extends</em> <a href="./../classes/Service.html"><code>Service</code></a> = <a href="./../classes/Service.html"><code>Service</code></a></p><p>• <strong>FunctionPayloadType</strong> = <code>unknown</code></p><p>• <strong>FunctionParamsType</strong> = <code>unknown</code></p><p>• <strong>Resources</strong> <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; = <a href="./EmptyObject.html"><code>EmptyObject</code></a></p><p>• <strong>Invokes</strong> <em>extends</em> <a href="./InvokeList.html"><code>InvokeList</code></a> = <a href="./EmptyObject.html"><code>EmptyObject</code></a></p><p>• <strong>EmitList</strong> <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>Schema</code>&gt; = <a href="./EmptyObject.html"><code>EmptyObject</code></a></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="this" tabindex="-1">this <a class="header-anchor" href="#this" aria-label="Permalink to &quot;this&quot;">​</a></h3><p><code>S</code></p><h3 id="context" tabindex="-1">context <a class="header-anchor" href="#context" aria-label="Permalink to &quot;context&quot;">​</a></h3><p><a href="./SubscriptionFunctionContext.html"><code>SubscriptionFunctionContext</code></a>&lt;<code>Resources</code>, <code>Invokes</code>, <code>EmitList</code>&gt;</p><h3 id="payload" tabindex="-1">payload <a class="header-anchor" href="#payload" aria-label="Permalink to &quot;payload&quot;">​</a></h3><p><code>Readonly</code>&lt;<code>FunctionPayloadType</code>&gt;</p><h3 id="parameter" tabindex="-1">parameter <a class="header-anchor" href="#parameter" aria-label="Permalink to &quot;parameter&quot;">​</a></h3><p><code>Readonly</code>&lt;<code>FunctionParamsType</code>&gt;</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Promise</code>&lt;<code>void</code>&gt;</p>',25)]))}const h=o(c,[["render",s]]);export{m as __pageData,h as default};
