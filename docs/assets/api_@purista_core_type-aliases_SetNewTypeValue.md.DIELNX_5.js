import{_ as t,c as a,o as r,ag as s}from"./chunks/framework.U_AETC1W.js";const T=JSON.parse('{"title":"Type Alias: SetNewTypeValue<T, K, V>","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/core/type-aliases/SetNewTypeValue.md","filePath":"api/@purista/core/type-aliases/SetNewTypeValue.md","lastUpdated":1739900666000}'),p={name:"api/@purista/core/type-aliases/SetNewTypeValue.md"};function o(l,e,c,i,n,d){return r(),a("div",null,e[0]||(e[0]=[s('<p><a href="./../README.html"><strong>@purista/core v2.0.0</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/core</a> / SetNewTypeValue</p><h1 id="type-alias-setnewtypevalue-t-k-v" tabindex="-1">Type Alias: SetNewTypeValue&lt;T, K, V&gt; <a class="header-anchor" href="#type-alias-setnewtypevalue-t-k-v" aria-label="Permalink to &quot;Type Alias: SetNewTypeValue\\&lt;T, K, V\\&gt;&quot;">​</a></h1><blockquote><p><strong>SetNewTypeValue</strong>&lt;<code>T</code>, <code>K</code>, <code>V</code>&gt;: <code>{ [P in keyof T]: P extends K ? V : T[P] }</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/SetNewTypeValue.ts#L1" target="_blank" rel="noreferrer">packages/core/src/core/types/SetNewTypeValue.ts:1</a></p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>T</strong></p><p>• <strong>K</strong> <em>extends</em> keyof <code>T</code></p><p>• <strong>V</strong></p>',10)]))}const y=t(p,[["render",o]]);export{T as __pageData,y as default};
