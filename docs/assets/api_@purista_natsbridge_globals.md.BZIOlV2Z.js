import{_ as s,c as i,o as e,ag as t}from"./chunks/framework.U_AETC1W.js";const g=JSON.parse('{"title":"@purista/natsbridge","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/natsbridge/globals.md","filePath":"api/@purista/natsbridge/globals.md","lastUpdated":1739900666000}'),r={name:"api/@purista/natsbridge/globals.md"};function n(l,a,p,h,o,d){return e(),i("div",null,a[0]||(a[0]=[t(`<p><a href="./README.html"><strong>@purista/natsbridge v2.0.0</strong></a></p><hr><p><a href="./../../packages.html">PURISTA API</a> / @purista/natsbridge</p><h1 id="purista-natsbridge" tabindex="-1">@purista/natsbridge <a class="header-anchor" href="#purista-natsbridge" aria-label="Permalink to &quot;@purista/natsbridge&quot;">​</a></h1><p>Package for using a <a href="https://nats.io/" target="_blank" rel="noreferrer">NATS</a> broker as event bridge.<br> The event bridge supports brokers with and without JetStream enabled.</p><p>If JetStream is enabled, subscriptions which are marked as durable are persisted by using JetStream.<br> If JetStream is not available, subscription fall back to live-subscriptions without any persistence.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { NatsBridge } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@purista/natsbridge&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// create and init our eventbridge</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> eventBridge</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NatsBridge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> eventBridge.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h2 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes&quot;">​</a></h2><ul><li><a href="./classes/NatsBridge.html">NatsBridge</a></li></ul><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><ul><li><a href="./type-aliases/IncomingMessageFunction.html">IncomingMessageFunction</a></li><li><a href="./type-aliases/NatsBridgeConfig.html">NatsBridgeConfig</a></li></ul><h2 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-label="Permalink to &quot;Variables&quot;">​</a></h2><ul><li><a href="./variables/puristaVersion.html">puristaVersion</a></li></ul><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><ul><li><a href="./functions/getCommandSubscriptionTopic.html">getCommandSubscriptionTopic</a></li><li><a href="./functions/getDefaultNatsBridgeConfig.html">getDefaultNatsBridgeConfig</a></li><li><a href="./functions/getQueueGroupName.html">getQueueGroupName</a></li><li><a href="./functions/getSubscriptionTopic.html">getSubscriptionTopic</a></li><li><a href="./functions/getTopicName.html">getTopicName</a></li></ul>`,16)]))}const u=s(r,[["render",n]]);export{g as __pageData,u as default};
