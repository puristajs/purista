import{_ as t,c as r,o as a,ag as p}from"./chunks/framework.U_AETC1W.js";const l=JSON.parse('{"title":"Type Alias: InferTypeOrEmptyObject<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/core/type-aliases/InferTypeOrEmptyObject.md","filePath":"api/@purista/core/type-aliases/InferTypeOrEmptyObject.md","lastUpdated":1739900666000}'),c={name:"api/@purista/core/type-aliases/InferTypeOrEmptyObject.md"};function o(s,e,n,m,d,y){return a(),r("div",null,e[0]||(e[0]=[p('<p><a href="./../README.html"><strong>@purista/core v2.0.0</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/core</a> / InferTypeOrEmptyObject</p><h1 id="type-alias-infertypeoremptyobject-t" tabindex="-1">Type Alias: InferTypeOrEmptyObject&lt;T&gt; <a class="header-anchor" href="#type-alias-infertypeoremptyobject-t" aria-label="Permalink to &quot;Type Alias: InferTypeOrEmptyObject\\&lt;T\\&gt;&quot;">​</a></h1><blockquote><p><strong>InferTypeOrEmptyObject</strong>&lt;<code>T</code>&gt;: <code>T</code> <em>extends</em> <code>Schema</code> ? <code>Infer</code>&lt;<code>T</code>&gt; <em>extends</em> <a href="./EmptyObject.html"><code>EmptyObject</code></a> ? <code>Infer</code>&lt;<code>T</code>&gt; : <a href="./EmptyObject.html"><code>EmptyObject</code></a> : <a href="./EmptyObject.html"><code>EmptyObject</code></a></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/InferTypeOrEmptyObject.ts#L4" target="_blank" rel="noreferrer">packages/core/src/core/types/InferTypeOrEmptyObject.ts:4</a></p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>T</strong> <em>extends</em> <code>Schema</code> | <code>undefined</code></p>',8)]))}const f=t(c,[["render",o]]);export{l as __pageData,f as default};
