import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as c,c as d,b as n,e as s,w as a,d as e,a as o}from"./app-ccf1f840.js";const r={},u=o(`<h1 id="module-purista-k8s-sdk" tabindex="-1"><a class="header-anchor" href="#module-purista-k8s-sdk" aria-hidden="true">#</a> Module: @purista/k8s-sdk</h1><p>SDK and helper to run PURISTA services in Kubernetes.</p><p>Here is a full example, how the index file might look like, if you want to deploy a service to Kubernetes.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// src/index.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> serve <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@hono/node-server&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> OTLPTraceExporter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@opentelemetry/exporter-trace-otlp-http&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> SimpleSpanProcessor <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@opentelemetry/sdk-trace-base&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  DefaultConfigStore<span class="token punctuation">,</span>
  DefaultEventBridge<span class="token punctuation">,</span>
  DefaultSecretStore<span class="token punctuation">,</span>
  DefaultStateStore<span class="token punctuation">,</span>
  gracefulShutdown<span class="token punctuation">,</span>
  initLogger<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@purista/core&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getHttpServer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@purista/k8s-sdk&#39;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> theServiceV1Service <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./service/theService/v1/&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">main</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// create a logger</span>
  <span class="token keyword">const</span> logger <span class="token operator">=</span> <span class="token function">initLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// optional: set up opentelemetry if you like to use it</span>
  <span class="token keyword">const</span> exporter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OTLPTraceExporter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    url<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://localhost:14268/api/traces</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> spanProcessor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleSpanProcessor</span><span class="token punctuation">(</span>exporter<span class="token punctuation">)</span>

  <span class="token comment">// optional: set up stores if they are needed for your service</span>
  <span class="token keyword">const</span> secretStore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultSecretStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span> logger <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> configStore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultConfigStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span> logger <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> stateStore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultStateStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span> logger <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// set up the eventbridge and start the event bridge</span>
  <span class="token keyword">const</span> eventBridge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultEventBridge</span><span class="token punctuation">(</span><span class="token punctuation">{</span> spanProcessor <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> eventBridge<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// set up the service</span>
  <span class="token keyword">const</span> theService <span class="token operator">=</span> theServiceV1Service<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>eventBridge<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    spanProcessor<span class="token punctuation">,</span>
    configStore<span class="token punctuation">,</span>
    secretStore<span class="token punctuation">,</span>
    stateStore<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> theService<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// create http server</span>
  <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">getHttpServer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    logger<span class="token punctuation">,</span>
    <span class="token comment">// check event bridge health if /healthz endpoint is called</span>
    <span class="token function-variable function">healthFn</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> eventBridge<span class="token punctuation">.</span><span class="token function">isHealthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">// optional: expose the commands if they are defined to have url endpoint</span>
    services<span class="token operator">:</span> theService<span class="token punctuation">,</span>
    <span class="token comment">// optional: expose service endpoints at [apiMountPath]/v[serviceVersion]/[path defined for command]</span>
    <span class="token comment">// defaults to /api</span>
    apiMountPath<span class="token operator">:</span> <span class="token string">&#39;/api&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

   <span class="token comment">// start the http server</span>
   <span class="token comment">// defaults to port 3000</span>
   <span class="token comment">// optional: you can set the port in the optional parameter of this method</span>
   <span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token function">serve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
     fetch<span class="token operator">:</span> app<span class="token punctuation">.</span>fetch<span class="token punctuation">,</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// register shut down methods</span>
  <span class="token function">gracefulShutdown</span><span class="token punctuation">(</span>logger<span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token comment">// begin with the event bridge to no longer accept incoming messages</span>
    eventBridge<span class="token punctuation">,</span>
    <span class="token comment">// optional: shut down the service</span>
    theService<span class="token punctuation">,</span>
    <span class="token comment">// optional: shut down the secret store</span>
    secretStore<span class="token punctuation">,</span>
    <span class="token comment">// optional: shut down the config store</span>
    configStore<span class="token punctuation">,</span>
    <span class="token comment">// optional: shut down the state store</span>
    stateStore<span class="token punctuation">,</span>
    <span class="token comment">// stop the http server</span>
    <span class="token punctuation">{</span>
       name<span class="token operator">:</span> <span class="token string">&#39;httpserver&#39;</span><span class="token punctuation">,</span>
       <span class="token function-variable function">destroy</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
       server<span class="token punctuation">.</span><span class="token function">closeIdleConnections</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
       server<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="type-aliases" tabindex="-1"><a class="header-anchor" href="#type-aliases" aria-hidden="true">#</a> Type Aliases</h3>`,7),k=n("h3",{id:"functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#functions","aria-hidden":"true"},"#"),e(" Functions")],-1),v=o('<h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="gethttpserverconfig" tabindex="-1"><a class="header-anchor" href="#gethttpserverconfig" aria-hidden="true">#</a> GetHttpServerConfig</h3><p>Ƭ <strong>GetHttpServerConfig</strong>: <code>Object</code></p><p>The configuration object for creating the k8s http server</p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>apiMountPath?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the api mount path <strong><code>Default</code></strong> <code>ts /api </code></td></tr><tr><td style="text-align:left;"><code>disableEndpointExposing?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">disables adding of all endpoints for commands which are marked to be exposed as http endpoints</td></tr><tr><td style="text-align:left;"><code>healthFn</code></td><td style="text-align:left;">() =&gt; <code>Promise</code>&lt;<code>boolean</code>&gt;</td><td style="text-align:left;">health function to be executed on health check</td></tr><tr><td style="text-align:left;"><code>hostname?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">hostname used in tracing and logging</td></tr><tr><td style="text-align:left;"><code>logger</code></td><td style="text-align:left;"><code>Logger</code></td><td style="text-align:left;">a logger instance</td></tr><tr><td style="text-align:left;"><code>services?</code></td><td style="text-align:left;"><code>Service</code> | <code>Service</code>[]</td><td style="text-align:left;">service or array of services which should expose their commands as endpoints if defined</td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',7),h={href:"https://github.com/sebastianwessel/purista/blob/master/packages/k8s-sdk/src/types.ts#L6",target:"_blank",rel:"noopener noreferrer"},m=o(`<h2 id="functions-1" tabindex="-1"><a class="header-anchor" href="#functions-1" aria-hidden="true">#</a> Functions</h2><h3 id="addserviceendpoints" tabindex="-1"><a class="header-anchor" href="#addserviceendpoints" aria-hidden="true">#</a> addServiceEndpoints</h3><p>▸ <strong>addServiceEndpoints</strong>(<code>services</code>, <code>app</code>, <code>logger</code>, <code>apiMountPath?</code>): <code>void</code></p><p><strong><code>Default</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">/</span>api
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>services</code></td><td style="text-align:left;"><code>undefined</code> | <code>Service</code>&lt;<code>unknown</code>&gt; | <code>Service</code>&lt;<code>unknown</code>&gt;[]</td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">instance of the service to add</td></tr><tr><td style="text-align:left;"><code>app</code></td><td style="text-align:left;"><code>Hono</code>&lt;<code>Env</code>, {}, <code>&quot;/&quot;</code>&gt;</td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>logger</code></td><td style="text-align:left;"><code>Logger</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">the logger used for logging the addition</td></tr><tr><td style="text-align:left;"><code>apiMountPath</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>&#39;/api&#39;</code></td><td style="text-align:left;">-</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4>`,10),g={href:"https://github.com/sebastianwessel/purista/blob/master/packages/k8s-sdk/src/addServiceEndpoints.impl.ts#L29",target:"_blank",rel:"noopener noreferrer"},f=o('<hr><h3 id="gethttpserver" tabindex="-1"><a class="header-anchor" href="#gethttpserver" aria-hidden="true">#</a> getHttpServer</h3><p>▸ <strong>getHttpServer</strong>(<code>input</code>, <code>name?</code>): <code>Hono</code>&lt;<code>Env</code>, {}, <code>&quot;/&quot;</code>&gt;</p><p>Create a Hono web server. It adds per default the /healthz endpoint If services is set in options, all commands, which have defined http endpoints, will also be added as endpoints</p><p>The returned server is not started. You need to do it manually.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4>',6),b=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Type"),n("th",{style:{"text-align":"left"}},"Default value"),n("th",{style:{"text-align":"left"}},"Description")])],-1),y=n("td",{style:{"text-align":"left"}},[n("code",null,"input")],-1),x={style:{"text-align":"left"}},_=n("code",null,"GetHttpServerConfig",-1),w=n("td",{style:{"text-align":"left"}},[n("code",null,"undefined")],-1),S=n("td",{style:{"text-align":"left"}},"the config",-1),D=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"name")]),n("td",{style:{"text-align":"left"}},[n("code",null,"string")]),n("td",{style:{"text-align":"left"}},[n("code",null,"'K8sHttpHelperServer'")]),n("td",{style:{"text-align":"left"}},"-")],-1),H=o('<h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>Hono</code>&lt;<code>Env</code>, {}, <code>&quot;/&quot;</code>&gt;</p><p>a object with server, router, start and destroy functions and name var</p><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4>',4),E={href:"https://github.com/sebastianwessel/purista/blob/master/packages/k8s-sdk/src/getHttpServer.impl.ts#L20",target:"_blank",rel:"noopener noreferrer"};function P(T,L){const t=l("RouterLink"),i=l("ExternalLinkIcon");return c(),d("div",null,[n("p",null,[s(t,{to:"/api/"},{default:a(()=>[e("PURISTA API")]),_:1}),e(" / "),s(t,{to:"/api/modules.html"},{default:a(()=>[e("Modules")]),_:1}),e(" / @purista/k8s-sdk")]),u,n("ul",null,[n("li",null,[s(t,{to:"/api/modules/purista_k8s_sdk.html#gethttpserverconfig"},{default:a(()=>[e("GetHttpServerConfig")]),_:1})])]),k,n("ul",null,[n("li",null,[s(t,{to:"/api/modules/purista_k8s_sdk.html#addserviceendpoints"},{default:a(()=>[e("addServiceEndpoints")]),_:1})]),n("li",null,[s(t,{to:"/api/modules/purista_k8s_sdk.html#gethttpserver"},{default:a(()=>[e("getHttpServer")]),_:1})])]),v,n("p",null,[n("a",h,[e("types.ts:6"),s(i)])]),m,n("p",null,[n("a",g,[e("addServiceEndpoints.impl.ts:29"),s(i)])]),f,n("table",null,[b,n("tbody",null,[n("tr",null,[y,n("td",x,[s(t,{to:"/api/modules/purista_k8s_sdk.html#gethttpserverconfig"},{default:a(()=>[_]),_:1})]),w,S]),D])]),H,n("p",null,[n("a",E,[e("getHttpServer.impl.ts:20"),s(i)])])])}const I=p(r,[["render",P],["__file","purista_k8s_sdk.html.vue"]]);export{I as default};
