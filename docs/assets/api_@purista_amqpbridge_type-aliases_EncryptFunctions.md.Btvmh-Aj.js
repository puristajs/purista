import{_ as a,c as t,o as r,ag as o}from"./chunks/framework.U_AETC1W.js";const h=JSON.parse('{"title":"Type Alias: EncryptFunctions","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/amqpbridge/type-aliases/EncryptFunctions.md","filePath":"api/@purista/amqpbridge/type-aliases/EncryptFunctions.md","lastUpdated":1739900666000}'),n={name:"api/@purista/amqpbridge/type-aliases/EncryptFunctions.md"};function c(i,e,s,p,d,l){return r(),t("div",null,e[0]||(e[0]=[o('<p><a href="./../README.html"><strong>@purista/amqpbridge v1.11.0</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/amqpbridge</a> / EncryptFunctions</p><h1 id="type-alias-encryptfunctions" tabindex="-1">Type Alias: EncryptFunctions <a class="header-anchor" href="#type-alias-encryptfunctions" aria-label="Permalink to &quot;Type Alias: EncryptFunctions&quot;">​</a></h1><blockquote><p><strong>EncryptFunctions</strong>: <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/amqpbridge/src/types/EncryptFunctions.ts#L1" target="_blank" rel="noreferrer">amqpbridge/src/types/EncryptFunctions.ts:1</a></p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="decrypt" tabindex="-1">decrypt() <a class="header-anchor" href="#decrypt" aria-label="Permalink to &quot;decrypt()&quot;">​</a></h3><blockquote><p><strong>decrypt</strong>: (<code>input</code>) =&gt; <code>Promise</code>&lt;<code>Buffer</code>&gt;</p></blockquote><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="input" tabindex="-1">input <a class="header-anchor" href="#input" aria-label="Permalink to &quot;input&quot;">​</a></h5><p><code>Buffer</code></p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>Buffer</code>&gt;</p><h3 id="encrypt" tabindex="-1">encrypt() <a class="header-anchor" href="#encrypt" aria-label="Permalink to &quot;encrypt()&quot;">​</a></h3><blockquote><p><strong>encrypt</strong>: (<code>input</code>) =&gt; <code>Promise</code>&lt;<code>Buffer</code>&gt;</p></blockquote><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="input-1" tabindex="-1">input <a class="header-anchor" href="#input-1" aria-label="Permalink to &quot;input&quot;">​</a></h5><p><code>Buffer</code></p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>Buffer</code>&gt;</p>',21)]))}const m=a(n,[["render",c]]);export{h as __pageData,m as default};
