import{_ as t,c as a,o,ag as r}from"./chunks/framework.U_AETC1W.js";const d=JSON.parse('{"title":"Type Alias: ConfigSetterFunction()","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/core/type-aliases/ConfigSetterFunction.md","filePath":"api/@purista/core/type-aliases/ConfigSetterFunction.md","lastUpdated":1740066608000}'),n={name:"api/@purista/core/type-aliases/ConfigSetterFunction.md"};function i(c,e,s,l,p,u){return o(),a("div",null,e[0]||(e[0]=[r('<p><a href="./../README.html"><strong>@purista/core v2.0.5</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/core</a> / ConfigSetterFunction</p><h1 id="type-alias-configsetterfunction" tabindex="-1">Type Alias: ConfigSetterFunction() <a class="header-anchor" href="#type-alias-configsetterfunction" aria-label="Permalink to &quot;Type Alias: ConfigSetterFunction()&quot;">​</a></h1><blockquote><p><strong>ConfigSetterFunction</strong>: (<code>configName</code>, <code>configValue</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/ConfigStore/types/ConfigSetterFunction.ts#L2" target="_blank" rel="noreferrer">packages/core/src/core/ConfigStore/types/ConfigSetterFunction.ts:2</a></p><p>set a config value in the config store</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="configname" tabindex="-1">configName <a class="header-anchor" href="#configname" aria-label="Permalink to &quot;configName&quot;">​</a></h3><p><code>string</code></p><h3 id="configvalue" tabindex="-1">configValue <a class="header-anchor" href="#configvalue" aria-label="Permalink to &quot;configValue&quot;">​</a></h3><p><code>unknown</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Promise</code>&lt;<code>void</code>&gt;</p>',14)]))}const g=t(n,[["render",i]]);export{d as __pageData,g as default};
