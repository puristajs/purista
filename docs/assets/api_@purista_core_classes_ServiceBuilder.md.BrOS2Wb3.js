import{_ as o,c as t,o as a,ag as c}from"./chunks/framework.U_AETC1W.js";const h=JSON.parse('{"title":"Class: ServiceBuilder<S>","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/core/classes/ServiceBuilder.md","filePath":"api/@purista/core/classes/ServiceBuilder.md","lastUpdated":1740066608000}'),r={name:"api/@purista/core/classes/ServiceBuilder.md"};function d(i,e,s,n,l,u){return a(),t("div",null,e[0]||(e[0]=[c('<p><a href="./../README.html"><strong>@purista/core v2.0.5</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/core</a> / ServiceBuilder</p><h1 id="class-servicebuilder-s" tabindex="-1">Class: ServiceBuilder&lt;S&gt; <a class="header-anchor" href="#class-servicebuilder-s" aria-label="Permalink to &quot;Class: ServiceBuilder\\&lt;S\\&gt;&quot;">​</a></h1><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L65" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:65</a></p><p>This class is used to build a service. The <code>ServiceBuilder</code> class is used to build a service. It has a few methods that are used to add command definitions and subscription definitions to the service. It also has a method that is used to create an instance of the service class.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>S</strong> <em>extends</em> <a href="./../type-aliases/ServiceBuilderTypes.html"><code>ServiceBuilderTypes</code></a> = <a href="./../type-aliases/ServiceBuilderTypes.html"><code>ServiceBuilderTypes</code></a></p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="new-servicebuilder" tabindex="-1">new ServiceBuilder() <a class="header-anchor" href="#new-servicebuilder" aria-label="Permalink to &quot;new ServiceBuilder()&quot;">​</a></h3><blockquote><p><strong>new ServiceBuilder</strong>&lt;<code>S</code>&gt;(<code>info</code>): <a href="./ServiceBuilder.html"><code>ServiceBuilder</code></a>&lt;<code>S</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L84" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:84</a></p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="info" tabindex="-1">info <a class="header-anchor" href="#info" aria-label="Permalink to &quot;info&quot;">​</a></h5><p><a href="./../type-aliases/ServiceInfoType.html"><code>ServiceInfoType</code></a></p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./ServiceBuilder.html"><code>ServiceBuilder</code></a>&lt;<code>S</code>&gt;</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="info-1" tabindex="-1">info <a class="header-anchor" href="#info-1" aria-label="Permalink to &quot;info&quot;">​</a></h3><blockquote><p><strong>info</strong>: <a href="./../type-aliases/ServiceInfoType.html"><code>ServiceInfoType</code></a></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L84" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:84</a></p><hr><h3 id="sclass" tabindex="-1">SClass <a class="header-anchor" href="#sclass" aria-label="Permalink to &quot;SClass&quot;">​</a></h3><blockquote><p><strong>SClass</strong>: <a href="./../type-aliases/Newable.html"><code>Newable</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>], <a href="./../type-aliases/ServiceClassTypes.html"><code>ServiceClassTypes</code></a>&lt;<code>S</code>[<code>&quot;ConfigType&quot;</code>], <code>S</code>[<code>&quot;Resources&quot;</code>]&gt;&gt; = <code>Service</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L81" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:81</a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="addcommanddefinition" tabindex="-1">addCommandDefinition() <a class="header-anchor" href="#addcommanddefinition" aria-label="Permalink to &quot;addCommandDefinition()&quot;">​</a></h3><blockquote><p><strong>addCommandDefinition</strong>(...<code>commands</code>): <a href="./ServiceBuilder.html"><code>ServiceBuilder</code></a>&lt;<code>S</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L134" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:134</a></p><p><code>addCommandDefinition</code> adds a list of command definitions to the service builder</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="commands" tabindex="-1">commands <a class="header-anchor" href="#commands" aria-label="Permalink to &quot;commands&quot;">​</a></h5><p>...<a href="./../type-aliases/CommandDefinitionList.html"><code>CommandDefinitionList</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>]&gt;</p><p>CommandDefinitionList</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./ServiceBuilder.html"><code>ServiceBuilder</code></a>&lt;<code>S</code>&gt;</p><p>The service builder</p><hr><h3 id="addsubscriptiondefinition" tabindex="-1">addSubscriptionDefinition() <a class="header-anchor" href="#addsubscriptiondefinition" aria-label="Permalink to &quot;addSubscriptionDefinition()&quot;">​</a></h3><blockquote><p><strong>addSubscriptionDefinition</strong>(...<code>subscription</code>): <a href="./ServiceBuilder.html"><code>ServiceBuilder</code></a>&lt;<code>S</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L150" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:150</a></p><p>It adds a subscription definition to the service builder</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="subscription" tabindex="-1">subscription <a class="header-anchor" href="#subscription" aria-label="Permalink to &quot;subscription&quot;">​</a></h5><p>...<a href="./../type-aliases/SubscriptionDefinitionList.html"><code>SubscriptionDefinitionList</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>]&gt;</p><p>SubscriptionDefinitionList</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./ServiceBuilder.html"><code>ServiceBuilder</code></a>&lt;<code>S</code>&gt;</p><p>The service builder</p><hr><h3 id="defineresource" tabindex="-1">defineResource() <a class="header-anchor" href="#defineresource" aria-label="Permalink to &quot;defineResource()&quot;">​</a></h3><blockquote><p><strong>defineResource</strong>&lt;<code>ResourceName</code>, <code>ResourcesType</code>&gt;(): <a href="./ServiceBuilder.html"><code>ServiceBuilder</code></a>&lt;<a href="./../type-aliases/SetNewTypeValue.html"><code>SetNewTypeValue</code></a>&lt;<code>S</code>, <code>&quot;Resources&quot;</code>, <code>S</code>[<code>&quot;Resources&quot;</code>] &amp; <code>{ [K in string]: InstanceOrType&lt;ResourcesType&gt; }</code>&gt;&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L197" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:197</a></p><p>Define the resources of the service. Resources are available within commands and subscriptions.</p><h4 id="type-parameters-1" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p>• <strong>ResourceName</strong> <em>extends</em> <code>string</code></p><p>• <strong>ResourcesType</strong></p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./ServiceBuilder.html"><code>ServiceBuilder</code></a>&lt;<a href="./../type-aliases/SetNewTypeValue.html"><code>SetNewTypeValue</code></a>&lt;<code>S</code>, <code>&quot;Resources&quot;</code>, <code>S</code>[<code>&quot;Resources&quot;</code>] &amp; <code>{ [K in string]: InstanceOrType&lt;ResourcesType&gt; }</code>&gt;&gt;</p><p>The builder with defined types for resources</p><h4 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">serviceBuilder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineResources</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;resource_name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ResourceType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;()</span></span></code></pre></div><hr><h3 id="getcommandbuilder" tabindex="-1">getCommandBuilder() <a class="header-anchor" href="#getcommandbuilder" aria-label="Permalink to &quot;getCommandBuilder()&quot;">​</a></h3><blockquote><p><strong>getCommandBuilder</strong>&lt;<code>T</code>, <code>N</code>&gt;(<code>commandName</code>, <code>description</code>, <code>eventName</code>?): <a href="./CommandDefinitionBuilder.html"><code>CommandDefinitionBuilder</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>], <a href="./../type-aliases/CommandDefinitionBuilderTypes.html"><code>CommandDefinitionBuilderTypes</code></a>&lt;<code>SchemaObject</code> | <code>Schema</code>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>&quot;&quot;</code>&gt; | <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;, <code>SchemaObject</code> | <code>Schema</code>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>&quot;&quot;</code>&gt; | <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;, <code>SchemaObject</code> | <code>Schema</code>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>&quot;&quot;</code>&gt; | <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;, <code>SchemaObject</code> | <code>Schema</code>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>&quot;&quot;</code>&gt; | <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;, <code>SchemaObject</code> | <code>Schema</code>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>&quot;&quot;</code>&gt; | <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;, <code>SchemaObject</code> | <code>Schema</code>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>&quot;&quot;</code>&gt; | <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;, <code>S</code>[<code>&quot;Resources&quot;</code>], <a href="./../type-aliases/InvokeList.html"><code>InvokeList</code></a>, <code>Record</code>&lt;<code>string</code>, <code>SchemaObject</code> | <code>Schema</code>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>&quot;&quot;</code>&gt; | <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;&gt;&gt;&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L306" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:306</a></p><p>It returns a new instance of the CommandDefinitionBuilder class, which is a class that is used to build a command definition</p><h4 id="type-parameters-2" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-2" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p>• <strong>T</strong> <em>extends</em> <code>string</code></p><p>• <strong>N</strong> <em>extends</em> <code>string</code></p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="commandname" tabindex="-1">commandName <a class="header-anchor" href="#commandname" aria-label="Permalink to &quot;commandName&quot;">​</a></h5><p><a href="./../type-aliases/NonEmptyString.html"><code>NonEmptyString</code></a>&lt;<code>T</code>&gt;</p><p>The name of the command.</p><h5 id="description" tabindex="-1">description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;description&quot;">​</a></h5><p><code>string</code></p><p>The description of the command.</p><h5 id="eventname" tabindex="-1">eventName? <a class="header-anchor" href="#eventname" aria-label="Permalink to &quot;eventName?&quot;">​</a></h5><p><a href="./../type-aliases/NonEmptyString.html"><code>NonEmptyString</code></a>&lt;<code>N</code>&gt;</p><p>The name of the event that will be emitted when the command is executed.</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./CommandDefinitionBuilder.html"><code>CommandDefinitionBuilder</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>], <a href="./../type-aliases/CommandDefinitionBuilderTypes.html"><code>CommandDefinitionBuilderTypes</code></a>&lt;<code>SchemaObject</code> | <code>Schema</code>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>&quot;&quot;</code>&gt; | <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;, <code>SchemaObject</code> | <code>Schema</code>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>&quot;&quot;</code>&gt; | <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;, <code>SchemaObject</code> | <code>Schema</code>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>&quot;&quot;</code>&gt; | <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;, <code>SchemaObject</code> | <code>Schema</code>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>&quot;&quot;</code>&gt; | <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;, <code>SchemaObject</code> | <code>Schema</code>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>&quot;&quot;</code>&gt; | <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;, <code>SchemaObject</code> | <code>Schema</code>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>&quot;&quot;</code>&gt; | <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;, <code>S</code>[<code>&quot;Resources&quot;</code>], <a href="./../type-aliases/InvokeList.html"><code>InvokeList</code></a>, <code>Record</code>&lt;<code>string</code>, <code>SchemaObject</code> | <code>Schema</code>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>&quot;&quot;</code>&gt; | <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;&gt;&gt;&gt;</p><p>A CommandDefinitionBuilder object.</p><hr><h3 id="getcommanddefinitions" tabindex="-1">getCommandDefinitions() <a class="header-anchor" href="#getcommanddefinitions" aria-label="Permalink to &quot;getCommandDefinitions()&quot;">​</a></h3><blockquote><p><strong>getCommandDefinitions</strong>(): <a href="./../type-aliases/CommandDefinitionListResolved.html"><code>CommandDefinitionListResolved</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>]&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L350" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:350</a></p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./../type-aliases/CommandDefinitionListResolved.html"><code>CommandDefinitionListResolved</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>]&gt;</p><p>the definition of registered commands</p><hr><h3 id="getcustomclass" tabindex="-1">getCustomClass() <a class="header-anchor" href="#getcustomclass" aria-label="Permalink to &quot;getCustomClass()&quot;">​</a></h3><blockquote><p><strong>getCustomClass</strong>(): <a href="./../type-aliases/Newable.html"><code>Newable</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>], <a href="./../type-aliases/ServiceClassTypes.html"><code>ServiceClassTypes</code></a>&lt;<code>S</code>[<code>&quot;ConfigType&quot;</code>], <code>S</code>[<code>&quot;Resources&quot;</code>]&gt;&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L216" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:216</a></p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./../type-aliases/Newable.html"><code>Newable</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>], <a href="./../type-aliases/ServiceClassTypes.html"><code>ServiceClassTypes</code></a>&lt;<code>S</code>[<code>&quot;ConfigType&quot;</code>], <code>S</code>[<code>&quot;Resources&quot;</code>]&gt;&gt;</p><hr><h3 id="getfullservicedefintion" tabindex="-1">getFullServiceDefintion() <a class="header-anchor" href="#getfullservicedefintion" aria-label="Permalink to &quot;getFullServiceDefintion()&quot;">​</a></h3><blockquote><p><strong>getFullServiceDefintion</strong>(): <code>Promise</code>&lt;{ <code>commands</code>: <a href="./../type-aliases/CommandDefinitionListResolved.html"><code>CommandDefinitionListResolved</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>]&gt;; <code>deprecated</code>: <code>boolean</code>; <code>serviceDescription</code>: <code>string</code>; <code>serviceName</code>: <code>string</code>; <code>serviceVersion</code>: <code>string</code>; <code>subscriptions</code>: <a href="./../type-aliases/SubscriptionDefinitionListResolved.html"><code>SubscriptionDefinitionListResolved</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>]&gt;; }&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L415" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:415</a></p><p>Returns the service definition. This inclues information about commands and subscriptions.</p><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;{ <code>commands</code>: <a href="./../type-aliases/CommandDefinitionListResolved.html"><code>CommandDefinitionListResolved</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>]&gt;; <code>deprecated</code>: <code>boolean</code>; <code>serviceDescription</code>: <code>string</code>; <code>serviceName</code>: <code>string</code>; <code>serviceVersion</code>: <code>string</code>; <code>subscriptions</code>: <a href="./../type-aliases/SubscriptionDefinitionListResolved.html"><code>SubscriptionDefinitionListResolved</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>]&gt;; }&gt;</p><hr><h3 id="getinstance" tabindex="-1">getInstance() <a class="header-anchor" href="#getinstance" aria-label="Permalink to &quot;getInstance()&quot;">​</a></h3><blockquote><p><strong>getInstance</strong>(<code>eventBridge</code>, <code>options</code>?): <code>Promise</code>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>]&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L227" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:227</a></p><p>It creates a new instance of the service class, passing in the logger, service info, event bridge, command functions, subscription list, and configuration</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="eventbridge" tabindex="-1">eventBridge <a class="header-anchor" href="#eventbridge" aria-label="Permalink to &quot;eventBridge&quot;">​</a></h5><p><a href="./../interfaces/EventBridge.html"><code>EventBridge</code></a></p><p>EventBridge</p><h5 id="options" tabindex="-1">options? <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options?&quot;">​</a></h5><p>{ [K in string | number | symbol]: ({ configStore?: ConfigStore; logger?: Logger; logLevel?: LogLevelName; secretStore?: SecretStore; spanProcessor?: SpanProcessor; stateStore?: StateStore } &amp; (keyof S[&quot;Resources&quot;] extends NeverObject ? { resources?: undefined } : { resources: S[&quot;Resources&quot;] }) &amp; (keyof S[&quot;ConfigInputType&quot;] extends NeverObject ? { serviceConfig?: undefined } : { serviceConfig: S[&quot;ConfigInputType&quot;] }))[K] }</p><p>additional config like logger, stores and opentelemetry span processor</p><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>]&gt;</p><p>The instance of the service class</p><hr><h3 id="getsubscriptionbuilder" tabindex="-1">getSubscriptionBuilder() <a class="header-anchor" href="#getsubscriptionbuilder" aria-label="Permalink to &quot;getSubscriptionBuilder()&quot;">​</a></h3><blockquote><p><strong>getSubscriptionBuilder</strong>&lt;<code>T</code>&gt;(<code>subscriptionName</code>, <code>description</code>): <a href="./SubscriptionDefinitionBuilder.html"><code>SubscriptionDefinitionBuilder</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>], <a href="./../type-aliases/SubscriptionDefinitionBuilderTypes.html"><code>SubscriptionDefinitionBuilderTypes</code></a>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>S</code>[<code>&quot;Resources&quot;</code>]&gt;&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L334" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:334</a></p><p>It returns a new instance of the <code>SubscriptionDefinitionBuilder</code> class, which is a class that is used to build a subscription definition</p><h4 id="type-parameters-3" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-3" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p>• <strong>T</strong> <em>extends</em> <code>string</code></p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="subscriptionname" tabindex="-1">subscriptionName <a class="header-anchor" href="#subscriptionname" aria-label="Permalink to &quot;subscriptionName&quot;">​</a></h5><p><a href="./../type-aliases/NonEmptyString.html"><code>NonEmptyString</code></a>&lt;<code>T</code>&gt;</p><p>The name of the subscription.</p><h5 id="description-1" tabindex="-1">description <a class="header-anchor" href="#description-1" aria-label="Permalink to &quot;description&quot;">​</a></h5><p><code>string</code></p><p>The description of the subscription.</p><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./SubscriptionDefinitionBuilder.html"><code>SubscriptionDefinitionBuilder</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>], <a href="./../type-aliases/SubscriptionDefinitionBuilderTypes.html"><code>SubscriptionDefinitionBuilderTypes</code></a>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>S</code>[<code>&quot;Resources&quot;</code>]&gt;&gt;</p><p>A SubscriptionDefinitionBuilder</p><hr><h3 id="getsubscriptiondefinitions" tabindex="-1">getSubscriptionDefinitions() <a class="header-anchor" href="#getsubscriptiondefinitions" aria-label="Permalink to &quot;getSubscriptionDefinitions()&quot;">​</a></h3><blockquote><p><strong>getSubscriptionDefinitions</strong>(): <a href="./../type-aliases/SubscriptionDefinitionListResolved.html"><code>SubscriptionDefinitionListResolved</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>]&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L363" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:363</a></p><h4 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./../type-aliases/SubscriptionDefinitionListResolved.html"><code>SubscriptionDefinitionListResolved</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>]&gt;</p><p>the definition of registered subscriptions</p><hr><h3 id="markasdeprecated" tabindex="-1">markAsDeprecated() <a class="header-anchor" href="#markasdeprecated" aria-label="Permalink to &quot;markAsDeprecated()&quot;">​</a></h3><blockquote><p><strong>markAsDeprecated</strong>(): <a href="./ServiceBuilder.html"><code>ServiceBuilder</code></a>&lt;<code>S</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L124" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:124</a></p><p>Mark this service as deprecated</p><h4 id="returns-11" tabindex="-1">Returns <a class="header-anchor" href="#returns-11" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./ServiceBuilder.html"><code>ServiceBuilder</code></a>&lt;<code>S</code>&gt;</p><p>The ServiceBuilder instance</p><hr><h3 id="resolvedefinitions" tabindex="-1">resolveDefinitions() <a class="header-anchor" href="#resolvedefinitions" aria-label="Permalink to &quot;resolveDefinitions()&quot;">​</a></h3><blockquote><p><strong>resolveDefinitions</strong>(): <code>Promise</code>&lt;{ <code>commands</code>: <a href="./../type-aliases/CommandDefinitionListResolved.html"><code>CommandDefinitionListResolved</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>]&gt;; <code>subscriptions</code>: <a href="./../type-aliases/SubscriptionDefinitionListResolved.html"><code>SubscriptionDefinitionListResolved</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>]&gt;; }&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L165" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:165</a></p><p>Resolves the command and subscription definitions</p><h4 id="returns-12" tabindex="-1">Returns <a class="header-anchor" href="#returns-12" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;{ <code>commands</code>: <a href="./../type-aliases/CommandDefinitionListResolved.html"><code>CommandDefinitionListResolved</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>]&gt;; <code>subscriptions</code>: <a href="./../type-aliases/SubscriptionDefinitionListResolved.html"><code>SubscriptionDefinitionListResolved</code></a>&lt;<code>S</code>[<code>&quot;ServiceClassType&quot;</code>]&gt;; }&gt;</p><hr><h3 id="setconfigschema" tabindex="-1">setConfigSchema() <a class="header-anchor" href="#setconfigschema" aria-label="Permalink to &quot;setConfigSchema()&quot;">​</a></h3><blockquote><p><strong>setConfigSchema</strong>&lt;<code>T</code>&gt;(<code>schema</code>): <a href="./ServiceBuilder.html"><code>ServiceBuilder</code></a>&lt;<a href="./../type-aliases/SetNewTypeValues.html"><code>SetNewTypeValues</code></a>&lt;<code>S</code>, { <code>ConfigInputType</code>: <code>UnknownIfNever</code>&lt;<code>InputFrom</code>&lt;<code>AdapterResolver</code>, <code>T</code>&gt;&gt; <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; ? <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; &amp; <code>UnknownIfNever</code>&lt;<code>InputFrom</code>&lt;<code>AdapterResolver</code>, <code>T</code>&gt;&gt; : <a href="./../type-aliases/NeverObject.html"><code>NeverObject</code></a>; <code>ConfigType</code>: <code>UnknownIfNever</code>&lt;<code>OutputFrom</code>&lt;<code>AdapterResolver</code>, <code>T</code>&gt;&gt; <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; ? <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; &amp; <code>UnknownIfNever</code>&lt;<code>OutputFrom</code>&lt;<code>AdapterResolver</code>, <code>T</code>&gt;&gt; : <a href="./../type-aliases/NeverObject.html"><code>NeverObject</code></a>; <code>ServiceClassType</code>: <a href="./Service.html"><code>Service</code></a>&lt;<a href="./../type-aliases/ServiceClassTypes.html"><code>ServiceClassTypes</code></a>&lt;<code>UnknownIfNever</code>&lt;<code>OutputFrom</code>&lt;<code>AdapterResolver</code>, <code>T</code>&gt;&gt; <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; ? <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; &amp; <code>UnknownIfNever</code>&lt;<code>OutputFrom</code>&lt;<code>AdapterResolver</code>, <code>T</code>&gt;&gt; : <a href="./../type-aliases/EmptyObject.html"><code>EmptyObject</code></a>, <code>S</code>[<code>&quot;Resources&quot;</code>]&gt;&gt;; }&gt;&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L92" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:92</a></p><p>&quot;This function sets the config schema for the service builder.&quot;</p><h4 id="type-parameters-4" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-4" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p>• <strong>T</strong> <em>extends</em> <code>SchemaObject</code> | <code>Schema</code>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>&quot;&quot;</code>&gt; | <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="schema" tabindex="-1">schema <a class="header-anchor" href="#schema" aria-label="Permalink to &quot;schema&quot;">​</a></h5><p><code>T</code></p><p>The schema that will be used to validate the config.</p><h4 id="returns-13" tabindex="-1">Returns <a class="header-anchor" href="#returns-13" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./ServiceBuilder.html"><code>ServiceBuilder</code></a>&lt;<a href="./../type-aliases/SetNewTypeValues.html"><code>SetNewTypeValues</code></a>&lt;<code>S</code>, { <code>ConfigInputType</code>: <code>UnknownIfNever</code>&lt;<code>InputFrom</code>&lt;<code>AdapterResolver</code>, <code>T</code>&gt;&gt; <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; ? <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; &amp; <code>UnknownIfNever</code>&lt;<code>InputFrom</code>&lt;<code>AdapterResolver</code>, <code>T</code>&gt;&gt; : <a href="./../type-aliases/NeverObject.html"><code>NeverObject</code></a>; <code>ConfigType</code>: <code>UnknownIfNever</code>&lt;<code>OutputFrom</code>&lt;<code>AdapterResolver</code>, <code>T</code>&gt;&gt; <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; ? <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; &amp; <code>UnknownIfNever</code>&lt;<code>OutputFrom</code>&lt;<code>AdapterResolver</code>, <code>T</code>&gt;&gt; : <a href="./../type-aliases/NeverObject.html"><code>NeverObject</code></a>; <code>ServiceClassType</code>: <a href="./Service.html"><code>Service</code></a>&lt;<a href="./../type-aliases/ServiceClassTypes.html"><code>ServiceClassTypes</code></a>&lt;<code>UnknownIfNever</code>&lt;<code>OutputFrom</code>&lt;<code>AdapterResolver</code>, <code>T</code>&gt;&gt; <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; ? <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; &amp; <code>UnknownIfNever</code>&lt;<code>OutputFrom</code>&lt;<code>AdapterResolver</code>, <code>T</code>&gt;&gt; : <a href="./../type-aliases/EmptyObject.html"><code>EmptyObject</code></a>, <code>S</code>[<code>&quot;Resources&quot;</code>]&gt;&gt;; }&gt;&gt;</p><p>ServiceBuilder</p><hr><h3 id="setcustomclass" tabindex="-1">setCustomClass() <a class="header-anchor" href="#setcustomclass" aria-label="Permalink to &quot;setCustomClass()&quot;">​</a></h3><blockquote><p><strong>setCustomClass</strong>&lt;<code>T</code>&gt;(<code>customClass</code>): <a href="./ServiceBuilder.html"><code>ServiceBuilder</code></a>&lt;<a href="./../type-aliases/SetNewTypeValue.html"><code>SetNewTypeValue</code></a>&lt;<code>S</code>, <code>&quot;ServiceClassType&quot;</code>, <code>T</code>&gt;&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L209" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:209</a></p><p>It sets the class type of the service.</p><h4 id="type-parameters-5" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-5" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p>• <strong>T</strong> <em>extends</em> <a href="./Service.html"><code>Service</code></a>&lt;<a href="./../type-aliases/ServiceClassTypes.html"><code>ServiceClassTypes</code></a>&lt;<code>S</code>[<code>&quot;ConfigType&quot;</code>], <code>S</code>[<code>&quot;Resources&quot;</code>]&gt;&gt;</p><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="customclass" tabindex="-1">customClass <a class="header-anchor" href="#customclass" aria-label="Permalink to &quot;customClass&quot;">​</a></h5><p><a href="./../type-aliases/Newable.html"><code>Newable</code></a>&lt;<code>T</code>, <a href="./../type-aliases/ServiceClassTypes.html"><code>ServiceClassTypes</code></a>&lt;<code>S</code>[<code>&quot;ConfigType&quot;</code>], <code>S</code>[<code>&quot;Resources&quot;</code>]&gt;&gt;</p><p>A class which extends the Service class</p><h4 id="returns-14" tabindex="-1">Returns <a class="header-anchor" href="#returns-14" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./ServiceBuilder.html"><code>ServiceBuilder</code></a>&lt;<a href="./../type-aliases/SetNewTypeValue.html"><code>SetNewTypeValue</code></a>&lt;<code>S</code>, <code>&quot;ServiceClassType&quot;</code>, <code>T</code>&gt;&gt;</p><p>The builder itself, but with the type of the service class changed.</p><hr><h3 id="setdefaultconfig" tabindex="-1"><s>setDefaultConfig()</s> <a class="header-anchor" href="#setdefaultconfig" aria-label="Permalink to &quot;~~setDefaultConfig()~~&quot;">​</a></h3><blockquote><p><strong>setDefaultConfig</strong>(<code>config</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L115" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:115</a></p><p>&quot;This function sets the default configuration for the service.&quot;</p><h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="config" tabindex="-1">config <a class="header-anchor" href="#config" aria-label="Permalink to &quot;config&quot;">​</a></h5><p><a href="./../type-aliases/Complete.html"><code>Complete</code></a>&lt;<code>S</code>[<code>&quot;ConfigType&quot;</code>]&gt;</p><p>ConfigType - The default configuration for the service.</p><h4 id="returns-15" tabindex="-1">Returns <a class="header-anchor" href="#returns-15" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>this</code></p><p>The ServiceBuilder instance</p><h4 id="deprecated" tabindex="-1">Deprecated <a class="header-anchor" href="#deprecated" aria-label="Permalink to &quot;Deprecated&quot;">​</a></h4><p>Use a default value in the config validation schema instead</p><hr><h3 id="testservicesetup" tabindex="-1">testServiceSetup() <a class="header-anchor" href="#testservicesetup" aria-label="Permalink to &quot;testServiceSetup()&quot;">​</a></h3><blockquote><p><strong>testServiceSetup</strong>(): <code>Promise</code>&lt;<code>boolean</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L376" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:376</a></p><p>A simple test helper, which ensures, that there ar no duplicate names used.</p><h4 id="returns-16" tabindex="-1">Returns <a class="header-anchor" href="#returns-16" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><hr><h3 id="validatecommanddefinitions" tabindex="-1"><s>validateCommandDefinitions()</s> <a class="header-anchor" href="#validatecommanddefinitions" aria-label="Permalink to &quot;~~validateCommandDefinitions()~~&quot;">​</a></h3><blockquote><p><strong>validateCommandDefinitions</strong>(): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L440" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:440</a></p><h4 id="returns-17" tabindex="-1">Returns <a class="header-anchor" href="#returns-17" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="deprecated-1" tabindex="-1">Deprecated <a class="header-anchor" href="#deprecated-1" aria-label="Permalink to &quot;Deprecated&quot;">​</a></h4><p>Use testServiceSetup() instead</p><hr><h3 id="validatecommands" tabindex="-1">validateCommands() <a class="header-anchor" href="#validatecommands" aria-label="Permalink to &quot;validateCommands()&quot;">​</a></h3><blockquote><p><code>protected</code> <strong>validateCommands</strong>(<code>commandDefinitions</code>): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L385" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:385</a></p><h4 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="commanddefinitions" tabindex="-1">commandDefinitions <a class="header-anchor" href="#commanddefinitions" aria-label="Permalink to &quot;commandDefinitions&quot;">​</a></h5><p><a href="./../type-aliases/CommandDefinitionListResolved.html"><code>CommandDefinitionListResolved</code></a>&lt;<code>any</code>&gt;</p><h4 id="returns-18" tabindex="-1">Returns <a class="header-anchor" href="#returns-18" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="validatesubscriptiondefinitions" tabindex="-1"><s>validateSubscriptionDefinitions()</s> <a class="header-anchor" href="#validatesubscriptiondefinitions" aria-label="Permalink to &quot;~~validateSubscriptionDefinitions()~~&quot;">​</a></h3><blockquote><p><strong>validateSubscriptionDefinitions</strong>(): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L448" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:448</a></p><h4 id="returns-19" tabindex="-1">Returns <a class="header-anchor" href="#returns-19" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="deprecated-2" tabindex="-1">Deprecated <a class="header-anchor" href="#deprecated-2" aria-label="Permalink to &quot;Deprecated&quot;">​</a></h4><p>Use testServiceSetup() instead</p><hr><h3 id="validatesubscriptions" tabindex="-1">validateSubscriptions() <a class="header-anchor" href="#validatesubscriptions" aria-label="Permalink to &quot;validateSubscriptions()&quot;">​</a></h3><blockquote><p><code>protected</code> <strong>validateSubscriptions</strong>(<code>subscriptionDefinitions</code>): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L425" target="_blank" rel="noreferrer">packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts:425</a></p><h4 id="parameters-10" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-10" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="subscriptiondefinitions" tabindex="-1">subscriptionDefinitions <a class="header-anchor" href="#subscriptiondefinitions" aria-label="Permalink to &quot;subscriptionDefinitions&quot;">​</a></h5><p><a href="./../type-aliases/SubscriptionDefinitionListResolved.html"><code>SubscriptionDefinitionListResolved</code></a>&lt;<code>any</code>&gt;</p><h4 id="returns-20" tabindex="-1">Returns <a class="header-anchor" href="#returns-20" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p>',240)]))}const m=o(r,[["render",d]]);export{h as __pageData,m as default};
