import{_ as r,c as a,o,ag as n}from"./chunks/framework.U_AETC1W.js";const m=JSON.parse('{"title":"Type Alias: ServiceEventsInternal","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/core/type-aliases/ServiceEventsInternal.md","filePath":"api/@purista/core/type-aliases/ServiceEventsInternal.md","lastUpdated":1739900666000}'),d={name:"api/@purista/core/type-aliases/ServiceEventsInternal.md"};function c(t,e,i,s,l,h){return o(),a("div",null,e[0]||(e[0]=[n('<p><a href="./../README.html"><strong>@purista/core v1.11.0</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/core</a> / ServiceEventsInternal</p><h1 id="type-alias-serviceeventsinternal" tabindex="-1">Type Alias: ServiceEventsInternal <a class="header-anchor" href="#type-alias-serviceeventsinternal" aria-label="Permalink to &quot;Type Alias: ServiceEventsInternal&quot;">​</a></h1><blockquote><p><strong>ServiceEventsInternal</strong>: <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/ServiceEvents.ts#L54" target="_blank" rel="noreferrer">packages/core/src/core/types/ServiceEvents.ts:54</a></p><p>Events which can be emitted by a service. Internal events are prefixed with <code>service-</code>.</p><p>Response messages, which have an event name assigned, are prefixed with <code>custom-</code> If you like to use your own events, the event name must be prefixed with <code>misc-</code>.</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="service-available" tabindex="-1">service-available <a class="header-anchor" href="#service-available" aria-label="Permalink to &quot;service-available&quot;">​</a></h3><blockquote><p><strong>service-available</strong>: <code>undefined</code></p></blockquote><p>emitted when the service is fully initialized and ready Should be emitted by custom service class. It is not emitted by default</p><h3 id="service-drain" tabindex="-1">service-drain <a class="header-anchor" href="#service-drain" aria-label="Permalink to &quot;service-drain&quot;">​</a></h3><blockquote><p><strong>service-drain</strong>: <code>undefined</code></p></blockquote><p>emitted when the service is going to be stopped</p><h3 id="service-handled-command-error" tabindex="-1">service-handled-command-error <a class="header-anchor" href="#service-handled-command-error" aria-label="Permalink to &quot;service-handled-command-error&quot;">​</a></h3><blockquote><p><strong>service-handled-command-error</strong>: <code>object</code></p></blockquote><p>emitted when a command throws a HandledError</p><h4 id="service-handled-command-error-commandname" tabindex="-1">service-handled-command-error.commandName <a class="header-anchor" href="#service-handled-command-error-commandname" aria-label="Permalink to &quot;service-handled-command-error.commandName&quot;">​</a></h4><blockquote><p><strong>service-handled-command-error.commandName</strong>: <code>string</code></p></blockquote><h4 id="service-handled-command-error-error" tabindex="-1">service-handled-command-error.error <a class="header-anchor" href="#service-handled-command-error-error" aria-label="Permalink to &quot;service-handled-command-error.error&quot;">​</a></h4><blockquote><p><strong>service-handled-command-error.error</strong>: <a href="./../classes/HandledError.html"><code>HandledError</code></a></p></blockquote><h4 id="service-handled-command-error-traceid" tabindex="-1">service-handled-command-error.traceId? <a class="header-anchor" href="#service-handled-command-error-traceid" aria-label="Permalink to &quot;service-handled-command-error.traceId?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>service-handled-command-error.traceId</strong>: <a href="./TraceId.html"><code>TraceId</code></a></p></blockquote><h3 id="service-handled-subscription-error" tabindex="-1">service-handled-subscription-error <a class="header-anchor" href="#service-handled-subscription-error" aria-label="Permalink to &quot;service-handled-subscription-error&quot;">​</a></h3><blockquote><p><strong>service-handled-subscription-error</strong>: <code>object</code></p></blockquote><p>emitted when a subscription throws a HandledError</p><h4 id="service-handled-subscription-error-error" tabindex="-1">service-handled-subscription-error.error <a class="header-anchor" href="#service-handled-subscription-error-error" aria-label="Permalink to &quot;service-handled-subscription-error.error&quot;">​</a></h4><blockquote><p><strong>service-handled-subscription-error.error</strong>: <a href="./../classes/HandledError.html"><code>HandledError</code></a></p></blockquote><h4 id="service-handled-subscription-error-subscriptionname" tabindex="-1">service-handled-subscription-error.subscriptionName <a class="header-anchor" href="#service-handled-subscription-error-subscriptionname" aria-label="Permalink to &quot;service-handled-subscription-error.subscriptionName&quot;">​</a></h4><blockquote><p><strong>service-handled-subscription-error.subscriptionName</strong>: <code>string</code></p></blockquote><h4 id="service-handled-subscription-error-traceid" tabindex="-1">service-handled-subscription-error.traceId? <a class="header-anchor" href="#service-handled-subscription-error-traceid" aria-label="Permalink to &quot;service-handled-subscription-error.traceId?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>service-handled-subscription-error.traceId</strong>: <a href="./TraceId.html"><code>TraceId</code></a></p></blockquote><h3 id="service-not-available" tabindex="-1">service-not-available <a class="header-anchor" href="#service-not-available" aria-label="Permalink to &quot;service-not-available&quot;">​</a></h3><blockquote><p><strong>service-not-available</strong>: <code>undefined</code> | <code>unknown</code></p></blockquote><p>emitted when the service is not available (for example database connection could not be established)</p><h3 id="service-started" tabindex="-1">service-started <a class="header-anchor" href="#service-started" aria-label="Permalink to &quot;service-started&quot;">​</a></h3><blockquote><p><strong>service-started</strong>: <code>undefined</code></p></blockquote><p>emitted when the service is started, but not fully initialized and not ready yet</p><h3 id="service-stopped" tabindex="-1">service-stopped <a class="header-anchor" href="#service-stopped" aria-label="Permalink to &quot;service-stopped&quot;">​</a></h3><blockquote><p><strong>service-stopped</strong>: <code>undefined</code></p></blockquote><p>emitted when the service has been stopped</p><h3 id="service-unhandled-command-error" tabindex="-1">service-unhandled-command-error <a class="header-anchor" href="#service-unhandled-command-error" aria-label="Permalink to &quot;service-unhandled-command-error&quot;">​</a></h3><blockquote><p><strong>service-unhandled-command-error</strong>: <code>object</code></p></blockquote><p>emitted when a command throws an error other than a HandledError</p><h4 id="service-unhandled-command-error-commandname" tabindex="-1">service-unhandled-command-error.commandName <a class="header-anchor" href="#service-unhandled-command-error-commandname" aria-label="Permalink to &quot;service-unhandled-command-error.commandName&quot;">​</a></h4><blockquote><p><strong>service-unhandled-command-error.commandName</strong>: <code>string</code></p></blockquote><h4 id="service-unhandled-command-error-error" tabindex="-1">service-unhandled-command-error.error <a class="header-anchor" href="#service-unhandled-command-error-error" aria-label="Permalink to &quot;service-unhandled-command-error.error&quot;">​</a></h4><blockquote><p><strong>service-unhandled-command-error.error</strong>: <code>unknown</code></p></blockquote><h4 id="service-unhandled-command-error-traceid" tabindex="-1">service-unhandled-command-error.traceId? <a class="header-anchor" href="#service-unhandled-command-error-traceid" aria-label="Permalink to &quot;service-unhandled-command-error.traceId?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>service-unhandled-command-error.traceId</strong>: <a href="./TraceId.html"><code>TraceId</code></a></p></blockquote><h3 id="service-unhandled-subscription-error" tabindex="-1">service-unhandled-subscription-error <a class="header-anchor" href="#service-unhandled-subscription-error" aria-label="Permalink to &quot;service-unhandled-subscription-error&quot;">​</a></h3><blockquote><p><strong>service-unhandled-subscription-error</strong>: <code>object</code></p></blockquote><p>emitted when a subscription throws an error other than a HandledError</p><h4 id="service-unhandled-subscription-error-error" tabindex="-1">service-unhandled-subscription-error.error <a class="header-anchor" href="#service-unhandled-subscription-error-error" aria-label="Permalink to &quot;service-unhandled-subscription-error.error&quot;">​</a></h4><blockquote><p><strong>service-unhandled-subscription-error.error</strong>: <code>unknown</code></p></blockquote><h4 id="service-unhandled-subscription-error-subscriptionname" tabindex="-1">service-unhandled-subscription-error.subscriptionName <a class="header-anchor" href="#service-unhandled-subscription-error-subscriptionname" aria-label="Permalink to &quot;service-unhandled-subscription-error.subscriptionName&quot;">​</a></h4><blockquote><p><strong>service-unhandled-subscription-error.subscriptionName</strong>: <code>string</code></p></blockquote><h4 id="service-unhandled-subscription-error-traceid" tabindex="-1">service-unhandled-subscription-error.traceId? <a class="header-anchor" href="#service-unhandled-subscription-error-traceid" aria-label="Permalink to &quot;service-unhandled-subscription-error.traceId?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>service-unhandled-subscription-error.traceId</strong>: <a href="./TraceId.html"><code>TraceId</code></a></p></blockquote>',60)]))}const p=r(d,[["render",c]]);export{m as __pageData,p as default};
