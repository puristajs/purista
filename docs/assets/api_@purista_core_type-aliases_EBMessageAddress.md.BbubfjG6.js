import{_ as a,c as s,o as t,ag as r}from"./chunks/framework.U_AETC1W.js";const g=JSON.parse('{"title":"Type Alias: EBMessageAddress","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/core/type-aliases/EBMessageAddress.md","filePath":"api/@purista/core/type-aliases/EBMessageAddress.md","lastUpdated":1739900666000}'),o={name:"api/@purista/core/type-aliases/EBMessageAddress.md"};function c(d,e,i,n,l,p){return t(),s("div",null,e[0]||(e[0]=[r('<p><a href="./../README.html"><strong>@purista/core v1.11.0</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/core</a> / EBMessageAddress</p><h1 id="type-alias-ebmessageaddress" tabindex="-1">Type Alias: EBMessageAddress <a class="header-anchor" href="#type-alias-ebmessageaddress" aria-label="Permalink to &quot;Type Alias: EBMessageAddress&quot;">​</a></h1><blockquote><p><strong>EBMessageAddress</strong>: <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/EBMessageAddress.ts#L6" target="_blank" rel="noreferrer">packages/core/src/core/types/EBMessageAddress.ts:6</a></p><p>A event bridge message address describes the sender or receiver of a message.</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="instanceid" tabindex="-1">instanceId? <a class="header-anchor" href="#instanceid" aria-label="Permalink to &quot;instanceId?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>instanceId</strong>: <code>Exclude</code>&lt;<a href="./InstanceId.html"><code>InstanceId</code></a>, <code>&quot;&quot;</code>&gt;</p></blockquote><p>instance id of eventbridge</p><h3 id="servicename" tabindex="-1">serviceName <a class="header-anchor" href="#servicename" aria-label="Permalink to &quot;serviceName&quot;">​</a></h3><blockquote><p><strong>serviceName</strong>: <code>Exclude</code>&lt;<code>string</code>, <code>&quot;&quot;</code>&gt;</p></blockquote><p>the name of the service</p><h3 id="servicetarget" tabindex="-1">serviceTarget <a class="header-anchor" href="#servicetarget" aria-label="Permalink to &quot;serviceTarget&quot;">​</a></h3><blockquote><p><strong>serviceTarget</strong>: <code>Exclude</code>&lt;<code>string</code>, <code>&quot;&quot;</code>&gt;</p></blockquote><p>the name of the command or subscription</p><h3 id="serviceversion" tabindex="-1">serviceVersion <a class="header-anchor" href="#serviceversion" aria-label="Permalink to &quot;serviceVersion&quot;">​</a></h3><blockquote><p><strong>serviceVersion</strong>: <code>Exclude</code>&lt;<code>string</code>, <code>&quot;&quot;</code>&gt;</p></blockquote><p>the version of the service</p>',20)]))}const u=a(o,[["render",c]]);export{g as __pageData,u as default};
