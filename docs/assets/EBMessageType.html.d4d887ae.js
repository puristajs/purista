import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";import{r as d,o as t,c,b as e,e as r,w as s,d as n,a as i}from"./app.3f3b1b0c.js";const h={},p=n("PURISTA API"),f=n(" / EBMessageType"),m=i('<h1 id="enumeration-ebmessagetype" tabindex="-1"><a class="header-anchor" href="#enumeration-ebmessagetype" aria-hidden="true">#</a> Enumeration: EBMessageType</h1><p>Type of event bridge message</p><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="enumeration-members" tabindex="-1"><a class="header-anchor" href="#enumeration-members" aria-hidden="true">#</a> Enumeration Members</h3>',4),u=n("Command"),l=n("CommandErrorResponse"),g=n("CommandSuccessResponse"),y=n("InfoInvokeTimeout"),_=n("InfoServiceDrain"),v=n("InfoServiceFunctionAdded"),b=n("InfoServiceInit"),E=n("InfoServiceNotReady"),I=n("InfoServiceReady"),T=n("InfoServiceShutdown"),x=n("InfoSubscriptionError"),M=i('<h2 id="enumeration-members-1" tabindex="-1"><a class="header-anchor" href="#enumeration-members-1" aria-hidden="true">#</a> Enumeration Members</h2><h3 id="command" tabindex="-1"><a class="header-anchor" href="#command" aria-hidden="true">#</a> Command</h3><p>\u2022 <strong>Command</strong></p><p>Command message type: Message which is sent from a single sender to exactly one single receiver. The sender expects a answer response from receiver within a specific time frame (ttl). If the sender does not receive a answer within this time frame, the command will be rejected with timeout error.</p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4><p>packages/core/src/core/types/EBMessageType.enum.ts:11</p><hr><h3 id="commanderrorresponse" tabindex="-1"><a class="header-anchor" href="#commanderrorresponse" aria-hidden="true">#</a> CommandErrorResponse</h3><p>\u2022 <strong>CommandErrorResponse</strong></p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4><p>packages/core/src/core/types/EBMessageType.enum.ts:15</p><hr><h3 id="commandsuccessresponse" tabindex="-1"><a class="header-anchor" href="#commandsuccessresponse" aria-hidden="true">#</a> CommandSuccessResponse</h3><p>\u2022 <strong>CommandSuccessResponse</strong></p><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4><p>packages/core/src/core/types/EBMessageType.enum.ts:13</p><hr><h3 id="infoinvoketimeout" tabindex="-1"><a class="header-anchor" href="#infoinvoketimeout" aria-hidden="true">#</a> InfoInvokeTimeout</h3><p>\u2022 <strong>InfoInvokeTimeout</strong></p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4><p>packages/core/src/core/types/EBMessageType.enum.ts:29</p><hr><h3 id="infoservicedrain" tabindex="-1"><a class="header-anchor" href="#infoservicedrain" aria-hidden="true">#</a> InfoServiceDrain</h3><p>\u2022 <strong>InfoServiceDrain</strong></p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4><p>packages/core/src/core/types/EBMessageType.enum.ts:27</p><hr><h3 id="infoservicefunctionadded" tabindex="-1"><a class="header-anchor" href="#infoservicefunctionadded" aria-hidden="true">#</a> InfoServiceFunctionAdded</h3><p>\u2022 <strong>InfoServiceFunctionAdded</strong></p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4><p>packages/core/src/core/types/EBMessageType.enum.ts:26</p><hr><h3 id="infoserviceinit" tabindex="-1"><a class="header-anchor" href="#infoserviceinit" aria-hidden="true">#</a> InfoServiceInit</h3><p>\u2022 <strong>InfoServiceInit</strong></p><p>Info message type: Message which is sent from a single sender to unspecified receivers. The sender does not expect any answer to this message and does not process any reply to this message. Info messages are fire &amp; forget broadcasting messages.</p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4><p>packages/core/src/core/types/EBMessageType.enum.ts:23</p><hr><h3 id="infoservicenotready" tabindex="-1"><a class="header-anchor" href="#infoservicenotready" aria-hidden="true">#</a> InfoServiceNotReady</h3><p>\u2022 <strong>InfoServiceNotReady</strong></p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4><p>packages/core/src/core/types/EBMessageType.enum.ts:25</p><hr><h3 id="infoserviceready" tabindex="-1"><a class="header-anchor" href="#infoserviceready" aria-hidden="true">#</a> InfoServiceReady</h3><p>\u2022 <strong>InfoServiceReady</strong></p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4><p>packages/core/src/core/types/EBMessageType.enum.ts:24</p><hr><h3 id="infoserviceshutdown" tabindex="-1"><a class="header-anchor" href="#infoserviceshutdown" aria-hidden="true">#</a> InfoServiceShutdown</h3><p>\u2022 <strong>InfoServiceShutdown</strong></p><h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4><p>packages/core/src/core/types/EBMessageType.enum.ts:28</p><hr><h3 id="infosubscriptionerror" tabindex="-1"><a class="header-anchor" href="#infosubscriptionerror" aria-hidden="true">#</a> InfoSubscriptionError</h3><p>\u2022 <strong>InfoSubscriptionError</strong></p><h4 id="defined-in-10" tabindex="-1"><a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a> Defined in</h4><p>packages/core/src/core/types/EBMessageType.enum.ts:30</p>',57);function B(S,k){const a=d("RouterLink");return t(),c("div",null,[e("p",null,[r(a,{to:"/api/"},{default:s(()=>[p]),_:1}),f]),m,e("ul",null,[e("li",null,[r(a,{to:"/api/enums/EBMessageType.html#command"},{default:s(()=>[u]),_:1})]),e("li",null,[r(a,{to:"/api/enums/EBMessageType.html#commanderrorresponse"},{default:s(()=>[l]),_:1})]),e("li",null,[r(a,{to:"/api/enums/EBMessageType.html#commandsuccessresponse"},{default:s(()=>[g]),_:1})]),e("li",null,[r(a,{to:"/api/enums/EBMessageType.html#infoinvoketimeout"},{default:s(()=>[y]),_:1})]),e("li",null,[r(a,{to:"/api/enums/EBMessageType.html#infoservicedrain"},{default:s(()=>[_]),_:1})]),e("li",null,[r(a,{to:"/api/enums/EBMessageType.html#infoservicefunctionadded"},{default:s(()=>[v]),_:1})]),e("li",null,[r(a,{to:"/api/enums/EBMessageType.html#infoserviceinit"},{default:s(()=>[b]),_:1})]),e("li",null,[r(a,{to:"/api/enums/EBMessageType.html#infoservicenotready"},{default:s(()=>[E]),_:1})]),e("li",null,[r(a,{to:"/api/enums/EBMessageType.html#infoserviceready"},{default:s(()=>[I]),_:1})]),e("li",null,[r(a,{to:"/api/enums/EBMessageType.html#infoserviceshutdown"},{default:s(()=>[T]),_:1})]),e("li",null,[r(a,{to:"/api/enums/EBMessageType.html#infosubscriptionerror"},{default:s(()=>[x]),_:1})])]),M])}var D=o(h,[["render",B],["__file","EBMessageType.html.vue"]]);export{D as default};
