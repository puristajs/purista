import{_ as r,C as p,c as o,o as l,ag as t,j as i,a,G as n}from"./chunks/framework.U_AETC1W.js";const d="/graphic/jaeger_screenshot.png",y=JSON.parse('{"title":"Jaeger","description":"Use Opentelemetry with Jaeger to trace PURISTA based typescript applications","frontmatter":{"title":"Jaeger","description":"Use Opentelemetry with Jaeger to trace PURISTA based typescript applications","order":405000},"headers":[],"relativePath":"handbook/4_open_telemetry/jaeger.md","filePath":"handbook/4_open_telemetry/jaeger.md","lastUpdated":1710090869000}'),h={name:"handbook/4_open_telemetry/jaeger.md"};function g(c,e,k,_,u,m){const s=p("ExternalLink");return l(),o("div",null,[e[4]||(e[4]=t('<h1 id="jaeger" tabindex="-1">Jaeger <a class="header-anchor" href="#jaeger" aria-label="Permalink to &quot;Jaeger&quot;">â€‹</a></h1><p><img src="'+d+'" alt="Jaeger"><strong>Official website: <a href="https://www.jaegertracing.io" target="_blank" rel="noreferrer">Jaeger</a></strong></p><p>See it in action and try out! You will need docker and docker-compose installed at your machine. At the <a href="https://github.com/puristajs/purista" target="_blank" rel="noreferrer">PURISTA repository</a> in <code>examples/fullexample</code> you will find a running example:</p><p>Start the required docker containers:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jaeger:up</span></span></code></pre></div>',5)),i("p",null,[e[0]||(e[0]=a("Open the Jaeger in your browser: ")),n(s,{href:"http://localhost:16686"}),e[1]||(e[1]=a("."))]),e[5]||(e[5]=t('<p>Start the example:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jaeger:start</span></span></code></pre></div>',2)),i("p",null,[e[2]||(e[2]=a("To generate some traces, go to the OpenAPI UI at ")),n(s,{href:"http://localhost:8080"}),e[3]||(e[3]=a(" and call some commands. To stop and cleanup and stop all docker containers:"))]),e[6]||(e[6]=t('<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jaeger:down</span></span></code></pre></div>',1))])}const F=r(h,[["render",g]]);export{y as __pageData,F as default};
