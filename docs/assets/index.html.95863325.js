import{c as e}from"./app.78facd3f.js";import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";const i={},s=e('<h1 id="purista" tabindex="-1"><a class="header-anchor" href="#purista" aria-hidden="true">#</a> PURISTA</h1><p>A backend framework for building message based domain services.</p><p>This framework adapts and combines a wide range of different patters from domain driven design, cqrs, microservice, eventsourcing and lambda functions.</p><p>It is build from ground up in typescript and highly focuses on schema, and auto generation of types, input-output-validation, openApi documentation (swagger).</p><h2 id="why-to-use-purista" tabindex="-1"><a class="header-anchor" href="#why-to-use-purista" aria-hidden="true">#</a> Why to use PURISTA</h2><p>PURISTA tries to avoid the need for implementing boilerplate code as much as possible and to automate and autogenerate types, definitions, documentation when ever possible.</p><p>Schema and input-output-validation are deeply integrated and they should be used whenever possible to build robust, stable systems.</p><p>PURISTA addresses developers which want to simply focus on implementation, while providing them the necessary things to use the great node/typescript tooling.</p><h3 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h3><ul><li>typescript based and with typescript in mind</li><li>mostly async-await (no call-back hell)</li><li>easy versioning of services &amp; api</li><li>modular &amp; extendable</li><li>runs and scales from small single instance up to cloud clusters</li><li>flexible to trace, audit and monitor</li><li>easy to test with ready to go mocks &amp; stubs</li><li>clean error handling</li><li>low learning curve</li></ul><h2 id="does-purista-fit-for-every-use-case" tabindex="-1"><a class="header-anchor" href="#does-purista-fit-for-every-use-case" aria-hidden="true">#</a> Does PURISTA fit for every use case?</h2><p>Simply answer is <strong>NO</strong>.</p><p>If your project is mainly focused on something like processing streams (e.g. video/audio) this framework does not fit for you.<br> PURISTA is message based and there are also some low performance impacts based on the strict validations, the high useage of async-await and so on.</p>',13);function t(o,r){return s}var l=a(i,[["render",t],["__file","index.html.vue"]]);export{l as default};
