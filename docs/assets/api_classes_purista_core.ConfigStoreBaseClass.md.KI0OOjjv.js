import{_ as a,c as o,o as r,V as e,m as t}from"./chunks/framework.ITQiifkM.js";const x=JSON.parse('{"title":"Class: ConfigStoreBaseClass<ConfigStoreConfigType>","description":"","frontmatter":{},"headers":[],"relativePath":"api/classes/purista_core.ConfigStoreBaseClass.md","filePath":"api/classes/purista_core.ConfigStoreBaseClass.md","lastUpdated":1708505616000}'),i={name:"api/classes/purista_core.ConfigStoreBaseClass.md"},s=e('<p><a href="./../README.html">PURISTA API</a> / <a href="./../modules.html">Modules</a> / <a href="./../modules/purista_core.html">@purista/core</a> / ConfigStoreBaseClass</p><h1 id="class-configstorebaseclass-configstoreconfigtype" tabindex="-1">Class: ConfigStoreBaseClass&lt;ConfigStoreConfigType&gt; <a class="header-anchor" href="#class-configstorebaseclass-configstoreconfigtype" aria-label="Permalink to &quot;Class: ConfigStoreBaseClass\\&lt;ConfigStoreConfigType\\&gt;&quot;">​</a></h1><p><a href="./../modules/purista_core.html">@purista/core</a>.ConfigStoreBaseClass</p><p>Base class for config store adapters. The actual store implementation must overwrite the protected methods:</p><ul><li><code>getConfigImpl</code></li><li><code>setConfigImpl</code></li><li><code>removeConfigImpl</code></li></ul><p><strong>DO NOT OVERWRITE</strong>: the regular methods getConfig, setConfig or removeConfig</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigStoreConfigType</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; = {}</td></tr></tbody></table><h2 id="hierarchy" tabindex="-1">Hierarchy <a class="header-anchor" href="#hierarchy" aria-label="Permalink to &quot;Hierarchy&quot;">​</a></h2><ul><li><p><strong><code>ConfigStoreBaseClass</code></strong></p><p>↳ <a href="./purista_core.DefaultConfigStore.html"><code>DefaultConfigStore</code></a></p></li></ul><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h3><ul><li><a href="./purista_core.ConfigStoreBaseClass.html#constructor">constructor</a></li></ul><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h3><ul><li><a href="./purista_core.ConfigStoreBaseClass.html#cache">cache</a></li><li><a href="./purista_core.ConfigStoreBaseClass.html#config">config</a></li><li><a href="./purista_core.ConfigStoreBaseClass.html#logger">logger</a></li><li><a href="./purista_core.ConfigStoreBaseClass.html#name">name</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><ul><li><a href="./purista_core.ConfigStoreBaseClass.html#destroy">destroy</a></li><li><a href="./purista_core.ConfigStoreBaseClass.html#getconfig">getConfig</a></li><li><a href="./purista_core.ConfigStoreBaseClass.html#getconfigimpl">getConfigImpl</a></li><li><a href="./purista_core.ConfigStoreBaseClass.html#removeconfig">removeConfig</a></li><li><a href="./purista_core.ConfigStoreBaseClass.html#removeconfigimpl">removeConfigImpl</a></li><li><a href="./purista_core.ConfigStoreBaseClass.html#setconfig">setConfig</a></li><li><a href="./purista_core.ConfigStoreBaseClass.html#setconfigimpl">setConfigImpl</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h3><p>• <strong>new ConfigStoreBaseClass</strong>&lt;<code>ConfigStoreConfigType</code>&gt;(<code>name</code>, <code>config</code>): <a href="./purista_core.ConfigStoreBaseClass.html"><code>ConfigStoreBaseClass</code></a>&lt;<code>ConfigStoreConfigType</code>&gt;</p><h4 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigStoreConfigType</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; = {}</td></tr></tbody></table><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>config</code></td><td style="text-align:left;">{ [K in string | number | symbol]: (Object &amp; ConfigStoreConfigType)[K] }</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./purista_core.ConfigStoreBaseClass.html"><code>ConfigStoreBaseClass</code></a>&lt;<code>ConfigStoreConfigType</code>&gt;</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L28" target="_blank" rel="noreferrer">core/ConfigStore/ConfigStoreBaseClass.impl.ts:28</a></p><h2 id="properties-1" tabindex="-1">Properties <a class="header-anchor" href="#properties-1" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="cache" tabindex="-1">cache <a class="header-anchor" href="#cache" aria-label="Permalink to &quot;cache&quot;">​</a></h3><p>• <strong>cache</strong>: <a href="./../modules/purista_core.html#configstorecachemap"><code>ConfigStoreCacheMap</code></a></p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L26" target="_blank" rel="noreferrer">core/ConfigStore/ConfigStoreBaseClass.impl.ts:26</a></p><hr><h3 id="config" tabindex="-1">config <a class="header-anchor" href="#config" aria-label="Permalink to &quot;config&quot;">​</a></h3><p>• <strong>config</strong>: { [K in string | number | symbol]: (Object &amp; ConfigStoreConfigType)[K] }</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L22" target="_blank" rel="noreferrer">core/ConfigStore/ConfigStoreBaseClass.impl.ts:22</a></p><hr><h3 id="logger" tabindex="-1">logger <a class="header-anchor" href="#logger" aria-label="Permalink to &quot;logger&quot;">​</a></h3><p>• <strong>logger</strong>: <a href="./purista_core.Logger.html"><code>Logger</code></a></p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L21" target="_blank" rel="noreferrer">core/ConfigStore/ConfigStoreBaseClass.impl.ts:21</a></p><hr><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h3><p>• <strong>name</strong>: <code>string</code></p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L24" target="_blank" rel="noreferrer">core/ConfigStore/ConfigStoreBaseClass.impl.ts:24</a></p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="destroy" tabindex="-1">destroy <a class="header-anchor" href="#destroy" aria-label="Permalink to &quot;destroy&quot;">​</a></h3><p>▸ <strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L126" target="_blank" rel="noreferrer">core/ConfigStore/ConfigStoreBaseClass.impl.ts:126</a></p><hr><h3 id="getconfig" tabindex="-1">getConfig <a class="header-anchor" href="#getconfig" aria-label="Permalink to &quot;getConfig&quot;">​</a></h3><p>▸ <strong>getConfig</strong>&lt;<code>ConfigNames</code>&gt;(<code>...configNames</code>): <code>Promise</code>&lt;<a href="./../modules/purista_core.html#objectwithkeysfromstringarray"><code>ObjectWithKeysFromStringArray</code></a>&lt;<code>ConfigNames</code>&gt;&gt;</p><p>Returns the values for given config properties. This function <strong>SHOULD NOT</strong> be overwritten by store implementation. For implementation overwrite protected <code>getConfigImpl</code></p><h4 id="type-parameters-2" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-2" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigNames</code></td><td style="text-align:left;">extends <code>string</code>[]</td></tr></tbody></table><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...configNames</code></td><td style="text-align:left;"><code>ConfigNames</code></td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<a href="./../modules/purista_core.html#objectwithkeysfromstringarray"><code>ObjectWithKeysFromStringArray</code></a>&lt;<code>ConfigNames</code>&gt;&gt;</p>',65),n=t("p",{"[configName]:":"",value:"","|":"",undefined:""},"an object of",-1),l=e('<h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L62" target="_blank" rel="noreferrer">core/ConfigStore/ConfigStoreBaseClass.impl.ts:62</a></p><hr><h3 id="getconfigimpl" tabindex="-1">getConfigImpl <a class="header-anchor" href="#getconfigimpl" aria-label="Permalink to &quot;getConfigImpl&quot;">​</a></h3><p>▸ <strong>getConfigImpl</strong>&lt;<code>ConfigNames</code>&gt;(<code>...configNames</code>): <code>Promise</code>&lt;<a href="./../modules/purista_core.html#objectwithkeysfromstringarray"><code>ObjectWithKeysFromStringArray</code></a>&lt;<code>ConfigNames</code>&gt;&gt;</p><p>This method must be overwritten by actual store implementation.</p><h4 id="type-parameters-3" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-3" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigNames</code></td><td style="text-align:left;">extends <code>string</code>[]</td></tr></tbody></table><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...configNames</code></td><td style="text-align:left;"><code>ConfigNames</code></td><td style="text-align:left;">list of config items</td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<a href="./../modules/purista_core.html#objectwithkeysfromstringarray"><code>ObjectWithKeysFromStringArray</code></a>&lt;<code>ConfigNames</code>&gt;&gt;</p>',12),d=t("p",{"[configName]:":"",value:"","|":"",undefined:""},"an object of",-1),c=e('<h4 id="defined-in-7" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-7" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L49" target="_blank" rel="noreferrer">core/ConfigStore/ConfigStoreBaseClass.impl.ts:49</a></p><hr><h3 id="removeconfig" tabindex="-1">removeConfig <a class="header-anchor" href="#removeconfig" aria-label="Permalink to &quot;removeConfig&quot;">​</a></h3><p>▸ <strong>removeConfig</strong>(<code>configName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Removes the config item given by config name. This function <strong>SHOULD NOT</strong> be overwritten by store implementation. For implementation overwrite protected <code>removeConfigImpl</code></p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>configName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-8" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-8" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L89" target="_blank" rel="noreferrer">core/ConfigStore/ConfigStoreBaseClass.impl.ts:89</a></p><hr><h3 id="removeconfigimpl" tabindex="-1">removeConfigImpl <a class="header-anchor" href="#removeconfigimpl" aria-label="Permalink to &quot;removeConfigImpl&quot;">​</a></h3><p>▸ <strong>removeConfigImpl</strong>(<code>configName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>This method must be overwritten by actual store implementation.</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>configName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-9" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-9" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L79" target="_blank" rel="noreferrer">core/ConfigStore/ConfigStoreBaseClass.impl.ts:79</a></p><hr><h3 id="setconfig" tabindex="-1">setConfig <a class="header-anchor" href="#setconfig" aria-label="Permalink to &quot;setConfig&quot;">​</a></h3><p>▸ <strong>setConfig</strong>(<code>configName</code>, <code>configValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Sets a config value This function <strong>SHOULD NOT</strong> be overwritten by store implementation. For implementation overwrite protected <code>setConfigImpl</code></p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>configName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>configValue</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-10" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-10" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L116" target="_blank" rel="noreferrer">core/ConfigStore/ConfigStoreBaseClass.impl.ts:116</a></p><hr><h3 id="setconfigimpl" tabindex="-1">setConfigImpl <a class="header-anchor" href="#setconfigimpl" aria-label="Permalink to &quot;setConfigImpl&quot;">​</a></h3><p>▸ <strong>setConfigImpl</strong>(<code>_configName</code>, <code>_configValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>This method must be overwritten by actual store implementation.</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>_configName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>_configValue</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-11" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-11" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L105" target="_blank" rel="noreferrer">core/ConfigStore/ConfigStoreBaseClass.impl.ts:105</a></p>',42),h=[s,n,l,d,c];function f(g,m,p,u,b,C){return r(),o("div",null,h)}const S=a(i,[["render",f]]);export{x as __pageData,S as default};
