import{_ as e,c as o,o as d,V as t}from"./chunks/framework.ITQiifkM.js";const f=JSON.parse('{"title":"Module: @purista/hono-http-server","description":"","frontmatter":{},"headers":[],"relativePath":"api/modules/purista_hono_http_server.md","filePath":"api/modules/purista_hono_http_server.md","lastUpdated":1708505616000}'),c={name:"api/modules/purista_hono_http_server.md"},a=t(`<p><a href="./../README.html">PURISTA API</a> / <a href="./../modules.html">Modules</a> / @purista/hono-http-server</p><h1 id="module-purista-hono-http-server" tabindex="-1">Module: @purista/hono-http-server <a class="header-anchor" href="#module-purista-hono-http-server" aria-label="Permalink to &quot;Module: @purista/hono-http-server&quot;">​</a></h1><p>Package for using a Hono as webserver.</p><p>Minimal example:</p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { serve } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@hono/node-server&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { DefaultEventBridge } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@purista/core&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { honoV1Service } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@purista/hono-http-server&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// create and init our eventbridge</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> eventBridge</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DefaultEventBridge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> eventBridge.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// add your service</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pingService</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pingV1Service.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(eventBridge)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pingService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> honoService</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> honoV1Service.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(eventBridge, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  serviceConfig: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    services: [pingService]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> honoService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> _serverInstance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> serve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  fetch: honoService.app.fetch,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  port: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="enumerations" tabindex="-1">Enumerations <a class="header-anchor" href="#enumerations" aria-label="Permalink to &quot;Enumerations&quot;">​</a></h3><ul><li><a href="./../enums/purista_hono_http_server.ServiceEvent.html">ServiceEvent</a></li></ul><h3 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h3><ul><li><a href="./purista_hono_http_server.html#bindingsbase">BindingsBase</a></li><li><a href="./purista_hono_http_server.html#endpointprotectmiddleware">EndpointProtectMiddleware</a></li><li><a href="./purista_hono_http_server.html#healthfunction">HealthFunction</a></li><li><a href="./purista_hono_http_server.html#honoservicev1config">HonoServiceV1Config</a></li><li><a href="./purista_hono_http_server.html#variablesbase">VariablesBase</a></li></ul><h3 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-label="Permalink to &quot;Variables&quot;">​</a></h3><ul><li><a href="./purista_hono_http_server.html#default_api_mount_path">DEFAULT_API_MOUNT_PATH</a></li><li><a href="./purista_hono_http_server.html#externaldocumentationobjectschema">ExternalDocumentationObjectSchema</a></li><li><a href="./purista_hono_http_server.html#infoobjectschema">InfoObjectSchema</a></li><li><a href="./purista_hono_http_server.html#openapi_default_info">OPENAPI_DEFAULT_INFO</a></li><li><a href="./purista_hono_http_server.html#serverobjectschema">ServerObjectSchema</a></li><li><a href="./purista_hono_http_server.html#tagobjectschema">TagObjectSchema</a></li><li><a href="./purista_hono_http_server.html#honoservicev1configschema">honoServiceV1ConfigSchema</a></li><li><a href="./purista_hono_http_server.html#honov1service">honoV1Service</a></li><li><a href="./purista_hono_http_server.html#puristaversion">puristaVersion</a></li></ul><h3 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h3><ul><li><a href="./purista_hono_http_server.html#addpathtoopenapi">addPathToOpenApi</a></li><li><a href="./purista_hono_http_server.html#geterrorname">getErrorName</a></li><li><a href="./purista_hono_http_server.html#geterrorresponseschema">getErrorResponseSchema</a></li><li><a href="./purista_hono_http_server.html#getparameterdefinition">getParameterDefinition</a></li><li><a href="./purista_hono_http_server.html#getquerydefintion">getQueryDefintion</a></li></ul><h2 id="type-aliases-1" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases-1" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><h3 id="bindingsbase" tabindex="-1">BindingsBase <a class="header-anchor" href="#bindingsbase" aria-label="Permalink to &quot;BindingsBase&quot;">​</a></h3><p>Ƭ <strong>BindingsBase</strong>: <code>Object</code></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/hono-http-server/src/types/BindingsBase.ts#L1" target="_blank" rel="noreferrer">packages/hono-http-server/src/types/BindingsBase.ts:1</a></p><hr><h3 id="endpointprotectmiddleware" tabindex="-1">EndpointProtectMiddleware <a class="header-anchor" href="#endpointprotectmiddleware" aria-label="Permalink to &quot;EndpointProtectMiddleware&quot;">​</a></h3><p>Ƭ <strong>EndpointProtectMiddleware</strong>&lt;<code>T</code>, <code>Bindings</code>, <code>Variables</code>&gt;: (<code>this</code>: <code>T</code>, <code>c</code>: <code>Context</code>&lt;{ <code>Bindings</code>: <code>Bindings</code> ; <code>Variables</code>: <code>Variables</code> }&gt;, <code>next</code>: <code>Next</code>) =&gt; <code>Promise</code>&lt;<code>void</code> | <code>Response</code>&gt;</p><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <a href="./../classes/purista_core.Service.html"><code>Service</code></a></td></tr><tr><td style="text-align:left;"><code>Bindings</code></td><td style="text-align:left;">extends <a href="./purista_hono_http_server.html#bindingsbase"><code>BindingsBase</code></a> = <a href="./purista_hono_http_server.html#bindingsbase"><code>BindingsBase</code></a></td></tr><tr><td style="text-align:left;"><code>Variables</code></td><td style="text-align:left;">extends <a href="./purista_hono_http_server.html#variablesbase"><code>VariablesBase</code></a> = <a href="./purista_hono_http_server.html#variablesbase"><code>VariablesBase</code></a></td></tr></tbody></table><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (<code>this</code>, <code>c</code>, <code>next</code>): <code>Promise</code>&lt;<code>void</code> | <code>Response</code>&gt;</p><h5 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>this</code></td><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>c</code></td><td style="text-align:left;"><code>Context</code>&lt;{ <code>Bindings</code>: <code>Bindings</code> ; <code>Variables</code>: <code>Variables</code> }&gt;</td></tr><tr><td style="text-align:left;"><code>next</code></td><td style="text-align:left;"><code>Next</code></td></tr></tbody></table><h5 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>Promise</code>&lt;<code>void</code> | <code>Response</code>&gt;</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/hono-http-server/src/types/EndpointProtectMiddleware.ts#L7" target="_blank" rel="noreferrer">packages/hono-http-server/src/types/EndpointProtectMiddleware.ts:7</a></p><hr><h3 id="healthfunction" tabindex="-1">HealthFunction <a class="header-anchor" href="#healthfunction" aria-label="Permalink to &quot;HealthFunction&quot;">​</a></h3><p>Ƭ <strong>HealthFunction</strong>&lt;<code>T</code>&gt;: (<code>this</code>: <code>T</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <a href="./../classes/purista_core.Service.html"><code>Service</code></a></td></tr></tbody></table><h4 id="type-declaration-1" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-1" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (<code>this</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h5 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>this</code></td><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h5 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/hono-http-server/src/types/HealthFunction.ts#L3" target="_blank" rel="noreferrer">packages/hono-http-server/src/types/HealthFunction.ts:3</a></p><hr><h3 id="honoservicev1config" tabindex="-1">HonoServiceV1Config <a class="header-anchor" href="#honoservicev1config" aria-label="Permalink to &quot;HonoServiceV1Config&quot;">​</a></h3><p>Ƭ <strong>HonoServiceV1Config</strong>: <code>z.output</code>&lt;typeof <a href="./purista_hono_http_server.html#honoservicev1configschema"><code>honoServiceV1ConfigSchema</code></a>&gt;</p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/hono-http-server/src/service/hono/v1/honoServiceConfig.ts#L75" target="_blank" rel="noreferrer">packages/hono-http-server/src/service/hono/v1/honoServiceConfig.ts:75</a></p><hr><h3 id="variablesbase" tabindex="-1">VariablesBase <a class="header-anchor" href="#variablesbase" aria-label="Permalink to &quot;VariablesBase&quot;">​</a></h3><p>Ƭ <strong>VariablesBase</strong>: <code>Object</code></p><h4 id="type-declaration-2" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-2" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>additionalParameter?</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</td><td style="text-align:left;">Additional parameter passed to the commands</td></tr><tr><td style="text-align:left;"><code>instanceId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The instance ID</td></tr><tr><td style="text-align:left;"><code>principalId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The principal ID</td></tr><tr><td style="text-align:left;"><code>tenantId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The tenant ID</td></tr><tr><td style="text-align:left;"><code>traceId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The custom trace ID</td></tr></tbody></table><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/hono-http-server/src/types/VariablesBase.ts#L1" target="_blank" rel="noreferrer">packages/hono-http-server/src/types/VariablesBase.ts:1</a></p><h2 id="variables-1" tabindex="-1">Variables <a class="header-anchor" href="#variables-1" aria-label="Permalink to &quot;Variables&quot;">​</a></h2><h3 id="default-api-mount-path" tabindex="-1">DEFAULT_API_MOUNT_PATH <a class="header-anchor" href="#default-api-mount-path" aria-label="Permalink to &quot;DEFAULT\\_API\\_MOUNT\\_PATH&quot;">​</a></h3><p>• <code>Const</code> <strong>DEFAULT_API_MOUNT_PATH</strong>: <code>&quot;/api&quot;</code></p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/hono-http-server/src/service/hono/v1/honoServiceConfig.ts#L6" target="_blank" rel="noreferrer">packages/hono-http-server/src/service/hono/v1/honoServiceConfig.ts:6</a></p><hr><h3 id="externaldocumentationobjectschema" tabindex="-1">ExternalDocumentationObjectSchema <a class="header-anchor" href="#externaldocumentationobjectschema" aria-label="Permalink to &quot;ExternalDocumentationObjectSchema&quot;">​</a></h3><p>• <code>Const</code> <strong>ExternalDocumentationObjectSchema</strong>: <code>ZodObject</code>&lt;{ <code>description</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt; ; <code>url</code>: <code>ZodString</code> }, <code>&quot;strip&quot;</code>, <code>ZodTypeAny</code>, { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> }, { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> }&gt;</p><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/hono-http-server/src/service/hono/v1/honoServiceConfig.ts#L14" target="_blank" rel="noreferrer">packages/hono-http-server/src/service/hono/v1/honoServiceConfig.ts:14</a></p><hr><h3 id="infoobjectschema" tabindex="-1">InfoObjectSchema <a class="header-anchor" href="#infoobjectschema" aria-label="Permalink to &quot;InfoObjectSchema&quot;">​</a></h3><p>• <code>Const</code> <strong>InfoObjectSchema</strong>: <code>ZodObject</code>&lt;{ <code>contact</code>: <code>ZodOptional</code>&lt;<code>ZodObject</code>&lt;{ <code>email</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt; ; <code>name</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt; ; <code>url</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt; }, <code>&quot;strip&quot;</code>, <code>ZodTypeAny</code>, { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> }, { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> }&gt;&gt; ; <code>description</code>: <code>ZodDefault</code>&lt;<code>ZodString</code>&gt; ; <code>license</code>: <code>ZodOptional</code>&lt;<code>ZodObject</code>&lt;{ <code>name</code>: <code>ZodString</code> ; <code>url</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt; }, <code>&quot;strip&quot;</code>, <code>ZodTypeAny</code>, { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> }, { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> }&gt;&gt; ; <code>termsOfService</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt; ; <code>title</code>: <code>ZodDefault</code>&lt;<code>ZodString</code>&gt; ; <code>version</code>: <code>ZodDefault</code>&lt;<code>ZodString</code>&gt; }, <code>&quot;strip&quot;</code>, <code>ZodTypeAny</code>, { <code>contact?</code>: { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>description</code>: <code>string</code> ; <code>license?</code>: { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>termsOfService?</code>: <code>string</code> ; <code>title</code>: <code>string</code> ; <code>version</code>: <code>string</code> }, { <code>contact?</code>: { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>description?</code>: <code>string</code> ; <code>license?</code>: { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>termsOfService?</code>: <code>string</code> ; <code>title?</code>: <code>string</code> ; <code>version?</code>: <code>string</code> }&gt;</p><h4 id="defined-in-7" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-7" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/hono-http-server/src/service/hono/v1/honoServiceConfig.ts#L25" target="_blank" rel="noreferrer">packages/hono-http-server/src/service/hono/v1/honoServiceConfig.ts:25</a></p><hr><h3 id="openapi-default-info" tabindex="-1">OPENAPI_DEFAULT_INFO <a class="header-anchor" href="#openapi-default-info" aria-label="Permalink to &quot;OPENAPI\\_DEFAULT\\_INFO&quot;">​</a></h3><p>• <code>Const</code> <strong>OPENAPI_DEFAULT_INFO</strong>: <code>Object</code></p><h4 id="type-declaration-3" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-3" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>description</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>title</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>version</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="defined-in-8" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-8" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/hono-http-server/src/service/hono/v1/honoServiceConfig.ts#L8" target="_blank" rel="noreferrer">packages/hono-http-server/src/service/hono/v1/honoServiceConfig.ts:8</a></p><hr><h3 id="serverobjectschema" tabindex="-1">ServerObjectSchema <a class="header-anchor" href="#serverobjectschema" aria-label="Permalink to &quot;ServerObjectSchema&quot;">​</a></h3><p>• <code>Const</code> <strong>ServerObjectSchema</strong>: <code>ZodObject</code>&lt;{ <code>description</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt; ; <code>url</code>: <code>ZodString</code> ; <code>variables</code>: <code>ZodOptional</code>&lt;<code>ZodAny</code>&gt; }, <code>&quot;strip&quot;</code>, <code>ZodTypeAny</code>, { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> ; <code>variables?</code>: <code>any</code> }, { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> ; <code>variables?</code>: <code>any</code> }&gt;</p><h4 id="defined-in-9" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-9" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/hono-http-server/src/service/hono/v1/honoServiceConfig.ts#L45" target="_blank" rel="noreferrer">packages/hono-http-server/src/service/hono/v1/honoServiceConfig.ts:45</a></p><hr><h3 id="tagobjectschema" tabindex="-1">TagObjectSchema <a class="header-anchor" href="#tagobjectschema" aria-label="Permalink to &quot;TagObjectSchema&quot;">​</a></h3><p>• <code>Const</code> <strong>TagObjectSchema</strong>: <code>ZodObject</code>&lt;{ <code>description</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt; ; <code>externalDocs</code>: <code>ZodOptional</code>&lt;<code>ZodObject</code>&lt;{ <code>description</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt; ; <code>url</code>: <code>ZodString</code> }, <code>&quot;strip&quot;</code>, <code>ZodTypeAny</code>, { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> }, { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> }&gt;&gt; ; <code>name</code>: <code>ZodString</code> }, <code>&quot;strip&quot;</code>, <code>ZodTypeAny</code>, { <code>description?</code>: <code>string</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>name</code>: <code>string</code> }, { <code>description?</code>: <code>string</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>name</code>: <code>string</code> }&gt;</p><h4 id="defined-in-10" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-10" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/hono-http-server/src/service/hono/v1/honoServiceConfig.ts#L19" target="_blank" rel="noreferrer">packages/hono-http-server/src/service/hono/v1/honoServiceConfig.ts:19</a></p><hr><h3 id="honoservicev1configschema" tabindex="-1">honoServiceV1ConfigSchema <a class="header-anchor" href="#honoservicev1configschema" aria-label="Permalink to &quot;honoServiceV1ConfigSchema&quot;">​</a></h3><p>• <code>Const</code> <strong>honoServiceV1ConfigSchema</strong>: <code>ZodObject</code>&lt;{ <code>apiMountPath</code>: <code>ZodDefault</code>&lt;<code>ZodOptional</code>&lt;<code>ZodString</code>&gt;&gt; ; <code>enableDynamicRoutes</code>: <code>ZodDefault</code>&lt;<code>ZodBoolean</code>&gt; ; <code>enableHealth</code>: <code>ZodDefault</code>&lt;<code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;&gt; ; <code>healthFunction</code>: <code>ZodDefault</code>&lt;<code>ZodAny</code>&gt; ; <code>healthPath</code>: <code>ZodDefault</code>&lt;<code>ZodOptional</code>&lt;<code>ZodString</code>&gt;&gt; ; <code>logLevel</code>: <code>ZodOptional</code>&lt;<code>ZodEnum</code>&lt;[<code>&quot;info&quot;</code>, <code>&quot;error&quot;</code>, <code>&quot;warn&quot;</code>, <code>&quot;debug&quot;</code>, <code>&quot;trace&quot;</code>, <code>&quot;fatal&quot;</code>]&gt;&gt; ; <code>openApi</code>: <code>ZodOptional</code>&lt;<code>ZodObject</code>&lt;{ <code>components</code>: <code>ZodOptional</code>&lt;<code>ZodAny</code>&gt; ; <code>enabled</code>: <code>ZodDefault</code>&lt;<code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;&gt; ; <code>externalDocs</code>: <code>ZodOptional</code>&lt;<code>ZodObject</code>&lt;{ <code>description</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt; ; <code>url</code>: <code>ZodString</code> }, <code>&quot;strip&quot;</code>, <code>ZodTypeAny</code>, { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> }, { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> }&gt;&gt; ; <code>info</code>: <code>ZodObject</code>&lt;{ <code>contact</code>: <code>ZodOptional</code>&lt;<code>ZodObject</code>&lt;{ <code>email</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt; ; <code>name</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt; ; <code>url</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt; }, <code>&quot;strip&quot;</code>, <code>ZodTypeAny</code>, { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> }, { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> }&gt;&gt; ; <code>description</code>: <code>ZodDefault</code>&lt;<code>ZodString</code>&gt; ; <code>license</code>: <code>ZodOptional</code>&lt;<code>ZodObject</code>&lt;{ <code>name</code>: <code>ZodString</code> ; <code>url</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt; }, <code>&quot;strip&quot;</code>, <code>ZodTypeAny</code>, { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> }, { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> }&gt;&gt; ; <code>termsOfService</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt; ; <code>title</code>: <code>ZodDefault</code>&lt;<code>ZodString</code>&gt; ; <code>version</code>: <code>ZodDefault</code>&lt;<code>ZodString</code>&gt; }, <code>&quot;strip&quot;</code>, <code>ZodTypeAny</code>, { <code>contact?</code>: { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>description</code>: <code>string</code> ; <code>license?</code>: { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>termsOfService?</code>: <code>string</code> ; <code>title</code>: <code>string</code> ; <code>version</code>: <code>string</code> }, { <code>contact?</code>: { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>description?</code>: <code>string</code> ; <code>license?</code>: { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>termsOfService?</code>: <code>string</code> ; <code>title?</code>: <code>string</code> ; <code>version?</code>: <code>string</code> }&gt; = InfoObjectSchema; <code>openapi</code>: <code>ZodDefault</code>&lt;<code>ZodString</code>&gt; ; <code>paths</code>: <code>ZodOptional</code>&lt;<code>ZodRecord</code>&lt;<code>ZodString</code>, <code>ZodRecord</code>&lt;<code>ZodString</code>, <code>ZodAny</code>&gt;&gt;&gt; ; <code>security</code>: <code>ZodOptional</code>&lt;<code>ZodArray</code>&lt;<code>ZodAny</code>, <code>&quot;many&quot;</code>&gt;&gt; ; <code>servers</code>: <code>ZodOptional</code>&lt;<code>ZodArray</code>&lt;<code>ZodObject</code>&lt;{ <code>description</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt; ; <code>url</code>: <code>ZodString</code> ; <code>variables</code>: <code>ZodOptional</code>&lt;<code>ZodAny</code>&gt; }, <code>&quot;strip&quot;</code>, <code>ZodTypeAny</code>, { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> ; <code>variables?</code>: <code>any</code> }, { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> ; <code>variables?</code>: <code>any</code> }&gt;, <code>&quot;many&quot;</code>&gt;&gt; ; <code>tags</code>: <code>ZodOptional</code>&lt;<code>ZodArray</code>&lt;<code>ZodObject</code>&lt;{ <code>description</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt; ; <code>externalDocs</code>: <code>ZodOptional</code>&lt;<code>ZodObject</code>&lt;{ <code>description</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt; ; <code>url</code>: <code>ZodString</code> }, <code>&quot;strip&quot;</code>, <code>ZodTypeAny</code>, { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> }, { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> }&gt;&gt; ; <code>name</code>: <code>ZodString</code> }, <code>&quot;strip&quot;</code>, <code>ZodTypeAny</code>, { <code>description?</code>: <code>string</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>name</code>: <code>string</code> }, { <code>description?</code>: <code>string</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>name</code>: <code>string</code> }&gt;, <code>&quot;many&quot;</code>&gt;&gt; }, <code>&quot;strip&quot;</code>, <code>ZodTypeAny</code>, { <code>components?</code>: <code>any</code> ; <code>enabled</code>: <code>boolean</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>info</code>: { <code>contact?</code>: { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>description</code>: <code>string</code> ; <code>license?</code>: { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>termsOfService?</code>: <code>string</code> ; <code>title</code>: <code>string</code> ; <code>version</code>: <code>string</code> } = InfoObjectSchema; <code>openapi</code>: <code>string</code> ; <code>paths?</code>: <code>Record</code>&lt;<code>string</code>, <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;&gt; ; <code>security?</code>: <code>any</code>[] ; <code>servers?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> ; <code>variables?</code>: <code>any</code> }[] ; <code>tags?</code>: { <code>description?</code>: <code>string</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>name</code>: <code>string</code> }[] }, { <code>components?</code>: <code>any</code> ; <code>enabled?</code>: <code>boolean</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>info</code>: { <code>contact?</code>: { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>description?</code>: <code>string</code> ; <code>license?</code>: { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>termsOfService?</code>: <code>string</code> ; <code>title?</code>: <code>string</code> ; <code>version?</code>: <code>string</code> } = InfoObjectSchema; <code>openapi?</code>: <code>string</code> ; <code>paths?</code>: <code>Record</code>&lt;<code>string</code>, <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;&gt; ; <code>security?</code>: <code>any</code>[] ; <code>servers?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> ; <code>variables?</code>: <code>any</code> }[] ; <code>tags?</code>: { <code>description?</code>: <code>string</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>name</code>: <code>string</code> }[] }&gt;&gt; ; <code>protectHandler</code>: <code>ZodDefault</code>&lt;<code>ZodAny</code>&gt; ; <code>services</code>: <code>ZodDefault</code>&lt;<code>ZodOptional</code>&lt;<code>ZodArray</code>&lt;<code>ZodType</code>&lt;<a href="./../classes/purista_core.Service.html"><code>Service</code></a>&lt;<code>unknown</code>&gt;, <code>ZodTypeDef</code>, <a href="./../classes/purista_core.Service.html"><code>Service</code></a>&lt;<code>unknown</code>&gt;&gt;, <code>&quot;many&quot;</code>&gt;&gt;&gt; ; <code>traceHeaderField</code>: <code>ZodDefault</code>&lt;<code>ZodString</code>&gt; }, <code>&quot;strip&quot;</code>, <code>ZodTypeAny</code>, { <code>apiMountPath</code>: <code>string</code> ; <code>enableDynamicRoutes</code>: <code>boolean</code> ; <code>enableHealth</code>: <code>boolean</code> ; <code>healthFunction?</code>: <code>any</code> ; <code>healthPath</code>: <code>string</code> ; <code>logLevel?</code>: <code>&quot;info&quot;</code> | <code>&quot;error&quot;</code> | <code>&quot;warn&quot;</code> | <code>&quot;debug&quot;</code> | <code>&quot;trace&quot;</code> | <code>&quot;fatal&quot;</code> ; <code>openApi?</code>: { <code>components?</code>: <code>any</code> ; <code>enabled</code>: <code>boolean</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>info</code>: { <code>contact?</code>: { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>description</code>: <code>string</code> ; <code>license?</code>: { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>termsOfService?</code>: <code>string</code> ; <code>title</code>: <code>string</code> ; <code>version</code>: <code>string</code> } = InfoObjectSchema; <code>openapi</code>: <code>string</code> ; <code>paths?</code>: <code>Record</code>&lt;<code>string</code>, <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;&gt; ; <code>security?</code>: <code>any</code>[] ; <code>servers?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> ; <code>variables?</code>: <code>any</code> }[] ; <code>tags?</code>: { <code>description?</code>: <code>string</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>name</code>: <code>string</code> }[] } ; <code>protectHandler?</code>: <code>any</code> ; <code>services</code>: <a href="./../classes/purista_core.Service.html"><code>Service</code></a>&lt;<code>unknown</code>&gt;[] ; <code>traceHeaderField</code>: <code>string</code> }, { <code>apiMountPath?</code>: <code>string</code> ; <code>enableDynamicRoutes?</code>: <code>boolean</code> ; <code>enableHealth?</code>: <code>boolean</code> ; <code>healthFunction?</code>: <code>any</code> ; <code>healthPath?</code>: <code>string</code> ; <code>logLevel?</code>: <code>&quot;info&quot;</code> | <code>&quot;error&quot;</code> | <code>&quot;warn&quot;</code> | <code>&quot;debug&quot;</code> | <code>&quot;trace&quot;</code> | <code>&quot;fatal&quot;</code> ; <code>openApi?</code>: { <code>components?</code>: <code>any</code> ; <code>enabled?</code>: <code>boolean</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>info</code>: { <code>contact?</code>: { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>description?</code>: <code>string</code> ; <code>license?</code>: { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>termsOfService?</code>: <code>string</code> ; <code>title?</code>: <code>string</code> ; <code>version?</code>: <code>string</code> } = InfoObjectSchema; <code>openapi?</code>: <code>string</code> ; <code>paths?</code>: <code>Record</code>&lt;<code>string</code>, <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;&gt; ; <code>security?</code>: <code>any</code>[] ; <code>servers?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> ; <code>variables?</code>: <code>any</code> }[] ; <code>tags?</code>: { <code>description?</code>: <code>string</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>name</code>: <code>string</code> }[] } ; <code>protectHandler?</code>: <code>any</code> ; <code>services?</code>: <a href="./../classes/purista_core.Service.html"><code>Service</code></a>&lt;<code>unknown</code>&gt;[] ; <code>traceHeaderField?</code>: <code>string</code> }&gt;</p><h4 id="defined-in-11" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-11" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/hono-http-server/src/service/hono/v1/honoServiceConfig.ts#L50" target="_blank" rel="noreferrer">packages/hono-http-server/src/service/hono/v1/honoServiceConfig.ts:50</a></p><hr><h3 id="honov1service" tabindex="-1">honoV1Service <a class="header-anchor" href="#honov1service" aria-label="Permalink to &quot;honoV1Service&quot;">​</a></h3><p>• <code>Const</code> <strong>honoV1Service</strong>: <a href="./../classes/purista_core.ServiceBuilder.html"><code>ServiceBuilder</code></a>&lt;{ <code>apiMountPath</code>: <code>string</code> ; <code>enableDynamicRoutes</code>: <code>boolean</code> ; <code>enableHealth</code>: <code>boolean</code> ; <code>healthFunction?</code>: <code>any</code> ; <code>healthPath</code>: <code>string</code> ; <code>logLevel?</code>: <code>&quot;info&quot;</code> | <code>&quot;error&quot;</code> | <code>&quot;warn&quot;</code> | <code>&quot;debug&quot;</code> | <code>&quot;trace&quot;</code> | <code>&quot;fatal&quot;</code> ; <code>openApi?</code>: { <code>components?</code>: <code>any</code> ; <code>enabled</code>: <code>boolean</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>info</code>: { <code>contact?</code>: { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>description</code>: <code>string</code> ; <code>license?</code>: { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>termsOfService?</code>: <code>string</code> ; <code>title</code>: <code>string</code> ; <code>version</code>: <code>string</code> } = InfoObjectSchema; <code>openapi</code>: <code>string</code> ; <code>paths?</code>: <code>Record</code>&lt;<code>string</code>, <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;&gt; ; <code>security?</code>: <code>any</code>[] ; <code>servers?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> ; <code>variables?</code>: <code>any</code> }[] ; <code>tags?</code>: { <code>description?</code>: <code>string</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>name</code>: <code>string</code> }[] } ; <code>protectHandler?</code>: <code>any</code> ; <code>services</code>: <a href="./../classes/purista_core.Service.html"><code>Service</code></a>&lt;<code>unknown</code>&gt;[] ; <code>traceHeaderField</code>: <code>string</code> }, { <code>apiMountPath?</code>: <code>string</code> ; <code>enableDynamicRoutes?</code>: <code>boolean</code> ; <code>enableHealth?</code>: <code>boolean</code> ; <code>healthFunction?</code>: <code>any</code> ; <code>healthPath?</code>: <code>string</code> ; <code>logLevel?</code>: <code>&quot;info&quot;</code> | <code>&quot;error&quot;</code> | <code>&quot;warn&quot;</code> | <code>&quot;debug&quot;</code> | <code>&quot;trace&quot;</code> | <code>&quot;fatal&quot;</code> ; <code>openApi?</code>: { <code>components?</code>: <code>any</code> ; <code>enabled?</code>: <code>boolean</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>info</code>: { <code>contact?</code>: { <code>email?</code>: <code>string</code> ; <code>name?</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>description?</code>: <code>string</code> ; <code>license?</code>: { <code>name</code>: <code>string</code> ; <code>url?</code>: <code>string</code> } ; <code>termsOfService?</code>: <code>string</code> ; <code>title?</code>: <code>string</code> ; <code>version?</code>: <code>string</code> } = InfoObjectSchema; <code>openapi?</code>: <code>string</code> ; <code>paths?</code>: <code>Record</code>&lt;<code>string</code>, <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;&gt; ; <code>security?</code>: <code>any</code>[] ; <code>servers?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> ; <code>variables?</code>: <code>any</code> }[] ; <code>tags?</code>: { <code>description?</code>: <code>string</code> ; <code>externalDocs?</code>: { <code>description?</code>: <code>string</code> ; <code>url</code>: <code>string</code> } ; <code>name</code>: <code>string</code> }[] } ; <code>protectHandler?</code>: <code>any</code> ; <code>services?</code>: <a href="./../classes/purista_core.Service.html"><code>Service</code></a>&lt;<code>unknown</code>&gt;[] ; <code>traceHeaderField?</code>: <code>string</code> }, <code>HonoServiceClass</code>&lt;<a href="./purista_hono_http_server.html#bindingsbase"><code>BindingsBase</code></a>, <a href="./purista_hono_http_server.html#variablesbase"><code>VariablesBase</code></a>&gt;&gt;</p><h4 id="defined-in-12" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-12" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/hono-http-server/src/service/hono/v1/honoV1Service.ts#L16" target="_blank" rel="noreferrer">packages/hono-http-server/src/service/hono/v1/honoV1Service.ts:16</a></p><hr><h3 id="puristaversion" tabindex="-1">puristaVersion <a class="header-anchor" href="#puristaversion" aria-label="Permalink to &quot;puristaVersion&quot;">​</a></h3><p>• <code>Const</code> <strong>puristaVersion</strong>: <code>&quot;1.10.8&quot;</code></p><h4 id="defined-in-13" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-13" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/hono-http-server/src/version.ts#L1" target="_blank" rel="noreferrer">packages/hono-http-server/src/version.ts:1</a></p><h2 id="functions-1" tabindex="-1">Functions <a class="header-anchor" href="#functions-1" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="addpathtoopenapi" tabindex="-1">addPathToOpenApi <a class="header-anchor" href="#addpathtoopenapi" aria-label="Permalink to &quot;addPathToOpenApi&quot;">​</a></h3><p>▸ <strong>addPathToOpenApi</strong>(<code>openApiBuilder</code>, <code>metadata</code>, <code>path</code>, <code>config</code>): <code>void</code></p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>openApiBuilder</code></td><td style="text-align:left;"><code>OpenApiBuilder</code></td></tr><tr><td style="text-align:left;"><code>metadata</code></td><td style="text-align:left;"><code>Object</code></td></tr><tr><td style="text-align:left;"><code>metadata.expose</code></td><td style="text-align:left;">{ <code>contentEncodingRequest?</code>: <code>string</code> ; <code>contentEncodingResponse?</code>: <code>string</code> ; <code>contentTypeRequest?</code>: <code>string</code> ; <code>contentTypeResponse?</code>: <code>string</code> ; <code>deprecated?</code>: <code>boolean</code> ; <code>inputPayload?</code>: <code>SchemaObject</code> ; <code>outputPayload?</code>: <code>SchemaObject</code> ; <code>parameter?</code>: <code>SchemaObject</code> } &amp; { <code>http</code>: { <code>method</code>: <code>&quot;GET&quot;</code> | <code>&quot;POST&quot;</code> | <code>&quot;PATCH&quot;</code> | <code>&quot;PUT&quot;</code> | <code>&quot;DELETE&quot;</code> ; <code>openApi?</code>: { <code>additionalStatusCodes?</code>: <a href="./../enums/purista_core.StatusCode.html"><code>StatusCode</code></a>[] ; <code>description</code>: <code>string</code> ; <code>isSecure</code>: <code>boolean</code> ; <code>operationId?</code>: <code>string</code> ; <code>query?</code>: <a href="./purista_core.html#queryparameter"><code>QueryParameter</code></a>&lt;{}&gt;[] ; <code>summary</code>: <code>string</code> ; <code>tags?</code>: <code>string</code>[] } ; <code>path</code>: <code>string</code> } }</td></tr><tr><td style="text-align:left;"><code>path</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>config</code></td><td style="text-align:left;"><code>Config</code></td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="defined-in-14" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-14" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/hono-http-server/src/helper/addPathToOpenApi.ts#L14" target="_blank" rel="noreferrer">packages/hono-http-server/src/helper/addPathToOpenApi.ts:14</a></p><hr><h3 id="geterrorname" tabindex="-1">getErrorName <a class="header-anchor" href="#geterrorname" aria-label="Permalink to &quot;getErrorName&quot;">​</a></h3><p>▸ <strong>getErrorName</strong>(<code>code</code>): <code>string</code></p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>code</code></td><td style="text-align:left;"><a href="./../enums/purista_core.StatusCode.html"><code>StatusCode</code></a></td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><h4 id="defined-in-15" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-15" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/hono-http-server/src/helper/getErrorName.ts#L3" target="_blank" rel="noreferrer">packages/hono-http-server/src/helper/getErrorName.ts:3</a></p><hr><h3 id="geterrorresponseschema" tabindex="-1">getErrorResponseSchema <a class="header-anchor" href="#geterrorresponseschema" aria-label="Permalink to &quot;getErrorResponseSchema&quot;">​</a></h3><p>▸ <strong>getErrorResponseSchema</strong>(<code>code</code>, <code>message</code>, <code>schema?</code>): <code>SchemaObject</code></p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>code</code></td><td style="text-align:left;"><a href="./../enums/purista_core.StatusCode.html"><code>StatusCode</code></a></td></tr><tr><td style="text-align:left;"><code>message</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>schema?</code></td><td style="text-align:left;"><code>SchemaObject</code></td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>SchemaObject</code></p><h4 id="defined-in-16" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-16" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/hono-http-server/src/helper/getErrorResponseSchema.ts#L55" target="_blank" rel="noreferrer">packages/hono-http-server/src/helper/getErrorResponseSchema.ts:55</a></p><hr><h3 id="getparameterdefinition" tabindex="-1">getParameterDefinition <a class="header-anchor" href="#getparameterdefinition" aria-label="Permalink to &quot;getParameterDefinition&quot;">​</a></h3><p>▸ <strong>getParameterDefinition</strong>(<code>path</code>, <code>parameterschema?</code>): <code>ParameterObject</code>[]</p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>path</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>parameterschema?</code></td><td style="text-align:left;"><code>SchemaObject</code></td></tr></tbody></table><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>ParameterObject</code>[]</p><h4 id="defined-in-17" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-17" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/hono-http-server/src/helper/getParameterDefinition.ts#L6" target="_blank" rel="noreferrer">packages/hono-http-server/src/helper/getParameterDefinition.ts:6</a></p><hr><h3 id="getquerydefintion" tabindex="-1">getQueryDefintion <a class="header-anchor" href="#getquerydefintion" aria-label="Permalink to &quot;getQueryDefintion&quot;">​</a></h3><p>▸ <strong>getQueryDefintion</strong>(<code>queryDefinition</code>, <code>parameterschema?</code>): <code>ParameterObject</code>[]</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>queryDefinition</code></td><td style="text-align:left;"><code>undefined</code> | <a href="./purista_core.html#queryparameter"><code>QueryParameter</code></a>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;&gt;[]</td></tr><tr><td style="text-align:left;"><code>parameterschema?</code></td><td style="text-align:left;"><code>SchemaObject</code></td></tr></tbody></table><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>ParameterObject</code>[]</p><h4 id="defined-in-18" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-18" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/hono-http-server/src/helper/getQueryDefintion.ts#L5" target="_blank" rel="noreferrer">packages/hono-http-server/src/helper/getQueryDefintion.ts:5</a></p>`,150),r=[a];function i(n,s,l,h,p,g){return d(),o("div",null,r)}const m=e(c,[["render",i]]);export{f as __pageData,m as default};
