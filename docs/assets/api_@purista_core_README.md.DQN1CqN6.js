import{_ as t,c as a,o as r,ag as s}from"./chunks/framework.U_AETC1W.js";const h=JSON.parse('{"title":"PURISTA","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/core/README.md","filePath":"api/@purista/core/README.md","lastUpdated":1739900666000}'),i={name:"api/@purista/core/README.md"};function o(n,e,p,l,d,u){return r(),a("div",null,e[0]||(e[0]=[s('<p><strong>@purista/core v2.0.0</strong></p><hr><p><a href="./../../packages.html">PURISTA API</a> / @purista/core</p><h1 id="purista" tabindex="-1">PURISTA <a class="header-anchor" href="#purista" aria-label="Permalink to &quot;PURISTA&quot;">​</a></h1><p>A backend framework for building message based domain services.</p><p>This framework adapts and combines a wide range of different patters from domain driven design, cqrs, microservice, event sourcing and lambda functions.</p><p>It is build from ground up in typescript and highly focuses on schema, and auto generation of types, input-output-validation, OpenApi documentation (swagger).</p><h2 id="why-to-use-purista" tabindex="-1">Why to use PURISTA <a class="header-anchor" href="#why-to-use-purista" aria-label="Permalink to &quot;Why to use PURISTA&quot;">​</a></h2><p>PURISTA tries to avoid the need for implementing boilerplate code as much as possible and to automate and autogenerate types, definitions, documentation when ever possible.</p><p>Schema and input-output-validation are deeply integrated, and they should be used whenever possible to build robust, stable systems.</p><p>PURISTA addresses developers which want to simply focus on implementation, while providing them the necessary things to use the great node/typescript tooling.</p><h3 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h3><ul><li>typescript based and with typescript in mind</li><li>mostly async-await (no call-back hell)</li><li>easy versioning of services &amp; API</li><li>modular &amp; extendable</li><li>runs and scales from small single instance up to cloud clusters</li><li>flexible to trace, audit and monitor</li><li>easy to test with ready to go mocks &amp; stubs</li><li>clean error handling</li><li>low learning curve</li></ul><p><strong>The main goal is to let developers keep focusing on solving business requirements while building robust &amp; maintainable software fast and efficient.</strong></p><p><strong>Visit <a href="https://purista.dev" target="_blank" rel="noreferrer">purista.dev</a></strong></p><p><strong>Follow on Twitter <a href="https://twitter.com/purista_js" target="_blank" rel="noreferrer">@purista_js</a></strong><br><strong>Join the <a href="https://discord.gg/9feaUm3H2v" target="_blank" rel="noreferrer">Discord Chat</a></strong></p><p><a href="https://www.producthunt.com/posts/purista?utm_source=badge-featured&amp;utm_medium=badge&amp;utm_souce=badge-purista" target="_blank"><img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=386519&amp;theme=light" alt="PURISTA - Typescript framework for IoT, microservices, and serverless | Product Hunt" style="width:250px;height:54px;" width="250" height="54"></a></p>',17)]))}const m=t(i,[["render",o]]);export{h as __pageData,m as default};
