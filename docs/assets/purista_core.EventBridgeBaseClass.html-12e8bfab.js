import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c,b as e,e as r,w as n,d as t,a as s}from"./app-9aedf0b4.js";const h={},u=e("h1",{id:"class-eventbridgebaseclass-configtype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-eventbridgebaseclass-configtype","aria-hidden":"true"},"#"),t(" Class: EventBridgeBaseClass<ConfigType>")],-1),p=s('<p>The base class to be extended by event bridge implementations</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h2><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h2 id="hierarchy" tabindex="-1"><a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a> Hierarchy</h2>',4),f=e("code",null,"GenericEventEmitter",-1),g=e("code",null,"EventBridgeEvents",-1),_=e("p",null,[t("↳ "),e("strong",null,[e("code",null,"EventBridgeBaseClass")])],-1),m=e("code",null,"DefaultEventBridge",-1),b=e("code",null,"DefaultEventBridge",-1),v=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),y=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),x=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),E=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),B=s('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new EventBridgeBaseClass</strong>&lt;<code>ConfigType</code>&gt;(<code>name</code>, <code>config</code>)</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>config</code></td><td style="text-align:left;">{ [K in string | number | symbol]: (Object &amp; ConfigType)[K] }</td></tr></tbody></table><h4 id="overrides" tabindex="-1"><a class="header-anchor" href="#overrides" aria-hidden="true">#</a> Overrides</h4>',8),C=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),k={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L28",target:"_blank",rel:"noopener noreferrer"},w=e("h2",{id:"properties-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties-1","aria-hidden":"true"},"#"),t(" Properties")],-1),T=e("h3",{id:"config",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#config","aria-hidden":"true"},"#"),t(" config")],-1),L=e("strong",null,"config",-1),G=e("code",null,"Complete",-1),N=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),P={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L21",target:"_blank",rel:"noopener noreferrer"},D=e("hr",null,null,-1),K=e("h3",{id:"defaultcommandtimeout",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defaultcommandtimeout","aria-hidden":"true"},"#"),t(" defaultCommandTimeout")],-1),I=e("p",null,[t("• "),e("strong",null,"defaultCommandTimeout"),t(": "),e("code",null,"number")],-1),R=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),S={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L27",target:"_blank",rel:"noopener noreferrer"},F=e("hr",null,null,-1),A=e("h3",{id:"instanceid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#instanceid","aria-hidden":"true"},"#"),t(" instanceId")],-1),O=e("p",null,[t("• "),e("strong",null,"instanceId"),t(": "),e("code",null,"string")],-1),V=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),M={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L25",target:"_blank",rel:"noopener noreferrer"},j=e("hr",null,null,-1),q=e("h3",{id:"logger",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#logger","aria-hidden":"true"},"#"),t(" logger")],-1),U=e("strong",null,"logger",-1),H=e("code",null,"Logger",-1),z=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),J={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L18",target:"_blank",rel:"noopener noreferrer"},Q=e("hr",null,null,-1),W=e("h3",{id:"name",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#name","aria-hidden":"true"},"#"),t(" name")],-1),X=e("p",null,[t("• "),e("strong",null,"name"),t(": "),e("code",null,"string")],-1),Y=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),Z={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L23",target:"_blank",rel:"noopener noreferrer"},$=e("hr",null,null,-1),ee=e("h3",{id:"traceprovider",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#traceprovider","aria-hidden":"true"},"#"),t(" traceProvider")],-1),te=e("p",null,[t("• "),e("strong",null,"traceProvider"),t(": "),e("code",null,"NodeTracerProvider")],-1),re=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),ae={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L19",target:"_blank",rel:"noopener noreferrer"},ne=s('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="destroy" tabindex="-1"><a class="header-anchor" href="#destroy" aria-hidden="true">#</a> destroy</h3><p>▸ <strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>',6),de={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L153",target:"_blank",rel:"noopener noreferrer"},se=s('<hr><h3 id="emit" tabindex="-1"><a class="header-anchor" href="#emit" aria-hidden="true">#</a> emit</h3><p>▸ <strong>emit</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>parameter?</code>): <code>void</code></p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4>',4),oe=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ie=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),le={style:{"text-align":"left"}},ce=e("code",null,"EventKey",-1),he=e("code",null,"eventbridge-connected",-1),ue=e("code",null,"never",-1),pe=e("code",null,"eventbridge-connection-error",-1),fe=e("code",null,"unknown",-1),ge=e("code",null,"eventbridge-disconnected",-1),_e=e("code",null,"never",-1),me=e("code",null,"eventbridge-error",-1),be=e("code",null,"unknown",-1),ve=e("code",null,"eventbridge-reconnecting",-1),ye=e("code",null,"never",-1),xe=s('<h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>K</code></td></tr><tr><td style="text-align:left;"><code>parameter?</code></td><td style="text-align:left;">{ <code>eventbridge-connected</code>: <code>never</code> ; <code>eventbridge-connection-error</code>: <code>unknown</code> ; <code>eventbridge-disconnected</code>: <code>never</code> ; <code>eventbridge-error</code>: <code>unknown</code> ; <code>eventbridge-reconnecting</code>: <code>never</code> }[<code>K</code>]</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from" tabindex="-1"><a class="header-anchor" href="#inherited-from" aria-hidden="true">#</a> Inherited from</h4>',5),Ee=e("h4",{id:"defined-in-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-8","aria-hidden":"true"},"#"),t(" Defined in")],-1),Be={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L24",target:"_blank",rel:"noopener noreferrer"},Ce=s('<hr><h3 id="gettracer" tabindex="-1"><a class="header-anchor" href="#gettracer" aria-hidden="true">#</a> getTracer</h3><p>▸ <strong>getTracer</strong>(): <code>Tracer</code></p><p>Returns open telemetry tracer of this service</p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>Tracer</code></p><p>Tracer</p><h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4>',8),ke={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L68",target:"_blank",rel:"noopener noreferrer"},we=s('<hr><h3 id="off" tabindex="-1"><a class="header-anchor" href="#off" aria-hidden="true">#</a> off</h3><p>▸ <strong>off</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4>',4),Te=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Le=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),Ge={style:{"text-align":"left"}},Ne=e("code",null,"EventKey",-1),Pe=e("code",null,"eventbridge-connected",-1),De=e("code",null,"never",-1),Ke=e("code",null,"eventbridge-connection-error",-1),Ie=e("code",null,"unknown",-1),Re=e("code",null,"eventbridge-disconnected",-1),Se=e("code",null,"never",-1),Fe=e("code",null,"eventbridge-error",-1),Ae=e("code",null,"unknown",-1),Oe=e("code",null,"eventbridge-reconnecting",-1),Ve=e("code",null,"never",-1),Me=s('<h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>K</code></td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;"><code>EventReceiver</code>&lt;{ <code>eventbridge-connected</code>: <code>never</code> ; <code>eventbridge-connection-error</code>: <code>unknown</code> ; <code>eventbridge-disconnected</code>: <code>never</code> ; <code>eventbridge-error</code>: <code>unknown</code> ; <code>eventbridge-reconnecting</code>: <code>never</code> }[<code>K</code>]&gt;</td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-1" tabindex="-1"><a class="header-anchor" href="#inherited-from-1" aria-hidden="true">#</a> Inherited from</h4>',5),je=e("h4",{id:"defined-in-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-10","aria-hidden":"true"},"#"),t(" Defined in")],-1),qe={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L20",target:"_blank",rel:"noopener noreferrer"},Ue=s('<hr><h3 id="on" tabindex="-1"><a class="header-anchor" href="#on" aria-hidden="true">#</a> on</h3><p>▸ <strong>on</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4>',4),He=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ze=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),Je={style:{"text-align":"left"}},Qe=e("code",null,"EventKey",-1),We=e("code",null,"eventbridge-connected",-1),Xe=e("code",null,"never",-1),Ye=e("code",null,"eventbridge-connection-error",-1),Ze=e("code",null,"unknown",-1),$e=e("code",null,"eventbridge-disconnected",-1),et=e("code",null,"never",-1),tt=e("code",null,"eventbridge-error",-1),rt=e("code",null,"unknown",-1),at=e("code",null,"eventbridge-reconnecting",-1),nt=e("code",null,"never",-1),dt=s('<h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>K</code></td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;"><code>EventReceiver</code>&lt;{ <code>eventbridge-connected</code>: <code>never</code> ; <code>eventbridge-connection-error</code>: <code>unknown</code> ; <code>eventbridge-disconnected</code>: <code>never</code> ; <code>eventbridge-error</code>: <code>unknown</code> ; <code>eventbridge-reconnecting</code>: <code>never</code> }[<code>K</code>]&gt;</td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-2" tabindex="-1"><a class="header-anchor" href="#inherited-from-2" aria-hidden="true">#</a> Inherited from</h4>',5),st=e("h4",{id:"defined-in-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-11","aria-hidden":"true"},"#"),t(" Defined in")],-1),ot={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L16",target:"_blank",rel:"noopener noreferrer"},it=s('<hr><h3 id="removealllisteners" tabindex="-1"><a class="header-anchor" href="#removealllisteners" aria-hidden="true">#</a> removeAllListeners</h3><p>▸ <strong>removeAllListeners</strong>(): <code>void</code></p><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-3" tabindex="-1"><a class="header-anchor" href="#inherited-from-3" aria-hidden="true">#</a> Inherited from</h4>',6),lt=e("h4",{id:"defined-in-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-12","aria-hidden":"true"},"#"),t(" Defined in")],-1),ct={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L28",target:"_blank",rel:"noopener noreferrer"},ht=s('<hr><h3 id="start" tabindex="-1"><a class="header-anchor" href="#start" aria-hidden="true">#</a> start</h3><p>▸ <strong>start</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4>',6),ut={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L154",target:"_blank",rel:"noopener noreferrer"},pt=s('<hr><h3 id="startactivespan" tabindex="-1"><a class="header-anchor" href="#startactivespan" aria-hidden="true">#</a> startActiveSpan</h3><p>▸ <strong>startActiveSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>context?</code>, <code>fn</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p><p>Start a child span for opentelemetry tracking</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">name of span</td></tr><tr><td style="text-align:left;"><code>opts</code></td><td style="text-align:left;"><code>SpanOptions</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">span options</td></tr><tr><td style="text-align:left;"><code>context</code></td><td style="text-align:left;"><code>undefined</code> | <code>Context</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">optional context</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(<code>span</code>: <code>Span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">function to be executed within the span</td></tr></tbody></table><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><p>return value of fn</p><h4 id="defined-in-14" tabindex="-1"><a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a> Defined in</h4>',12),ft={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L80",target:"_blank",rel:"noopener noreferrer"},gt=s('<hr><h3 id="wrapinspan" tabindex="-1"><a class="header-anchor" href="#wrapinspan" aria-hidden="true">#</a> wrapInSpan</h3><p>▸ <strong>wrapInSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>fn</code>, <code>context?</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p><p>Start span for opentelemetry tracking on same level. The created span will not become the &quot;active&quot; span within opentelemetry!</p><p>This means during logging and similar the spanId of parent span is logged.</p><p>Use wrapInSpan for marking points in flow of one bigger function, but not to trace the program flow itself</p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">name of span</td></tr><tr><td style="text-align:left;"><code>opts</code></td><td style="text-align:left;"><code>SpanOptions</code></td><td style="text-align:left;">span options</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(<code>span</code>: <code>Span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</td><td style="text-align:left;">function te be executed in the span</td></tr><tr><td style="text-align:left;"><code>context?</code></td><td style="text-align:left;"><code>Context</code></td><td style="text-align:left;">span context</td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><p>return value of fn</p><h4 id="defined-in-15" tabindex="-1"><a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a> Defined in</h4>',14),_t={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L130",target:"_blank",rel:"noopener noreferrer"};function mt(bt,vt){const a=o("RouterLink"),d=o("ExternalLinkIcon");return l(),c("div",null,[e("p",null,[r(a,{to:"/api/"},{default:n(()=>[t("PURISTA API")]),_:1}),t(" / "),r(a,{to:"/api/modules.html"},{default:n(()=>[t("Modules")]),_:1}),t(" / "),r(a,{to:"/api/modules/purista_core.html"},{default:n(()=>[t("@purista/core")]),_:1}),t(" / EventBridgeBaseClass")]),u,e("p",null,[r(a,{to:"/api/modules/purista_core.html"},{default:n(()=>[t("@purista/core")]),_:1}),t(".EventBridgeBaseClass")]),p,e("ul",null,[e("li",null,[e("p",null,[r(a,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:n(()=>[f]),_:1}),t("<"),r(a,{to:"/api/modules/purista_core.html#eventbridgeevents"},{default:n(()=>[g]),_:1}),t(">")]),_,e("p",null,[t("↳↳ "),r(a,{to:"/api/classes/purista_core.DefaultEventBridge.html"},{default:n(()=>[m]),_:1})]),e("p",null,[t("↳↳ "),r(a,{to:"/api/classes/purista_core.DefaultEventBridge.html"},{default:n(()=>[b]),_:1})])])]),v,y,e("ul",null,[e("li",null,[r(a,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#constructor"},{default:n(()=>[t("constructor")]),_:1})])]),x,e("ul",null,[e("li",null,[r(a,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#config"},{default:n(()=>[t("config")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#defaultcommandtimeout"},{default:n(()=>[t("defaultCommandTimeout")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#instanceid"},{default:n(()=>[t("instanceId")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#logger"},{default:n(()=>[t("logger")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#name"},{default:n(()=>[t("name")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#traceprovider"},{default:n(()=>[t("traceProvider")]),_:1})])]),E,e("ul",null,[e("li",null,[r(a,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#destroy"},{default:n(()=>[t("destroy")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#emit"},{default:n(()=>[t("emit")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#gettracer"},{default:n(()=>[t("getTracer")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#off"},{default:n(()=>[t("off")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#on"},{default:n(()=>[t("on")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#removealllisteners"},{default:n(()=>[t("removeAllListeners")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#start"},{default:n(()=>[t("start")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#startactivespan"},{default:n(()=>[t("startActiveSpan")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#wrapinspan"},{default:n(()=>[t("wrapInSpan")]),_:1})])]),B,e("p",null,[r(a,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:n(()=>[t("GenericEventEmitter")]),_:1}),t("."),r(a,{to:"/api/classes/purista_core.GenericEventEmitter.html#constructor"},{default:n(()=>[t("constructor")]),_:1})]),C,e("p",null,[e("a",k,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:28"),r(d)])]),w,T,e("p",null,[t("• "),L,t(": "),r(a,{to:"/api/modules/purista_core.html#complete"},{default:n(()=>[G]),_:1}),t("<{ [K in string | number | symbol]: (Object & ConfigType)[K] }>")]),N,e("p",null,[e("a",P,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:21"),r(d)])]),D,K,I,R,e("p",null,[e("a",S,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:27"),r(d)])]),F,A,O,V,e("p",null,[e("a",M,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:25"),r(d)])]),j,q,e("p",null,[t("• "),U,t(": "),r(a,{to:"/api/classes/purista_core.Logger.html"},{default:n(()=>[H]),_:1})]),z,e("p",null,[e("a",J,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:18"),r(d)])]),Q,W,X,Y,e("p",null,[e("a",Z,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:23"),r(d)])]),$,ee,te,re,e("p",null,[e("a",ae,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:19"),r(d)])]),ne,e("p",null,[e("a",de,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:153"),r(d)])]),se,e("table",null,[oe,e("tbody",null,[e("tr",null,[ie,e("td",le,[t("extends "),r(a,{to:"/api/modules/purista_core.html#eventkey"},{default:n(()=>[ce]),_:1}),t("<{ "),he,t(": "),ue,t(" ; "),pe,t(": "),fe,t(" ; "),ge,t(": "),_e,t(" ; "),me,t(": "),be,t(" ; "),ve,t(": "),ye,t(" }>")])])])]),xe,e("p",null,[r(a,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:n(()=>[t("GenericEventEmitter")]),_:1}),t("."),r(a,{to:"/api/classes/purista_core.GenericEventEmitter.html#emit"},{default:n(()=>[t("emit")]),_:1})]),Ee,e("p",null,[e("a",Be,[t("core/types/GenericEventEmitter.ts:24"),r(d)])]),Ce,e("p",null,[e("a",ke,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:68"),r(d)])]),we,e("table",null,[Te,e("tbody",null,[e("tr",null,[Le,e("td",Ge,[t("extends "),r(a,{to:"/api/modules/purista_core.html#eventkey"},{default:n(()=>[Ne]),_:1}),t("<{ "),Pe,t(": "),De,t(" ; "),Ke,t(": "),Ie,t(" ; "),Re,t(": "),Se,t(" ; "),Fe,t(": "),Ae,t(" ; "),Oe,t(": "),Ve,t(" }>")])])])]),Me,e("p",null,[r(a,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:n(()=>[t("GenericEventEmitter")]),_:1}),t("."),r(a,{to:"/api/classes/purista_core.GenericEventEmitter.html#off"},{default:n(()=>[t("off")]),_:1})]),je,e("p",null,[e("a",qe,[t("core/types/GenericEventEmitter.ts:20"),r(d)])]),Ue,e("table",null,[He,e("tbody",null,[e("tr",null,[ze,e("td",Je,[t("extends "),r(a,{to:"/api/modules/purista_core.html#eventkey"},{default:n(()=>[Qe]),_:1}),t("<{ "),We,t(": "),Xe,t(" ; "),Ye,t(": "),Ze,t(" ; "),$e,t(": "),et,t(" ; "),tt,t(": "),rt,t(" ; "),at,t(": "),nt,t(" }>")])])])]),dt,e("p",null,[r(a,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:n(()=>[t("GenericEventEmitter")]),_:1}),t("."),r(a,{to:"/api/classes/purista_core.GenericEventEmitter.html#on"},{default:n(()=>[t("on")]),_:1})]),st,e("p",null,[e("a",ot,[t("core/types/GenericEventEmitter.ts:16"),r(d)])]),it,e("p",null,[r(a,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:n(()=>[t("GenericEventEmitter")]),_:1}),t("."),r(a,{to:"/api/classes/purista_core.GenericEventEmitter.html#removealllisteners"},{default:n(()=>[t("removeAllListeners")]),_:1})]),lt,e("p",null,[e("a",ct,[t("core/types/GenericEventEmitter.ts:28"),r(d)])]),ht,e("p",null,[e("a",ut,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:154"),r(d)])]),pt,e("p",null,[e("a",ft,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:80"),r(d)])]),gt,e("p",null,[e("a",_t,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:130"),r(d)])])])}const Et=i(h,[["render",mt],["__file","purista_core.EventBridgeBaseClass.html.vue"]]);export{Et as default};
