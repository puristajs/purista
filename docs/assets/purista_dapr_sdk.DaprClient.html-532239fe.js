import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as s,c,b as e,e as d,w as l,d as t,a as n}from"./app-2c9217f0.js";const h={},p=e("h1",{id:"class-daprclient",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-daprclient","aria-hidden":"true"},"#"),t(" Class: DaprClient")],-1),f=e("h2",{id:"hierarchy",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hierarchy","aria-hidden":"true"},"#"),t(" Hierarchy")],-1),u=e("code",null,"HttpClient",-1),g=e("code",null,"EventBridgeConfig",-1),m=e("code",null,"DaprEventBridgeConfig",-1),x=e("p",null,[t("↳ "),e("strong",null,[e("code",null,"DaprClient")])],-1),y=n('<h2 id="implements" tabindex="-1"><a class="header-anchor" href="#implements" aria-hidden="true">#</a> Implements</h2><ul><li><code>HttpEventBridgeClient</code></li></ul><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h3>',4),b=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),_=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),C=n('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new DaprClient</strong>(<code>config</code>)</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4>',4),v=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),k=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),T=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.apiPrefix?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[t("the prefix to be used if the command is configured as REST api endpoint according to the OpenAPI defintion needs to "),e("code",null,"enableRestApiExpose"),t(" set to "),e("code",null,"true")])],-1),D=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.baseUrl")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[t("the base url to be used "),e("strong",null,[e("code",null,"Example")]),t(),e("code",null,"typescript const config = { baseUrl: 'http://localhost/api` } // each request will be below http://localhost/api // get('v1/orders') will call http://localhost/api/v1/orders ")])],-1),P=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.basicAuth?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"Basic-Auth information")],-1),H=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.basicAuth.password")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"Basic-Auth password")],-1),w=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.basicAuth.username")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"Basic-Auth username")],-1),E=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.bearerToken?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"Auth-Bearer token")],-1),A=e("td",{style:{"text-align":"left"}},[e("code",null,"config.clientConfig?")],-1),I={style:{"text-align":"left"}},R=e("code",null,"DaprClientConfig",-1),q=e("td",{style:{"text-align":"left"}},"-",-1),S=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.commandPayloadAsCloudEvent?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},[t("command invocations are wrapped in CloudEvent "),e("strong",null,[e("code",null,"Link")]),t(" https://github.com/cloudevents/spec/tree/v1.0")])],-1),B=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.defaultCommandTimeout?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"Overwrite the hardcoded default timeout of command invocations")],-1),N=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.defaultHeaders?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"string"),t(">")]),e("td",{style:{"text-align":"left"}},"Add your default headers here These headers will be part of every request. They can be overwritten per request option")],-1),O=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.defaultTimeout?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},[t("set global timeout for requests in ms "),e("strong",null,[e("code",null,"Default")]),t(),e("code",null,"ts 30000 ")])],-1),L=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.enableOpentelemetry?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},"enable Opentelemetry tracing. The client will be handled as own ressource.")],-1),F=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.enableRestApiExpose?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},"expose commands as regular REST endpoints when they are configured as endpoints")],-1),U=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.instanceId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The instance id of the event bridge. If not set, a id will generated each time a instance is created. Use this if there is a need to always have the same instance id.")],-1),j=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.isKeepAlive?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},"If set to false, the HTTP client will not reuse the same connection for multiple requests. Default is true.")],-1),M=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.logLevel?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"LogLevelName")]),e("td",{style:{"text-align":"left"}},"the loglevel if no logger instance is given")],-1),V=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.logger?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Logger")]),e("td",{style:{"text-align":"left"}},"A logger instance")],-1),G=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.name?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"Name of the client")],-1),K=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.pathPrefix?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the prefix to be used for exposing commands as endpoints expecting a event bus message")],-1),Q=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.serve")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"options"),t(": { "),e("code",null,"fetch"),t(": ("),e("code",null,"request"),t(": "),e("code",null,"Request"),t(") => "),e("code",null,"unknown"),t(" ; "),e("code",null,"hostname?"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"port?"),t(": "),e("code",null,"number"),t(" }) => "),e("code",null,"Server"),t("<typeof "),e("code",null,"IncomingMessage"),t(", typeof "),e("code",null,"ServerResponse"),t(">")]),e("td",{style:{"text-align":"left"}},[t("The serve function is depending on the runtime. - Bun: "),e("code",null,"Bun.serve"),t(" - Node.js: "),e("code",null,"serve"),t(" function from additional package "),e("code",null,"@hono/hono-node-server"),t(" - Deno: "),e("code",null,"serve"),t(" function from package "),e("code",null,"https://deno.land/std/http/server.ts"),t(),e("strong",null,[e("code",null,"See")]),t(" https://hono.dev")])],-1),z=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.serverHost?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"Host of the server.")],-1),J=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.serverPort?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"Port of the server.")],-1),W=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.spanProcessor?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SpanProcessor")]),e("td",{style:{"text-align":"left"}},"Opentelemetry span processor")],-1),X=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.subscriptionPayloadAsCloudEvent?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},[t("subscription invocations are wrapped in CloudEvent "),e("strong",null,[e("code",null,"Link")]),t(" https://github.com/cloudevents/spec/tree/v1.0")])],-1),Y=n('<h4 id="inherited-from" tabindex="-1"><a class="header-anchor" href="#inherited-from" aria-hidden="true">#</a> Inherited from</h4><p>HttpClient&lt;EventBridgeConfig&lt;DaprEventBridgeConfig&gt;&gt;.constructor</p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/HttpClient/HttpClient.impl.d.ts:26</p><h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="baseurl" tabindex="-1"><a class="header-anchor" href="#baseurl" aria-hidden="true">#</a> baseUrl</h3><p>• <strong>baseUrl</strong>: <code>URL</code></p><h4 id="inherited-from-1" tabindex="-1"><a class="header-anchor" href="#inherited-from-1" aria-hidden="true">#</a> Inherited from</h4><p>HttpClient.baseUrl</p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/HttpClient/HttpClient.impl.d.ts:22</p><hr><h3 id="config" tabindex="-1"><a class="header-anchor" href="#config" aria-hidden="true">#</a> config</h3><p>• <strong>config</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4>',15),Z=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),$=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"apiPrefix?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[t("the prefix to be used if the command is configured as REST api endpoint according to the OpenAPI defintion needs to "),e("code",null,"enableRestApiExpose"),t(" set to "),e("code",null,"true")])],-1),ee=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"baseUrl")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[t("the base url to be used "),e("strong",null,[e("code",null,"Example")]),t(),e("code",null,"typescript const config = { baseUrl: 'http://localhost/api` } // each request will be below http://localhost/api // get('v1/orders') will call http://localhost/api/v1/orders ")])],-1),te=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"basicAuth?")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"password"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"username"),t(": "),e("code",null,"string"),t(" }")]),e("td",{style:{"text-align":"left"}},"Basic-Auth information")],-1),de=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"basicAuth.password")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"Basic-Auth password")],-1),ae=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"basicAuth.username")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"Basic-Auth username")],-1),le=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"bearerToken?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"Auth-Bearer token")],-1),ne=e("td",{style:{"text-align":"left"}},[e("code",null,"clientConfig?")],-1),re={style:{"text-align":"left"}},ie=e("code",null,"DaprClientConfig",-1),oe=e("td",{style:{"text-align":"left"}},"-",-1),se=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandPayloadAsCloudEvent?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},[t("command invocations are wrapped in CloudEvent "),e("strong",null,[e("code",null,"Link")]),t(" https://github.com/cloudevents/spec/tree/v1.0")])],-1),ce=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"defaultCommandTimeout?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"Overwrite the hardcoded default timeout of command invocations")],-1),he=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"defaultHeaders?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"string"),t(">")]),e("td",{style:{"text-align":"left"}},"Add your default headers here These headers will be part of every request. They can be overwritten per request option")],-1),pe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"defaultTimeout?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},[t("set global timeout for requests in ms "),e("strong",null,[e("code",null,"Default")]),t(),e("code",null,"ts 30000 ")])],-1),fe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"enableOpentelemetry?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},"enable Opentelemetry tracing. The client will be handled as own ressource.")],-1),ue=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"enableRestApiExpose?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},"expose commands as regular REST endpoints when they are configured as endpoints")],-1),ge=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The instance id of the event bridge. If not set, a id will generated each time a instance is created. Use this if there is a need to always have the same instance id.")],-1),me=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isKeepAlive?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},"If set to false, the HTTP client will not reuse the same connection for multiple requests. Default is true.")],-1),xe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"logLevel?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"LogLevelName")]),e("td",{style:{"text-align":"left"}},"the loglevel if no logger instance is given")],-1),ye=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"logger?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Logger")]),e("td",{style:{"text-align":"left"}},"A logger instance")],-1),be=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"name?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"Name of the client")],-1),_e=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"pathPrefix?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the prefix to be used for exposing commands as endpoints expecting a event bus message")],-1),Ce=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serve")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"options"),t(": { "),e("code",null,"fetch"),t(": ("),e("code",null,"request"),t(": "),e("code",null,"Request"),t(") => "),e("code",null,"unknown"),t(" ; "),e("code",null,"hostname?"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"port?"),t(": "),e("code",null,"number"),t(" }) => "),e("code",null,"Server"),t("<typeof "),e("code",null,"IncomingMessage"),t(", typeof "),e("code",null,"ServerResponse"),t(">")]),e("td",{style:{"text-align":"left"}},[t("The serve function is depending on the runtime. - Bun: "),e("code",null,"Bun.serve"),t(" - Node.js: "),e("code",null,"serve"),t(" function from additional package "),e("code",null,"@hono/hono-node-server"),t(" - Deno: "),e("code",null,"serve"),t(" function from package "),e("code",null,"https://deno.land/std/http/server.ts"),t(),e("strong",null,[e("code",null,"See")]),t(" https://hono.dev")])],-1),ve=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serverHost?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"Host of the server.")],-1),ke=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serverPort?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"Port of the server.")],-1),Te=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"spanProcessor?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SpanProcessor")]),e("td",{style:{"text-align":"left"}},"Opentelemetry span processor")],-1),De=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionPayloadAsCloudEvent?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},[t("subscription invocations are wrapped in CloudEvent "),e("strong",null,[e("code",null,"Link")]),t(" https://github.com/cloudevents/spec/tree/v1.0")])],-1),Pe=n('<h4 id="inherited-from-2" tabindex="-1"><a class="header-anchor" href="#inherited-from-2" aria-hidden="true">#</a> Inherited from</h4><p>HttpClient.config</p><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/HttpClient/HttpClient.impl.d.ts:20</p><hr><h3 id="logger" tabindex="-1"><a class="header-anchor" href="#logger" aria-hidden="true">#</a> logger</h3><p>• <strong>logger</strong>: <code>Logger</code></p><h4 id="inherited-from-3" tabindex="-1"><a class="header-anchor" href="#inherited-from-3" aria-hidden="true">#</a> Inherited from</h4><p>HttpClient.logger</p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/HttpClient/HttpClient.impl.d.ts:19</p><hr><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> name</h3><p>• <strong>name</strong>: <code>string</code></p><h4 id="inherited-from-4" tabindex="-1"><a class="header-anchor" href="#inherited-from-4" aria-hidden="true">#</a> Inherited from</h4><p>HttpClient.name</p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/HttpClient/HttpClient.impl.d.ts:18</p><hr><h3 id="spanprocessor" tabindex="-1"><a class="header-anchor" href="#spanprocessor" aria-hidden="true">#</a> spanProcessor</h3><p>• <strong>spanProcessor</strong>: <code>undefined</code> | <code>SpanProcessor</code></p><h4 id="inherited-from-5" tabindex="-1"><a class="header-anchor" href="#inherited-from-5" aria-hidden="true">#</a> Inherited from</h4><p>HttpClient.spanProcessor</p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/HttpClient/HttpClient.impl.d.ts:23</p><hr><h3 id="timeout" tabindex="-1"><a class="header-anchor" href="#timeout" aria-hidden="true">#</a> timeout</h3><p>• <strong>timeout</strong>: <code>number</code></p><h4 id="inherited-from-6" tabindex="-1"><a class="header-anchor" href="#inherited-from-6" aria-hidden="true">#</a> Inherited from</h4><p>HttpClient.timeout</p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/HttpClient/HttpClient.impl.d.ts:21</p><hr><h3 id="traceprovider" tabindex="-1"><a class="header-anchor" href="#traceprovider" aria-hidden="true">#</a> traceProvider</h3><p>• <strong>traceProvider</strong>: <code>NodeTracerProvider</code></p><h4 id="inherited-from-7" tabindex="-1"><a class="header-anchor" href="#inherited-from-7" aria-hidden="true">#</a> Inherited from</h4><p>HttpClient.traceProvider</p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/HttpClient/HttpClient.impl.d.ts:24</p><h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="delete" tabindex="-1"><a class="header-anchor" href="#delete" aria-hidden="true">#</a> delete</h3><p>▸ <strong>delete</strong>&lt;<code>T</code>&gt;(<code>path</code>, <code>options?</code>): <code>Promise</code>&lt;<code>T</code>&gt;</p><p>DELETE request</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>path</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>options?</code></td><td style="text-align:left;"><code>HttpClientRequestOptions</code></td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>T</code>&gt;</p><h4 id="inherited-from-8" tabindex="-1"><a class="header-anchor" href="#inherited-from-8" aria-hidden="true">#</a> Inherited from</h4><p>HttpClient.delete</p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/HttpClient/HttpClient.impl.d.ts:92</p><hr><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> get</h3><p>▸ <strong>get</strong>&lt;<code>T</code>&gt;(<code>path</code>, <code>options?</code>): <code>Promise</code>&lt;<code>T</code>&gt;</p><p>GET request</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>path</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>options?</code></td><td style="text-align:left;"><code>HttpClientRequestOptions</code></td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>T</code>&gt;</p><h4 id="inherited-from-9" tabindex="-1"><a class="header-anchor" href="#inherited-from-9" aria-hidden="true">#</a> Inherited from</h4><p>HttpClient.get</p><h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/HttpClient/HttpClient.impl.d.ts:64</p><hr><h3 id="getapipathforcommand" tabindex="-1"><a class="header-anchor" href="#getapipathforcommand" aria-hidden="true">#</a> getApiPathForCommand</h3><p>▸ <strong>getApiPathForCommand</strong>(<code>addess</code>, <code>metadata</code>): <code>string</code></p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>addess</code></td><td style="text-align:left;"><code>EBMessageAddress</code></td></tr><tr><td style="text-align:left;"><code>metadata</code></td><td style="text-align:left;"><code>Object</code></td></tr><tr><td style="text-align:left;"><code>metadata.expose</code></td><td style="text-align:left;">{ <code>contentEncodingRequest?</code>: <code>string</code> ; <code>contentEncodingResponse?</code>: <code>string</code> ; <code>contentTypeRequest?</code>: <code>string</code> ; <code>contentTypeResponse?</code>: <code>string</code> ; <code>deprecated?</code>: <code>boolean</code> ; <code>inputPayload?</code>: <code>SchemaObject</code> ; <code>outputPayload?</code>: <code>SchemaObject</code> ; <code>parameter?</code>: <code>SchemaObject</code> } &amp; { <code>http</code>: { <code>method</code>: <code>&quot;GET&quot;</code> | <code>&quot;POST&quot;</code> | <code>&quot;PATCH&quot;</code> | <code>&quot;PUT&quot;</code> | <code>&quot;DELETE&quot;</code> ; <code>openApi?</code>: { <code>additionalStatusCodes?</code>: <code>StatusCode</code>[] ; <code>description</code>: <code>string</code> ; <code>isSecure</code>: <code>boolean</code> ; <code>operationId?</code>: <code>string</code> ; <code>query?</code>: <code>QueryParameter</code>&lt;{}&gt;[] ; <code>summary</code>: <code>string</code> ; <code>tags?</code>: <code>string</code>[] } ; <code>path</code>: <code>string</code> } }</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="implementation-of" tabindex="-1"><a class="header-anchor" href="#implementation-of" aria-hidden="true">#</a> Implementation of</h4><p>HttpEventBridgeClient.getApiPathForCommand</p><h4 id="defined-in-10" tabindex="-1"><a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a> Defined in</h4>',77),He={href:"https://github.com/sebastianwessel/purista/blob/master/packages/dapr-sdk/src/DaprClient/DaprClient.impl.ts#L31",target:"_blank",rel:"noopener noreferrer"},we=n('<hr><h3 id="getinternalpathforcommand" tabindex="-1"><a class="header-anchor" href="#getinternalpathforcommand" aria-hidden="true">#</a> getInternalPathForCommand</h3><p>▸ <strong>getInternalPathForCommand</strong>(<code>address</code>): <code>string</code></p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>address</code></td><td style="text-align:left;"><code>EBMessageAddress</code></td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="implementation-of-1" tabindex="-1"><a class="header-anchor" href="#implementation-of-1" aria-hidden="true">#</a> Implementation of</h4><p>HttpEventBridgeClient.getInternalPathForCommand</p><h4 id="defined-in-11" tabindex="-1"><a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a> Defined in</h4>',10),Ee={href:"https://github.com/sebastianwessel/purista/blob/master/packages/dapr-sdk/src/DaprClient/DaprClient.impl.ts#L26",target:"_blank",rel:"noopener noreferrer"},Ae=n('<hr><h3 id="getinternalpathforsubscription" tabindex="-1"><a class="header-anchor" href="#getinternalpathforsubscription" aria-hidden="true">#</a> getInternalPathForSubscription</h3><p>▸ <strong>getInternalPathForSubscription</strong>(<code>address</code>): <code>string</code></p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>address</code></td><td style="text-align:left;"><code>EBMessageAddress</code></td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="implementation-of-2" tabindex="-1"><a class="header-anchor" href="#implementation-of-2" aria-hidden="true">#</a> Implementation of</h4><p>HttpEventBridgeClient.getInternalPathForSubscription</p><h4 id="defined-in-12" tabindex="-1"><a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a> Defined in</h4>',10),Ie={href:"https://github.com/sebastianwessel/purista/blob/master/packages/dapr-sdk/src/DaprClient/DaprClient.impl.ts#L21",target:"_blank",rel:"noopener noreferrer"},Re=n('<hr><h3 id="gettracer" tabindex="-1"><a class="header-anchor" href="#gettracer" aria-hidden="true">#</a> getTracer</h3><p>▸ <strong>getTracer</strong>(): <code>Tracer</code></p><p>Returns open telemetry tracer of this service</p><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code>Tracer</code></p><p>Tracer</p><h4 id="inherited-from-10" tabindex="-1"><a class="header-anchor" href="#inherited-from-10" aria-hidden="true">#</a> Inherited from</h4><p>HttpClient.getTracer</p><h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/HttpClient/HttpClient.impl.d.ts:32</p><hr><h3 id="invoke" tabindex="-1"><a class="header-anchor" href="#invoke" aria-hidden="true">#</a> invoke</h3><p>▸ <strong>invoke</strong>(<code>command</code>, <code>headers?</code>, <code>timeout?</code>): <code>Promise</code>&lt;<code>CommandResponse</code>&gt;</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>command</code></td><td style="text-align:left;"><code>Object</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>command.contentEncoding</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">content encoding of message payload</td></tr><tr><td style="text-align:left;"><code>command.contentType</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">content type of message payload</td></tr><tr><td style="text-align:left;"><code>command.correlationId</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">correlation id to know which command response referrs to which command</td></tr><tr><td style="text-align:left;"><code>command.eventName?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">event name for this message</td></tr><tr><td style="text-align:left;"><code>command.id</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">global unique id of message</td></tr><tr><td style="text-align:left;"><code>command.instanceId</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">instance id of eventbridge which was creating the message</td></tr><tr><td style="text-align:left;"><code>command.messageType</code></td><td style="text-align:left;"><code>Command</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>command.otp?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">stringified Opentelemetry parent trace id</td></tr><tr><td style="text-align:left;"><code>command.payload</code></td><td style="text-align:left;"><code>Object</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>command.payload.parameter</code></td><td style="text-align:left;"><code>unknown</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>command.payload.payload</code></td><td style="text-align:left;"><code>unknown</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>command.principalId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">principal id</td></tr><tr><td style="text-align:left;"><code>command.receiver</code></td><td style="text-align:left;"><code>EBMessageAddress</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>command.sender</code></td><td style="text-align:left;"><code>EBMessageAddress</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>command.timestamp</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">timestamp of message creation time</td></tr><tr><td style="text-align:left;"><code>command.traceId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">trace id of message</td></tr><tr><td style="text-align:left;"><code>headers?</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>timeout?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">-</td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>CommandResponse</code>&gt;</p><h4 id="implementation-of-3" tabindex="-1"><a class="header-anchor" href="#implementation-of-3" aria-hidden="true">#</a> Implementation of</h4><p>HttpEventBridgeClient.invoke</p><h4 id="defined-in-14" tabindex="-1"><a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a> Defined in</h4>',21),qe={href:"https://github.com/sebastianwessel/purista/blob/master/packages/dapr-sdk/src/DaprClient/DaprClient.impl.ts#L36",target:"_blank",rel:"noopener noreferrer"},Se=n('<hr><h3 id="issidecaravailable" tabindex="-1"><a class="header-anchor" href="#issidecaravailable" aria-hidden="true">#</a> isSidecarAvailable</h3><p>▸ <strong>isSidecarAvailable</strong>(): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="implementation-of-4" tabindex="-1"><a class="header-anchor" href="#implementation-of-4" aria-hidden="true">#</a> Implementation of</h4><p>HttpEventBridgeClient.isSidecarAvailable</p><h4 id="defined-in-15" tabindex="-1"><a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a> Defined in</h4>',8),Be={href:"https://github.com/sebastianwessel/purista/blob/master/packages/dapr-sdk/src/DaprClient/DaprClient.impl.ts#L66",target:"_blank",rel:"noopener noreferrer"},Ne=n('<hr><h3 id="patch" tabindex="-1"><a class="header-anchor" href="#patch" aria-hidden="true">#</a> patch</h3><p>▸ <strong>patch</strong>&lt;<code>T</code>&gt;(<code>path</code>, <code>payload</code>, <code>options?</code>): <code>Promise</code>&lt;<code>T</code>&gt;</p><p>PATCH request</p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>path</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>options?</code></td><td style="text-align:left;"><code>HttpClientRequestOptions</code></td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>T</code>&gt;</p><h4 id="inherited-from-11" tabindex="-1"><a class="header-anchor" href="#inherited-from-11" aria-hidden="true">#</a> Inherited from</h4><p>HttpClient.patch</p><h4 id="defined-in-16" tabindex="-1"><a class="header-anchor" href="#defined-in-16" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/HttpClient/HttpClient.impl.d.ts:85</p><hr><h3 id="post" tabindex="-1"><a class="header-anchor" href="#post" aria-hidden="true">#</a> post</h3><p>▸ <strong>post</strong>&lt;<code>T</code>&gt;(<code>path</code>, <code>payload</code>, <code>options?</code>): <code>Promise</code>&lt;<code>T</code>&gt;</p><p>POST request</p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>path</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>options?</code></td><td style="text-align:left;"><code>HttpClientRequestOptions</code></td></tr></tbody></table><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>T</code>&gt;</p><h4 id="inherited-from-12" tabindex="-1"><a class="header-anchor" href="#inherited-from-12" aria-hidden="true">#</a> Inherited from</h4><p>HttpClient.post</p><h4 id="defined-in-17" tabindex="-1"><a class="header-anchor" href="#defined-in-17" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/HttpClient/HttpClient.impl.d.ts:71</p><hr><h3 id="put" tabindex="-1"><a class="header-anchor" href="#put" aria-hidden="true">#</a> put</h3><p>▸ <strong>put</strong>&lt;<code>T</code>&gt;(<code>path</code>, <code>payload</code>, <code>options?</code>): <code>Promise</code>&lt;<code>T</code>&gt;</p><p>PUT request</p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>path</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>options?</code></td><td style="text-align:left;"><code>HttpClientRequestOptions</code></td></tr></tbody></table><h4 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>T</code>&gt;</p><h4 id="inherited-from-13" tabindex="-1"><a class="header-anchor" href="#inherited-from-13" aria-hidden="true">#</a> Inherited from</h4><p>HttpClient.put</p><h4 id="defined-in-18" tabindex="-1"><a class="header-anchor" href="#defined-in-18" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/HttpClient/HttpClient.impl.d.ts:78</p><hr><h3 id="sendevent" tabindex="-1"><a class="header-anchor" href="#sendevent" aria-hidden="true">#</a> sendEvent</h3><p>▸ <strong>sendEvent</strong>(<code>message</code>, <code>headers?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>message</code></td><td style="text-align:left;"><code>EBMessage</code></td></tr><tr><td style="text-align:left;"><code>headers?</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</td></tr></tbody></table><h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="implementation-of-5" tabindex="-1"><a class="header-anchor" href="#implementation-of-5" aria-hidden="true">#</a> Implementation of</h4><p>HttpEventBridgeClient.sendEvent</p><h4 id="defined-in-19" tabindex="-1"><a class="header-anchor" href="#defined-in-19" aria-hidden="true">#</a> Defined in</h4>',52),Oe={href:"https://github.com/sebastianwessel/purista/blob/master/packages/dapr-sdk/src/DaprClient/DaprClient.impl.ts#L51",target:"_blank",rel:"noopener noreferrer"},Le=n('<hr><h3 id="setbearertoken" tabindex="-1"><a class="header-anchor" href="#setbearertoken" aria-hidden="true">#</a> setBearerToken</h3><p>▸ <strong>setBearerToken</strong>(<code>token</code>): <code>void</code></p><p>Set the bearer token for all following requests.</p><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>token</code></td><td style="text-align:left;"><code>undefined</code> | <code>string</code></td><td style="text-align:left;">the bearer token</td></tr></tbody></table><h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-14" tabindex="-1"><a class="header-anchor" href="#inherited-from-14" aria-hidden="true">#</a> Inherited from</h4><p>HttpClient.setBearerToken</p><h4 id="defined-in-20" tabindex="-1"><a class="header-anchor" href="#defined-in-20" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/HttpClient/HttpClient.impl.d.ts:47</p><hr><h3 id="startactivespan" tabindex="-1"><a class="header-anchor" href="#startactivespan" aria-hidden="true">#</a> startActiveSpan</h3><p>▸ <strong>startActiveSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>context</code>, <code>fn</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p><p>Start a child span for opentelemetry tracking</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">name of span</td></tr><tr><td style="text-align:left;"><code>opts</code></td><td style="text-align:left;"><code>SpanOptions</code></td><td style="text-align:left;">span options</td></tr><tr><td style="text-align:left;"><code>context</code></td><td style="text-align:left;"><code>undefined</code> | <code>Context</code></td><td style="text-align:left;">optional context</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(<code>span</code>: <code>Span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</td><td style="text-align:left;">function to be executed within the span</td></tr></tbody></table><h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><p>return value of fn</p><h4 id="inherited-from-15" tabindex="-1"><a class="header-anchor" href="#inherited-from-15" aria-hidden="true">#</a> Inherited from</h4><p>HttpClient.startActiveSpan</p><h4 id="defined-in-21" tabindex="-1"><a class="header-anchor" href="#defined-in-21" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/HttpClient/HttpClient.impl.d.ts:41</p>',27);function Fe(Ue,je){const a=i("RouterLink"),r=i("ExternalLinkIcon");return s(),c("div",null,[e("p",null,[d(a,{to:"/api/"},{default:l(()=>[t("PURISTA API")]),_:1}),t(" / "),d(a,{to:"/api/modules.html"},{default:l(()=>[t("Modules")]),_:1}),t(" / "),d(a,{to:"/api/modules/purista_dapr_sdk.html"},{default:l(()=>[t("@purista/dapr-sdk")]),_:1}),t(" / DaprClient")]),p,e("p",null,[d(a,{to:"/api/modules/purista_dapr_sdk.html"},{default:l(()=>[t("@purista/dapr-sdk")]),_:1}),t(".DaprClient")]),f,e("ul",null,[e("li",null,[e("p",null,[u,t("<"),g,t("<"),d(a,{to:"/api/modules/purista_dapr_sdk.html#dapreventbridgeconfig"},{default:l(()=>[m]),_:1}),t(">>")]),x])]),y,e("ul",null,[e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#constructor"},{default:l(()=>[t("constructor")]),_:1})])]),b,e("ul",null,[e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#baseurl"},{default:l(()=>[t("baseUrl")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#config"},{default:l(()=>[t("config")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#logger"},{default:l(()=>[t("logger")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#name"},{default:l(()=>[t("name")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#spanprocessor"},{default:l(()=>[t("spanProcessor")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#timeout"},{default:l(()=>[t("timeout")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#traceprovider"},{default:l(()=>[t("traceProvider")]),_:1})])]),_,e("ul",null,[e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#delete"},{default:l(()=>[t("delete")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#get"},{default:l(()=>[t("get")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#getapipathforcommand"},{default:l(()=>[t("getApiPathForCommand")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#getinternalpathforcommand"},{default:l(()=>[t("getInternalPathForCommand")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#getinternalpathforsubscription"},{default:l(()=>[t("getInternalPathForSubscription")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#gettracer"},{default:l(()=>[t("getTracer")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#invoke"},{default:l(()=>[t("invoke")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#issidecaravailable"},{default:l(()=>[t("isSidecarAvailable")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#patch"},{default:l(()=>[t("patch")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#post"},{default:l(()=>[t("post")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#put"},{default:l(()=>[t("put")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#sendevent"},{default:l(()=>[t("sendEvent")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#setbearertoken"},{default:l(()=>[t("setBearerToken")]),_:1})]),e("li",null,[d(a,{to:"/api/classes/purista_dapr_sdk.DaprClient.html#startactivespan"},{default:l(()=>[t("startActiveSpan")]),_:1})])]),C,e("table",null,[v,e("tbody",null,[k,T,D,P,H,w,E,e("tr",null,[A,e("td",I,[d(a,{to:"/api/modules/purista_dapr_sdk.html#daprclientconfig"},{default:l(()=>[R]),_:1})]),q]),S,B,N,O,L,F,U,j,M,V,G,K,Q,z,J,W,X])]),Y,e("table",null,[Z,e("tbody",null,[$,ee,te,de,ae,le,e("tr",null,[ne,e("td",re,[d(a,{to:"/api/modules/purista_dapr_sdk.html#daprclientconfig"},{default:l(()=>[ie]),_:1})]),oe]),se,ce,he,pe,fe,ue,ge,me,xe,ye,be,_e,Ce,ve,ke,Te,De])]),Pe,e("p",null,[e("a",He,[t("dapr-sdk/src/DaprClient/DaprClient.impl.ts:31"),d(r)])]),we,e("p",null,[e("a",Ee,[t("dapr-sdk/src/DaprClient/DaprClient.impl.ts:26"),d(r)])]),Ae,e("p",null,[e("a",Ie,[t("dapr-sdk/src/DaprClient/DaprClient.impl.ts:21"),d(r)])]),Re,e("p",null,[e("a",qe,[t("dapr-sdk/src/DaprClient/DaprClient.impl.ts:36"),d(r)])]),Se,e("p",null,[e("a",Be,[t("dapr-sdk/src/DaprClient/DaprClient.impl.ts:66"),d(r)])]),Ne,e("p",null,[e("a",Oe,[t("dapr-sdk/src/DaprClient/DaprClient.impl.ts:51"),d(r)])]),Le])}const Ge=o(h,[["render",Fe],["__file","purista_dapr_sdk.DaprClient.html.vue"]]);export{Ge as default};
