import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as l,c as i,b as n,d as e,e as t,a as o}from"./app-ccf1f840.js";const c="/graphic/grafana_screenshot.png",d={},h=n("h2",{id:"example",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#example","aria-hidden":"true"},"#"),e(" Example")],-1),p=n("p",null,[n("img",{src:c,alt:"Grafana"})],-1),u={href:"https://grafana.com",target:"_blank",rel:"noopener noreferrer"},_=n("br",null,null,-1),m=n("br",null,null,-1),f={href:"https://github.com/sebastianwessel/purista",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"examples/fullexample",-1),b=o(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run grafana:up
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),v={href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer"},x=n("em",null,"Explore",-1),k=n("em",null,"Tempo",-1),w=o(`<p>Start the example:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run grafana:start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),y={href:"http://localhost:8080/",target:"_blank",rel:"noopener noreferrer"},I=n("br",null,null,-1),T=n("br",null,null,-1),S=n("em",null,"Loki",-1),U=n("em",null,"Tempo",-1),E=o(`<p>To stop and cleanup and stop all docker containers:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run grafana:down
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),G={href:"https://twitter.com/purista_js",target:"_blank",rel:"noopener noreferrer"},L={href:"https://discord.gg/9feaUm3H2v",target:"_blank",rel:"noopener noreferrer"};function N(A,O){const a=r("ExternalLinkIcon");return l(),i("div",null,[h,p,n("p",null,[n("strong",null,[e("Official website: "),n("a",u,[e("Grafana Labs"),t(a)])])]),n("p",null,[e("See it in action and try out!"),_,e(" You will need docker and docker-compose installed at your machine."),m,e(" At the "),n("a",f,[e("PURISTA repository"),t(a)]),e(" in "),g,e(" you will find a running example:")]),b,n("p",null,[e("Open the Grafana UI in your browser: "),n("a",v,[e("http://localhost:3000"),t(a)]),e(" and go to page "),x,e(" and select "),k,e(".")]),w,n("p",null,[e("To generate some traces, go to the OpenAPI UI at "),n("a",y,[e("http://localhost:8080/"),t(a)]),e(" and call some commands."),I,e(" In the example, the log output is also sent to Grafana Loki and certain JSON fields are pre-configured."),T,e(" If you switch to "),S,e(" in the Grafana UI, you can see, that if you expand a log entry, the trace id is a link, which opens "),U,e(" with the selected trace and span for the log entry.")]),E,n("p",null,[n("strong",null,[e("You can follow updated on Twitter "),n("a",G,[e("@purista_js"),t(a)]),e(" or join the "),n("a",L,[e("Discord server"),t(a)]),e(" to get in touch with PURISTA maintainers and other developers.")])])])}const B=s(d,[["render",N],["__file","grafana.html.vue"]]);export{B as default};
