import{_ as s,c as t,o as i,ag as e,j as o}from"./chunks/framework.U_AETC1W.js";const f=JSON.parse('{"title":"Class: RedisConfigStore<M, F, S>","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/redis-config-store/classes/RedisConfigStore.md","filePath":"api/@purista/redis-config-store/classes/RedisConfigStore.md","lastUpdated":1739900666000}'),r={name:"api/@purista/redis-config-store/classes/RedisConfigStore.md"};function n(l,a,c,d,h,p){return i(),t("div",null,a[0]||(a[0]=[e(`<p><a href="./../README.html"><strong>@purista/redis-config-store v2.0.0</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/redis-config-store</a> / RedisConfigStore</p><h1 id="class-redisconfigstore-m-f-s" tabindex="-1">Class: RedisConfigStore&lt;M, F, S&gt; <a class="header-anchor" href="#class-redisconfigstore-m-f-s" aria-label="Permalink to &quot;Class: RedisConfigStore\\&lt;M, F, S\\&gt;&quot;">​</a></h1><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/redis-config-store/src/RedisConfigStore.impl.ts#L41" target="_blank" rel="noreferrer">redis-config-store/src/RedisConfigStore.impl.ts:41</a></p><p>A config store for using redis as storage. Config values are stored as stringified JSON.</p><p>Per default, setting/changing and removal of values are enabled.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> enableGet: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// optional, default is true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> enableRemove: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// optional, default is true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> enableSet: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// optional, default is true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;redis://alice:foobared@awesome.redis.server:6379&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> store</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RedisConfigStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ config })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> store.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;configKey&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,{ myConfig: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;value&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> store.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;configKey&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(value) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// outputs: { configKey: { myConfig: &#39;value&#39; } }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> store.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;configKey&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> store.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;configKey&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(value) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// outputs: undefined</span></span></code></pre></div><p>See documentation of underlaying redis lib package for detailed configuration options.</p><h2 id="see" tabindex="-1">See <a class="header-anchor" href="#see" aria-label="Permalink to &quot;See&quot;">​</a></h2><p><a href="https://redis.js.org" target="_blank" rel="noreferrer">NODE-REDIS</a></p><h2 id="extends" tabindex="-1">Extends <a class="header-anchor" href="#extends" aria-label="Permalink to &quot;Extends&quot;">​</a></h2><ul><li><a href="./../../core/classes/ConfigStoreBaseClass.html"><code>ConfigStoreBaseClass</code></a>&lt;<a href="./../type-aliases/RedisStoreConfig.html"><code>RedisStoreConfig</code></a>&lt;<code>M</code>, <code>F</code>, <code>S</code>&gt;&gt;</li></ul><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>M</strong> <em>extends</em> <code>RedisModules</code> = <code>RedisModules</code></p><p>• <strong>F</strong> <em>extends</em> <code>RedisFunctions</code> = <code>RedisFunctions</code></p><p>• <strong>S</strong> <em>extends</em> <code>RedisScripts</code> = <code>RedisScripts</code></p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="new-redisconfigstore" tabindex="-1">new RedisConfigStore() <a class="header-anchor" href="#new-redisconfigstore" aria-label="Permalink to &quot;new RedisConfigStore()&quot;">​</a></h3><blockquote><p><strong>new RedisConfigStore</strong>&lt;<code>M</code>, <code>F</code>, <code>S</code>&gt;(<code>config</code>?): <a href="./RedisConfigStore.html"><code>RedisConfigStore</code></a>&lt;<code>M</code>, <code>F</code>, <code>S</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/redis-config-store/src/RedisConfigStore.impl.ts#L48" target="_blank" rel="noreferrer">redis-config-store/src/RedisConfigStore.impl.ts:48</a></p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="config" tabindex="-1">config? <a class="header-anchor" href="#config" aria-label="Permalink to &quot;config?&quot;">​</a></h5><h6 id="cachettl" tabindex="-1">cacheTtl? <a class="header-anchor" href="#cachettl" aria-label="Permalink to &quot;cacheTtl?&quot;">​</a></h6><p><code>number</code></p><p>Cache time to live in ms</p><h6 id="config-1" tabindex="-1">config? <a class="header-anchor" href="#config-1" aria-label="Permalink to &quot;config?&quot;">​</a></h6><p><code>RedisClientOptions</code>&lt;<code>M</code>, <code>F</code>, <code>S</code>&gt;</p><h6 id="enablecache" tabindex="-1">enableCache? <a class="header-anchor" href="#enablecache" aria-label="Permalink to &quot;enableCache?&quot;">​</a></h6><p><code>boolean</code></p><p>Enable cache</p><h6 id="enableget" tabindex="-1">enableGet? <a class="header-anchor" href="#enableget" aria-label="Permalink to &quot;enableGet?&quot;">​</a></h6><p><code>boolean</code></p><p>Enable generally get method</p><h6 id="enableremove" tabindex="-1">enableRemove? <a class="header-anchor" href="#enableremove" aria-label="Permalink to &quot;enableRemove?&quot;">​</a></h6><p><code>boolean</code></p><p>Enable generally remove method</p><h6 id="enableset" tabindex="-1">enableSet? <a class="header-anchor" href="#enableset" aria-label="Permalink to &quot;enableSet?&quot;">​</a></h6><p><code>boolean</code></p><p>Enable generally set method</p><h6 id="logger" tabindex="-1">logger? <a class="header-anchor" href="#logger" aria-label="Permalink to &quot;logger?&quot;">​</a></h6><p><a href="./../../core/classes/Logger.html"><code>Logger</code></a></p><p>A logger instance</p><h6 id="loglevel" tabindex="-1">logLevel? <a class="header-anchor" href="#loglevel" aria-label="Permalink to &quot;logLevel?&quot;">​</a></h6><p><a href="./../../core/type-aliases/LogLevelName.html"><code>LogLevelName</code></a></p><p>A log level for new logger if logger is not set</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./RedisConfigStore.html"><code>RedisConfigStore</code></a>&lt;<code>M</code>, <code>F</code>, <code>S</code>&gt;</p><h4 id="overrides" tabindex="-1">Overrides <a class="header-anchor" href="#overrides" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./../../core/classes/ConfigStoreBaseClass.html"><code>ConfigStoreBaseClass</code></a>.<a href="./../../core/classes/ConfigStoreBaseClass.html#constructors"><code>constructor</code></a></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="cache" tabindex="-1">cache <a class="header-anchor" href="#cache" aria-label="Permalink to &quot;cache&quot;">​</a></h3><blockquote><p><strong>cache</strong>: <a href="./../../core/type-aliases/ConfigStoreCacheMap.html"><code>ConfigStoreCacheMap</code></a></p></blockquote><p>Defined in: core/dist/commonjs/core/ConfigStore/ConfigStoreBaseClass.impl.d.ts:20</p><h4 id="inherited-from" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./../../core/classes/ConfigStoreBaseClass.html"><code>ConfigStoreBaseClass</code></a>.<a href="./../../core/classes/ConfigStoreBaseClass.html#cache"><code>cache</code></a></p><hr><h3 id="client" tabindex="-1">client <a class="header-anchor" href="#client" aria-label="Permalink to &quot;client&quot;">​</a></h3><blockquote><p><strong>client</strong>: <code>RedisClientType</code>&lt;<code>M</code>, <code>F</code>, <code>S</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/redis-config-store/src/RedisConfigStore.impl.ts#L46" target="_blank" rel="noreferrer">redis-config-store/src/RedisConfigStore.impl.ts:46</a></p><hr><h3 id="config-2" tabindex="-1">config <a class="header-anchor" href="#config-2" aria-label="Permalink to &quot;config&quot;">​</a></h3><blockquote><p><strong>config</strong>: <code>object</code></p></blockquote><p>Defined in: core/dist/commonjs/core/ConfigStore/ConfigStoreBaseClass.impl.d.ts:18</p><h4 id="cachettl-1" tabindex="-1">cacheTtl? <a class="header-anchor" href="#cachettl-1" aria-label="Permalink to &quot;cacheTtl?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>cacheTtl</strong>: <code>number</code></p></blockquote><p>Cache time to live in ms</p><h4 id="config-3" tabindex="-1">config? <a class="header-anchor" href="#config-3" aria-label="Permalink to &quot;config?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>config</strong>: <code>RedisClientOptions</code>&lt;<code>M</code>, <code>F</code>, <code>S</code>&gt;</p></blockquote><h4 id="enablecache-1" tabindex="-1">enableCache? <a class="header-anchor" href="#enablecache-1" aria-label="Permalink to &quot;enableCache?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>enableCache</strong>: <code>boolean</code></p></blockquote><p>Enable cache</p><h4 id="enableget-1" tabindex="-1">enableGet? <a class="header-anchor" href="#enableget-1" aria-label="Permalink to &quot;enableGet?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>enableGet</strong>: <code>boolean</code></p></blockquote><p>Enable generally get method</p><h4 id="enableremove-1" tabindex="-1">enableRemove? <a class="header-anchor" href="#enableremove-1" aria-label="Permalink to &quot;enableRemove?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>enableRemove</strong>: <code>boolean</code></p></blockquote><p>Enable generally remove method</p><h4 id="enableset-1" tabindex="-1">enableSet? <a class="header-anchor" href="#enableset-1" aria-label="Permalink to &quot;enableSet?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>enableSet</strong>: <code>boolean</code></p></blockquote><p>Enable generally set method</p><h4 id="logger-1" tabindex="-1">logger? <a class="header-anchor" href="#logger-1" aria-label="Permalink to &quot;logger?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>logger</strong>: <a href="./../../core/classes/Logger.html"><code>Logger</code></a></p></blockquote><p>A logger instance</p><h4 id="loglevel-1" tabindex="-1">logLevel? <a class="header-anchor" href="#loglevel-1" aria-label="Permalink to &quot;logLevel?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>logLevel</strong>: <a href="./../../core/type-aliases/LogLevelName.html"><code>LogLevelName</code></a></p></blockquote><p>A log level for new logger if logger is not set</p><h4 id="inherited-from-1" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-1" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./../../core/classes/ConfigStoreBaseClass.html"><code>ConfigStoreBaseClass</code></a>.<a href="./../../core/classes/ConfigStoreBaseClass.html#config-1"><code>config</code></a></p><hr><h3 id="logger-2" tabindex="-1">logger <a class="header-anchor" href="#logger-2" aria-label="Permalink to &quot;logger&quot;">​</a></h3><blockquote><p><strong>logger</strong>: <a href="./../../core/classes/Logger.html"><code>Logger</code></a></p></blockquote><p>Defined in: core/dist/commonjs/core/ConfigStore/ConfigStoreBaseClass.impl.d.ts:17</p><h4 id="inherited-from-2" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-2" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./../../core/classes/ConfigStoreBaseClass.html"><code>ConfigStoreBaseClass</code></a>.<a href="./../../core/classes/ConfigStoreBaseClass.html#logger"><code>logger</code></a></p><hr><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h3><blockquote><p><strong>name</strong>: <code>string</code></p></blockquote><p>Defined in: core/dist/commonjs/core/ConfigStore/ConfigStoreBaseClass.impl.d.ts:19</p><h4 id="inherited-from-3" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-3" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./../../core/classes/ConfigStoreBaseClass.html"><code>ConfigStoreBaseClass</code></a>.<a href="./../../core/classes/ConfigStoreBaseClass.html#name-1"><code>name</code></a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="destroy" tabindex="-1">destroy() <a class="header-anchor" href="#destroy" aria-label="Permalink to &quot;destroy()&quot;">​</a></h3><blockquote><p><strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/redis-config-store/src/RedisConfigStore.impl.ts#L103" target="_blank" rel="noreferrer">redis-config-store/src/RedisConfigStore.impl.ts:103</a></p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="overrides-1" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-1" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./../../core/classes/ConfigStoreBaseClass.html"><code>ConfigStoreBaseClass</code></a>.<a href="./../../core/classes/ConfigStoreBaseClass.html#destroy"><code>destroy</code></a></p><hr><h3 id="getclient" tabindex="-1">getClient() <a class="header-anchor" href="#getclient" aria-label="Permalink to &quot;getClient()&quot;">​</a></h3><blockquote><p><code>protected</code> <strong>getClient</strong>(): <code>Promise</code>&lt;<code>RedisClientType</code>&lt;<code>M</code>, <code>F</code>, <code>S</code>&gt;&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/redis-config-store/src/RedisConfigStore.impl.ts#L54" target="_blank" rel="noreferrer">redis-config-store/src/RedisConfigStore.impl.ts:54</a></p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>RedisClientType</code>&lt;<code>M</code>, <code>F</code>, <code>S</code>&gt;&gt;</p><hr><h3 id="getconfig" tabindex="-1">getConfig() <a class="header-anchor" href="#getconfig" aria-label="Permalink to &quot;getConfig()&quot;">​</a></h3><blockquote><p><strong>getConfig</strong>&lt;<code>ConfigNames</code>&gt;(...<code>configNames</code>): <code>Promise</code>&lt;<a href="./../../core/type-aliases/ObjectWithKeysFromStringArray.html"><code>ObjectWithKeysFromStringArray</code></a>&lt;<code>ConfigNames</code>&gt;&gt;</p></blockquote><p>Defined in: core/dist/commonjs/core/ConfigStore/ConfigStoreBaseClass.impl.d.ts:37</p><p>Returns the values for given config properties. This function <strong>SHOULD NOT</strong> be overwritten by store implementation. For implementation overwrite protected <code>getConfigImpl</code></p><h4 id="type-parameters-1" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p>• <strong>ConfigNames</strong> <em>extends</em> <code>string</code>[]</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="confignames" tabindex="-1">configNames <a class="header-anchor" href="#confignames" aria-label="Permalink to &quot;configNames&quot;">​</a></h5><p>...<code>ConfigNames</code></p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<a href="./../../core/type-aliases/ObjectWithKeysFromStringArray.html"><code>ObjectWithKeysFromStringArray</code></a>&lt;<code>ConfigNames</code>&gt;&gt;</p>`,128),o("p",{"[configName]:":"",value:"","|":"",undefined:""},"an object of",-1),e('<h4 id="inherited-from-4" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-4" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./../../core/classes/ConfigStoreBaseClass.html"><code>ConfigStoreBaseClass</code></a>.<a href="./../../core/classes/ConfigStoreBaseClass.html#getconfig"><code>getConfig</code></a></p><hr><h3 id="getconfigimpl" tabindex="-1">getConfigImpl() <a class="header-anchor" href="#getconfigimpl" aria-label="Permalink to &quot;getConfigImpl()&quot;">​</a></h3><blockquote><p><code>protected</code> <strong>getConfigImpl</strong>&lt;<code>ConfigNames</code>&gt;(...<code>configNames</code>): <code>Promise</code>&lt;<a href="./../../core/type-aliases/ObjectWithKeysFromStringArray.html"><code>ObjectWithKeysFromStringArray</code></a>&lt;<code>ConfigNames</code>&gt;&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/redis-config-store/src/RedisConfigStore.impl.ts#L61" target="_blank" rel="noreferrer">redis-config-store/src/RedisConfigStore.impl.ts:61</a></p><p>This method must be overwritten by actual store implementation.</p><h4 id="type-parameters-2" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-2" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p>• <strong>ConfigNames</strong> <em>extends</em> <code>string</code>[]</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="confignames-1" tabindex="-1">configNames <a class="header-anchor" href="#confignames-1" aria-label="Permalink to &quot;configNames&quot;">​</a></h5><p>...<code>ConfigNames</code></p><p>list of config items</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<a href="./../../core/type-aliases/ObjectWithKeysFromStringArray.html"><code>ObjectWithKeysFromStringArray</code></a>&lt;<code>ConfigNames</code>&gt;&gt;</p>',15),o("p",{"[configName]:":"",value:"","|":"",undefined:""},"an object of",-1),e('<h4 id="overrides-2" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-2" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./../../core/classes/ConfigStoreBaseClass.html"><code>ConfigStoreBaseClass</code></a>.<a href="./../../core/classes/ConfigStoreBaseClass.html#getconfigimpl"><code>getConfigImpl</code></a></p><hr><h3 id="removeconfig" tabindex="-1">removeConfig() <a class="header-anchor" href="#removeconfig" aria-label="Permalink to &quot;removeConfig()&quot;">​</a></h3><blockquote><p><strong>removeConfig</strong>(<code>configName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: core/dist/commonjs/core/ConfigStore/ConfigStoreBaseClass.impl.d.ts:52</p><p>Removes the config item given by config name. This function <strong>SHOULD NOT</strong> be overwritten by store implementation. For implementation overwrite protected <code>removeConfigImpl</code></p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="configname" tabindex="-1">configName <a class="header-anchor" href="#configname" aria-label="Permalink to &quot;configName&quot;">​</a></h5><p><code>string</code></p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="inherited-from-5" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-5" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./../../core/classes/ConfigStoreBaseClass.html"><code>ConfigStoreBaseClass</code></a>.<a href="./../../core/classes/ConfigStoreBaseClass.html#removeconfig"><code>removeConfig</code></a></p><hr><h3 id="removeconfigimpl" tabindex="-1">removeConfigImpl() <a class="header-anchor" href="#removeconfigimpl" aria-label="Permalink to &quot;removeConfigImpl()&quot;">​</a></h3><blockquote><p><code>protected</code> <strong>removeConfigImpl</strong>(<code>configName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/redis-config-store/src/RedisConfigStore.impl.ts#L80" target="_blank" rel="noreferrer">redis-config-store/src/RedisConfigStore.impl.ts:80</a></p><p>This method must be overwritten by actual store implementation.</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="configname-1" tabindex="-1">configName <a class="header-anchor" href="#configname-1" aria-label="Permalink to &quot;configName&quot;">​</a></h5><p><code>string</code></p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="overrides-3" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-3" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./../../core/classes/ConfigStoreBaseClass.html"><code>ConfigStoreBaseClass</code></a>.<a href="./../../core/classes/ConfigStoreBaseClass.html#removeconfigimpl"><code>removeConfigImpl</code></a></p><hr><h3 id="setconfig" tabindex="-1">setConfig() <a class="header-anchor" href="#setconfig" aria-label="Permalink to &quot;setConfig()&quot;">​</a></h3><blockquote><p><strong>setConfig</strong>(<code>configName</code>, <code>configValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: core/dist/commonjs/core/ConfigStore/ConfigStoreBaseClass.impl.d.ts:69</p><p>Sets a config value This function <strong>SHOULD NOT</strong> be overwritten by store implementation. For implementation overwrite protected <code>setConfigImpl</code></p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="configname-2" tabindex="-1">configName <a class="header-anchor" href="#configname-2" aria-label="Permalink to &quot;configName&quot;">​</a></h5><p><code>string</code></p><h5 id="configvalue" tabindex="-1">configValue <a class="header-anchor" href="#configvalue" aria-label="Permalink to &quot;configValue&quot;">​</a></h5><p><code>unknown</code></p><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="inherited-from-6" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-6" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./../../core/classes/ConfigStoreBaseClass.html"><code>ConfigStoreBaseClass</code></a>.<a href="./../../core/classes/ConfigStoreBaseClass.html#setconfig"><code>setConfig</code></a></p><hr><h3 id="setconfigimpl" tabindex="-1">setConfigImpl() <a class="header-anchor" href="#setconfigimpl" aria-label="Permalink to &quot;setConfigImpl()&quot;">​</a></h3><blockquote><p><code>protected</code> <strong>setConfigImpl</strong>(<code>configName</code>, <code>configValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/redis-config-store/src/RedisConfigStore.impl.ts#L92" target="_blank" rel="noreferrer">redis-config-store/src/RedisConfigStore.impl.ts:92</a></p><p>This method must be overwritten by actual store implementation.</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="configname-3" tabindex="-1">configName <a class="header-anchor" href="#configname-3" aria-label="Permalink to &quot;configName&quot;">​</a></h5><p><code>string</code></p><h5 id="configvalue-1" tabindex="-1">configValue <a class="header-anchor" href="#configvalue-1" aria-label="Permalink to &quot;configValue&quot;">​</a></h5><p><code>unknown</code></p><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="overrides-4" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-4" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./../../core/classes/ConfigStoreBaseClass.html"><code>ConfigStoreBaseClass</code></a>.<a href="./../../core/classes/ConfigStoreBaseClass.html#setconfigimpl"><code>setConfigImpl</code></a></p>',54)]))}const m=s(r,[["render",n]]);export{f as __pageData,m as default};
