import{_ as i,W as r,X as c,Z as e,a0 as n,a1 as s,$ as t,Y as l,D as d}from"./framework-d89ed822.js";const u={},h=e("h1",{id:"namespace-internal",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#namespace-internal","aria-hidden":"true"},"#"),t(" Namespace: internal")],-1),p=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),_=e("h3",{id:"enumerations",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#enumerations","aria-hidden":"true"},"#"),t(" Enumerations")],-1),f=e("h3",{id:"enumeration-members",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#enumeration-members","aria-hidden":"true"},"#"),t(" Enumeration Members")],-1),m=e("h3",{id:"command",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#command","aria-hidden":"true"},"#"),t(" Command")],-1),y=e("h3",{id:"classes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#classes","aria-hidden":"true"},"#"),t(" Classes")],-1),g=e("h3",{id:"service",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#service","aria-hidden":"true"},"#"),t(" Service")],-1),x=e("h3",{id:"subscription",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscription","aria-hidden":"true"},"#"),t(" Subscription")],-1),v=e("h3",{id:"store",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#store","aria-hidden":"true"},"#"),t(" Store")],-1),b=e("h3",{id:"event-bridge",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#event-bridge","aria-hidden":"true"},"#"),t(" Event bridge")],-1),T=e("h3",{id:"interfaces",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#interfaces","aria-hidden":"true"},"#"),t(" Interfaces")],-1),S=e("h3",{id:"type-aliases",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),t(" Type Aliases")],-1),k=e("h3",{id:"variables",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#variables","aria-hidden":"true"},"#"),t(" Variables")],-1),C=l('<h2 id="enumeration-members-1" tabindex="-1"><a class="header-anchor" href="#enumeration-members-1" aria-hidden="true">#</a> Enumeration Members</h2><h3 id="command-1" tabindex="-1"><a class="header-anchor" href="#command-1" aria-hidden="true">#</a> Command</h3><p>• <strong>Command</strong>: <code>&quot;command&quot;</code></p><p>Command message type: Message which is sent from a single sender to exactly one single receiver. The sender expects a answer response from receiver within a specific time frame (ttl). If the sender does not receive a answer within this time frame, the command will be rejected with timeout error.</p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/EBMessageType.enum.d.ts:11</p><hr><h3 id="commanderrorresponse" tabindex="-1"><a class="header-anchor" href="#commanderrorresponse" aria-hidden="true">#</a> CommandErrorResponse</h3><p>• <strong>CommandErrorResponse</strong>: <code>&quot;commandErrorResponse&quot;</code></p><p>a error response from receiver of a command message</p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/EBMessageType.enum.d.ts:15</p><hr><h3 id="commandsuccessresponse" tabindex="-1"><a class="header-anchor" href="#commandsuccessresponse" aria-hidden="true">#</a> CommandSuccessResponse</h3><p>• <strong>CommandSuccessResponse</strong>: <code>&quot;commandSuccessResponse&quot;</code></p><p>a success response from receiver of a command message</p><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/EBMessageType.enum.d.ts:13</p><hr><h3 id="custommessage" tabindex="-1"><a class="header-anchor" href="#custommessage" aria-hidden="true">#</a> CustomMessage</h3><p>• <strong>CustomMessage</strong>: <code>&quot;customMessage&quot;</code></p><p>a custom message / custom event</p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/EBMessageType.enum.d.ts:39</p><hr><h3 id="infoinvoketimeout" tabindex="-1"><a class="header-anchor" href="#infoinvoketimeout" aria-hidden="true">#</a> InfoInvokeTimeout</h3><p>• <strong>InfoInvokeTimeout</strong>: <code>&quot;infoInvokeTimeout&quot;</code></p><p>a service invoked a other function and did not get a answer within given ttl</p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/EBMessageType.enum.d.ts:35</p><hr><h3 id="infoservicedrain" tabindex="-1"><a class="header-anchor" href="#infoservicedrain" aria-hidden="true">#</a> InfoServiceDrain</h3><p>• <strong>InfoServiceDrain</strong>: <code>&quot;infoServiceDrain&quot;</code></p><p>indicates that a service is going to shut down and does no longer accept new requests</p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/EBMessageType.enum.d.ts:31</p><hr><h3 id="infoservicefunctionadded" tabindex="-1"><a class="header-anchor" href="#infoservicefunctionadded" aria-hidden="true">#</a> InfoServiceFunctionAdded</h3><p>• <strong>InfoServiceFunctionAdded</strong>: <code>&quot;infoServiceFunctionAdded&quot;</code></p><p>send when a service provides a new function</p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/EBMessageType.enum.d.ts:29</p><hr><h3 id="infoserviceinit" tabindex="-1"><a class="header-anchor" href="#infoserviceinit" aria-hidden="true">#</a> InfoServiceInit</h3><p>• <strong>InfoServiceInit</strong>: <code>&quot;infoServiceInit&quot;</code></p><p>indicates that a service is booting</p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/EBMessageType.enum.d.ts:23</p><hr><h3 id="infoservicenotready" tabindex="-1"><a class="header-anchor" href="#infoservicenotready" aria-hidden="true">#</a> InfoServiceNotReady</h3><p>• <strong>InfoServiceNotReady</strong>: <code>&quot;infoServiceNotReady&quot;</code></p><p>indicates that a service is not able to process requests (e.g. db not available)</p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/EBMessageType.enum.d.ts:27</p><hr><h3 id="infoserviceready" tabindex="-1"><a class="header-anchor" href="#infoserviceready" aria-hidden="true">#</a> InfoServiceReady</h3><p>• <strong>InfoServiceReady</strong>: <code>&quot;infoServiceReady&quot;</code></p><p>indicates that a service is ready</p><h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/EBMessageType.enum.d.ts:25</p><hr><h3 id="infoserviceshutdown" tabindex="-1"><a class="header-anchor" href="#infoserviceshutdown" aria-hidden="true">#</a> InfoServiceShutdown</h3><p>• <strong>InfoServiceShutdown</strong>: <code>&quot;infoServiceShutdown&quot;</code></p><p>last event from service before service is destroyed</p><h4 id="defined-in-10" tabindex="-1"><a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/EBMessageType.enum.d.ts:33</p><hr><h3 id="infosubscriptionerror" tabindex="-1"><a class="header-anchor" href="#infosubscriptionerror" aria-hidden="true">#</a> InfoSubscriptionError</h3><p>• <strong>InfoSubscriptionError</strong>: <code>&quot;infoSubscriptionError&quot;</code></p><p>a subscription function is throwing</p><h4 id="defined-in-11" tabindex="-1"><a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/EBMessageType.enum.d.ts:37</p><h2 id="command-2" tabindex="-1"><a class="header-anchor" href="#command-2" aria-hidden="true">#</a> Command</h2><p>• <strong>CommandDefinitionBuilder</strong>&lt;<code>ServiceClassType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>Command definition builder is a helper to create and define a command for a service. It helps to set all needed information like schemas and hooks. With these information, the types are automatically set and extended.</p><p>A working schema definition needs at least a command name, a short description and the function implementation.</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4>',77),P=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),I=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),R={style:{"text-align":"left"}},F=e("code",null,"ServiceClass",-1),w=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),M=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),D=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),E=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),O=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),N=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),B=e("h4",{id:"defined-in-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-12","aria-hidden":"true"},"#"),t(" Defined in")],-1),q=e("p",null,"packages/core/lib/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.d.ts:13",-1),Z=e("h3",{id:"commandafterguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandafterguardhook","aria-hidden":"true"},"#"),t(" CommandAfterGuardHook")],-1),H=e("strong",null,"CommandAfterGuardHook",-1),A=e("code",null,"ServiceClassType",-1),j=e("code",null,"MessagePayloadType",-1),G=e("code",null,"MessageParamsType",-1),L=e("code",null,"FunctionResultType",-1),V=e("code",null,"FunctionPayloadType",-1),z=e("code",null,"FunctionParamsType",-1),U=e("code",null,"this",-1),K=e("code",null,"ServiceClassType",-1),Q=e("code",null,"context",-1),W=e("code",null,"CommandFunctionContext",-1),$=e("code",null,"MessagePayloadType",-1),X=e("code",null,"MessageParamsType",-1),Y=e("code",null,"result",-1),J=e("code",null,"Readonly",-1),ee=e("code",null,"FunctionResultType",-1),te=e("code",null,"input",-1),ne=e("code",null,"Readonly",-1),oe=e("code",null,"FunctionPayloadType",-1),se=e("code",null,"parameter",-1),le=e("code",null,"Readonly",-1),ae=e("code",null,"FunctionParamsType",-1),de=e("code",null,"Promise",-1),ie=e("code",null,"void",-1),re=e("h4",{id:"type-parameters-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-1","aria-hidden":"true"},"#"),t(" Type parameters")],-1),ce=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ue=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),he={style:{"text-align":"left"}},pe=e("code",null,"ServiceClass",-1),_e=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),fe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),me=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),ye=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),ge=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),xe=l('<h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>result</code>, <code>input</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Definition of after guard hook functions. This guard is called after function successfully returns and after output validation.</p><h5 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h5>',4),ve=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),be=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),Te=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),Se={style:{"text-align":"left"}},ke=e("code",null,"CommandFunctionContext",-1),Ce=e("code",null,"MessagePayloadType",-1),Pe=e("code",null,"MessageParamsType",-1),Ie=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"result")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionResultType"),t(">")])],-1),Re=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"input")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),Fe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),we=l('<h5 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/commandType/CommandAfterGuardHook.d.ts:9</p><hr><h3 id="commandbeforeguardhook" tabindex="-1"><a class="header-anchor" href="#commandbeforeguardhook" aria-hidden="true">#</a> CommandBeforeGuardHook</h3>',6),Me=e("strong",null,"CommandBeforeGuardHook",-1),De=e("code",null,"ServiceClassType",-1),Ee=e("code",null,"MessagePayloadType",-1),Oe=e("code",null,"MessageParamsType",-1),Ne=e("code",null,"FunctionPayloadType",-1),Be=e("code",null,"FunctionParamsType",-1),qe=e("code",null,"this",-1),Ze=e("code",null,"ServiceClassType",-1),He=e("code",null,"context",-1),Ae=e("code",null,"CommandFunctionContext",-1),je=e("code",null,"MessagePayloadType",-1),Ge=e("code",null,"MessageParamsType",-1),Le=e("code",null,"payload",-1),Ve=e("code",null,"Readonly",-1),ze=e("code",null,"FunctionPayloadType",-1),Ue=e("code",null,"parameter",-1),Ke=e("code",null,"Readonly",-1),Qe=e("code",null,"FunctionParamsType",-1),We=e("code",null,"Promise",-1),$e=e("code",null,"void",-1),Xe=e("h4",{id:"type-parameters-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-2","aria-hidden":"true"},"#"),t(" Type parameters")],-1),Ye=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Je=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),et={style:{"text-align":"left"}},tt=e("code",null,"ServiceClass",-1),nt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),ot=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),st=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),lt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),at=l('<h4 id="type-declaration-1" tabindex="-1"><a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Guard is called after command function input validation and before executing the command function. The guard is usefull to separate for example auth checks from business logic. It should throw HandledError or return void.</p><h5 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h5>',4),dt=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),it=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),rt=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),ct={style:{"text-align":"left"}},ut=e("code",null,"CommandFunctionContext",-1),ht=e("code",null,"MessagePayloadType",-1),pt=e("code",null,"MessageParamsType",-1),_t=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),ft=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),mt=l('<h5 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-14" tabindex="-1"><a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/commandType/CommandBeforeGuardHook.d.ts:10</p><hr><h3 id="commanddefinition" tabindex="-1"><a class="header-anchor" href="#commanddefinition" aria-hidden="true">#</a> CommandDefinition</h3><p>Ƭ <strong>CommandDefinition</strong>&lt;<code>ServiceClassType</code>, <code>MetadataType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>The definition for a command provided by some service.</p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4>',9),yt=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),gt=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),xt={style:{"text-align":"left"}},vt=e("code",null,"ServiceClass",-1),bt=e("code",null,"ServiceClass",-1),Tt=e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")],-1),St={style:{"text-align":"left"}},kt=e("code",null,"CommandDefinitionMetadataBase",-1),Ct=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Pt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),It=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Rt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),Ft=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),wt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Mt=e("h4",{id:"type-declaration-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-2","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Dt=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Et=e("td",{style:{"text-align":"left"}},[e("code",null,"call")],-1),Ot={style:{"text-align":"left"}},Nt=e("code",null,"CommandFunction",-1),Bt=e("code",null,"ServiceClassType",-1),qt=e("code",null,"MessagePayloadType",-1),Zt=e("code",null,"MessageParamsType",-1),Ht=e("code",null,"MessagePayloadType",-1),At=e("code",null,"MessageParamsType",-1),jt=e("code",null,"MessageResultType",-1),Gt=e("td",{style:{"text-align":"left"}},"the command function",-1),Lt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandDescription")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the description of the command")],-1),Vt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the command")],-1),zt=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),Ut={style:{"text-align":"left"}},Kt=e("code",null,"DefinitionEventBridgeConfig",-1),Qt=e("td",{style:{"text-align":"left"}},"config information for event bridge",-1),Wt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the eventName for the command response")],-1),$t=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks")],-1),Xt={style:{"text-align":"left"}},Yt=e("code",null,"afterGuard?",-1),Jt=e("code",null,"Record",-1),en=e("code",null,"string",-1),tn=e("code",null,"CommandAfterGuardHook",-1),nn=e("code",null,"ServiceClassType",-1),on=e("code",null,"MessagePayloadType",-1),sn=e("code",null,"MessageParamsType",-1),ln=e("code",null,"FunctionResultType",-1),an=e("code",null,"FunctionPayloadType",-1),dn=e("code",null,"FunctionParamsType",-1),rn=e("code",null,"beforeGuard?",-1),cn=e("code",null,"Record",-1),un=e("code",null,"string",-1),hn=e("code",null,"CommandBeforeGuardHook",-1),pn=e("code",null,"ServiceClassType",-1),_n=e("code",null,"MessagePayloadType",-1),fn=e("code",null,"MessageParamsType",-1),mn=e("code",null,"FunctionPayloadType",-1),yn=e("code",null,"FunctionParamsType",-1),gn=e("code",null,"transformInput?",-1),xn=e("code",null,"transformFunction",-1),vn=e("code",null,"CommandTransformInputHook",-1),bn=e("code",null,"ServiceClassType",-1),Tn=e("code",null,"MessagePayloadType",-1),Sn=e("code",null,"MessageParamsType",-1),kn=e("code",null,"transformInputSchema",-1),Cn=e("code",null,"z.ZodType",-1),Pn=e("code",null,"transformParameterSchema",-1),In=e("code",null,"z.ZodType",-1),Rn=e("code",null,"transformOutput?",-1),Fn=e("code",null,"transformFunction",-1),wn=e("code",null,"CommandTransformOutputHook",-1),Mn=e("code",null,"ServiceClassType",-1),Dn=e("code",null,"MessagePayloadType",-1),En=e("code",null,"MessageResultType",-1),On=e("code",null,"FunctionParamsType",-1),Nn=e("code",null,"unknown",-1),Bn=e("code",null,"transformOutputSchema",-1),qn=e("code",null,"z.ZodType",-1),Zn=e("td",{style:{"text-align":"left"}},"hooks of command",-1),Hn=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.afterGuard?")],-1),An={style:{"text-align":"left"}},jn=e("code",null,"Record",-1),Gn=e("code",null,"string",-1),Ln=e("code",null,"CommandAfterGuardHook",-1),Vn=e("code",null,"ServiceClassType",-1),zn=e("code",null,"MessagePayloadType",-1),Un=e("code",null,"MessageParamsType",-1),Kn=e("code",null,"FunctionResultType",-1),Qn=e("code",null,"FunctionPayloadType",-1),Wn=e("code",null,"FunctionParamsType",-1),$n=e("td",{style:{"text-align":"left"}},"-",-1),Xn=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.beforeGuard?")],-1),Yn={style:{"text-align":"left"}},Jn=e("code",null,"Record",-1),eo=e("code",null,"string",-1),to=e("code",null,"CommandBeforeGuardHook",-1),no=e("code",null,"ServiceClassType",-1),oo=e("code",null,"MessagePayloadType",-1),so=e("code",null,"MessageParamsType",-1),lo=e("code",null,"FunctionPayloadType",-1),ao=e("code",null,"FunctionParamsType",-1),io=e("td",{style:{"text-align":"left"}},"-",-1),ro=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput?")],-1),co={style:{"text-align":"left"}},uo=e("code",null,"transformFunction",-1),ho=e("code",null,"CommandTransformInputHook",-1),po=e("code",null,"ServiceClassType",-1),_o=e("code",null,"MessagePayloadType",-1),fo=e("code",null,"MessageParamsType",-1),mo=e("code",null,"transformInputSchema",-1),yo=e("code",null,"z.ZodType",-1),go=e("code",null,"transformParameterSchema",-1),xo=e("code",null,"z.ZodType",-1),vo=e("td",{style:{"text-align":"left"}},"-",-1),bo=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformFunction")],-1),To={style:{"text-align":"left"}},So=e("code",null,"CommandTransformInputHook",-1),ko=e("code",null,"ServiceClassType",-1),Co=e("code",null,"MessagePayloadType",-1),Po=e("code",null,"MessageParamsType",-1),Io=e("td",{style:{"text-align":"left"}},"-",-1),Ro=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),Fo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),wo=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput?")],-1),Mo={style:{"text-align":"left"}},Do=e("code",null,"transformFunction",-1),Eo=e("code",null,"CommandTransformOutputHook",-1),Oo=e("code",null,"ServiceClassType",-1),No=e("code",null,"MessagePayloadType",-1),Bo=e("code",null,"MessageResultType",-1),qo=e("code",null,"FunctionParamsType",-1),Zo=e("code",null,"unknown",-1),Ho=e("code",null,"transformOutputSchema",-1),Ao=e("code",null,"z.ZodType",-1),jo=e("td",{style:{"text-align":"left"}},"-",-1),Go=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformFunction")],-1),Lo={style:{"text-align":"left"}},Vo=e("code",null,"CommandTransformOutputHook",-1),zo=e("code",null,"ServiceClassType",-1),Uo=e("code",null,"MessagePayloadType",-1),Ko=e("code",null,"MessageResultType",-1),Qo=e("code",null,"FunctionParamsType",-1),Wo=e("code",null,"unknown",-1),$o=e("td",{style:{"text-align":"left"}},"-",-1),Xo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),Yo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"metadata")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")]),e("td",{style:{"text-align":"left"}},"the metadata of the command")],-1),Jo=e("h4",{id:"defined-in-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-15","aria-hidden":"true"},"#"),t(" Defined in")],-1),es=e("p",null,"packages/core/lib/core/types/commandType/CommandDefinition.d.ts:15",-1),ts=e("hr",null,null,-1),ns=e("h3",{id:"commanderrorresponse-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commanderrorresponse-1","aria-hidden":"true"},"#"),t(" CommandErrorResponse")],-1),os=e("strong",null,"CommandErrorResponse",-1),ss=e("code",null,"contentEncoding",-1),ls=e("code",null,'"utf-8"',-1),as=e("code",null,"contentType",-1),ds=e("code",null,'"application/json"',-1),is=e("code",null,"correlationId",-1),rs=e("code",null,"CorrelationId",-1),cs=e("code",null,"isHandledError",-1),us=e("code",null,"boolean",-1),hs=e("code",null,"messageType",-1),ps=e("code",null,"CommandErrorResponse",-1),_s=e("code",null,"payload",-1),fs=e("code",null,"data?",-1),ms=e("code",null,"unknown",-1),ys=e("code",null,"message",-1),gs=e("code",null,"string",-1),xs=e("code",null,"status",-1),vs=e("code",null,"StatusCode",-1),bs=e("code",null,"receiver",-1),Ts=e("code",null,"EBMessageAddress",-1),Ss=e("code",null,"sender",-1),ks=e("code",null,"EBMessageAddress",-1),Cs=e("code",null,"EBMessageBase",-1),Ps=e("p",null,"CommandErrorResponse is a response to a specific previously received command which indicates some failure.",-1),Is=e("h4",{id:"defined-in-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-16","aria-hidden":"true"},"#"),t(" Defined in")],-1),Rs=e("p",null,"packages/core/lib/core/types/commandType/CommandErrorResponse.d.ts:11",-1),Fs=e("hr",null,null,-1),ws=e("h3",{id:"commandfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandfunction","aria-hidden":"true"},"#"),t(" CommandFunction")],-1),Ms=e("strong",null,"CommandFunction",-1),Ds=e("code",null,"ServiceClassType",-1),Es=e("code",null,"MessagePayloadType",-1),Os=e("code",null,"MessageParamsType",-1),Ns=e("code",null,"FunctionPayloadType",-1),Bs=e("code",null,"FunctionParamsType",-1),qs=e("code",null,"FunctionResultType",-1),Zs=e("code",null,"this",-1),Hs=e("code",null,"ServiceClassType",-1),As=e("code",null,"context",-1),js=e("code",null,"CommandFunctionContext",-1),Gs=e("code",null,"MessagePayloadType",-1),Ls=e("code",null,"MessageParamsType",-1),Vs=e("code",null,"payload",-1),zs=e("code",null,"Readonly",-1),Us=e("code",null,"FunctionPayloadType",-1),Ks=e("code",null,"parameter",-1),Qs=e("code",null,"Readonly",-1),Ws=e("code",null,"FunctionParamsType",-1),$s=e("code",null,"Promise",-1),Xs=e("code",null,"FunctionResultType",-1),Ys=e("h4",{id:"type-parameters-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-4","aria-hidden":"true"},"#"),t(" Type parameters")],-1),Js=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),el=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),tl={style:{"text-align":"left"}},nl=e("code",null,"ServiceClass",-1),ol=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),sl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),ll=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),al=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),dl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),il=l('<h4 id="type-declaration-3" tabindex="-1"><a class="header-anchor" href="#type-declaration-3" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>FunctionResultType</code>&gt;</p><p>CommandFunction is a function which will be triggered when a matching event bridge message is received by the service</p><h5 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h5>',4),rl=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),cl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),ul=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),hl={style:{"text-align":"left"}},pl=e("code",null,"CommandFunctionContext",-1),_l=e("code",null,"MessagePayloadType",-1),fl=e("code",null,"MessageParamsType",-1),ml=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),yl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),gl=l('<h5 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>FunctionResultType</code>&gt;</p><h4 id="defined-in-17" tabindex="-1"><a class="header-anchor" href="#defined-in-17" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/commandType/CommandFunction.d.ts:8</p><hr><h3 id="commandfunctioncontext" tabindex="-1"><a class="header-anchor" href="#commandfunctioncontext" aria-hidden="true">#</a> CommandFunctionContext</h3>',6),xl=e("strong",null,"CommandFunctionContext",-1),vl=e("code",null,"MessagePayloadType",-1),bl=e("code",null,"MessageParamsType",-1),Tl=e("code",null,"ContextBase",-1),Sl=e("code",null,"CommandFunctionContextEnhancements",-1),kl=e("code",null,"MessagePayloadType",-1),Cl=e("code",null,"MessageParamsType",-1),Pl=l('<p>The command function context which will be passed into command function.</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-18" tabindex="-1"><a class="header-anchor" href="#defined-in-18" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/commandType/CommandFunctionContext.d.ts:44</p><hr><h3 id="commandfunctioncontextenhancements" tabindex="-1"><a class="header-anchor" href="#commandfunctioncontextenhancements" aria-hidden="true">#</a> CommandFunctionContextEnhancements</h3><p>Ƭ <strong>CommandFunctionContextEnhancements</strong>&lt;<code>MessagePayloadType</code>, <code>MessageParamsType</code>&gt;: <code>Object</code></p><p>It provides the original command message with types for payload and parameter. Also, the methods:</p><ul><li><code>emit</code> which allows to emit custom events to the event bridge</li><li><code>invoke</code> which allows to call other commands</li></ul><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-4" tabindex="-1"><a class="header-anchor" href="#type-declaration-4" aria-hidden="true">#</a> Type declaration</h4>',13),Il=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Rl=e("td",{style:{"text-align":"left"}},[e("code",null,"emit")],-1),Fl={style:{"text-align":"left"}},wl=e("code",null,"EmitCustomMessageFunction",-1),Ml=e("td",{style:{"text-align":"left"}},"emit a custom message",-1),Dl=e("td",{style:{"text-align":"left"}},[e("code",null,"invoke")],-1),El={style:{"text-align":"left"}},Ol=e("code",null,"InvokeFunction",-1),Nl=e("td",{style:{"text-align":"left"}},[t("Invokes a command and returns the result. It is recommended to validate the result against a schema which only contains the data you actually need. "),e("strong",null,[e("code",null,"Example")]),t(),e("code",null,"typescript const address: EBMessageAddress = { serviceName: 'name-of-service-to-invoke', serviceVersion: '1', serviceTarget: 'command-name-to-invoke', } const inputPayload = { my: 'input' } const inputParameter = { search: 'for_me' } const result = await invoke<MyResultType>(address, inputPayload inputParameter ) ")],-1),Bl=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),ql={style:{"text-align":"left"}},Zl=e("code",null,"Readonly",-1),Hl=e("code",null,"Command",-1),Al=e("code",null,"MessagePayloadType",-1),jl=e("code",null,"MessageParamsType",-1),Gl=e("td",{style:{"text-align":"left"}},"the original message",-1),Ll=e("h4",{id:"defined-in-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-19","aria-hidden":"true"},"#"),t(" Defined in")],-1),Vl=e("p",null,"packages/core/lib/core/types/commandType/CommandFunctionContext.d.ts:14",-1),zl=e("hr",null,null,-1),Ul=e("h3",{id:"commandresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandresponse","aria-hidden":"true"},"#"),t(" CommandResponse")],-1),Kl=e("strong",null,"CommandResponse",-1),Ql=e("code",null,"T",-1),Wl=e("code",null,"CommandSuccessResponse",-1),$l=e("code",null,"T",-1),Xl=e("code",null,"CommandErrorResponse",-1),Yl=l('<p>CommandResponse is a response to a specific previously received command which can be either a success or failure</p><h4 id="type-parameters-7" tabindex="-1"><a class="header-anchor" href="#type-parameters-7" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-20" tabindex="-1"><a class="header-anchor" href="#defined-in-20" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/commandType/CommandResponse.d.ts:8</p><hr><h3 id="commandsuccessresponse-1" tabindex="-1"><a class="header-anchor" href="#commandsuccessresponse-1" aria-hidden="true">#</a> CommandSuccessResponse</h3>',7),Jl=e("strong",null,"CommandSuccessResponse",-1),ea=e("code",null,"PayloadType",-1),ta=e("code",null,"correlationId",-1),na=e("code",null,"CorrelationId",-1),oa=e("code",null,"messageType",-1),sa=e("code",null,"CommandSuccessResponse",-1),la=e("code",null,"payload",-1),aa=e("code",null,"PayloadType",-1),da=e("code",null,"receiver",-1),ia=e("code",null,"EBMessageAddress",-1),ra=e("code",null,"sender",-1),ca=e("code",null,"EBMessageAddress",-1),ua=e("code",null,"EBMessageBase",-1),ha=l('<p>CommandSuccessResponse is a response to a specific previously received command. It indicates that the command was executed successfully and contains the result payload</p><h4 id="type-parameters-8" tabindex="-1"><a class="header-anchor" href="#type-parameters-8" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-21" tabindex="-1"><a class="header-anchor" href="#defined-in-21" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/commandType/CommandSuccessResponse.d.ts:11</p><hr><h3 id="commandtransformfunctioncontext" tabindex="-1"><a class="header-anchor" href="#commandtransformfunctioncontext" aria-hidden="true">#</a> CommandTransformFunctionContext</h3>',7),pa=e("strong",null,"CommandTransformFunctionContext",-1),_a=e("code",null,"PayloadType",-1),fa=e("code",null,"ParameterType",-1),ma=e("code",null,"ContextBase",-1),ya=e("code",null,"message",-1),ga=e("code",null,"Readonly",-1),xa=e("code",null,"Command",-1),va=e("code",null,"PayloadType",-1),ba=e("code",null,"ParameterType",-1),Ta=l('<h4 id="type-parameters-9" tabindex="-1"><a class="header-anchor" href="#type-parameters-9" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td></tr></tbody></table><h4 id="defined-in-22" tabindex="-1"><a class="header-anchor" href="#defined-in-22" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/commandType/CommandTransformFunctionContext.d.ts:6</p><hr><h3 id="commandtransforminputhook" tabindex="-1"><a class="header-anchor" href="#commandtransforminputhook" aria-hidden="true">#</a> CommandTransformInputHook</h3>',6),Sa=e("strong",null,"CommandTransformInputHook",-1),ka=e("code",null,"ServiceClassType",-1),Ca=e("code",null,"PayloadOutput",-1),Pa=e("code",null,"ParamsOutput",-1),Ia=e("code",null,"PayloadInput",-1),Ra=e("code",null,"ParamsInput",-1),Fa=e("code",null,"this",-1),wa=e("code",null,"ServiceClassType",-1),Ma=e("code",null,"context",-1),Da=e("code",null,"CommandTransformFunctionContext",-1),Ea=e("code",null,"PayloadInput",-1),Oa=e("code",null,"ParamsInput",-1),Na=e("code",null,"payload",-1),Ba=e("code",null,"Readonly",-1),qa=e("code",null,"PayloadInput",-1),Za=e("code",null,"parameter",-1),Ha=e("code",null,"Readonly",-1),Aa=e("code",null,"ParamsInput",-1),ja=e("code",null,"Promise",-1),Ga=e("code",null,"parameter",-1),La=e("code",null,"Readonly",-1),Va=e("code",null,"ParamsOutput",-1),za=e("code",null,"payload",-1),Ua=e("code",null,"Readonly",-1),Ka=e("code",null,"PayloadOutput",-1),Qa=l('<h4 id="type-parameters-10" tabindex="-1"><a class="header-anchor" href="#type-parameters-10" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>PayloadOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>PayloadInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-5" tabindex="-1"><a class="header-anchor" href="#type-declaration-5" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><p>The command transform gets the raw message payload and parameter input, which is validated against the transform input schemas. The command transform function is called before guard hooks and before the actual command function.</p><p>It should throw HandledError or return an object with the transformed payload and parameter. The type of returned payload and parameter must match the command function input for payload and parameter</p><h5 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h5>',7),Wa=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),$a=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),Xa=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),Ya={style:{"text-align":"left"}},Ja=e("code",null,"CommandTransformFunctionContext",-1),ed=e("code",null,"PayloadInput",-1),td=e("code",null,"ParamsInput",-1),nd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"PayloadInput"),t(">")])],-1),od=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"ParamsInput"),t(">")])],-1),sd=l('<h5 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><h4 id="defined-in-23" tabindex="-1"><a class="header-anchor" href="#defined-in-23" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/commandType/CommandTransformInputHook.d.ts:11</p><hr><h3 id="commandtransformoutputhook" tabindex="-1"><a class="header-anchor" href="#commandtransformoutputhook" aria-hidden="true">#</a> CommandTransformOutputHook</h3>',6),ld=e("strong",null,"CommandTransformOutputHook",-1),ad=e("code",null,"ServiceClassType",-1),dd=e("code",null,"MessagePayloadType",-1),id=e("code",null,"MessageResultType",-1),rd=e("code",null,"MessageParamsType",-1),cd=e("code",null,"ResponseOutput",-1),ud=e("code",null,"this",-1),hd=e("code",null,"ServiceClassType",-1),pd=e("code",null,"context",-1),_d=e("code",null,"CommandTransformFunctionContext",-1),fd=e("code",null,"MessagePayloadType",-1),md=e("code",null,"MessageParamsType",-1),yd=e("code",null,"payload",-1),gd=e("code",null,"Readonly",-1),xd=e("code",null,"MessageResultType",-1),vd=e("code",null,"parameter",-1),bd=e("code",null,"Readonly",-1),Td=e("code",null,"MessageParamsType",-1),Sd=e("code",null,"Promise",-1),kd=e("code",null,"ResponseOutput",-1),Cd=l('<h4 id="type-parameters-11" tabindex="-1"><a class="header-anchor" href="#type-parameters-11" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>MessageResultType</code></td><td style="text-align:left;"><code>MessageResultType</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>ResponseOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-6" tabindex="-1"><a class="header-anchor" href="#type-declaration-6" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>ResponseOutput</code>&gt;</p><p>This transform hook is executed after function output validation and AfterGuardHooks.</p><h5 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h5>',6),Pd=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Id=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),Rd=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),Fd={style:{"text-align":"left"}},wd=e("code",null,"CommandTransformFunctionContext",-1),Md=e("code",null,"MessagePayloadType",-1),Dd=e("code",null,"MessageParamsType",-1),Ed=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageResultType"),t(">")])],-1),Od=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageParamsType"),t(">")])],-1),Nd=l(`<h5 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>ResponseOutput</code>&gt;</p><h4 id="defined-in-24" tabindex="-1"><a class="header-anchor" href="#defined-in-24" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/commandType/CommandTransformOutputHook.d.ts:6</p><h2 id="service-1" tabindex="-1"><a class="header-anchor" href="#service-1" aria-hidden="true">#</a> Service</h2><p>• <strong>Service</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for all services. This class provides base functions to work with the event bridge, logging and so on</p><p>Every service should extend this class and should not directly access the eventbridge or other service</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">MyService</span> <span class="token keyword">extends</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span>

  <span class="token keyword">async</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// your custom implementation</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// your custom implementation</span>
   <span class="token keyword">await</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="type-parameters-12" tabindex="-1"><a class="header-anchor" href="#type-parameters-12" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;"><code>unknown</code> | <code>undefined</code></td></tr></tbody></table><h4 id="defined-in-25" tabindex="-1"><a class="header-anchor" href="#defined-in-25" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/Service/Service.impl.d.ts:26</p><p>• <strong>ServiceBaseClass</strong>: <code>Object</code></p><p>Class which contains basic functions that are not directly related to</p><ul><li>handling of messages</li><li>handling of commands</li><li>handling of subscriptions</li></ul><h4 id="defined-in-26" tabindex="-1"><a class="header-anchor" href="#defined-in-26" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/Service/ServiceBaseClass/ServiceBaseClass.impl.d.ts:17</p><p>• <strong>ServiceBuilder</strong>&lt;<code>ConfigType</code>, <code>ConfigInputType</code>, <code>ServiceClassType</code>&gt;: <code>Object</code></p><p>This class is used to build a service. The <code>ServiceBuilder</code> class is used to build a service. It has a few methods that are used to add command definitions and subscription definitions to the service. It also has a method that is used to create an instance of the service class.</p><h4 id="type-parameters-13" tabindex="-1"><a class="header-anchor" href="#type-parameters-13" aria-hidden="true">#</a> Type parameters</h4>`,21),Bd=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),qd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"ConfigType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"unknown"),t(">")])],-1),Zd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"ConfigInputType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"unknown"),t(">")])],-1),Hd=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),Ad={style:{"text-align":"left"}},jd=e("code",null,"ServiceClass",-1),Gd=e("code",null,"Service",-1),Ld=e("code",null,"ConfigType",-1),Vd=l('<h4 id="defined-in-27" tabindex="-1"><a class="header-anchor" href="#defined-in-27" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/ServiceBuilder/ServiceBuilder.impl.d.ts:17</p><p>• <strong>ServiceClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>The ServiceClass interface</p><h4 id="type-parameters-14" tabindex="-1"><a class="header-anchor" href="#type-parameters-14" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;"><code>unknown</code> | <code>undefined</code></td></tr></tbody></table><h4 id="defined-in-28" tabindex="-1"><a class="header-anchor" href="#defined-in-28" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/ServiceClass.d.ts:9</p><h3 id="serviceconstructorinput" tabindex="-1"><a class="header-anchor" href="#serviceconstructorinput" aria-hidden="true">#</a> ServiceConstructorInput</h3><p>Ƭ <strong>ServiceConstructorInput</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><h4 id="type-parameters-15" tabindex="-1"><a class="header-anchor" href="#type-parameters-15" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="type-declaration-7" tabindex="-1"><a class="header-anchor" href="#type-declaration-7" aria-hidden="true">#</a> Type declaration</h4>',13),zd=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Ud=e("td",{style:{"text-align":"left"}},[e("code",null,"commandDefinitionList")],-1),Kd={style:{"text-align":"left"}},Qd=e("code",null,"CommandDefinitionList",-1),Wd=e("code",null,"any",-1),$d=e("td",{style:{"text-align":"left"}},"The list of command definitions for this service",-1),Xd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ConfigType")]),e("td",{style:{"text-align":"left"}},"The service specific config")],-1),Yd=e("td",{style:{"text-align":"left"}},[e("code",null,"configStore?")],-1),Jd={style:{"text-align":"left"}},ei=e("code",null,"ConfigStore",-1),ti=e("td",{style:{"text-align":"left"}},"The config store instance",-1),ni=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridge")],-1),oi={style:{"text-align":"left"}},si=e("code",null,"EventBridge",-1),li=e("td",{style:{"text-align":"left"}},"The eventBridge instance",-1),ai=e("td",{style:{"text-align":"left"}},[e("code",null,"info")],-1),di={style:{"text-align":"left"}},ii=e("code",null,"ServiceInfoType",-1),ri=e("td",{style:{"text-align":"left"}},"The service info with name, version and description of service",-1),ci=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),ui={style:{"text-align":"left"}},hi=e("code",null,"Logger",-1),pi=e("td",{style:{"text-align":"left"}},"A logger instance",-1),_i=e("td",{style:{"text-align":"left"}},[e("code",null,"secretStore?")],-1),fi={style:{"text-align":"left"}},mi=e("code",null,"SecretStore",-1),yi=e("td",{style:{"text-align":"left"}},"The secret store instance",-1),gi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"spanProcessor?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SpanProcessor")]),e("td",{style:{"text-align":"left"}},"The opentelemetry span processor instance")],-1),xi=e("td",{style:{"text-align":"left"}},[e("code",null,"stateStore?")],-1),vi={style:{"text-align":"left"}},bi=e("code",null,"StateStore",-1),Ti=e("td",{style:{"text-align":"left"}},"the state store instance",-1),Si=e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionDefinitionList")],-1),ki={style:{"text-align":"left"}},Ci=e("code",null,"SubscriptionDefinitionList",-1),Pi=e("code",null,"any",-1),Ii=e("td",{style:{"text-align":"left"}},"The list of subscription definitions for this service",-1),Ri=l('<h4 id="defined-in-29" tabindex="-1"><a class="header-anchor" href="#defined-in-29" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/ServiceConstructorInput.d.ts:13</p><hr><h3 id="serviceeventsinternal" tabindex="-1"><a class="header-anchor" href="#serviceeventsinternal" aria-hidden="true">#</a> ServiceEventsInternal</h3><p>Ƭ <strong>ServiceEventsInternal</strong>: <code>Object</code></p><p>Events which can be emitted by a service. Internal events are prefixed with <code>service-</code>.</p><p>Response messages, which have an event name assigned, are prefixed with <code>custom-</code> If you like to use your own events, the event name must be prefixed with <code>misc-</code>.</p><h4 id="type-declaration-8" tabindex="-1"><a class="header-anchor" href="#type-declaration-8" aria-hidden="true">#</a> Type declaration</h4>',8),Fi=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),wi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-available")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service is fully initialized and ready Should be emitted by custom service class. It is not emitted by default")],-1),Mi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-drain")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service is going to be stopped")],-1),Di=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error")],-1),Ei={style:{"text-align":"left"}},Oi=e("code",null,"commandName",-1),Ni=e("code",null,"string",-1),Bi=e("code",null,"error",-1),qi=e("code",null,"HandledError",-1),Zi=e("code",null,"traceId",-1),Hi=e("code",null,"TraceId",-1),Ai=e("td",{style:{"text-align":"left"}},"emitted when a command throws a HandledError",-1),ji=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error.commandName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),Gi=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error.error")],-1),Li={style:{"text-align":"left"}},Vi=e("code",null,"HandledError",-1),zi=e("td",{style:{"text-align":"left"}},"-",-1),Ui=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error.traceId")],-1),Ki={style:{"text-align":"left"}},Qi=e("code",null,"TraceId",-1),Wi=e("td",{style:{"text-align":"left"}},"-",-1),$i=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error")],-1),Xi={style:{"text-align":"left"}},Yi=e("code",null,"error",-1),Ji=e("code",null,"HandledError",-1),er=e("code",null,"subscriptionName",-1),tr=e("code",null,"string",-1),nr=e("code",null,"traceId",-1),or=e("code",null,"TraceId",-1),sr=e("td",{style:{"text-align":"left"}},"emitted when a subscription throws a HandledError",-1),lr=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error.error")],-1),ar={style:{"text-align":"left"}},dr=e("code",null,"HandledError",-1),ir=e("td",{style:{"text-align":"left"}},"-",-1),rr=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error.subscriptionName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),cr=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error.traceId")],-1),ur={style:{"text-align":"left"}},hr=e("code",null,"TraceId",-1),pr=e("td",{style:{"text-align":"left"}},"-",-1),_r=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-not-available")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined"),t(" | "),e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"emitted when the service is not available (for example database connection could not be established)")],-1),fr=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-started")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service is started, but not fully initialized and not ready yet")],-1),mr=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-stopped")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service has been stopped")],-1),yr=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error")],-1),gr={style:{"text-align":"left"}},xr=e("code",null,"commandName",-1),vr=e("code",null,"string",-1),br=e("code",null,"error",-1),Tr=e("code",null,"unknown",-1),Sr=e("code",null,"traceId",-1),kr=e("code",null,"TraceId",-1),Cr=e("td",{style:{"text-align":"left"}},"emitted when a command throws an error other than a HandledError",-1),Pr=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error.commandName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),Ir=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),Rr=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error.traceId")],-1),Fr={style:{"text-align":"left"}},wr=e("code",null,"TraceId",-1),Mr=e("td",{style:{"text-align":"left"}},"-",-1),Dr=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error")],-1),Er={style:{"text-align":"left"}},Or=e("code",null,"error",-1),Nr=e("code",null,"unknown",-1),Br=e("code",null,"subscriptionName",-1),qr=e("code",null,"string",-1),Zr=e("code",null,"traceId",-1),Hr=e("code",null,"TraceId",-1),Ar=e("td",{style:{"text-align":"left"}},"emitted when a subscription throws an error other than a HandledError",-1),jr=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),Gr=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error.subscriptionName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),Lr=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error.traceId")],-1),Vr={style:{"text-align":"left"}},zr=e("code",null,"TraceId",-1),Ur=e("td",{style:{"text-align":"left"}},"-",-1),Kr=l('<h4 id="defined-in-30" tabindex="-1"><a class="header-anchor" href="#defined-in-30" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/ServiceEvents.d.ts:44</p><h2 id="subscription-1" tabindex="-1"><a class="header-anchor" href="#subscription-1" aria-hidden="true">#</a> Subscription</h2><p>• <strong>SubscriptionDefinitionBuilder</strong>&lt;<code>ServiceClassType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>Subscription definition builder is a helper to create and define a subscriptions for a service. It helps to set all needed filters.</p><p>A working schema definition needs at least a subscription name, a short description and the subscription implementation.</p><h4 id="type-parameters-16" tabindex="-1"><a class="header-anchor" href="#type-parameters-16" aria-hidden="true">#</a> Type parameters</h4>',7),Qr=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Wr=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),$r={style:{"text-align":"left"}},Xr=e("code",null,"ServiceClass",-1),Yr=e("code",null,"ServiceClass",-1),Jr=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),ec=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),tc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),nc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),oc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),sc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType"),t(" | "),e("code",null,"void"),t(" | "),e("code",null,"undefined")])],-1),lc=l('<h4 id="defined-in-31" tabindex="-1"><a class="header-anchor" href="#defined-in-31" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.d.ts:11</p><h3 id="subscription-2" tabindex="-1"><a class="header-anchor" href="#subscription-2" aria-hidden="true">#</a> Subscription</h3><p>Ƭ <strong>Subscription</strong>&lt;<code>PayloadType</code>, <code>ParameterType</code>&gt;: <code>Object</code></p><p>A subscription managed by the event bridge</p><h4 id="type-parameters-17" tabindex="-1"><a class="header-anchor" href="#type-parameters-17" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-9" tabindex="-1"><a class="header-anchor" href="#type-declaration-9" aria-hidden="true">#</a> Type declaration</h4>',8),ac=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),dc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"emitEventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the event name to be used for custom message if the subscriptions returns a result")],-1),ic=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),rc={style:{"text-align":"left"}},cc=e("code",null,"DefinitionEventBridgeConfig",-1),uc=e("td",{style:{"text-align":"left"}},"config information for event bridge",-1),hc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the event name to subscribe for")],-1),pc=e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId?")],-1),_c={style:{"text-align":"left"}},fc=e("code",null,"InstanceId",-1),mc=e("td",{style:{"text-align":"left"}},"the principal id",-1),yc=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType?")],-1),gc={style:{"text-align":"left"}},xc=e("code",null,"EBMessageType",-1),vc=e("td",{style:{"text-align":"left"}},"the message type",-1),bc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload?")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"parameter?"),t(": "),e("code",null,"ParameterType"),t(" ; "),e("code",null,"payload?"),t(": "),e("code",null,"PayloadType"),t(" }")]),e("td",{style:{"text-align":"left"}},"the message payload")],-1),Tc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload.parameter?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ParameterType")]),e("td",{style:{"text-align":"left"}},"-")],-1),Sc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload.payload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")]),e("td",{style:{"text-align":"left"}},"-")],-1),kc=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),Cc={style:{"text-align":"left"}},Pc=e("code",null,"PrincipalId",-1),Ic=e("td",{style:{"text-align":"left"}},"the principal id",-1),Rc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver?")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"serviceName?"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceTarget?"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceVersion?"),t(": "),e("code",null,"string"),t(" }")]),e("td",{style:{"text-align":"left"}},"the consumer address of the message")],-1),Fc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),wc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),Mc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),Dc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender?")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"serviceName?"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceTarget?"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceVersion?"),t(": "),e("code",null,"string"),t(" }")]),e("td",{style:{"text-align":"left"}},"the producer address of the message")],-1),Ec=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),Oc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),Nc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),Bc=e("td",{style:{"text-align":"left"}},[e("code",null,"subscriber")],-1),qc={style:{"text-align":"left"}},Zc=e("code",null,"EBMessageAddress",-1),Hc=e("td",{style:{"text-align":"left"}},"the address of the subscription (service name, version and subscription name)",-1),Ac=e("h4",{id:"defined-in-32",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-32","aria-hidden":"true"},"#"),t(" Defined in")],-1),jc=e("p",null,"packages/core/lib/core/types/subscription/Subscription.d.ts:11",-1),Gc=e("hr",null,null,-1),Lc=e("h3",{id:"subscriptionafterguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionafterguardhook","aria-hidden":"true"},"#"),t(" SubscriptionAfterGuardHook")],-1),Vc=e("strong",null,"SubscriptionAfterGuardHook",-1),zc=e("code",null,"ServiceClassType",-1),Uc=e("code",null,"FunctionResultType",-1),Kc=e("code",null,"FunctionPayloadOutputType",-1),Qc=e("code",null,"FunctionParameterType",-1),Wc=e("code",null,"this",-1),$c=e("code",null,"ServiceClassType",-1),Xc=e("code",null,"context",-1),Yc=e("code",null,"SubscriptionFunctionContext",-1),Jc=e("code",null,"result",-1),eu=e("code",null,"Readonly",-1),tu=e("code",null,"FunctionResultType",-1),nu=e("code",null,"payload",-1),ou=e("code",null,"Readonly",-1),su=e("code",null,"FunctionPayloadOutputType",-1),lu=e("code",null,"parameter",-1),au=e("code",null,"Readonly",-1),du=e("code",null,"FunctionParameterType",-1),iu=e("code",null,"Promise",-1),ru=e("code",null,"void",-1),cu=e("h4",{id:"type-parameters-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-18","aria-hidden":"true"},"#"),t(" Type parameters")],-1),uu=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),hu=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),pu={style:{"text-align":"left"}},_u=e("code",null,"ServiceClass",-1),fu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),mu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadOutputType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),yu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParameterType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),gu=l('<h4 id="type-declaration-10" tabindex="-1"><a class="header-anchor" href="#type-declaration-10" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>result</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Definition of after guard hook functions. This guard is called after function successfully returns and after output validation.</p><h5 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h5>',4),xu=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),vu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),bu=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),Tu={style:{"text-align":"left"}},Su=e("code",null,"SubscriptionFunctionContext",-1),ku=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"result")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionResultType"),t(">")])],-1),Cu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadOutputType"),t(">")])],-1),Pu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParameterType"),t(">")])],-1),Iu=l('<h5 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-33" tabindex="-1"><a class="header-anchor" href="#defined-in-33" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/subscription/SubscriptionAfterGuardHook.d.ts:9</p><hr><h3 id="subscriptionbeforeguardhook" tabindex="-1"><a class="header-anchor" href="#subscriptionbeforeguardhook" aria-hidden="true">#</a> SubscriptionBeforeGuardHook</h3>',6),Ru=e("strong",null,"SubscriptionBeforeGuardHook",-1),Fu=e("code",null,"ServiceClassType",-1),wu=e("code",null,"FunctionPayloadType",-1),Mu=e("code",null,"FunctionParamsType",-1),Du=e("code",null,"this",-1),Eu=e("code",null,"ServiceClassType",-1),Ou=e("code",null,"context",-1),Nu=e("code",null,"SubscriptionFunctionContext",-1),Bu=e("code",null,"payload",-1),qu=e("code",null,"Readonly",-1),Zu=e("code",null,"FunctionPayloadType",-1),Hu=e("code",null,"parameter",-1),Au=e("code",null,"Readonly",-1),ju=e("code",null,"FunctionParamsType",-1),Gu=e("code",null,"Promise",-1),Lu=e("code",null,"void",-1),Vu=e("h4",{id:"type-parameters-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-19","aria-hidden":"true"},"#"),t(" Type parameters")],-1),zu=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Uu=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),Ku={style:{"text-align":"left"}},Qu=e("code",null,"ServiceClass",-1),Wu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),$u=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Xu=l('<h4 id="type-declaration-11" tabindex="-1"><a class="header-anchor" href="#type-declaration-11" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Guard is called after command function input validation and before executing the command function. The guard is usefull to separate for example auth checks from business logic. It should throw HandledError or return void.</p><h5 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h5>',4),Yu=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ju=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),eh=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),th={style:{"text-align":"left"}},nh=e("code",null,"SubscriptionFunctionContext",-1),oh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),sh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),lh=l('<h5 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-34" tabindex="-1"><a class="header-anchor" href="#defined-in-34" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/subscription/SubscriptionBeforeGuardHook.d.ts:10</p><hr><h3 id="subscriptiondefinition" tabindex="-1"><a class="header-anchor" href="#subscriptiondefinition" aria-hidden="true">#</a> SubscriptionDefinition</h3><p>Ƭ <strong>SubscriptionDefinition</strong>&lt;<code>ServiceClassType</code>, <code>MetadataType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>The definition for a subscription provided by some service.</p><h4 id="type-parameters-20" tabindex="-1"><a class="header-anchor" href="#type-parameters-20" aria-hidden="true">#</a> Type parameters</h4>',9),ah=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),dh=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),ih={style:{"text-align":"left"}},rh=e("code",null,"ServiceClass",-1),ch=e("code",null,"ServiceClass",-1),uh=e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")],-1),hh={style:{"text-align":"left"}},ph=e("code",null,"SubscriptionDefinitionMetadataBase",-1),_h=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),fh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),mh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),yh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),gh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),xh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),vh=e("h4",{id:"type-declaration-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-12","aria-hidden":"true"},"#"),t(" Type declaration")],-1),bh=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Th=e("td",{style:{"text-align":"left"}},[e("code",null,"call")],-1),Sh={style:{"text-align":"left"}},kh=e("code",null,"SubscriptionFunction",-1),Ch=e("code",null,"ServiceClassType",-1),Ph=e("code",null,"MessagePayloadType",-1),Ih=e("code",null,"MessageParamsType",-1),Rh=e("code",null,"MessagePayloadType",-1),Fh=e("code",null,"MessageParamsType",-1),wh=e("code",null,"MessageResultType",-1),Mh=e("td",{style:{"text-align":"left"}},"the subscription function",-1),Dh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"emitEventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name to be used for custom message if the subscription functions returns value")],-1),Eh=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),Oh={style:{"text-align":"left"}},Nh=e("code",null,"DefinitionEventBridgeConfig",-1),Bh=e("td",{style:{"text-align":"left"}},"config information for event bridge",-1),qh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"filter forevent name")],-1),Zh=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks")],-1),Hh={style:{"text-align":"left"}},Ah=e("code",null,"afterGuard?",-1),jh=e("code",null,"Record",-1),Gh=e("code",null,"string",-1),Lh=e("code",null,"SubscriptionAfterGuardHook",-1),Vh=e("code",null,"ServiceClassType",-1),zh=e("code",null,"FunctionResultType",-1),Uh=e("code",null,"FunctionPayloadType",-1),Kh=e("code",null,"FunctionParamsType",-1),Qh=e("code",null,"beforeGuard?",-1),Wh=e("code",null,"Record",-1),$h=e("code",null,"string",-1),Xh=e("code",null,"SubscriptionBeforeGuardHook",-1),Yh=e("code",null,"ServiceClassType",-1),Jh=e("code",null,"FunctionPayloadType",-1),ep=e("code",null,"FunctionParamsType",-1),tp=e("code",null,"transformInput?",-1),np=e("code",null,"transformFunction",-1),op=e("code",null,"SubscriptionTransformInputHook",-1),sp=e("code",null,"ServiceClassType",-1),lp=e("code",null,"MessagePayloadType",-1),ap=e("code",null,"MessageParamsType",-1),dp=e("code",null,"transformInputSchema",-1),ip=e("code",null,"z.ZodType",-1),rp=e("code",null,"transformParameterSchema",-1),cp=e("code",null,"z.ZodType",-1),up=e("code",null,"transformOutput?",-1),hp=e("code",null,"transformFunction",-1),pp=e("code",null,"SubscriptionTransformOutputHook",-1),_p=e("code",null,"ServiceClassType",-1),fp=e("code",null,"FunctionResultType",-1),mp=e("code",null,"FunctionParamsType",-1),yp=e("code",null,"any",-1),gp=e("code",null,"transformOutputSchema",-1),xp=e("code",null,"z.ZodType",-1),vp=e("td",{style:{"text-align":"left"}},"hooks of subscription",-1),bp=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.afterGuard?")],-1),Tp={style:{"text-align":"left"}},Sp=e("code",null,"Record",-1),kp=e("code",null,"string",-1),Cp=e("code",null,"SubscriptionAfterGuardHook",-1),Pp=e("code",null,"ServiceClassType",-1),Ip=e("code",null,"FunctionResultType",-1),Rp=e("code",null,"FunctionPayloadType",-1),Fp=e("code",null,"FunctionParamsType",-1),wp=e("td",{style:{"text-align":"left"}},"-",-1),Mp=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.beforeGuard?")],-1),Dp={style:{"text-align":"left"}},Ep=e("code",null,"Record",-1),Op=e("code",null,"string",-1),Np=e("code",null,"SubscriptionBeforeGuardHook",-1),Bp=e("code",null,"ServiceClassType",-1),qp=e("code",null,"FunctionPayloadType",-1),Zp=e("code",null,"FunctionParamsType",-1),Hp=e("td",{style:{"text-align":"left"}},"-",-1),Ap=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput?")],-1),jp={style:{"text-align":"left"}},Gp=e("code",null,"transformFunction",-1),Lp=e("code",null,"SubscriptionTransformInputHook",-1),Vp=e("code",null,"ServiceClassType",-1),zp=e("code",null,"MessagePayloadType",-1),Up=e("code",null,"MessageParamsType",-1),Kp=e("code",null,"transformInputSchema",-1),Qp=e("code",null,"z.ZodType",-1),Wp=e("code",null,"transformParameterSchema",-1),$p=e("code",null,"z.ZodType",-1),Xp=e("td",{style:{"text-align":"left"}},"-",-1),Yp=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformFunction")],-1),Jp={style:{"text-align":"left"}},e_=e("code",null,"SubscriptionTransformInputHook",-1),t_=e("code",null,"ServiceClassType",-1),n_=e("code",null,"MessagePayloadType",-1),o_=e("code",null,"MessageParamsType",-1),s_=e("td",{style:{"text-align":"left"}},"-",-1),l_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),a_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),d_=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput?")],-1),i_={style:{"text-align":"left"}},r_=e("code",null,"transformFunction",-1),c_=e("code",null,"SubscriptionTransformOutputHook",-1),u_=e("code",null,"ServiceClassType",-1),h_=e("code",null,"FunctionResultType",-1),p_=e("code",null,"FunctionParamsType",-1),__=e("code",null,"any",-1),f_=e("code",null,"transformOutputSchema",-1),m_=e("code",null,"z.ZodType",-1),y_=e("td",{style:{"text-align":"left"}},"-",-1),g_=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformFunction")],-1),x_={style:{"text-align":"left"}},v_=e("code",null,"SubscriptionTransformOutputHook",-1),b_=e("code",null,"ServiceClassType",-1),T_=e("code",null,"FunctionResultType",-1),S_=e("code",null,"FunctionParamsType",-1),k_=e("code",null,"any",-1),C_=e("td",{style:{"text-align":"left"}},"-",-1),P_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),I_=e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId?")],-1),R_={style:{"text-align":"left"}},F_=e("code",null,"InstanceId",-1),w_=e("td",{style:{"text-align":"left"}},"filter for instance id",-1),M_=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType?")],-1),D_={style:{"text-align":"left"}},E_=e("code",null,"EBMessageType",-1),O_=e("td",{style:{"text-align":"left"}},"filter for message type",-1),N_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"metadata")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")]),e("td",{style:{"text-align":"left"}},"the metadata of the subscription")],-1),B_=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),q_={style:{"text-align":"left"}},Z_=e("code",null,"PrincipalId",-1),H_=e("td",{style:{"text-align":"left"}},"filter for principal id",-1),A_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver?")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"serviceName?"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceTarget?"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceVersion?"),t(": "),e("code",null,"string"),t(" }")]),e("td",{style:{"text-align":"left"}},"filter for messages consumed by given receiver")],-1),j_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),G_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),L_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),V_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender?")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"serviceName?"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceTarget?"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceVersion?"),t(": "),e("code",null,"string"),t(" }")]),e("td",{style:{"text-align":"left"}},"filter for messages produced by given sender")],-1),z_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),U_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),K_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),Q_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionDescription")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the description of the subscription")],-1),W_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the subscription")],-1),$_=e("h4",{id:"defined-in-35",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-35","aria-hidden":"true"},"#"),t(" Defined in")],-1),X_=e("p",null,"packages/core/lib/core/types/subscription/SubscriptionDefinition.d.ts:18",-1),Y_=e("hr",null,null,-1),J_=e("h3",{id:"subscriptionfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionfunction","aria-hidden":"true"},"#"),t(" SubscriptionFunction")],-1),e1=e("strong",null,"SubscriptionFunction",-1),t1=e("code",null,"ServiceClassType",-1),n1=e("code",null,"MessagePayloadType",-1),o1=e("code",null,"MessageParamsType",-1),s1=e("code",null,"FunctionPayloadType",-1),l1=e("code",null,"FunctionParamsType",-1),a1=e("code",null,"FunctionResultType",-1),d1=e("code",null,"this",-1),i1=e("code",null,"ServiceClassType",-1),r1=e("code",null,"context",-1),c1=e("code",null,"SubscriptionFunctionContext",-1),u1=e("code",null,"payload",-1),h1=e("code",null,"Readonly",-1),p1=e("code",null,"FunctionPayloadType",-1),_1=e("code",null,"parameter",-1),f1=e("code",null,"Readonly",-1),m1=e("code",null,"FunctionParamsType",-1),y1=e("code",null,"Promise",-1),g1=e("code",null,"FunctionResultType",-1),x1=e("h4",{id:"type-parameters-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-21","aria-hidden":"true"},"#"),t(" Type parameters")],-1),v1=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),b1=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),T1={style:{"text-align":"left"}},S1=e("code",null,"ServiceClass",-1),k1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),C1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),P1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),I1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),R1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),F1=l('<h4 id="type-declaration-13" tabindex="-1"><a class="header-anchor" href="#type-declaration-13" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>FunctionResultType</code>&gt;</p><p>CommandFunction is a function which will be triggered when a matching event bridge message is received by the service</p><h5 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h5>',4),w1=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),M1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),D1=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),E1={style:{"text-align":"left"}},O1=e("code",null,"SubscriptionFunctionContext",-1),N1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),B1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),q1=l('<h5 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>FunctionResultType</code>&gt;</p><h4 id="defined-in-36" tabindex="-1"><a class="header-anchor" href="#defined-in-36" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/subscription/SubscriptionFunction.d.ts:8</p><hr><h3 id="subscriptionfunctioncontext" tabindex="-1"><a class="header-anchor" href="#subscriptionfunctioncontext" aria-hidden="true">#</a> SubscriptionFunctionContext</h3>',6),Z1=e("strong",null,"SubscriptionFunctionContext",-1),H1=e("code",null,"ContextBase",-1),A1=e("code",null,"SubscriptionFunctionContextEnhancements",-1),j1=l('<p>The subscription function context which will be passed into subscription function.</p><h4 id="defined-in-37" tabindex="-1"><a class="header-anchor" href="#defined-in-37" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/subscription/SubscriptionFunctionContext.d.ts:44</p><hr><h3 id="subscriptionfunctioncontextenhancements" tabindex="-1"><a class="header-anchor" href="#subscriptionfunctioncontextenhancements" aria-hidden="true">#</a> SubscriptionFunctionContextEnhancements</h3><p>Ƭ <strong>SubscriptionFunctionContextEnhancements</strong>: <code>Object</code></p><p>It provides the original command message. Also, the methods:</p><ul><li><code>emit</code> which allows to emit custom events to the event bridge</li><li><code>invoke</code> which allows to call other commands</li></ul><h4 id="type-declaration-14" tabindex="-1"><a class="header-anchor" href="#type-declaration-14" aria-hidden="true">#</a> Type declaration</h4>',9),G1=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),L1=e("td",{style:{"text-align":"left"}},[e("code",null,"emit")],-1),V1={style:{"text-align":"left"}},z1=e("code",null,"EmitCustomMessageFunction",-1),U1=e("td",{style:{"text-align":"left"}},"emit a custom message",-1),K1=e("td",{style:{"text-align":"left"}},[e("code",null,"invoke")],-1),Q1={style:{"text-align":"left"}},W1=e("code",null,"InvokeFunction",-1),$1=e("td",{style:{"text-align":"left"}},[t("Invokes a command and returns the result. It is recommended to validate the result against a schema which only contains the data you actually need. "),e("strong",null,[e("code",null,"Example")]),t(),e("code",null,"typescript const address: EBMessageAddress = { serviceName: 'name-of-service-to-invoke', serviceVersion: '1', serviceTarget: 'command-name-to-invoke', } const inputPayload = { my: 'input' } const inputParameter = { search: 'for_me' } const result = await invoke<MyResultType>(address, inputPayload inputParameter ) ")],-1),X1=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),Y1={style:{"text-align":"left"}},J1=e("code",null,"Readonly",-1),ef=e("code",null,"EBMessage",-1),tf=e("td",{style:{"text-align":"left"}},"the original message",-1),nf=e("h4",{id:"defined-in-38",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-38","aria-hidden":"true"},"#"),t(" Defined in")],-1),of=e("p",null,"packages/core/lib/core/types/subscription/SubscriptionFunctionContext.d.ts:14",-1),sf=e("hr",null,null,-1),lf=e("h3",{id:"subscriptiontransformfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiontransformfunctioncontext","aria-hidden":"true"},"#"),t(" SubscriptionTransformFunctionContext")],-1),af=e("strong",null,"SubscriptionTransformFunctionContext",-1),df=e("code",null,"ContextBase",-1),rf=e("code",null,"message",-1),cf=e("code",null,"Readonly",-1),uf=e("code",null,"EBMessage",-1),hf=e("h4",{id:"defined-in-39",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-39","aria-hidden":"true"},"#"),t(" Defined in")],-1),pf=e("p",null,"packages/core/lib/core/types/subscription/SubscriptionTransformFunctionContext.d.ts:6",-1),_f=e("hr",null,null,-1),ff=e("h3",{id:"subscriptiontransforminputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiontransforminputhook","aria-hidden":"true"},"#"),t(" SubscriptionTransformInputHook")],-1),mf=e("strong",null,"SubscriptionTransformInputHook",-1),yf=e("code",null,"ServiceClassType",-1),gf=e("code",null,"PayloadOutput",-1),xf=e("code",null,"ParamsOutput",-1),vf=e("code",null,"PayloadInput",-1),bf=e("code",null,"ParamsInput",-1),Tf=e("code",null,"this",-1),Sf=e("code",null,"ServiceClassType",-1),kf=e("code",null,"context",-1),Cf=e("code",null,"SubscriptionTransformFunctionContext",-1),Pf=e("code",null,"payload",-1),If=e("code",null,"Readonly",-1),Rf=e("code",null,"PayloadInput",-1),Ff=e("code",null,"parameter",-1),wf=e("code",null,"Readonly",-1),Mf=e("code",null,"ParamsInput",-1),Df=e("code",null,"Promise",-1),Ef=e("code",null,"parameter",-1),Of=e("code",null,"Readonly",-1),Nf=e("code",null,"ParamsOutput",-1),Bf=e("code",null,"payload",-1),qf=e("code",null,"Readonly",-1),Zf=e("code",null,"PayloadOutput",-1),Hf=l('<h4 id="type-parameters-22" tabindex="-1"><a class="header-anchor" href="#type-parameters-22" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>PayloadOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>PayloadInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-15" tabindex="-1"><a class="header-anchor" href="#type-declaration-15" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><h5 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h5>',5),Af=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),jf=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),Gf=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),Lf={style:{"text-align":"left"}},Vf=e("code",null,"SubscriptionTransformFunctionContext",-1),zf=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"PayloadInput"),t(">")])],-1),Uf=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"ParamsInput"),t(">")])],-1),Kf=l('<h5 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><h4 id="defined-in-40" tabindex="-1"><a class="header-anchor" href="#defined-in-40" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/subscription/SubscriptionTransformInputHook.d.ts:5</p><hr><h3 id="subscriptiontransformoutputhook" tabindex="-1"><a class="header-anchor" href="#subscriptiontransformoutputhook" aria-hidden="true">#</a> SubscriptionTransformOutputHook</h3>',6),Qf=e("strong",null,"SubscriptionTransformOutputHook",-1),Wf=e("code",null,"ServiceClassType",-1),$f=e("code",null,"MessageResultType",-1),Xf=e("code",null,"MessageParamsType",-1),Yf=e("code",null,"ResponseOutput",-1),Jf=e("code",null,"this",-1),em=e("code",null,"ServiceClassType",-1),tm=e("code",null,"context",-1),nm=e("code",null,"SubscriptionTransformFunctionContext",-1),om=e("code",null,"payload",-1),sm=e("code",null,"Readonly",-1),lm=e("code",null,"MessageResultType",-1),am=e("code",null,"parameter",-1),dm=e("code",null,"Readonly",-1),im=e("code",null,"MessageParamsType",-1),rm=e("code",null,"Promise",-1),cm=e("code",null,"ResponseOutput",-1),um=l('<h4 id="type-parameters-23" tabindex="-1"><a class="header-anchor" href="#type-parameters-23" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>MessageResultType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ResponseOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-16" tabindex="-1"><a class="header-anchor" href="#type-declaration-16" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>ResponseOutput</code>&gt;</p><p>This transform hook is executed after function output validation and AfterGuardHooks.</p><h5 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a> Parameters</h5>',6),hm=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),pm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),_m=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),fm={style:{"text-align":"left"}},mm=e("code",null,"SubscriptionTransformFunctionContext",-1),ym=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageResultType"),t(">")])],-1),gm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageParamsType"),t(">")])],-1),xm=l('<h5 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>ResponseOutput</code>&gt;</p><h4 id="defined-in-41" tabindex="-1"><a class="header-anchor" href="#defined-in-41" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/subscription/SubscriptionTransformOutputHook.d.ts:7</p><h2 id="store-1" tabindex="-1"><a class="header-anchor" href="#store-1" aria-hidden="true">#</a> Store</h2><p>• <strong>ConfigStore</strong>: <code>Object</code></p><p>Interface definition for config store adapters</p><h4 id="defined-in-42" tabindex="-1"><a class="header-anchor" href="#defined-in-42" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/ConfigStore/types/ConfigStore.d.ts:9</p><p>• <strong>SecretStore</strong>: <code>Object</code></p><p>Interface definition for a secret store implementation</p><h4 id="defined-in-43" tabindex="-1"><a class="header-anchor" href="#defined-in-43" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/SecretStore/types/SecretStore.d.ts:8</p><p>• <strong>StateStore</strong>: <code>Object</code></p><p>Interface definition for state store implementations</p><h4 id="defined-in-44" tabindex="-1"><a class="header-anchor" href="#defined-in-44" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/StateStore/types/StateStore.d.ts:9</p><h3 id="configdeletefunction" tabindex="-1"><a class="header-anchor" href="#configdeletefunction" aria-hidden="true">#</a> ConfigDeleteFunction</h3><p>Ƭ <strong>ConfigDeleteFunction</strong>: (<code>configName</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-17" tabindex="-1"><a class="header-anchor" href="#type-declaration-17" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>configName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>delete a config value from the config store</p><h5 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>configName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-45" tabindex="-1"><a class="header-anchor" href="#defined-in-45" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/ConfigStore/types/ConfigDeleteFunction.d.ts:2</p><hr><h3 id="configgetterfunction" tabindex="-1"><a class="header-anchor" href="#configgetterfunction" aria-hidden="true">#</a> ConfigGetterFunction</h3><p>Ƭ <strong>ConfigGetterFunction</strong>: (...<code>configNames</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="type-declaration-18" tabindex="-1"><a class="header-anchor" href="#type-declaration-18" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>...configNames</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><p>get a config value from the config store</p><h5 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...configNames</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h5 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="defined-in-46" tabindex="-1"><a class="header-anchor" href="#defined-in-46" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/ConfigStore/types/ConfigGetterFunction.d.ts:2</p><hr><h3 id="configsetterfunction" tabindex="-1"><a class="header-anchor" href="#configsetterfunction" aria-hidden="true">#</a> ConfigSetterFunction</h3><p>Ƭ <strong>ConfigSetterFunction</strong>: (<code>secretName</code>: <code>string</code>, <code>secretValue</code>: <code>unknown</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-19" tabindex="-1"><a class="header-anchor" href="#type-declaration-19" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>set a config value in the config store</p><h5 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>secretValue</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-47" tabindex="-1"><a class="header-anchor" href="#defined-in-47" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/ConfigStore/types/ConfigSetterFunction.d.ts:2</p><hr><h3 id="secretdeletefunction" tabindex="-1"><a class="header-anchor" href="#secretdeletefunction" aria-hidden="true">#</a> SecretDeleteFunction</h3><p>Ƭ <strong>SecretDeleteFunction</strong>: (<code>secretName</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-20" tabindex="-1"><a class="header-anchor" href="#type-declaration-20" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>delete a secret from the secret store</p><h5 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-48" tabindex="-1"><a class="header-anchor" href="#defined-in-48" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/SecretStore/types/SecretDeleteFunction.d.ts:2</p><hr><h3 id="secretgetterfunction" tabindex="-1"><a class="header-anchor" href="#secretgetterfunction" aria-hidden="true">#</a> SecretGetterFunction</h3><p>Ƭ <strong>SecretGetterFunction</strong>: (...<code>secretName</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;&gt;</p><h4 id="type-declaration-21" tabindex="-1"><a class="header-anchor" href="#type-declaration-21" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>...secretName</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;&gt;</p><p>get a secret from the secret store</p><h5 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...secretName</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h5 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;&gt;</p><h4 id="defined-in-49" tabindex="-1"><a class="header-anchor" href="#defined-in-49" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/SecretStore/types/SecretGetterFunction.d.ts:2</p><hr><h3 id="secretsetterfunction" tabindex="-1"><a class="header-anchor" href="#secretsetterfunction" aria-hidden="true">#</a> SecretSetterFunction</h3><p>Ƭ <strong>SecretSetterFunction</strong>: (<code>secretName</code>: <code>string</code>, <code>secretValue</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-22" tabindex="-1"><a class="header-anchor" href="#type-declaration-22" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>set a secret in the secret store</p><h5 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>secretValue</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-15" tabindex="-1"><a class="header-anchor" href="#returns-15" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-50" tabindex="-1"><a class="header-anchor" href="#defined-in-50" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/SecretStore/types/SecretSetterFunction.d.ts:2</p><hr><h3 id="statedeletefunction" tabindex="-1"><a class="header-anchor" href="#statedeletefunction" aria-hidden="true">#</a> StateDeleteFunction</h3><p>Ƭ <strong>StateDeleteFunction</strong>: (<code>stateName</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-23" tabindex="-1"><a class="header-anchor" href="#type-declaration-23" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>stateName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>delete a state value from the state store</p><h5 id="parameters-16" tabindex="-1"><a class="header-anchor" href="#parameters-16" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>stateName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-16" tabindex="-1"><a class="header-anchor" href="#returns-16" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-51" tabindex="-1"><a class="header-anchor" href="#defined-in-51" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/StateStore/types/StateDeleteFunction.d.ts:2</p><hr><h3 id="stategetterfunction" tabindex="-1"><a class="header-anchor" href="#stategetterfunction" aria-hidden="true">#</a> StateGetterFunction</h3><p>Ƭ <strong>StateGetterFunction</strong>: (...<code>stateNames</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="type-declaration-24" tabindex="-1"><a class="header-anchor" href="#type-declaration-24" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>...stateNames</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><p>get a state value from the state store</p><h5 id="parameters-17" tabindex="-1"><a class="header-anchor" href="#parameters-17" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...stateNames</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h5 id="returns-17" tabindex="-1"><a class="header-anchor" href="#returns-17" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="defined-in-52" tabindex="-1"><a class="header-anchor" href="#defined-in-52" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/StateStore/types/StateGetterFunction.d.ts:2</p><hr><h3 id="statesetterfunction" tabindex="-1"><a class="header-anchor" href="#statesetterfunction" aria-hidden="true">#</a> StateSetterFunction</h3><p>Ƭ <strong>StateSetterFunction</strong>: (<code>secretName</code>: <code>string</code>, <code>secretValue</code>: <code>unknown</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-25" tabindex="-1"><a class="header-anchor" href="#type-declaration-25" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>set a state value in the state store</p><h5 id="parameters-18" tabindex="-1"><a class="header-anchor" href="#parameters-18" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>secretValue</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="returns-18" tabindex="-1"><a class="header-anchor" href="#returns-18" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-53" tabindex="-1"><a class="header-anchor" href="#defined-in-53" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/StateStore/types/StateSetterFunction.d.ts:2</p><h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="beforeresponsehook" tabindex="-1"><a class="header-anchor" href="#beforeresponsehook" aria-hidden="true">#</a> BeforeResponseHook</h3><p>Ƭ <strong>BeforeResponseHook</strong>: &lt;T&gt;(<code>payload</code>: <code>T</code>, <code>request</code>: <code>FastifyRequest</code>, <code>reply</code>: <code>FastifyReply</code>, <code>parameter</code>: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;) =&gt; <code>void</code></p><h4 id="type-declaration-26" tabindex="-1"><a class="header-anchor" href="#type-declaration-26" aria-hidden="true">#</a> Type declaration</h4><p>▸ &lt;<code>T</code>&gt;(<code>payload</code>, <code>request</code>, <code>reply</code>, <code>parameter</code>): <code>void</code></p><h5 id="type-parameters-24" tabindex="-1"><a class="header-anchor" href="#type-parameters-24" aria-hidden="true">#</a> Type parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="parameters-19" tabindex="-1"><a class="header-anchor" href="#parameters-19" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>payload</code></td><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>request</code></td><td style="text-align:left;"><code>FastifyRequest</code></td></tr><tr><td style="text-align:left;"><code>reply</code></td><td style="text-align:left;"><code>FastifyReply</code></td></tr><tr><td style="text-align:left;"><code>parameter</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</td></tr></tbody></table><h5 id="returns-19" tabindex="-1"><a class="header-anchor" href="#returns-19" aria-hidden="true">#</a> Returns</h5><p><code>void</code></p><h4 id="defined-in-54" tabindex="-1"><a class="header-anchor" href="#defined-in-54" aria-hidden="true">#</a> Defined in</h4>',136),vm={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/httpserver/src/service/httpServer/v1/types/BeforeResponseHook.ts#L3",target:"_blank",rel:"noopener noreferrer"},bm=e("hr",null,null,-1),Tm=e("h3",{id:"command-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#command-3","aria-hidden":"true"},"#"),t(" Command")],-1),Sm=e("strong",null,"Command",-1),km=e("code",null,"PayloadType",-1),Cm=e("code",null,"ParameterType",-1),Pm=e("code",null,"correlationId",-1),Im=e("code",null,"CorrelationId",-1),Rm=e("code",null,"messageType",-1),Fm=e("code",null,"Command",-1),wm=e("code",null,"payload",-1),Mm=e("code",null,"parameter",-1),Dm=e("code",null,"ParameterType",-1),Em=e("code",null,"payload",-1),Om=e("code",null,"PayloadType",-1),Nm=e("code",null,"receiver",-1),Bm=e("code",null,"EBMessageAddress",-1),qm=e("code",null,"sender",-1),Zm=e("code",null,"EBMessageAddress",-1),Hm=e("code",null,"EBMessageBase",-1),Am=l('<p>Command is a event bridge message, which is emitted by sender to event bridge. The event bridge dispatches the event to the receiver. A command expects to get a response message from receiver back to sender.</p><p>Also if there are subscriptions which are matching given command, the event bridge also dispatches the command message to the subscriber(s).</p><p>BE AWARE: Subscribers should not respond with command responses if they are &quot;silent&quot; subscribers/listeners.</p><h4 id="type-parameters-25" tabindex="-1"><a class="header-anchor" href="#type-parameters-25" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-55" tabindex="-1"><a class="header-anchor" href="#defined-in-55" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/commandType/Command.d.ts:16</p><hr><h3 id="commanddefinitionlist" tabindex="-1"><a class="header-anchor" href="#commanddefinitionlist" aria-hidden="true">#</a> CommandDefinitionList</h3>',9),jm=e("strong",null,"CommandDefinitionList",-1),Gm=e("code",null,"ServiceClassType",-1),Lm=e("code",null,"CommandDefinition",-1),Vm=e("code",null,"ServiceClassType",-1),zm=e("code",null,"CommandDefinitionMetadataBase",-1),Um=e("code",null,"any",-1),Km=e("code",null,"any",-1),Qm=e("code",null,"any",-1),Wm=e("code",null,"any",-1),$m=e("code",null,"any",-1),Xm=e("code",null,"any",-1),Ym=l(`<p>Helper type for creating list of service commands to be passed as input to service class</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> userServiceCommands<span class="token operator">:</span> CommandDefinitionList<span class="token operator">&lt;</span>UserService<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span>signUp<span class="token punctuation">.</span><span class="token function">getDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="type-parameters-26" tabindex="-1"><a class="header-anchor" href="#type-parameters-26" aria-hidden="true">#</a> Type parameters</h4>`,3),Jm=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ey=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),ty={style:{"text-align":"left"}},ny=e("code",null,"ServiceClass",-1),oy=l('<h4 id="defined-in-56" tabindex="-1"><a class="header-anchor" href="#defined-in-56" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/commandType/CommandDefinitionList.d.ts:11</p><hr><h3 id="commanddefinitionmetadatabase" tabindex="-1"><a class="header-anchor" href="#commanddefinitionmetadatabase" aria-hidden="true">#</a> CommandDefinitionMetadataBase</h3><p>Ƭ <strong>CommandDefinitionMetadataBase</strong>: <code>Object</code></p><h4 id="type-declaration-27" tabindex="-1"><a class="header-anchor" href="#type-declaration-27" aria-hidden="true">#</a> Type declaration</h4>',6),sy=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ly=e("td",{style:{"text-align":"left"}},[e("code",null,"expose")],-1),ay={style:{"text-align":"left"}},dy=e("code",null,"contentEncodingRequest?",-1),iy=e("code",null,"string",-1),ry=e("code",null,"contentEncodingResponse?",-1),cy=e("code",null,"string",-1),uy=e("code",null,"contentTypeRequest?",-1),hy=e("code",null,"ContentType",-1),py=e("code",null,"contentTypeResponse?",-1),_y=e("code",null,"ContentType",-1),fy=e("code",null,"deprecated?",-1),my=e("code",null,"boolean",-1),yy=e("code",null,"inputPayload?",-1),gy=e("code",null,"SchemaObject",-1),xy=e("code",null,"outputPayload?",-1),vy=e("code",null,"SchemaObject",-1),by=e("code",null,"parameter?",-1),Ty=e("code",null,"SchemaObject",-1),Sy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingRequest?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),ky=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingResponse?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Cy=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeRequest?")],-1),Py={style:{"text-align":"left"}},Iy=e("code",null,"ContentType",-1),Ry=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeResponse?")],-1),Fy={style:{"text-align":"left"}},wy=e("code",null,"ContentType",-1),My=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.deprecated?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")])],-1),Dy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.inputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Ey=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.outputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Oy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.parameter?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Ny=l(`<h4 id="defined-in-57" tabindex="-1"><a class="header-anchor" href="#defined-in-57" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/commandType/CommandDefinitionMetadataBase.d.ts:3</p><hr><h3 id="complete" tabindex="-1"><a class="header-anchor" href="#complete" aria-hidden="true">#</a> Complete</h3><p>Ƭ <strong>Complete</strong>&lt;<code>T</code>&gt;: { [P in keyof Required&lt;T&gt;]: Pick&lt;T, P&gt; extends Required&lt;Pick&lt;T, P&gt;&gt; ? T[P] : T[P] | undefined }</p><p>A helper which forces to provide all object keys, even if they are optional.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
 one<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
 two<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
 three<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">// without:</span>
<span class="token keyword">const</span> x<span class="token operator">:</span><span class="token constant">A</span> <span class="token operator">=</span> <span class="token punctuation">{</span> three<span class="token operator">:</span> <span class="token string">&#39;will work&#39;</span><span class="token punctuation">}</span>

<span class="token comment">// this will fail</span>
<span class="token keyword">const</span> y<span class="token operator">:</span>Complete<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span> three<span class="token operator">:</span> <span class="token string">&#39;will complain that one and two is missing&#39;</span><span class="token punctuation">}</span>
<span class="token comment">// needs to be like this:</span>
<span class="token keyword">const</span> z<span class="token operator">:</span>Complete<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span> one<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> two<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> three<span class="token operator">:</span> <span class="token string">&#39;will work&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="type-parameters-27" tabindex="-1"><a class="header-anchor" href="#type-parameters-27" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="defined-in-58" tabindex="-1"><a class="header-anchor" href="#defined-in-58" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/Complete.d.ts:20</p><hr><h3 id="contenttype" tabindex="-1"><a class="header-anchor" href="#contenttype" aria-hidden="true">#</a> ContentType</h3><p>Ƭ <strong>ContentType</strong>: <code>&quot;application/json&quot;</code> | <code>&quot;application/javascript&quot;</code> | <code>&quot;text/csv&quot;</code> | <code>&quot;text/css&quot;</code> | <code>&quot;text/html&quot;</code> | <code>&quot;text/javascript&quot;</code> | <code>&quot;text/markdown&quot;</code> | <code>&quot;text/plain&quot;</code> | <code>&quot;text/xml&quot;</code> | <code>string</code></p><p>List of content types for message payloads. If the content type is other than <code>application/json</code>, the message payload must be a string. It is up to the implementation to extract the content type from the original message and to convert or transform data.</p><h4 id="defined-in-59" tabindex="-1"><a class="header-anchor" href="#defined-in-59" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/ContentType.d.ts:6</p><hr><h3 id="contextbase" tabindex="-1"><a class="header-anchor" href="#contextbase" aria-hidden="true">#</a> ContextBase</h3><p>Ƭ <strong>ContextBase</strong>: <code>Object</code></p><p>The ContextBase provides is a basic type. Each context for command function, subscription function and all Hooks and transformers will have at least the properties of this type.</p><h4 id="type-declaration-28" tabindex="-1"><a class="header-anchor" href="#type-declaration-28" aria-hidden="true">#</a> Type declaration</h4>`,23),By=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),qy=e("td",{style:{"text-align":"left"}},[e("code",null,"configs")],-1),Zy={style:{"text-align":"left"}},Hy=e("code",null,"getConfig",-1),Ay=e("code",null,"ConfigGetterFunction",-1),jy=e("code",null,"removeConfig",-1),Gy=e("code",null,"ConfigDeleteFunction",-1),Ly=e("code",null,"setConfig",-1),Vy=e("code",null,"ConfigSetterFunction",-1),zy=e("td",{style:{"text-align":"left"}},"the config store",-1),Uy=e("td",{style:{"text-align":"left"}},[e("code",null,"configs.getConfig")],-1),Ky={style:{"text-align":"left"}},Qy=e("code",null,"ConfigGetterFunction",-1),Wy=e("td",{style:{"text-align":"left"}},"get a config value from the config store",-1),$y=e("td",{style:{"text-align":"left"}},[e("code",null,"configs.removeConfig")],-1),Xy={style:{"text-align":"left"}},Yy=e("code",null,"ConfigDeleteFunction",-1),Jy=e("td",{style:{"text-align":"left"}},"delete a config value from the config store",-1),eg=e("td",{style:{"text-align":"left"}},[e("code",null,"configs.setConfig")],-1),tg={style:{"text-align":"left"}},ng=e("code",null,"ConfigSetterFunction",-1),og=e("td",{style:{"text-align":"left"}},"set a config value in the config store",-1),sg=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),lg={style:{"text-align":"left"}},ag=e("code",null,"Logger",-1),dg=e("td",{style:{"text-align":"left"}},"the logger instance",-1),ig=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets")],-1),rg={style:{"text-align":"left"}},cg=e("code",null,"getSecret",-1),ug=e("code",null,"SecretGetterFunction",-1),hg=e("code",null,"removeSecret",-1),pg=e("code",null,"SecretDeleteFunction",-1),_g=e("code",null,"setSecret",-1),fg=e("code",null,"SecretSetterFunction",-1),mg=e("td",{style:{"text-align":"left"}},"the secret store",-1),yg=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets.getSecret")],-1),gg={style:{"text-align":"left"}},xg=e("code",null,"SecretGetterFunction",-1),vg=e("td",{style:{"text-align":"left"}},"get a secret from the secret store",-1),bg=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets.removeSecret")],-1),Tg={style:{"text-align":"left"}},Sg=e("code",null,"SecretDeleteFunction",-1),kg=e("td",{style:{"text-align":"left"}},"delete a secret from the secret store",-1),Cg=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets.setSecret")],-1),Pg={style:{"text-align":"left"}},Ig=e("code",null,"SecretSetterFunction",-1),Rg=e("td",{style:{"text-align":"left"}},"set a secret in the secret store",-1),Fg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"Context"),t(" | "),e("code",null,"undefined"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")]),e("td",{style:{"text-align":"left"}},"wrap given function in an opentelemetry active span")],-1),wg=e("td",{style:{"text-align":"left"}},[e("code",null,"states")],-1),Mg={style:{"text-align":"left"}},Dg=e("code",null,"getState",-1),Eg=e("code",null,"StateGetterFunction",-1),Og=e("code",null,"removeState",-1),Ng=e("code",null,"StateDeleteFunction",-1),Bg=e("code",null,"setState",-1),qg=e("code",null,"StateSetterFunction",-1),Zg=e("td",{style:{"text-align":"left"}},"the state store",-1),Hg=e("td",{style:{"text-align":"left"}},[e("code",null,"states.getState")],-1),Ag={style:{"text-align":"left"}},jg=e("code",null,"StateGetterFunction",-1),Gg=e("td",{style:{"text-align":"left"}},"get a state value from the state store",-1),Lg=e("td",{style:{"text-align":"left"}},[e("code",null,"states.removeState")],-1),Vg={style:{"text-align":"left"}},zg=e("code",null,"StateDeleteFunction",-1),Ug=e("td",{style:{"text-align":"left"}},"delete a state value from the state store",-1),Kg=e("td",{style:{"text-align":"left"}},[e("code",null,"states.setState")],-1),Qg={style:{"text-align":"left"}},Wg=e("code",null,"StateSetterFunction",-1),$g=e("td",{style:{"text-align":"left"}},"set a state value in the state store",-1),Xg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")]),e("td",{style:{"text-align":"left"}},"wrap given function in an opentelemetry span")],-1),Yg=l('<h4 id="defined-in-60" tabindex="-1"><a class="header-anchor" href="#defined-in-60" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/ContextBase.d.ts:10</p><hr><h3 id="correlationid" tabindex="-1"><a class="header-anchor" href="#correlationid" aria-hidden="true">#</a> CorrelationId</h3><p>Ƭ <strong>CorrelationId</strong>: <code>string</code></p><p>the correlation id links the command invocation message with the command response message</p><h4 id="defined-in-61" tabindex="-1"><a class="header-anchor" href="#defined-in-61" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/CorrelationId.d.ts:2</p><hr><h3 id="customevents" tabindex="-1"><a class="header-anchor" href="#customevents" aria-hidden="true">#</a> CustomEvents</h3><p>Ƭ <strong>CustomEvents</strong>: <code>Object</code></p><h4 id="index-signature" tabindex="-1"><a class="header-anchor" href="#index-signature" aria-hidden="true">#</a> Index signature</h4><p>▪ [key: <code>string</code>]: <code>unknown</code></p><h4 id="defined-in-62" tabindex="-1"><a class="header-anchor" href="#defined-in-62" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/ServiceEvents.d.ts:84</p><hr><h3 id="custommessage-1" tabindex="-1"><a class="header-anchor" href="#custommessage-1" aria-hidden="true">#</a> CustomMessage</h3>',17),Jg=e("strong",null,"CustomMessage",-1),ex=e("code",null,"Payload",-1),tx=e("code",null,"eventName",-1),nx=e("code",null,"string",-1),ox=e("code",null,"messageType",-1),sx=e("code",null,"CustomMessage",-1),lx=e("code",null,"payload?",-1),ax=e("code",null,"Payload",-1),dx=e("code",null,"receiver?",-1),ix=e("code",null,"EBMessageAddress",-1),rx=e("code",null,"sender",-1),cx=e("code",null,"EBMessageAddress",-1),ux=e("code",null,"EBMessageBase",-1),hx=l('<p>A custom message is a message which can be used to pass business information. The producer emits the message without knowledge about any consumer. The producer does not expect a response from a consumer.</p><h4 id="type-parameters-28" tabindex="-1"><a class="header-anchor" href="#type-parameters-28" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-63" tabindex="-1"><a class="header-anchor" href="#defined-in-63" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/CustomMessage.d.ts:9</p><hr><h3 id="definitioneventbridgeconfig" tabindex="-1"><a class="header-anchor" href="#definitioneventbridgeconfig" aria-hidden="true">#</a> DefinitionEventBridgeConfig</h3><p>Ƭ <strong>DefinitionEventBridgeConfig</strong>: <code>Object</code></p><p>Settings and advices for the event bridge, which are set in the command or subscription builder. The properties are advices and hints. It depends on the used event bridge implementation and underlaying message broker, if a specific property can be respected.</p><h4 id="type-declaration-29" tabindex="-1"><a class="header-anchor" href="#type-declaration-29" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>autoacknowledge?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Send the acknowledge to message broker as soon as the message arrives - defaults to true for commands - defaults to false for subscriptions</td></tr><tr><td style="text-align:left;"><code>durable?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Advise the underlaying message broker to store messages if no consumer is available. Messages will be send as soon as the service is able to consume.</td></tr><tr><td style="text-align:left;"><code>shared?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">If set to true, the event bridge is adviced to deliver one message to at least one consumer instance. True is the default value. If set to false, the event bridge is adviced to deliver one message to all consumer instances. Use case: Receiving Info of message, which need to be passed to all instance to keep information in sync. In serverless environments, this flag should not have any effect <strong><code>Default</code></strong> true</td></tr></tbody></table><h4 id="defined-in-64" tabindex="-1"><a class="header-anchor" href="#defined-in-64" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/DefinitionEventBridgeConfig.d.ts:6</p><hr><h3 id="ebmessage" tabindex="-1"><a class="header-anchor" href="#ebmessage" aria-hidden="true">#</a> EBMessage</h3>',15),px=e("strong",null,"EBMessage",-1),_x=e("code",null,"Command",-1),fx=e("code",null,"CommandResponse",-1),mx=e("code",null,"InfoMessage",-1),yx=e("code",null,"CustomMessage",-1),gx=l('<p>EBMessage is some message which is handled by the event bridge.</p><h4 id="defined-in-65" tabindex="-1"><a class="header-anchor" href="#defined-in-65" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/EBMessage.d.ts:7</p><hr><h3 id="ebmessageaddress" tabindex="-1"><a class="header-anchor" href="#ebmessageaddress" aria-hidden="true">#</a> EBMessageAddress</h3><p>Ƭ <strong>EBMessageAddress</strong>: <code>Object</code></p><p>A event bridge message address describes the sender or receiver of a message.</p><h4 id="type-declaration-30" tabindex="-1"><a class="header-anchor" href="#type-declaration-30" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>serviceName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the name of the service</td></tr><tr><td style="text-align:left;"><code>serviceTarget</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the name of the command or subscription</td></tr><tr><td style="text-align:left;"><code>serviceVersion</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the version of the service</td></tr></tbody></table><h4 id="defined-in-66" tabindex="-1"><a class="header-anchor" href="#defined-in-66" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/EBMessageAddress.d.ts:4</p><hr><h3 id="ebmessagebase" tabindex="-1"><a class="header-anchor" href="#ebmessagebase" aria-hidden="true">#</a> EBMessageBase</h3><p>Ƭ <strong>EBMessageBase</strong>: <code>Object</code></p><p>Default fields which are part of any purista message</p><h4 id="type-declaration-31" tabindex="-1"><a class="header-anchor" href="#type-declaration-31" aria-hidden="true">#</a> Type declaration</h4>',16),xx=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),vx=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content encoding of message payload")],-1),bx=e("td",{style:{"text-align":"left"}},[e("code",null,"contentType")],-1),Tx={style:{"text-align":"left"}},Sx=e("code",null,"ContentType",-1),kx=e("td",{style:{"text-align":"left"}},"content type of message payload",-1),Cx=e("td",{style:{"text-align":"left"}},[e("code",null,"correlationId?")],-1),Px={style:{"text-align":"left"}},Ix=e("code",null,"CorrelationId",-1),Rx=e("td",{style:{"text-align":"left"}},"correlation id to know which command response referrs to which command",-1),Fx=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name for this message")],-1),wx=e("td",{style:{"text-align":"left"}},[e("code",null,"id")],-1),Mx={style:{"text-align":"left"}},Dx=e("code",null,"EBMessageId",-1),Ex=e("td",{style:{"text-align":"left"}},"global unique id of message",-1),Ox=e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId")],-1),Nx={style:{"text-align":"left"}},Bx=e("code",null,"InstanceId",-1),qx=e("td",{style:{"text-align":"left"}},"instance id of eventbridge which was creating the message",-1),Zx=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"otp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"stringified Opentelemetry parent trace id")],-1),Hx=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),Ax={style:{"text-align":"left"}},jx=e("code",null,"PrincipalId",-1),Gx=e("td",{style:{"text-align":"left"}},"principal id",-1),Lx=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"timestamp of message creation time")],-1),Vx=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId?")],-1),zx={style:{"text-align":"left"}},Ux=e("code",null,"TraceId",-1),Kx=e("td",{style:{"text-align":"left"}},"trace id of message",-1),Qx=l('<h4 id="defined-in-67" tabindex="-1"><a class="header-anchor" href="#defined-in-67" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/EBMessageBase.d.ts:10</p><hr><h3 id="ebmessageid" tabindex="-1"><a class="header-anchor" href="#ebmessageid" aria-hidden="true">#</a> EBMessageId</h3><p>Ƭ <strong>EBMessageId</strong>: <code>string</code></p><p>Unique id of the event bridge message</p><h4 id="defined-in-68" tabindex="-1"><a class="header-anchor" href="#defined-in-68" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/EBMessageId.d.ts:4</p><hr><h3 id="emitcustommessagefunction" tabindex="-1"><a class="header-anchor" href="#emitcustommessagefunction" aria-hidden="true">#</a> EmitCustomMessageFunction</h3>',10),Wx=e("strong",null,"EmitCustomMessageFunction",-1),$x=e("code",null,"eventName",-1),Xx=e("code",null,"string",-1),Yx=e("code",null,"payload?",-1),Jx=e("code",null,"Payload",-1),ev=e("code",null,"contentType?",-1),tv=e("code",null,"ContentType",-1),nv=e("code",null,"contentEncoding?",-1),ov=e("code",null,"string",-1),sv=e("code",null,"Promise",-1),lv=e("code",null,"void",-1),av=l(`<h4 id="type-declaration-32" tabindex="-1"><a class="header-anchor" href="#type-declaration-32" aria-hidden="true">#</a> Type declaration</h4><p>▸ &lt;<code>Payload</code>&gt;(<code>eventName</code>, <code>payload?</code>, <code>contentType?</code>, <code>contentEncoding?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Emits the given payload as custom message with the given event name.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">await</span> <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;my-custom-event-name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> the<span class="token operator">:</span> <span class="token string">&#39;payload&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="type-parameters-29" tabindex="-1"><a class="header-anchor" href="#type-parameters-29" aria-hidden="true">#</a> Type parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="parameters-20" tabindex="-1"><a class="header-anchor" href="#parameters-20" aria-hidden="true">#</a> Parameters</h5>`,8),dv=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),iv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),rv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Payload")])],-1),cv=e("td",{style:{"text-align":"left"}},[e("code",null,"contentType?")],-1),uv={style:{"text-align":"left"}},hv=e("code",null,"ContentType",-1),pv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),_v=l('<h5 id="returns-20" tabindex="-1"><a class="header-anchor" href="#returns-20" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-69" tabindex="-1"><a class="header-anchor" href="#defined-in-69" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/EmitCustomMessageFunction.d.ts:9</p><hr><h3 id="errorresponsepayload" tabindex="-1"><a class="header-anchor" href="#errorresponsepayload" aria-hidden="true">#</a> ErrorResponsePayload</h3><p>Ƭ <strong>ErrorResponsePayload</strong>: <code>Object</code></p><p>Error message payload</p><h4 id="type-declaration-33" tabindex="-1"><a class="header-anchor" href="#type-declaration-33" aria-hidden="true">#</a> Type declaration</h4>',9),fv=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),mv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"data?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"addition data")],-1),yv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"message")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"a human readable error message")],-1),gv=e("td",{style:{"text-align":"left"}},[e("code",null,"status")],-1),xv={style:{"text-align":"left"}},vv=e("code",null,"StatusCode",-1),bv=e("td",{style:{"text-align":"left"}},"the error status code",-1),Tv=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId?")],-1),Sv={style:{"text-align":"left"}},kv=e("code",null,"TraceId",-1),Cv=e("td",{style:{"text-align":"left"}},"the trace if of the request",-1),Pv=l('<h4 id="defined-in-70" tabindex="-1"><a class="header-anchor" href="#defined-in-70" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/ErrorResponsePayload.d.ts:6</p><hr><h3 id="eventkey" tabindex="-1"><a class="header-anchor" href="#eventkey" aria-hidden="true">#</a> EventKey</h3><p>Ƭ <strong>EventKey</strong>&lt;<code>T</code>&gt;: <code>string</code> &amp; keyof <code>T</code></p><h4 id="type-parameters-30" tabindex="-1"><a class="header-anchor" href="#type-parameters-30" aria-hidden="true">#</a> Type parameters</h4>',6),Iv=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Rv=e("td",{style:{"text-align":"left"}},[e("code",null,"T")],-1),Fv={style:{"text-align":"left"}},wv=e("code",null,"EventMap",-1),Mv=l('<h4 id="defined-in-71" tabindex="-1"><a class="header-anchor" href="#defined-in-71" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/GenericEventEmitter.d.ts:2</p><hr><h3 id="eventmap" tabindex="-1"><a class="header-anchor" href="#eventmap" aria-hidden="true">#</a> EventMap</h3><p>Ƭ <strong>EventMap</strong>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p><h4 id="defined-in-72" tabindex="-1"><a class="header-anchor" href="#defined-in-72" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/GenericEventEmitter.d.ts:1</p><hr><h3 id="eventreceiver" tabindex="-1"><a class="header-anchor" href="#eventreceiver" aria-hidden="true">#</a> EventReceiver</h3><p>Ƭ <strong>EventReceiver</strong>&lt;<code>T</code>&gt;: (<code>parameter</code>: <code>T</code>) =&gt; <code>void</code></p><h4 id="type-parameters-31" tabindex="-1"><a class="header-anchor" href="#type-parameters-31" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="type-declaration-34" tabindex="-1"><a class="header-anchor" href="#type-declaration-34" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>parameter</code>): <code>void</code></p><h5 id="parameters-21" tabindex="-1"><a class="header-anchor" href="#parameters-21" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>parameter</code></td><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h5 id="returns-21" tabindex="-1"><a class="header-anchor" href="#returns-21" aria-hidden="true">#</a> Returns</h5><p><code>void</code></p><h4 id="defined-in-73" tabindex="-1"><a class="header-anchor" href="#defined-in-73" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/GenericEventEmitter.d.ts:3</p><hr><h3 id="httpexposedservicemeta" tabindex="-1"><a class="header-anchor" href="#httpexposedservicemeta" aria-hidden="true">#</a> HttpExposedServiceMeta</h3>',22),Dv=e("strong",null,"HttpExposedServiceMeta",-1),Ev=e("code",null,"ParameterType",-1),Ov=e("code",null,"CommandDefinitionMetadataBase",-1),Nv=e("code",null,"expose",-1),Bv=e("code",null,"http",-1),qv=e("code",null,"method",-1),Zv=e("code",null,'"GET"',-1),Hv=e("code",null,'"POST"',-1),Av=e("code",null,'"PATCH"',-1),jv=e("code",null,'"PUT"',-1),Gv=e("code",null,'"DELETE"',-1),Lv=e("code",null,"openApi?",-1),Vv=e("code",null,"additionalStatusCodes?",-1),zv=e("code",null,"StatusCode",-1),Uv=e("code",null,"description",-1),Kv=e("code",null,"string",-1),Qv=e("code",null,"isSecure",-1),Wv=e("code",null,"boolean",-1),$v=e("code",null,"operationId?",-1),Xv=e("code",null,"string",-1),Yv=e("code",null,"query?",-1),Jv=e("code",null,"QueryParameter",-1),eb=e("code",null,"ParameterType",-1),tb=e("code",null,"summary",-1),nb=e("code",null,"string",-1),ob=e("code",null,"tags?",-1),sb=e("code",null,"string",-1),lb=e("code",null,"path",-1),ab=e("code",null,"string",-1),db=l('<h4 id="type-parameters-32" tabindex="-1"><a class="header-anchor" href="#type-parameters-32" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;">{}</td></tr></tbody></table><h4 id="defined-in-74" tabindex="-1"><a class="header-anchor" href="#defined-in-74" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/HttpServer/types/HttpExposedServiceMeta.d.ts:3</p><hr><h3 id="httpserverservicev1configraw" tabindex="-1"><a class="header-anchor" href="#httpserverservicev1configraw" aria-hidden="true">#</a> HttpServerServiceV1ConfigRaw</h3>',6),ib=e("strong",null,"HttpServerServiceV1ConfigRaw",-1),rb=e("code",null,"z.input",-1),cb=e("code",null,"httpServerServiceV1ConfigSchema",-1),ub=e("h4",{id:"defined-in-75",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-75","aria-hidden":"true"},"#"),t(" Defined in")],-1),hb={href:"https://github.com/sebastianwessel/purista/blob/8c66693/packages/httpserver/src/service/httpServer/v1/httpServerServiceConfig.ts#L90",target:"_blank",rel:"noopener noreferrer"},pb=e("hr",null,null,-1),_b=e("h3",{id:"infoinvoketimeout-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoinvoketimeout-1","aria-hidden":"true"},"#"),t(" InfoInvokeTimeout")],-1),fb=e("strong",null,"InfoInvokeTimeout",-1),mb=e("code",null,"messageType",-1),yb=e("code",null,"InfoInvokeTimeout",-1),gb=e("code",null,"InfoServiceBase",-1),xb=e("h4",{id:"defined-in-76",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-76","aria-hidden":"true"},"#"),t(" Defined in")],-1),vb=e("p",null,"packages/core/lib/core/types/infoType/InfoInvokeTimeout.d.ts:20",-1),bb=e("hr",null,null,-1),Tb=e("h3",{id:"infomessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infomessage","aria-hidden":"true"},"#"),t(" InfoMessage")],-1),Sb=e("strong",null,"InfoMessage",-1),kb=e("code",null,"InfoServiceDrain",-1),Cb=e("code",null,"InfoServiceFunctionAdded",-1),Pb=e("code",null,"InfoServiceInit",-1),Ib=e("code",null,"InfoServiceNotReady",-1),Rb=e("code",null,"InfoServiceReady",-1),Fb=e("code",null,"InfoServiceShutdown",-1),wb=e("code",null,"InfoInvokeTimeout",-1),Mb=e("code",null,"InfoSubscriptionError",-1),Db=e("h4",{id:"defined-in-77",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-77","aria-hidden":"true"},"#"),t(" Defined in")],-1),Eb=e("p",null,"packages/core/lib/core/types/infoType/InfoMessage.d.ts:10",-1),Ob=e("hr",null,null,-1),Nb=e("h3",{id:"infomessagetype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infomessagetype","aria-hidden":"true"},"#"),t(" InfoMessageType")],-1),Bb=e("strong",null,"InfoMessageType",-1),qb=e("code",null,"InfoServiceDrain",-1),Zb=e("code",null,"InfoServiceFunctionAdded",-1),Hb=e("code",null,"InfoServiceInit",-1),Ab=e("code",null,"InfoServiceNotReady",-1),jb=e("code",null,"InfoServiceReady",-1),Gb=e("code",null,"InfoServiceShutdown",-1),Lb=e("code",null,"InfoInvokeTimeout",-1),Vb=e("code",null,"InfoSubscriptionError",-1),zb=e("h4",{id:"defined-in-78",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-78","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ub=e("p",null,"packages/core/lib/core/types/infoType/InfoMessage.d.ts:11",-1),Kb=e("hr",null,null,-1),Qb=e("h3",{id:"infoservicebase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicebase","aria-hidden":"true"},"#"),t(" InfoServiceBase")],-1),Wb=e("strong",null,"InfoServiceBase",-1),$b=e("code",null,"contentEncoding",-1),Xb=e("code",null,'"utf-8"',-1),Yb=e("code",null,"contentType",-1),Jb=e("code",null,'"application/json"',-1),eT=e("code",null,"payload?",-1),tT=e("code",null,"unknown",-1),nT=e("code",null,"sender",-1),oT=e("code",null,"serviceName",-1),sT=e("code",null,"string",-1),lT=e("code",null,"serviceTarget",-1),aT=e("code",null,"string",-1),dT=e("code",null,"serviceVersion",-1),iT=e("code",null,"string",-1),rT=e("code",null,"EBMessageBase",-1),cT=e("h4",{id:"defined-in-79",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-79","aria-hidden":"true"},"#"),t(" Defined in")],-1),uT=e("p",null,"packages/core/lib/core/types/infoType/InfoServiceBase.d.ts:2",-1),hT=e("hr",null,null,-1),pT=e("h3",{id:"infoservicedrain-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicedrain-1","aria-hidden":"true"},"#"),t(" InfoServiceDrain")],-1),_T=e("strong",null,"InfoServiceDrain",-1),fT=e("code",null,"messageType",-1),mT=e("code",null,"InfoServiceDrain",-1),yT=e("code",null,"InfoServiceBase",-1),gT=e("h4",{id:"defined-in-80",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-80","aria-hidden":"true"},"#"),t(" Defined in")],-1),xT=e("p",null,"packages/core/lib/core/types/infoType/InfoServiceDrain.d.ts:3",-1),vT=e("hr",null,null,-1),bT=e("h3",{id:"infoservicefunctionadded-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicefunctionadded-1","aria-hidden":"true"},"#"),t(" InfoServiceFunctionAdded")],-1),TT=e("strong",null,"InfoServiceFunctionAdded",-1),ST=e("code",null,"messageType",-1),kT=e("code",null,"InfoServiceFunctionAdded",-1),CT=e("code",null,"InfoServiceBase",-1),PT=e("h4",{id:"defined-in-81",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-81","aria-hidden":"true"},"#"),t(" Defined in")],-1),IT=e("p",null,"packages/core/lib/core/types/infoType/InfoServiceFunctionAdded.d.ts:3",-1),RT=e("hr",null,null,-1),FT=e("h3",{id:"infoserviceinit-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoserviceinit-1","aria-hidden":"true"},"#"),t(" InfoServiceInit")],-1),wT=e("strong",null,"InfoServiceInit",-1),MT=e("code",null,"messageType",-1),DT=e("code",null,"InfoServiceInit",-1),ET=e("code",null,"InfoServiceBase",-1),OT=e("h4",{id:"defined-in-82",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-82","aria-hidden":"true"},"#"),t(" Defined in")],-1),NT=e("p",null,"packages/core/lib/core/types/infoType/InfoServiceInit.d.ts:3",-1),BT=e("hr",null,null,-1),qT=e("h3",{id:"infoservicenotready-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicenotready-1","aria-hidden":"true"},"#"),t(" InfoServiceNotReady")],-1),ZT=e("strong",null,"InfoServiceNotReady",-1),HT=e("code",null,"messageType",-1),AT=e("code",null,"InfoServiceNotReady",-1),jT=e("code",null,"InfoServiceBase",-1),GT=e("h4",{id:"defined-in-83",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-83","aria-hidden":"true"},"#"),t(" Defined in")],-1),LT=e("p",null,"packages/core/lib/core/types/infoType/InfoServiceNotReady.d.ts:3",-1),VT=e("hr",null,null,-1),zT=e("h3",{id:"infoserviceready-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoserviceready-1","aria-hidden":"true"},"#"),t(" InfoServiceReady")],-1),UT=e("strong",null,"InfoServiceReady",-1),KT=e("code",null,"messageType",-1),QT=e("code",null,"InfoServiceReady",-1),WT=e("code",null,"InfoServiceBase",-1),$T=e("h4",{id:"defined-in-84",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-84","aria-hidden":"true"},"#"),t(" Defined in")],-1),XT=e("p",null,"packages/core/lib/core/types/infoType/InfoServiceReady.d.ts:3",-1),YT=e("hr",null,null,-1),JT=e("h3",{id:"infoserviceshutdown-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoserviceshutdown-1","aria-hidden":"true"},"#"),t(" InfoServiceShutdown")],-1),e4=e("strong",null,"InfoServiceShutdown",-1),t4=e("code",null,"messageType",-1),n4=e("code",null,"InfoServiceShutdown",-1),o4=e("code",null,"InfoServiceBase",-1),s4=e("h4",{id:"defined-in-85",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-85","aria-hidden":"true"},"#"),t(" Defined in")],-1),l4=e("p",null,"packages/core/lib/core/types/infoType/InfoServiceShutdown.d.ts:3",-1),a4=e("hr",null,null,-1),d4=e("h3",{id:"infosubscriptionerror-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infosubscriptionerror-1","aria-hidden":"true"},"#"),t(" InfoSubscriptionError")],-1),i4=e("strong",null,"InfoSubscriptionError",-1),r4=e("code",null,"messageType",-1),c4=e("code",null,"InfoSubscriptionError",-1),u4=e("code",null,"InfoServiceBase",-1),h4=l('<h4 id="defined-in-86" tabindex="-1"><a class="header-anchor" href="#defined-in-86" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/infoType/InfoSubscriptionError.d.ts:3</p><hr><h3 id="instanceid" tabindex="-1"><a class="header-anchor" href="#instanceid" aria-hidden="true">#</a> InstanceId</h3><p>Ƭ <strong>InstanceId</strong>: <code>string</code></p><p>the instance id of the event bridge</p><h4 id="defined-in-87" tabindex="-1"><a class="header-anchor" href="#defined-in-87" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/InstanceId.d.ts:2</p><hr><h3 id="invokefunction" tabindex="-1"><a class="header-anchor" href="#invokefunction" aria-hidden="true">#</a> InvokeFunction</h3>',10),p4=e("strong",null,"InvokeFunction",-1),_4=e("code",null,"address",-1),f4=e("code",null,"EBMessageAddress",-1),m4=e("code",null,"payload",-1),y4=e("code",null,"PayloadType",-1),g4=e("code",null,"parameter",-1),x4=e("code",null,"ParameterType",-1),v4=e("code",null,"Promise",-1),b4=e("code",null,"InvokeResponseType",-1),T4=l(`<h4 id="type-declaration-35" tabindex="-1"><a class="header-anchor" href="#type-declaration-35" aria-hidden="true">#</a> Type declaration</h4><p>▸ &lt;<code>InvokeResponseType</code>, <code>PayloadType</code>, <code>ParameterType</code>&gt;(<code>address</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>InvokeResponseType</code>&gt;</p><p>Invokes a command and returns the result. It is recommended to validate the result against a schema which only contains the data you actually need.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>
<span class="token keyword">const</span> address<span class="token operator">:</span> EBMessageAddress <span class="token operator">=</span> <span class="token punctuation">{</span>
  serviceName<span class="token operator">:</span> <span class="token string">&#39;name-of-service-to-invoke&#39;</span><span class="token punctuation">,</span>
  serviceVersion<span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>
  serviceTarget<span class="token operator">:</span> <span class="token string">&#39;command-name-to-invoke&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> inputPayload <span class="token operator">=</span> <span class="token punctuation">{</span> my<span class="token operator">:</span> <span class="token string">&#39;input&#39;</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> inputParameter <span class="token operator">=</span> <span class="token punctuation">{</span> search<span class="token operator">:</span> <span class="token string">&#39;for_me&#39;</span> <span class="token punctuation">}</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token generic-function"><span class="token function">invoke</span><span class="token generic class-name"><span class="token operator">&lt;</span>MyResultType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>address<span class="token punctuation">,</span> inputPayload inputParameter <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="type-parameters-33" tabindex="-1"><a class="header-anchor" href="#type-parameters-33" aria-hidden="true">#</a> Type parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>InvokeResponseType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="parameters-22" tabindex="-1"><a class="header-anchor" href="#parameters-22" aria-hidden="true">#</a> Parameters</h5>`,8),S4=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),k4=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),C4={style:{"text-align":"left"}},P4=e("code",null,"EBMessageAddress",-1),I4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")])],-1),R4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ParameterType")])],-1),F4=l('<h5 id="returns-22" tabindex="-1"><a class="header-anchor" href="#returns-22" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>InvokeResponseType</code>&gt;</p><h4 id="defined-in-88" tabindex="-1"><a class="header-anchor" href="#defined-in-88" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/InvokeFunction.d.ts:20</p><hr><h3 id="logfnparamtype" tabindex="-1"><a class="header-anchor" href="#logfnparamtype" aria-hidden="true">#</a> LogFnParamType</h3><p>Ƭ <strong>LogFnParamType</strong>: [<code>unknown</code>, string?, ...any] | [<code>string</code>, ...any]</p><h4 id="defined-in-89" tabindex="-1"><a class="header-anchor" href="#defined-in-89" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/Logger.d.ts:15</p><hr><h3 id="loglevelname" tabindex="-1"><a class="header-anchor" href="#loglevelname" aria-hidden="true">#</a> LogLevelName</h3><p>Ƭ <strong>LogLevelName</strong>: <code>&quot;info&quot;</code> | <code>&quot;error&quot;</code> | <code>&quot;warn&quot;</code> | <code>&quot;debug&quot;</code> | <code>&quot;trace&quot;</code> | <code>&quot;fatal&quot;</code></p><h4 id="defined-in-90" tabindex="-1"><a class="header-anchor" href="#defined-in-90" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/LogLevelName.d.ts:1</p><hr><h3 id="loggeroptions" tabindex="-1"><a class="header-anchor" href="#loggeroptions" aria-hidden="true">#</a> LoggerOptions</h3><p>Ƭ <strong>LoggerOptions</strong>: <code>Object</code></p><h4 id="type-declaration-36" tabindex="-1"><a class="header-anchor" href="#type-declaration-36" aria-hidden="true">#</a> Type declaration</h4>',18),w4=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),M4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hostname?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),D4=e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId?")],-1),E4={style:{"text-align":"left"}},O4=e("code",null,"InstanceId",-1),N4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"name?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),B4=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),q4={style:{"text-align":"left"}},Z4=e("code",null,"PrincipalId",-1),H4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"puristaVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),A4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),j4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),G4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),L4=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId?")],-1),V4={style:{"text-align":"left"}},z4=e("code",null,"TraceId",-1),U4=e("h4",{id:"defined-in-91",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-91","aria-hidden":"true"},"#"),t(" Defined in")],-1),K4=e("p",null,"packages/core/lib/core/types/Logger.d.ts:4",-1),Q4=e("hr",null,null,-1),W4=e("h3",{id:"newable",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#newable","aria-hidden":"true"},"#"),t(" Newable")],-1),$4=e("strong",null,"Newable",-1),X4=e("code",null,"T",-1),Y4=e("code",null,"ConfigType",-1),J4=e("code",null,"config",-1),e3=e("code",null,"ServiceConstructorInput",-1),t3=e("code",null,"ConfigType",-1),n3=e("code",null,"T",-1),o3=l('<h4 id="type-parameters-34" tabindex="-1"><a class="header-anchor" href="#type-parameters-34" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="type-declaration-37" tabindex="-1"><a class="header-anchor" href="#type-declaration-37" aria-hidden="true">#</a> Type declaration</h4><p>• <strong>new Newable</strong>(<code>config</code>): <code>T</code></p><h5 id="parameters-23" tabindex="-1"><a class="header-anchor" href="#parameters-23" aria-hidden="true">#</a> Parameters</h5>',5),s3=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),l3=e("td",{style:{"text-align":"left"}},[e("code",null,"config")],-1),a3={style:{"text-align":"left"}},d3=e("code",null,"ServiceConstructorInput",-1),i3=e("code",null,"ConfigType",-1),r3=l('<h5 id="returns-23" tabindex="-1"><a class="header-anchor" href="#returns-23" aria-hidden="true">#</a> Returns</h5><p><code>T</code></p><h4 id="defined-in-92" tabindex="-1"><a class="header-anchor" href="#defined-in-92" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/ServiceBuilder/ServiceBuilder.impl.d.ts:6</p><hr><h3 id="principalid" tabindex="-1"><a class="header-anchor" href="#principalid" aria-hidden="true">#</a> PrincipalId</h3><p>Ƭ <strong>PrincipalId</strong>: <code>string</code></p><p>the principal id</p><h4 id="defined-in-93" tabindex="-1"><a class="header-anchor" href="#defined-in-93" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/PrincipalId.d.ts:2</p><hr><h3 id="queryparameter" tabindex="-1"><a class="header-anchor" href="#queryparameter" aria-hidden="true">#</a> QueryParameter</h3><p>Ƭ <strong>QueryParameter</strong>&lt;<code>ParameterType</code>&gt;: <code>Object</code></p><h4 id="type-parameters-35" tabindex="-1"><a class="header-anchor" href="#type-parameters-35" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;">{}</td></tr></tbody></table><h4 id="type-declaration-38" tabindex="-1"><a class="header-anchor" href="#type-declaration-38" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;">keyof <code>ParameterType</code></td></tr><tr><td style="text-align:left;"><code>required</code></td><td style="text-align:left;"><code>boolean</code></td></tr></tbody></table><h4 id="defined-in-94" tabindex="-1"><a class="header-anchor" href="#defined-in-94" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/HttpServer/types/QueryParameter.d.ts:1</p><hr><h3 id="serviceevents" tabindex="-1"><a class="header-anchor" href="#serviceevents" aria-hidden="true">#</a> ServiceEvents</h3>',21),c3=e("strong",null,"ServiceEvents",-1),u3=e("code",null,"ServiceEventsInternal",-1),h3=e("code",null,"addPrefixToObject",-1),p3=e("code",null,"CustomEvents",-1),_3=e("code",null,'"custom-"',-1),f3=e("code",null,"addPrefixToObject",-1),m3=e("code",null,"CustomEvents",-1),y3=e("code",null,'"misc-"',-1),g3=l('<p>ServiceEvents are plain javascript events sent by the service. There are three types:</p><ul><li>technical events when a services starts, stops, an error occurs and so on are prefixed with <code>service-</code></li><li>response messages, which have a event name assigned, are prefixed with <code>custom-</code></li><li>additional events, free defined by developer are prefixed with <code>misc-</code></li></ul><h4 id="defined-in-95" tabindex="-1"><a class="header-anchor" href="#defined-in-95" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/ServiceEvents.d.ts:94</p><hr><h3 id="serviceinfotype" tabindex="-1"><a class="header-anchor" href="#serviceinfotype" aria-hidden="true">#</a> ServiceInfoType</h3><p>Ƭ <strong>ServiceInfoType</strong>: <code>Object</code></p><p>General service information</p><h4 id="type-declaration-39" tabindex="-1"><a class="header-anchor" href="#type-declaration-39" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>serviceDescription</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>serviceName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>serviceVersion</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="defined-in-96" tabindex="-1"><a class="header-anchor" href="#defined-in-96" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/infoType/ServiceInfoType.d.ts:4</p><hr><h3 id="subscriptiondefinitionlist" tabindex="-1"><a class="header-anchor" href="#subscriptiondefinitionlist" aria-hidden="true">#</a> SubscriptionDefinitionList</h3>',14),x3=e("strong",null,"SubscriptionDefinitionList",-1),v3=e("code",null,"ServiceClassType",-1),b3=e("code",null,"SubscriptionDefinition",-1),T3=e("code",null,"ServiceClassType",-1),S3=e("code",null,"any",-1),k3=e("code",null,"any",-1),C3=e("code",null,"any",-1),P3=e("code",null,"any",-1),I3=l(`<p>Helper type for creating list of service commands to be passed as input to service class</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> userServiceCommands<span class="token operator">:</span> SubscriptionDefinitionList<span class="token operator">&lt;</span>UserService<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span>signUp<span class="token punctuation">.</span><span class="token function">getDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="type-parameters-36" tabindex="-1"><a class="header-anchor" href="#type-parameters-36" aria-hidden="true">#</a> Type parameters</h4>`,3),R3=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),F3=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),w3={style:{"text-align":"left"}},M3=e("code",null,"ServiceClass",-1),D3=l('<h4 id="defined-in-97" tabindex="-1"><a class="header-anchor" href="#defined-in-97" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/subscription/SubscriptionDefinitionList.d.ts:10</p><hr><h3 id="subscriptiondefinitionmetadatabase" tabindex="-1"><a class="header-anchor" href="#subscriptiondefinitionmetadatabase" aria-hidden="true">#</a> SubscriptionDefinitionMetadataBase</h3><p>Ƭ <strong>SubscriptionDefinitionMetadataBase</strong>: <code>Object</code></p><h4 id="type-declaration-40" tabindex="-1"><a class="header-anchor" href="#type-declaration-40" aria-hidden="true">#</a> Type declaration</h4>',6),E3=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),O3=e("td",{style:{"text-align":"left"}},[e("code",null,"expose")],-1),N3={style:{"text-align":"left"}},B3=e("code",null,"contentEncodingRequest?",-1),q3=e("code",null,"string",-1),Z3=e("code",null,"contentEncodingResponse?",-1),H3=e("code",null,"string",-1),A3=e("code",null,"contentTypeRequest?",-1),j3=e("code",null,"ContentType",-1),G3=e("code",null,"contentTypeResponse?",-1),L3=e("code",null,"ContentType",-1),V3=e("code",null,"inputPayload?",-1),z3=e("code",null,"SchemaObject",-1),U3=e("code",null,"outputPayload?",-1),K3=e("code",null,"SchemaObject",-1),Q3=e("code",null,"parameter?",-1),W3=e("code",null,"SchemaObject",-1),$3=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingRequest?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),X3=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingResponse?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Y3=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeRequest?")],-1),J3={style:{"text-align":"left"}},e2=e("code",null,"ContentType",-1),t2=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeResponse?")],-1),n2={style:{"text-align":"left"}},o2=e("code",null,"ContentType",-1),s2=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.inputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),l2=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.outputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),a2=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.parameter?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),d2=l('<h4 id="defined-in-98" tabindex="-1"><a class="header-anchor" href="#defined-in-98" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/subscription/SubscriptionDefinitionMetadataBase.d.ts:3</p><hr><h3 id="supportedhttpmethod" tabindex="-1"><a class="header-anchor" href="#supportedhttpmethod" aria-hidden="true">#</a> SupportedHttpMethod</h3><p>Ƭ <strong>SupportedHttpMethod</strong>: <code>&quot;GET&quot;</code> | <code>&quot;POST&quot;</code> | <code>&quot;PATCH&quot;</code> | <code>&quot;PUT&quot;</code> | <code>&quot;DELETE&quot;</code></p><p>Supported HTTP-Methods for defining endpoints</p><h4 id="defined-in-99" tabindex="-1"><a class="header-anchor" href="#defined-in-99" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/HttpServer/types/SupportedHttpMethod.d.ts:2</p><hr><h3 id="traceid" tabindex="-1"><a class="header-anchor" href="#traceid" aria-hidden="true">#</a> TraceId</h3><p>Ƭ <strong>TraceId</strong>: <code>string</code></p><p>The trace id which will be passed through all commands, invocations and subscriptions</p><h4 id="defined-in-100" tabindex="-1"><a class="header-anchor" href="#defined-in-100" aria-hidden="true">#</a> Defined in</h4><p>packages/core/lib/core/types/TraceId.d.ts:4</p><hr><h3 id="addprefixtoobject" tabindex="-1"><a class="header-anchor" href="#addprefixtoobject" aria-hidden="true">#</a> addPrefixToObject</h3><p>Ƭ <strong>addPrefixToObject</strong>&lt;<code>T</code>, <code>P</code>&gt;: { [K in keyof T as K extends string ? `${P}${K}` : never]: T[K] }</p><p>Helper for better typescript type. All keys of given object must start with the given prefix. Otherwise Typescript will complain.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `T` | `T` |\n| `P` | extends `string` |\n\n#### Defined in\n\npackages/core/lib/core/types/addPrefixToObject.d.ts:7\n\n## Variables\n\n### httpServerServiceV1ConfigSchema\n\n• `Const` **httpServerServiceV1ConfigSchema**: `ZodObject`&lt;{ `apiMountPath`: `ZodOptional`&lt;`ZodString`\\&gt; ; `compressOptions`: `ZodOptional`&lt;`ZodAny`\\&gt; ; `cookieSecret`: `ZodOptional`&lt;`ZodString`\\&gt; ; `corsOptions`: `ZodOptional`&lt;`ZodAny`\\&gt; ; `domain`: `ZodString` ; `enableCompress`: `ZodOptional`&lt;`ZodBoolean`\\&gt; ; `enableCors`: `ZodOptional`&lt;`ZodBoolean`\\&gt; ; `enableHealthz`: `ZodOptional`&lt;`ZodBoolean`\\&gt; ; `enableHelmet`: `ZodOptional`&lt;`ZodBoolean`\\&gt; ; `fastify`: `ZodAny` ; `helmetOptions`: `ZodOptional`&lt;`ZodObject`&lt;{ `enableCSPNonces`: `ZodOptional`&lt;`ZodBoolean`\\&gt; ; `global`: `ZodOptional`&lt;`ZodBoolean`\\&gt;  }, ``&quot;strip&quot;``, `ZodTypeAny`, { `enableCSPNonces?`: `boolean` ; `global?`: `boolean`  }, { `enableCSPNonces?`: `boolean` ; `global?`: `boolean`  }\\&gt;\\&gt; ; `host`: `ZodOptional`&lt;`ZodString`\\&gt; ; `logLevel`: `ZodOptional`&lt;`ZodEnum`&lt;[``&quot;info&quot;``, ``&quot;error&quot;``, ``&quot;warn&quot;``, ``&quot;debug&quot;``, ``&quot;trace&quot;``, ``&quot;fatal&quot;``]\\&gt;\\&gt; ; `openApi`: `ZodOptional`&lt;`ZodObject`&lt;{ `components`: `ZodOptional`&lt;`ZodAny`\\&gt; ; `enabled`: `ZodOptional`&lt;`ZodBoolean`\\&gt; ; `externalDocs`: `ZodOptional`&lt;`ZodObject`&lt;{ `description`: `ZodOptional`&lt;`ZodString`\\&gt; ; `url`: `ZodString`  }, ``&quot;strip&quot;``, `ZodTypeAny`, { `description?`: `string` ; `url`: `string`  }, { `description?`: `string` ; `url`: `string`  }\\&gt;\\&gt; ; `info`: `ZodObject`&lt;{ `contact`: `ZodOptional`&lt;`ZodObject`&lt;{ `email`: `ZodOptional`&lt;`ZodString`\\&gt; ; `name`: `ZodOptional`&lt;`ZodString`\\&gt; ; `url`: `ZodOptional`&lt;`ZodString`\\&gt;  }, ``&quot;strip&quot;``, `ZodTypeAny`, { `email?`: `string` ; `name?`: `string` ; `url?`: `string`  }, { `email?`: `string` ; `name?`: `string` ; `url?`: `string`  }\\&gt;\\&gt; ; `description`: `ZodOptional`&lt;`ZodString`\\&gt; ; `license`: `ZodOptional`&lt;`ZodObject`&lt;{ `name`: `ZodString` ; `url`: `ZodOptional`&lt;`ZodString`\\&gt;  }, ``&quot;strip&quot;``, `ZodTypeAny`, { `name`: `string` ; `url?`: `string`  }, { `name`: `string` ; `url?`: `string`  }\\&gt;\\&gt; ; `termsOfService`: `ZodOptional`&lt;`ZodString`\\&gt; ; `title`: `ZodString` ; `version`: `ZodString`  }, ``&quot;strip&quot;``, `ZodTypeAny`, { `contact?`: { name?: string \\| undefined; url?: string \\| undefined; email?: string \\| undefined; } ; `description?`: `string` ; `license?`: { name: string; url?: string \\| undefined; } ; `termsOfService?`: `string` ; `title`: `string` ; `version`: `string`  }, { `contact?`: { name?: string \\| undefined; url?: string \\| undefined; email?: string \\| undefined; } ; `description?`: `string` ; `license?`: { name: string; url?: string \\| undefined; } ; `termsOfService?`: `string` ; `title`: `string` ; `version`: `string`  }\\&gt; = InfoObjectSchema; `path`: `ZodOptional`&lt;`ZodString`\\&gt; ; `security`: `ZodOptional`&lt;`ZodArray`&lt;`ZodAny`, ``&quot;many&quot;``\\&gt;\\&gt; ; `servers`: `ZodOptional`&lt;`ZodArray`&lt;`ZodObject`&lt;{ `description`: `ZodOptional`&lt;`ZodString`\\&gt; ; `url`: `ZodString` ; `variables`: `ZodOptional`&lt;`ZodAny`\\&gt;  }, ``&quot;strip&quot;``, `ZodTypeAny`, { `description?`: `string` ; `url`: `string` ; `variables?`: `any`  }, { `description?`: `string` ; `url`: `string` ; `variables?`: `any`  }\\&gt;, ``&quot;many&quot;``\\&gt;\\&gt; ; `tags`: `ZodOptional`&lt;`ZodArray`&lt;`ZodObject`&lt;{ `description`: `ZodOptional`&lt;`ZodString`\\&gt; ; `externalDocs`: `ZodOptional`&lt;`ZodObject`&lt;{ `description`: `ZodOptional`&lt;`ZodString`\\&gt; ; `url`: `ZodString`  }, ``&quot;strip&quot;``, `ZodTypeAny`, { `description?`: `string` ; `url`: `string`  }, { `description?`: `string` ; `url`: `string`  }\\&gt;\\&gt; ; `name`: `ZodString`  }, ``&quot;strip&quot;``, `ZodTypeAny`, { `description?`: `string` ; `externalDocs?`: { url: string; description?: string \\| undefined; } ; `name`: `string`  }, { `description?`: `string` ; `externalDocs?`: { url: string; description?: string \\| undefined; } ; `name`: `string`  }\\&gt;, ``&quot;many&quot;``\\&gt;\\&gt;  }, ``&quot;strip&quot;``, `ZodTypeAny`, { `components?`: `any` ; `enabled?`: `boolean` ; `externalDocs?`: { url: string; description?: string \\| undefined; } ; `info`: { title: string; version: string; description?: string \\| undefined; termsOfService?: string \\| undefined; contact?: { name?: string \\| undefined; url?: string \\| undefined; email?: string \\| undefined; } \\| undefined; license?: { ...; } \\| undefined; } = InfoObjectSchema; `path?`: `string` ; `security?`: `any`[] ; `servers?`: { url: string; description?: string \\| undefined; variables?: any; }[] ; `tags?`: { name: string; description?: string \\| undefined; externalDocs?: { url: string; description?: string \\| undefined; } \\| undefined; }[]  }, { `components?`: `any` ; `enabled?`: `boolean` ; `externalDocs?`: { url: string; description?: string \\| undefined; } ; `info`: { title: string; version: string; description?: string \\| undefined; termsOfService?: string \\| undefined; contact?: { name?: string \\| undefined; url?: string \\| undefined; email?: string \\| undefined; } \\| undefined; license?: { ...; } \\| undefined; } = InfoObjectSchema; `path?`: `string` ; `security?`: `any`[] ; `servers?`: { url: string; description?: string \\| undefined; variables?: any; }[] ; `tags?`: { name: string; description?: string \\| undefined; externalDocs?: { url: string; description?: string \\| undefined; } \\| undefined; }[]  }\\&gt;\\&gt; ; `port`: `ZodNumber` ; `uploadDir`: `ZodOptional`&lt;`ZodString`\\&gt;  }, ``&quot;strip&quot;``, `ZodTypeAny`, { `apiMountPath?`: `string` ; `compressOptions?`: `any` ; `cookieSecret?`: `string` ; `corsOptions?`: `any` ; `domain`: `string` ; `enableCompress?`: `boolean` ; `enableCors?`: `boolean` ; `enableHealthz?`: `boolean` ; `enableHelmet?`: `boolean` ; `fastify?`: `any` ; `helmetOptions?`: { enableCSPNonces?: boolean \\| undefined; global?: boolean \\| undefined; } ; `host?`: `string` ; `logLevel?`: ``&quot;error&quot;`` \\| ``&quot;debug&quot;`` \\| ``&quot;fatal&quot;`` \\| ``&quot;warn&quot;`` \\| ``&quot;info&quot;`` \\| ``&quot;trace&quot;`` ; `openApi?`: { info: { title: string; version: string; description?: string \\| undefined; termsOfService?: string \\| undefined; contact?: { name?: string \\| undefined; url?: string \\| undefined; email?: string \\| undefined; } \\| undefined; license?: { ...; } \\| undefined; }; ... 6 more ...; tags?: { ...; }[] \\| undefined; } ; `port`: `number` ; `uploadDir?`: `string`  }, { `apiMountPath?`: `string` ; `compressOptions?`: `any` ; `cookieSecret?`: `string` ; `corsOptions?`: `any` ; `domain`: `string` ; `enableCompress?`: `boolean` ; `enableCors?`: `boolean` ; `enableHealthz?`: `boolean` ; `enableHelmet?`: `boolean` ; `fastify?`: `any` ; `helmetOptions?`: { enableCSPNonces?: boolean \\| undefined; global?: boolean \\| undefined; } ; `host?`: `string` ; `logLevel?`: ``&quot;error&quot;`` \\| ``&quot;debug&quot;`` \\| ``&quot;fatal&quot;`` \\| ``&quot;warn&quot;`` \\| ``&quot;info&quot;`` \\| ``&quot;trace&quot;`` ; `openApi?`: { info: { title: string; version: string; description?: string \\| undefined; termsOfService?: string \\| undefined; contact?: { name?: string \\| undefined; url?: string \\| undefined; email?: string \\| undefined; } \\| undefined; license?: { ...; } \\| undefined; }; ... 6 more ...; tags?: { ...; }[] \\| undefined; } ; `port`: `number` ; `uploadDir?`: `string`  }\\&gt;\n\n#### Defined in\n\n[packages/httpserver/src/service/httpServer/v1/httpServerServiceConfig.ts:60](https://github.com/sebastianwessel/purista/blob/8c66693/packages/httpserver/src/service/httpServer/v1/httpServerServiceConfig.ts#L60)\n\n___\n\n### httpServerV1ServiceCommandsToRestApiInputPayloadSchema\n\n• `Const` **httpServerV1ServiceCommandsToRestApiInputPayloadSchema**: `ZodUnknown`\n\n#### Defined in\n\n[packages/httpserver/src/service/httpServer/v1/subscription/serviceCommandsToRestApi/schema.ts:4](https://github.com/sebastianwessel/purista/blob/8c66693/packages/httpserver/src/service/httpServer/v1/subscription/serviceCommandsToRestApi/schema.ts#L4)\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',19);function i2(r2,c2){const o=d("RouterLink"),a=d("ExternalLinkIcon");return r(),c("div",null,[e("p",null,[n(o,{to:"/api/"},{default:s(()=>[t("PURISTA API - v1.4.9")]),_:1}),t(" / "),n(o,{to:"/api/modules.html"},{default:s(()=>[t("Modules")]),_:1}),t(" / "),n(o,{to:"/api/modules/purista_httpserver.html"},{default:s(()=>[t("@purista/httpserver")]),_:1}),t(" / internal")]),h,e("p",null,[n(o,{to:"/api/modules/purista_httpserver.html"},{default:s(()=>[t("@purista/httpserver")]),_:1}),t(".internal")]),p,_,e("ul",null,[e("li",null,[n(o,{to:"/api/enums/purista_httpserver.internal.EBMessageType.html"},{default:s(()=>[t("EBMessageType")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_httpserver.internal.StatusCode.html"},{default:s(()=>[t("StatusCode")]),_:1})])]),f,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#command"},{default:s(()=>[t("Command")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commanderrorresponse"},{default:s(()=>[t("CommandErrorResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commandsuccessresponse"},{default:s(()=>[t("CommandSuccessResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#custommessage"},{default:s(()=>[t("CustomMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#infoinvoketimeout"},{default:s(()=>[t("InfoInvokeTimeout")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicedrain"},{default:s(()=>[t("InfoServiceDrain")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicefunctionadded"},{default:s(()=>[t("InfoServiceFunctionAdded")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#infoserviceinit"},{default:s(()=>[t("InfoServiceInit")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicenotready"},{default:s(()=>[t("InfoServiceNotReady")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#infoserviceready"},{default:s(()=>[t("InfoServiceReady")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#infoserviceshutdown"},{default:s(()=>[t("InfoServiceShutdown")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#infosubscriptionerror"},{default:s(()=>[t("InfoSubscriptionError")]),_:1})])]),m,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_httpserver.internal.CommandDefinitionBuilder.html"},{default:s(()=>[t("CommandDefinitionBuilder")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commandafterguardhook"},{default:s(()=>[t("CommandAfterGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commandbeforeguardhook"},{default:s(()=>[t("CommandBeforeGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commanddefinition"},{default:s(()=>[t("CommandDefinition")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commanderrorresponse-1"},{default:s(()=>[t("CommandErrorResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commandfunction"},{default:s(()=>[t("CommandFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commandfunctioncontext"},{default:s(()=>[t("CommandFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commandfunctioncontextenhancements"},{default:s(()=>[t("CommandFunctionContextEnhancements")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commandresponse"},{default:s(()=>[t("CommandResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commandsuccessresponse-1"},{default:s(()=>[t("CommandSuccessResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commandtransformfunctioncontext"},{default:s(()=>[t("CommandTransformFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commandtransforminputhook"},{default:s(()=>[t("CommandTransformInputHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commandtransformoutputhook"},{default:s(()=>[t("CommandTransformOutputHook")]),_:1})])]),y,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_httpserver.internal.GenericEventEmitter.html"},{default:s(()=>[t("GenericEventEmitter")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_httpserver.internal.HandledError.html"},{default:s(()=>[t("HandledError")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_httpserver.internal.HttpServerClass.html"},{default:s(()=>[t("HttpServerClass")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_httpserver.internal.Logger.html"},{default:s(()=>[t("Logger")]),_:1})])]),g,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_httpserver.internal.Service.html"},{default:s(()=>[t("Service")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_httpserver.internal.ServiceBaseClass.html"},{default:s(()=>[t("ServiceBaseClass")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_httpserver.internal.ServiceBuilder.html"},{default:s(()=>[t("ServiceBuilder")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_httpserver.internal.ServiceClass.html"},{default:s(()=>[t("ServiceClass")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#serviceconstructorinput"},{default:s(()=>[t("ServiceConstructorInput")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#serviceeventsinternal"},{default:s(()=>[t("ServiceEventsInternal")]),_:1})])]),x,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_httpserver.internal.SubscriptionDefinitionBuilder.html"},{default:s(()=>[t("SubscriptionDefinitionBuilder")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscription"},{default:s(()=>[t("Subscription")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptionafterguardhook"},{default:s(()=>[t("SubscriptionAfterGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptionbeforeguardhook"},{default:s(()=>[t("SubscriptionBeforeGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptiondefinition"},{default:s(()=>[t("SubscriptionDefinition")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptionfunction"},{default:s(()=>[t("SubscriptionFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptionfunctioncontext"},{default:s(()=>[t("SubscriptionFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptionfunctioncontextenhancements"},{default:s(()=>[t("SubscriptionFunctionContextEnhancements")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptiontransformfunctioncontext"},{default:s(()=>[t("SubscriptionTransformFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptiontransforminputhook"},{default:s(()=>[t("SubscriptionTransformInputHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptiontransformoutputhook"},{default:s(()=>[t("SubscriptionTransformOutputHook")]),_:1})])]),v,e("ul",null,[e("li",null,[n(o,{to:"/api/interfaces/purista_httpserver.internal.ConfigStore.html"},{default:s(()=>[t("ConfigStore")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_httpserver.internal.SecretStore.html"},{default:s(()=>[t("SecretStore")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_httpserver.internal.StateStore.html"},{default:s(()=>[t("StateStore")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#configdeletefunction"},{default:s(()=>[t("ConfigDeleteFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#configgetterfunction"},{default:s(()=>[t("ConfigGetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#configsetterfunction"},{default:s(()=>[t("ConfigSetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#secretdeletefunction"},{default:s(()=>[t("SecretDeleteFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#secretgetterfunction"},{default:s(()=>[t("SecretGetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#secretsetterfunction"},{default:s(()=>[t("SecretSetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#statedeletefunction"},{default:s(()=>[t("StateDeleteFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#stategetterfunction"},{default:s(()=>[t("StateGetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#statesetterfunction"},{default:s(()=>[t("StateSetterFunction")]),_:1})])]),b,e("ul",null,[e("li",null,[n(o,{to:"/api/interfaces/purista_httpserver.internal.EventBridge.html"},{default:s(()=>[t("EventBridge")]),_:1})])]),T,e("ul",null,[e("li",null,[n(o,{to:"/api/interfaces/purista_httpserver.internal.IEmitter.html"},{default:s(()=>[t("IEmitter")]),_:1})])]),S,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#beforeresponsehook"},{default:s(()=>[t("BeforeResponseHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#command-1"},{default:s(()=>[t("Command")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commanddefinitionlist"},{default:s(()=>[t("CommandDefinitionList")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commanddefinitionmetadatabase"},{default:s(()=>[t("CommandDefinitionMetadataBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#complete"},{default:s(()=>[t("Complete")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#contenttype"},{default:s(()=>[t("ContentType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#contextbase"},{default:s(()=>[t("ContextBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#correlationid"},{default:s(()=>[t("CorrelationId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#customevents"},{default:s(()=>[t("CustomEvents")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#custommessage-1"},{default:s(()=>[t("CustomMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#definitioneventbridgeconfig"},{default:s(()=>[t("DefinitionEventBridgeConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessage"},{default:s(()=>[t("EBMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessageaddress"},{default:s(()=>[t("EBMessageAddress")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessagebase"},{default:s(()=>[t("EBMessageBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessageid"},{default:s(()=>[t("EBMessageId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#emitcustommessagefunction"},{default:s(()=>[t("EmitCustomMessageFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#errorresponsepayload"},{default:s(()=>[t("ErrorResponsePayload")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#eventkey"},{default:s(()=>[t("EventKey")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#eventmap"},{default:s(()=>[t("EventMap")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#eventreceiver"},{default:s(()=>[t("EventReceiver")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#httpexposedservicemeta"},{default:s(()=>[t("HttpExposedServiceMeta")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#httpserverservicev1configraw"},{default:s(()=>[t("HttpServerServiceV1ConfigRaw")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#infoinvoketimeout-1"},{default:s(()=>[t("InfoInvokeTimeout")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#infomessage"},{default:s(()=>[t("InfoMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#infomessagetype"},{default:s(()=>[t("InfoMessageType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicebase"},{default:s(()=>[t("InfoServiceBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicedrain-1"},{default:s(()=>[t("InfoServiceDrain")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicefunctionadded-1"},{default:s(()=>[t("InfoServiceFunctionAdded")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#infoserviceinit-1"},{default:s(()=>[t("InfoServiceInit")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicenotready-1"},{default:s(()=>[t("InfoServiceNotReady")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#infoserviceready-1"},{default:s(()=>[t("InfoServiceReady")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#infoserviceshutdown-1"},{default:s(()=>[t("InfoServiceShutdown")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#infosubscriptionerror-1"},{default:s(()=>[t("InfoSubscriptionError")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#instanceid"},{default:s(()=>[t("InstanceId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#invokefunction"},{default:s(()=>[t("InvokeFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#logfnparamtype"},{default:s(()=>[t("LogFnParamType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#loglevelname"},{default:s(()=>[t("LogLevelName")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#loggeroptions"},{default:s(()=>[t("LoggerOptions")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#newable"},{default:s(()=>[t("Newable")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#principalid"},{default:s(()=>[t("PrincipalId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#queryparameter"},{default:s(()=>[t("QueryParameter")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#serviceevents"},{default:s(()=>[t("ServiceEvents")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#serviceinfotype"},{default:s(()=>[t("ServiceInfoType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptiondefinitionlist"},{default:s(()=>[t("SubscriptionDefinitionList")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptiondefinitionmetadatabase"},{default:s(()=>[t("SubscriptionDefinitionMetadataBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#supportedhttpmethod"},{default:s(()=>[t("SupportedHttpMethod")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#traceid"},{default:s(()=>[t("TraceId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#addprefixtoobject"},{default:s(()=>[t("addPrefixToObject")]),_:1})])]),k,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#httpserverservicev1configschema"},{default:s(()=>[t("httpServerServiceV1ConfigSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_httpserver.internal.html#httpserverv1servicecommandstorestapiinputpayloadschema"},{default:s(()=>[t("httpServerV1ServiceCommandsToRestApiInputPayloadSchema")]),_:1})])]),C,e("table",null,[P,e("tbody",null,[e("tr",null,[I,e("td",R,[t("extends "),n(o,{to:"/api/interfaces/purista_httpserver.internal.ServiceClass.html"},{default:s(()=>[F]),_:1})])]),w,M,D,E,O,N])]),B,q,Z,e("p",null,[t("Ƭ "),H,t("<"),A,t(", "),j,t(", "),G,t(", "),L,t(", "),V,t(", "),z,t(">: ("),U,t(": "),K,t(", "),Q,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commandfunctioncontext"},{default:s(()=>[W]),_:1}),t("<"),$,t(", "),X,t(">, "),Y,t(": "),J,t("<"),ee,t(">, "),te,t(": "),ne,t("<"),oe,t(">, "),se,t(": "),le,t("<"),ae,t(">) => "),de,t("<"),ie,t(">")]),re,e("table",null,[ce,e("tbody",null,[e("tr",null,[ue,e("td",he,[n(o,{to:"/api/interfaces/purista_httpserver.internal.ServiceClass.html"},{default:s(()=>[pe]),_:1})])]),_e,fe,me,ye,ge])]),xe,e("table",null,[ve,e("tbody",null,[be,e("tr",null,[Te,e("td",Se,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commandfunctioncontext"},{default:s(()=>[ke]),_:1}),t("<"),Ce,t(", "),Pe,t(">")])]),Ie,Re,Fe])]),we,e("p",null,[t("Ƭ "),Me,t("<"),De,t(", "),Ee,t(", "),Oe,t(", "),Ne,t(", "),Be,t(">: ("),qe,t(": "),Ze,t(", "),He,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commandfunctioncontext"},{default:s(()=>[Ae]),_:1}),t("<"),je,t(", "),Ge,t(">, "),Le,t(": "),Ve,t("<"),ze,t(">, "),Ue,t(": "),Ke,t("<"),Qe,t(">) => "),We,t("<"),$e,t(">")]),Xe,e("table",null,[Ye,e("tbody",null,[e("tr",null,[Je,e("td",et,[n(o,{to:"/api/interfaces/purista_httpserver.internal.ServiceClass.html"},{default:s(()=>[tt]),_:1})])]),nt,ot,st,lt])]),at,e("table",null,[dt,e("tbody",null,[it,e("tr",null,[rt,e("td",ct,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commandfunctioncontext"},{default:s(()=>[ut]),_:1}),t("<"),ht,t(", "),pt,t(">")])]),_t,ft])]),mt,e("table",null,[yt,e("tbody",null,[e("tr",null,[gt,e("td",xt,[t("extends "),n(o,{to:"/api/interfaces/purista_httpserver.internal.ServiceClass.html"},{default:s(()=>[vt]),_:1}),t(" = "),n(o,{to:"/api/interfaces/purista_httpserver.internal.ServiceClass.html"},{default:s(()=>[bt]),_:1})])]),e("tr",null,[Tt,e("td",St,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commanddefinitionmetadatabase"},{default:s(()=>[kt]),_:1})])]),Ct,Pt,It,Rt,Ft,wt])]),Mt,e("table",null,[Dt,e("tbody",null,[e("tr",null,[Et,e("td",Ot,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commandfunction"},{default:s(()=>[Nt]),_:1}),t("<"),Bt,t(", "),qt,t(", "),Zt,t(", "),Ht,t(", "),At,t(", "),jt,t(">")]),Gt]),Lt,Vt,e("tr",null,[zt,e("td",Ut,[n(o,{to:"/api/modules/purista_httpserver.internal.html#definitioneventbridgeconfig"},{default:s(()=>[Kt]),_:1})]),Qt]),Wt,e("tr",null,[$t,e("td",Xt,[t("{ "),Yt,t(": "),Jt,t("<"),en,t(", "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commandafterguardhook"},{default:s(()=>[tn]),_:1}),t("<"),nn,t(", "),on,t(", "),sn,t(", "),ln,t(", "),an,t(", "),dn,t(">> ; "),rn,t(": "),cn,t("<"),un,t(", "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commandbeforeguardhook"},{default:s(()=>[hn]),_:1}),t("<"),pn,t(", "),_n,t(", "),fn,t(", "),mn,t(", "),yn,t(">> ; "),gn,t(": { "),xn,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commandtransforminputhook"},{default:s(()=>[vn]),_:1}),t("<"),bn,t(", "),Tn,t(", "),Sn,t("> ; "),kn,t(": "),Cn,t(" ; "),Pn,t(": "),In,t(" } ; "),Rn,t(": { "),Fn,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commandtransformoutputhook"},{default:s(()=>[wn]),_:1}),t("<"),Mn,t(", "),Dn,t(", "),En,t(", "),On,t(", "),Nn,t("> ; "),Bn,t(": "),qn,t(" } }")]),Zn]),e("tr",null,[Hn,e("td",An,[jn,t("<"),Gn,t(", "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commandafterguardhook"},{default:s(()=>[Ln]),_:1}),t("<"),Vn,t(", "),zn,t(", "),Un,t(", "),Kn,t(", "),Qn,t(", "),Wn,t(">>")]),$n]),e("tr",null,[Xn,e("td",Yn,[Jn,t("<"),eo,t(", "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commandbeforeguardhook"},{default:s(()=>[to]),_:1}),t("<"),no,t(", "),oo,t(", "),so,t(", "),lo,t(", "),ao,t(">>")]),io]),e("tr",null,[ro,e("td",co,[t("{ "),uo,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commandtransforminputhook"},{default:s(()=>[ho]),_:1}),t("<"),po,t(", "),_o,t(", "),fo,t("> ; "),mo,t(": "),yo,t(" ; "),go,t(": "),xo,t(" }")]),vo]),e("tr",null,[bo,e("td",To,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commandtransforminputhook"},{default:s(()=>[So]),_:1}),t("<"),ko,t(", "),Co,t(", "),Po,t(">")]),Io]),Ro,Fo,e("tr",null,[wo,e("td",Mo,[t("{ "),Do,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commandtransformoutputhook"},{default:s(()=>[Eo]),_:1}),t("<"),Oo,t(", "),No,t(", "),Bo,t(", "),qo,t(", "),Zo,t("> ; "),Ho,t(": "),Ao,t(" }")]),jo]),e("tr",null,[Go,e("td",Lo,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commandtransformoutputhook"},{default:s(()=>[Vo]),_:1}),t("<"),zo,t(", "),Uo,t(", "),Ko,t(", "),Qo,t(", "),Wo,t(">")]),$o]),Xo,Yo])]),Jo,es,ts,ns,e("p",null,[t("Ƭ "),os,t(": { "),ss,t(": "),ls,t(" ; "),as,t(": "),ds,t(" ; "),is,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#correlationid"},{default:s(()=>[rs]),_:1}),t(" ; "),cs,t(": "),us,t(" ; "),hs,t(": "),n(o,{to:"/api/enums/purista_httpserver.internal.EBMessageType.html#commanderrorresponse"},{default:s(()=>[ps]),_:1}),t(" ; "),_s,t(": { "),fs,t(": "),ms,t(" ; "),ys,t(": "),gs,t(" ; "),xs,t(": "),n(o,{to:"/api/enums/purista_httpserver.internal.StatusCode.html"},{default:s(()=>[vs]),_:1}),t(" } ; "),bs,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessageaddress"},{default:s(()=>[Ts]),_:1}),t(" ; "),Ss,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessageaddress"},{default:s(()=>[ks]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessagebase"},{default:s(()=>[Cs]),_:1})]),Ps,Is,Rs,Fs,ws,e("p",null,[t("Ƭ "),Ms,t("<"),Ds,t(", "),Es,t(", "),Os,t(", "),Ns,t(", "),Bs,t(", "),qs,t(">: ("),Zs,t(": "),Hs,t(", "),As,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commandfunctioncontext"},{default:s(()=>[js]),_:1}),t("<"),Gs,t(", "),Ls,t(">, "),Vs,t(": "),zs,t("<"),Us,t(">, "),Ks,t(": "),Qs,t("<"),Ws,t(">) => "),$s,t("<"),Xs,t(">")]),Ys,e("table",null,[Js,e("tbody",null,[e("tr",null,[el,e("td",tl,[t("extends "),n(o,{to:"/api/interfaces/purista_httpserver.internal.ServiceClass.html"},{default:s(()=>[nl]),_:1})])]),ol,sl,ll,al,dl])]),il,e("table",null,[rl,e("tbody",null,[cl,e("tr",null,[ul,e("td",hl,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commandfunctioncontext"},{default:s(()=>[pl]),_:1}),t("<"),_l,t(", "),fl,t(">")])]),ml,yl])]),gl,e("p",null,[t("Ƭ "),xl,t("<"),vl,t(", "),bl,t(">: "),n(o,{to:"/api/modules/purista_httpserver.internal.html#contextbase"},{default:s(()=>[Tl]),_:1}),t(" & "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commandfunctioncontextenhancements"},{default:s(()=>[Sl]),_:1}),t("<"),kl,t(", "),Cl,t(">")]),Pl,e("table",null,[Il,e("tbody",null,[e("tr",null,[Rl,e("td",Fl,[n(o,{to:"/api/modules/purista_httpserver.internal.html#emitcustommessagefunction"},{default:s(()=>[wl]),_:1})]),Ml]),e("tr",null,[Dl,e("td",El,[n(o,{to:"/api/modules/purista_httpserver.internal.html#invokefunction"},{default:s(()=>[Ol]),_:1})]),Nl]),e("tr",null,[Bl,e("td",ql,[Zl,t("<"),n(o,{to:"/api/modules/purista_httpserver.internal.html#command-1"},{default:s(()=>[Hl]),_:1}),t("<"),Al,t(", "),jl,t(">>")]),Gl])])]),Ll,Vl,zl,Ul,e("p",null,[t("Ƭ "),Kl,t("<"),Ql,t(">: "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commandsuccessresponse-1"},{default:s(()=>[Wl]),_:1}),t("<"),$l,t("> | "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commanderrorresponse-1"},{default:s(()=>[Xl]),_:1})]),Yl,e("p",null,[t("Ƭ "),Jl,t("<"),ea,t(">: { "),ta,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#correlationid"},{default:s(()=>[na]),_:1}),t(" ; "),oa,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commandsuccessresponse"},{default:s(()=>[sa]),_:1}),t(" ; "),la,t(": "),aa,t(" ; "),da,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessageaddress"},{default:s(()=>[ia]),_:1}),t(" ; "),ra,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessageaddress"},{default:s(()=>[ca]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessagebase"},{default:s(()=>[ua]),_:1})]),ha,e("p",null,[t("Ƭ "),pa,t("<"),_a,t(", "),fa,t(">: "),n(o,{to:"/api/modules/purista_httpserver.internal.html#contextbase"},{default:s(()=>[ma]),_:1}),t(" & { "),ya,t(": "),ga,t("<"),n(o,{to:"/api/modules/purista_httpserver.internal.html#command-1"},{default:s(()=>[xa]),_:1}),t("<"),va,t(", "),ba,t(">> }")]),Ta,e("p",null,[t("Ƭ "),Sa,t("<"),ka,t(", "),Ca,t(", "),Pa,t(", "),Ia,t(", "),Ra,t(">: ("),Fa,t(": "),wa,t(", "),Ma,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commandtransformfunctioncontext"},{default:s(()=>[Da]),_:1}),t("<"),Ea,t(", "),Oa,t(">, "),Na,t(": "),Ba,t("<"),qa,t(">, "),Za,t(": "),Ha,t("<"),Aa,t(">) => "),ja,t("<{ "),Ga,t(": "),La,t("<"),Va,t("> ; "),za,t(": "),Ua,t("<"),Ka,t("> }>")]),Qa,e("table",null,[Wa,e("tbody",null,[$a,e("tr",null,[Xa,e("td",Ya,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commandtransformfunctioncontext"},{default:s(()=>[Ja]),_:1}),t("<"),ed,t(", "),td,t(">")])]),nd,od])]),sd,e("p",null,[t("Ƭ "),ld,t("<"),ad,t(", "),dd,t(", "),id,t(", "),rd,t(", "),cd,t(">: ("),ud,t(": "),hd,t(", "),pd,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commandtransformfunctioncontext"},{default:s(()=>[_d]),_:1}),t("<"),fd,t(", "),md,t(">, "),yd,t(": "),gd,t("<"),xd,t(">, "),vd,t(": "),bd,t("<"),Td,t(">) => "),Sd,t("<"),kd,t(">")]),Cd,e("table",null,[Pd,e("tbody",null,[Id,e("tr",null,[Rd,e("td",Fd,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commandtransformfunctioncontext"},{default:s(()=>[wd]),_:1}),t("<"),Md,t(", "),Dd,t(">")])]),Ed,Od])]),Nd,e("table",null,[Bd,e("tbody",null,[qd,Zd,e("tr",null,[Hd,e("td",Ad,[t("extends "),n(o,{to:"/api/interfaces/purista_httpserver.internal.ServiceClass.html"},{default:s(()=>[jd]),_:1}),t(" = "),n(o,{to:"/api/classes/purista_httpserver.internal.Service.html"},{default:s(()=>[Gd]),_:1}),t("<"),Ld,t(">")])])])]),Vd,e("table",null,[zd,e("tbody",null,[e("tr",null,[Ud,e("td",Kd,[n(o,{to:"/api/modules/purista_httpserver.internal.html#commanddefinitionlist"},{default:s(()=>[Qd]),_:1}),t("<"),Wd,t(">")]),$d]),Xd,e("tr",null,[Yd,e("td",Jd,[n(o,{to:"/api/interfaces/purista_httpserver.internal.ConfigStore.html"},{default:s(()=>[ei]),_:1})]),ti]),e("tr",null,[ni,e("td",oi,[n(o,{to:"/api/interfaces/purista_httpserver.internal.EventBridge.html"},{default:s(()=>[si]),_:1})]),li]),e("tr",null,[ai,e("td",di,[n(o,{to:"/api/modules/purista_httpserver.internal.html#serviceinfotype"},{default:s(()=>[ii]),_:1})]),ri]),e("tr",null,[ci,e("td",ui,[n(o,{to:"/api/classes/purista_httpserver.internal.Logger.html"},{default:s(()=>[hi]),_:1})]),pi]),e("tr",null,[_i,e("td",fi,[n(o,{to:"/api/interfaces/purista_httpserver.internal.SecretStore.html"},{default:s(()=>[mi]),_:1})]),yi]),gi,e("tr",null,[xi,e("td",vi,[n(o,{to:"/api/interfaces/purista_httpserver.internal.StateStore.html"},{default:s(()=>[bi]),_:1})]),Ti]),e("tr",null,[Si,e("td",ki,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptiondefinitionlist"},{default:s(()=>[Ci]),_:1}),t("<"),Pi,t(">")]),Ii])])]),Ri,e("table",null,[Fi,e("tbody",null,[wi,Mi,e("tr",null,[Di,e("td",Ei,[t("{ "),Oi,t(": "),Ni,t(" ; "),Bi,t(": "),n(o,{to:"/api/classes/purista_httpserver.internal.HandledError.html"},{default:s(()=>[qi]),_:1}),t(" ; "),Zi,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#traceid"},{default:s(()=>[Hi]),_:1}),t(" }")]),Ai]),ji,e("tr",null,[Gi,e("td",Li,[n(o,{to:"/api/classes/purista_httpserver.internal.HandledError.html"},{default:s(()=>[Vi]),_:1})]),zi]),e("tr",null,[Ui,e("td",Ki,[n(o,{to:"/api/modules/purista_httpserver.internal.html#traceid"},{default:s(()=>[Qi]),_:1})]),Wi]),e("tr",null,[$i,e("td",Xi,[t("{ "),Yi,t(": "),n(o,{to:"/api/classes/purista_httpserver.internal.HandledError.html"},{default:s(()=>[Ji]),_:1}),t(" ; "),er,t(": "),tr,t(" ; "),nr,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#traceid"},{default:s(()=>[or]),_:1}),t(" }")]),sr]),e("tr",null,[lr,e("td",ar,[n(o,{to:"/api/classes/purista_httpserver.internal.HandledError.html"},{default:s(()=>[dr]),_:1})]),ir]),rr,e("tr",null,[cr,e("td",ur,[n(o,{to:"/api/modules/purista_httpserver.internal.html#traceid"},{default:s(()=>[hr]),_:1})]),pr]),_r,fr,mr,e("tr",null,[yr,e("td",gr,[t("{ "),xr,t(": "),vr,t(" ; "),br,t(": "),Tr,t(" ; "),Sr,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#traceid"},{default:s(()=>[kr]),_:1}),t(" }")]),Cr]),Pr,Ir,e("tr",null,[Rr,e("td",Fr,[n(o,{to:"/api/modules/purista_httpserver.internal.html#traceid"},{default:s(()=>[wr]),_:1})]),Mr]),e("tr",null,[Dr,e("td",Er,[t("{ "),Or,t(": "),Nr,t(" ; "),Br,t(": "),qr,t(" ; "),Zr,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#traceid"},{default:s(()=>[Hr]),_:1}),t(" }")]),Ar]),jr,Gr,e("tr",null,[Lr,e("td",Vr,[n(o,{to:"/api/modules/purista_httpserver.internal.html#traceid"},{default:s(()=>[zr]),_:1})]),Ur])])]),Kr,e("table",null,[Qr,e("tbody",null,[e("tr",null,[Wr,e("td",$r,[t("extends "),n(o,{to:"/api/interfaces/purista_httpserver.internal.ServiceClass.html"},{default:s(()=>[Xr]),_:1}),t(" = "),n(o,{to:"/api/interfaces/purista_httpserver.internal.ServiceClass.html"},{default:s(()=>[Yr]),_:1})])]),Jr,ec,tc,nc,oc,sc])]),lc,e("table",null,[ac,e("tbody",null,[dc,e("tr",null,[ic,e("td",rc,[n(o,{to:"/api/modules/purista_httpserver.internal.html#definitioneventbridgeconfig"},{default:s(()=>[cc]),_:1})]),uc]),hc,e("tr",null,[pc,e("td",_c,[n(o,{to:"/api/modules/purista_httpserver.internal.html#instanceid"},{default:s(()=>[fc]),_:1})]),mc]),e("tr",null,[yc,e("td",gc,[n(o,{to:"/api/enums/purista_httpserver.internal.EBMessageType.html"},{default:s(()=>[xc]),_:1})]),vc]),bc,Tc,Sc,e("tr",null,[kc,e("td",Cc,[n(o,{to:"/api/modules/purista_httpserver.internal.html#principalid"},{default:s(()=>[Pc]),_:1})]),Ic]),Rc,Fc,wc,Mc,Dc,Ec,Oc,Nc,e("tr",null,[Bc,e("td",qc,[n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessageaddress"},{default:s(()=>[Zc]),_:1})]),Hc])])]),Ac,jc,Gc,Lc,e("p",null,[t("Ƭ "),Vc,t("<"),zc,t(", "),Uc,t(", "),Kc,t(", "),Qc,t(">: ("),Wc,t(": "),$c,t(", "),Xc,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptionfunctioncontext"},{default:s(()=>[Yc]),_:1}),t(", "),Jc,t(": "),eu,t("<"),tu,t(">, "),nu,t(": "),ou,t("<"),su,t(">, "),lu,t(": "),au,t("<"),du,t(">) => "),iu,t("<"),ru,t(">")]),cu,e("table",null,[uu,e("tbody",null,[e("tr",null,[hu,e("td",pu,[n(o,{to:"/api/interfaces/purista_httpserver.internal.ServiceClass.html"},{default:s(()=>[_u]),_:1})])]),fu,mu,yu])]),gu,e("table",null,[xu,e("tbody",null,[vu,e("tr",null,[bu,e("td",Tu,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptionfunctioncontext"},{default:s(()=>[Su]),_:1})])]),ku,Cu,Pu])]),Iu,e("p",null,[t("Ƭ "),Ru,t("<"),Fu,t(", "),wu,t(", "),Mu,t(">: ("),Du,t(": "),Eu,t(", "),Ou,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptionfunctioncontext"},{default:s(()=>[Nu]),_:1}),t(", "),Bu,t(": "),qu,t("<"),Zu,t(">, "),Hu,t(": "),Au,t("<"),ju,t(">) => "),Gu,t("<"),Lu,t(">")]),Vu,e("table",null,[zu,e("tbody",null,[e("tr",null,[Uu,e("td",Ku,[n(o,{to:"/api/interfaces/purista_httpserver.internal.ServiceClass.html"},{default:s(()=>[Qu]),_:1})])]),Wu,$u])]),Xu,e("table",null,[Yu,e("tbody",null,[Ju,e("tr",null,[eh,e("td",th,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptionfunctioncontext"},{default:s(()=>[nh]),_:1})])]),oh,sh])]),lh,e("table",null,[ah,e("tbody",null,[e("tr",null,[dh,e("td",ih,[t("extends "),n(o,{to:"/api/interfaces/purista_httpserver.internal.ServiceClass.html"},{default:s(()=>[rh]),_:1}),t(" = "),n(o,{to:"/api/interfaces/purista_httpserver.internal.ServiceClass.html"},{default:s(()=>[ch]),_:1})])]),e("tr",null,[uh,e("td",hh,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptiondefinitionmetadatabase"},{default:s(()=>[ph]),_:1})])]),_h,fh,mh,yh,gh,xh])]),vh,e("table",null,[bh,e("tbody",null,[e("tr",null,[Th,e("td",Sh,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptionfunction"},{default:s(()=>[kh]),_:1}),t("<"),Ch,t(", "),Ph,t(", "),Ih,t(", "),Rh,t(", "),Fh,t(", "),wh,t(">")]),Mh]),Dh,e("tr",null,[Eh,e("td",Oh,[n(o,{to:"/api/modules/purista_httpserver.internal.html#definitioneventbridgeconfig"},{default:s(()=>[Nh]),_:1})]),Bh]),qh,e("tr",null,[Zh,e("td",Hh,[t("{ "),Ah,t(": "),jh,t("<"),Gh,t(", "),n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptionafterguardhook"},{default:s(()=>[Lh]),_:1}),t("<"),Vh,t(", "),zh,t(", "),Uh,t(", "),Kh,t(">> ; "),Qh,t(": "),Wh,t("<"),$h,t(", "),n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptionbeforeguardhook"},{default:s(()=>[Xh]),_:1}),t("<"),Yh,t(", "),Jh,t(", "),ep,t(">> ; "),tp,t(": { "),np,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptiontransforminputhook"},{default:s(()=>[op]),_:1}),t("<"),sp,t(", "),lp,t(", "),ap,t("> ; "),dp,t(": "),ip,t(" ; "),rp,t(": "),cp,t(" } ; "),up,t(": { "),hp,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptiontransformoutputhook"},{default:s(()=>[pp]),_:1}),t("<"),_p,t(", "),fp,t(", "),mp,t(", "),yp,t("> ; "),gp,t(": "),xp,t(" } }")]),vp]),e("tr",null,[bp,e("td",Tp,[Sp,t("<"),kp,t(", "),n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptionafterguardhook"},{default:s(()=>[Cp]),_:1}),t("<"),Pp,t(", "),Ip,t(", "),Rp,t(", "),Fp,t(">>")]),wp]),e("tr",null,[Mp,e("td",Dp,[Ep,t("<"),Op,t(", "),n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptionbeforeguardhook"},{default:s(()=>[Np]),_:1}),t("<"),Bp,t(", "),qp,t(", "),Zp,t(">>")]),Hp]),e("tr",null,[Ap,e("td",jp,[t("{ "),Gp,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptiontransforminputhook"},{default:s(()=>[Lp]),_:1}),t("<"),Vp,t(", "),zp,t(", "),Up,t("> ; "),Kp,t(": "),Qp,t(" ; "),Wp,t(": "),$p,t(" }")]),Xp]),e("tr",null,[Yp,e("td",Jp,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptiontransforminputhook"},{default:s(()=>[e_]),_:1}),t("<"),t_,t(", "),n_,t(", "),o_,t(">")]),s_]),l_,a_,e("tr",null,[d_,e("td",i_,[t("{ "),r_,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptiontransformoutputhook"},{default:s(()=>[c_]),_:1}),t("<"),u_,t(", "),h_,t(", "),p_,t(", "),__,t("> ; "),f_,t(": "),m_,t(" }")]),y_]),e("tr",null,[g_,e("td",x_,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptiontransformoutputhook"},{default:s(()=>[v_]),_:1}),t("<"),b_,t(", "),T_,t(", "),S_,t(", "),k_,t(">")]),C_]),P_,e("tr",null,[I_,e("td",R_,[n(o,{to:"/api/modules/purista_httpserver.internal.html#instanceid"},{default:s(()=>[F_]),_:1})]),w_]),e("tr",null,[M_,e("td",D_,[n(o,{to:"/api/enums/purista_httpserver.internal.EBMessageType.html"},{default:s(()=>[E_]),_:1})]),O_]),N_,e("tr",null,[B_,e("td",q_,[n(o,{to:"/api/modules/purista_httpserver.internal.html#principalid"},{default:s(()=>[Z_]),_:1})]),H_]),A_,j_,G_,L_,V_,z_,U_,K_,Q_,W_])]),$_,X_,Y_,J_,e("p",null,[t("Ƭ "),e1,t("<"),t1,t(", "),n1,t(", "),o1,t(", "),s1,t(", "),l1,t(", "),a1,t(">: ("),d1,t(": "),i1,t(", "),r1,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptionfunctioncontext"},{default:s(()=>[c1]),_:1}),t(", "),u1,t(": "),h1,t("<"),p1,t(">, "),_1,t(": "),f1,t("<"),m1,t(">) => "),y1,t("<"),g1,t(">")]),x1,e("table",null,[v1,e("tbody",null,[e("tr",null,[b1,e("td",T1,[t("extends "),n(o,{to:"/api/interfaces/purista_httpserver.internal.ServiceClass.html"},{default:s(()=>[S1]),_:1})])]),k1,C1,P1,I1,R1])]),F1,e("table",null,[w1,e("tbody",null,[M1,e("tr",null,[D1,e("td",E1,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptionfunctioncontext"},{default:s(()=>[O1]),_:1})])]),N1,B1])]),q1,e("p",null,[t("Ƭ "),Z1,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#contextbase"},{default:s(()=>[H1]),_:1}),t(" & "),n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptionfunctioncontextenhancements"},{default:s(()=>[A1]),_:1})]),j1,e("table",null,[G1,e("tbody",null,[e("tr",null,[L1,e("td",V1,[n(o,{to:"/api/modules/purista_httpserver.internal.html#emitcustommessagefunction"},{default:s(()=>[z1]),_:1})]),U1]),e("tr",null,[K1,e("td",Q1,[n(o,{to:"/api/modules/purista_httpserver.internal.html#invokefunction"},{default:s(()=>[W1]),_:1})]),$1]),e("tr",null,[X1,e("td",Y1,[J1,t("<"),n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessage"},{default:s(()=>[ef]),_:1}),t(">")]),tf])])]),nf,of,sf,lf,e("p",null,[t("Ƭ "),af,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#contextbase"},{default:s(()=>[df]),_:1}),t(" & { "),rf,t(": "),cf,t("<"),n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessage"},{default:s(()=>[uf]),_:1}),t("> }")]),hf,pf,_f,ff,e("p",null,[t("Ƭ "),mf,t("<"),yf,t(", "),gf,t(", "),xf,t(", "),vf,t(", "),bf,t(">: ("),Tf,t(": "),Sf,t(", "),kf,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptiontransformfunctioncontext"},{default:s(()=>[Cf]),_:1}),t(", "),Pf,t(": "),If,t("<"),Rf,t(">, "),Ff,t(": "),wf,t("<"),Mf,t(">) => "),Df,t("<{ "),Ef,t(": "),Of,t("<"),Nf,t("> ; "),Bf,t(": "),qf,t("<"),Zf,t("> }>")]),Hf,e("table",null,[Af,e("tbody",null,[jf,e("tr",null,[Gf,e("td",Lf,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptiontransformfunctioncontext"},{default:s(()=>[Vf]),_:1})])]),zf,Uf])]),Kf,e("p",null,[t("Ƭ "),Qf,t("<"),Wf,t(", "),$f,t(", "),Xf,t(", "),Yf,t(">: ("),Jf,t(": "),em,t(", "),tm,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptiontransformfunctioncontext"},{default:s(()=>[nm]),_:1}),t(", "),om,t(": "),sm,t("<"),lm,t(">, "),am,t(": "),dm,t("<"),im,t(">) => "),rm,t("<"),cm,t(">")]),um,e("table",null,[hm,e("tbody",null,[pm,e("tr",null,[_m,e("td",fm,[n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptiontransformfunctioncontext"},{default:s(()=>[mm]),_:1})])]),ym,gm])]),xm,e("p",null,[e("a",vm,[t("packages/httpserver/src/service/httpServer/v1/types/BeforeResponseHook.ts:3"),n(a)])]),bm,Tm,e("p",null,[t("Ƭ "),Sm,t("<"),km,t(", "),Cm,t(">: { "),Pm,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#correlationid"},{default:s(()=>[Im]),_:1}),t(" ; "),Rm,t(": "),n(o,{to:"/api/enums/purista_httpserver.internal.EBMessageType.html#command"},{default:s(()=>[Fm]),_:1}),t(" ; "),wm,t(": { "),Mm,t(": "),Dm,t(" ; "),Em,t(": "),Om,t(" } ; "),Nm,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessageaddress"},{default:s(()=>[Bm]),_:1}),t(" ; "),qm,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessageaddress"},{default:s(()=>[Zm]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessagebase"},{default:s(()=>[Hm]),_:1})]),Am,e("p",null,[t("Ƭ "),jm,t("<"),Gm,t(">: "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commanddefinition"},{default:s(()=>[Lm]),_:1}),t("<"),Vm,t(", "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commanddefinitionmetadatabase"},{default:s(()=>[zm]),_:1}),t(", "),Um,t(", "),Km,t(", "),Qm,t(", "),Wm,t(", "),$m,t(", "),Xm,t(">[]")]),Ym,e("table",null,[Jm,e("tbody",null,[e("tr",null,[ey,e("td",ty,[t("extends "),n(o,{to:"/api/interfaces/purista_httpserver.internal.ServiceClass.html"},{default:s(()=>[ny]),_:1})])])])]),oy,e("table",null,[sy,e("tbody",null,[e("tr",null,[ly,e("td",ay,[t("{ "),dy,t(": "),iy,t(" ; "),ry,t(": "),cy,t(" ; "),uy,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#contenttype"},{default:s(()=>[hy]),_:1}),t(" ; "),py,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#contenttype"},{default:s(()=>[_y]),_:1}),t(" ; "),fy,t(": "),my,t(" ; "),yy,t(": "),gy,t(" ; "),xy,t(": "),vy,t(" ; "),by,t(": "),Ty,t(" }")])]),Sy,ky,e("tr",null,[Cy,e("td",Py,[n(o,{to:"/api/modules/purista_httpserver.internal.html#contenttype"},{default:s(()=>[Iy]),_:1})])]),e("tr",null,[Ry,e("td",Fy,[n(o,{to:"/api/modules/purista_httpserver.internal.html#contenttype"},{default:s(()=>[wy]),_:1})])]),My,Dy,Ey,Oy])]),Ny,e("table",null,[By,e("tbody",null,[e("tr",null,[qy,e("td",Zy,[t("{ "),Hy,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#configgetterfunction"},{default:s(()=>[Ay]),_:1}),t(" ; "),jy,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#configdeletefunction"},{default:s(()=>[Gy]),_:1}),t(" ; "),Ly,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#configsetterfunction"},{default:s(()=>[Vy]),_:1}),t(" }")]),zy]),e("tr",null,[Uy,e("td",Ky,[n(o,{to:"/api/modules/purista_httpserver.internal.html#configgetterfunction"},{default:s(()=>[Qy]),_:1})]),Wy]),e("tr",null,[$y,e("td",Xy,[n(o,{to:"/api/modules/purista_httpserver.internal.html#configdeletefunction"},{default:s(()=>[Yy]),_:1})]),Jy]),e("tr",null,[eg,e("td",tg,[n(o,{to:"/api/modules/purista_httpserver.internal.html#configsetterfunction"},{default:s(()=>[ng]),_:1})]),og]),e("tr",null,[sg,e("td",lg,[n(o,{to:"/api/classes/purista_httpserver.internal.Logger.html"},{default:s(()=>[ag]),_:1})]),dg]),e("tr",null,[ig,e("td",rg,[t("{ "),cg,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#secretgetterfunction"},{default:s(()=>[ug]),_:1}),t(" ; "),hg,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#secretdeletefunction"},{default:s(()=>[pg]),_:1}),t(" ; "),_g,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#secretsetterfunction"},{default:s(()=>[fg]),_:1}),t(" }")]),mg]),e("tr",null,[yg,e("td",gg,[n(o,{to:"/api/modules/purista_httpserver.internal.html#secretgetterfunction"},{default:s(()=>[xg]),_:1})]),vg]),e("tr",null,[bg,e("td",Tg,[n(o,{to:"/api/modules/purista_httpserver.internal.html#secretdeletefunction"},{default:s(()=>[Sg]),_:1})]),kg]),e("tr",null,[Cg,e("td",Pg,[n(o,{to:"/api/modules/purista_httpserver.internal.html#secretsetterfunction"},{default:s(()=>[Ig]),_:1})]),Rg]),Fg,e("tr",null,[wg,e("td",Mg,[t("{ "),Dg,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#stategetterfunction"},{default:s(()=>[Eg]),_:1}),t(" ; "),Og,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#statedeletefunction"},{default:s(()=>[Ng]),_:1}),t(" ; "),Bg,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#statesetterfunction"},{default:s(()=>[qg]),_:1}),t(" }")]),Zg]),e("tr",null,[Hg,e("td",Ag,[n(o,{to:"/api/modules/purista_httpserver.internal.html#stategetterfunction"},{default:s(()=>[jg]),_:1})]),Gg]),e("tr",null,[Lg,e("td",Vg,[n(o,{to:"/api/modules/purista_httpserver.internal.html#statedeletefunction"},{default:s(()=>[zg]),_:1})]),Ug]),e("tr",null,[Kg,e("td",Qg,[n(o,{to:"/api/modules/purista_httpserver.internal.html#statesetterfunction"},{default:s(()=>[Wg]),_:1})]),$g]),Xg])]),Yg,e("p",null,[t("Ƭ "),Jg,t("<"),ex,t(">: { "),tx,t(": "),nx,t(" ; "),ox,t(": "),n(o,{to:"/api/enums/purista_httpserver.internal.EBMessageType.html#custommessage"},{default:s(()=>[sx]),_:1}),t(" ; "),lx,t(": "),ax,t(" ; "),dx,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessageaddress"},{default:s(()=>[ix]),_:1}),t(" ; "),rx,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessageaddress"},{default:s(()=>[cx]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessagebase"},{default:s(()=>[ux]),_:1})]),hx,e("p",null,[t("Ƭ "),px,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#command-1"},{default:s(()=>[_x]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commandresponse"},{default:s(()=>[fx]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infomessage"},{default:s(()=>[mx]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_httpserver.internal.html#custommessage-1"},{default:s(()=>[yx]),_:1})]),gx,e("table",null,[xx,e("tbody",null,[vx,e("tr",null,[bx,e("td",Tx,[n(o,{to:"/api/modules/purista_httpserver.internal.html#contenttype"},{default:s(()=>[Sx]),_:1})]),kx]),e("tr",null,[Cx,e("td",Px,[n(o,{to:"/api/modules/purista_httpserver.internal.html#correlationid"},{default:s(()=>[Ix]),_:1})]),Rx]),Fx,e("tr",null,[wx,e("td",Mx,[n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessageid"},{default:s(()=>[Dx]),_:1})]),Ex]),e("tr",null,[Ox,e("td",Nx,[n(o,{to:"/api/modules/purista_httpserver.internal.html#instanceid"},{default:s(()=>[Bx]),_:1})]),qx]),Zx,e("tr",null,[Hx,e("td",Ax,[n(o,{to:"/api/modules/purista_httpserver.internal.html#principalid"},{default:s(()=>[jx]),_:1})]),Gx]),Lx,e("tr",null,[Vx,e("td",zx,[n(o,{to:"/api/modules/purista_httpserver.internal.html#traceid"},{default:s(()=>[Ux]),_:1})]),Kx])])]),Qx,e("p",null,[t("Ƭ "),Wx,t(": <Payload>("),$x,t(": "),Xx,t(", "),Yx,t(": "),Jx,t(", "),ev,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#contenttype"},{default:s(()=>[tv]),_:1}),t(", "),nv,t(": "),ov,t(") => "),sv,t("<"),lv,t(">")]),av,e("table",null,[dv,e("tbody",null,[iv,rv,e("tr",null,[cv,e("td",uv,[n(o,{to:"/api/modules/purista_httpserver.internal.html#contenttype"},{default:s(()=>[hv]),_:1})])]),pv])]),_v,e("table",null,[fv,e("tbody",null,[mv,yv,e("tr",null,[gv,e("td",xv,[n(o,{to:"/api/enums/purista_httpserver.internal.StatusCode.html"},{default:s(()=>[vv]),_:1})]),bv]),e("tr",null,[Tv,e("td",Sv,[n(o,{to:"/api/modules/purista_httpserver.internal.html#traceid"},{default:s(()=>[kv]),_:1})]),Cv])])]),Pv,e("table",null,[Iv,e("tbody",null,[e("tr",null,[Rv,e("td",Fv,[t("extends "),n(o,{to:"/api/modules/purista_httpserver.internal.html#eventmap"},{default:s(()=>[wv]),_:1})])])])]),Mv,e("p",null,[t("Ƭ "),Dv,t("<"),Ev,t(">: "),n(o,{to:"/api/modules/purista_httpserver.internal.html#commanddefinitionmetadatabase"},{default:s(()=>[Ov]),_:1}),t(" & { "),Nv,t(": { "),Bv,t(": { "),qv,t(": "),Zv,t(" | "),Hv,t(" | "),Av,t(" | "),jv,t(" | "),Gv,t(" ; "),Lv,t(": { "),Vv,t(": "),n(o,{to:"/api/enums/purista_httpserver.internal.StatusCode.html"},{default:s(()=>[zv]),_:1}),t("[] ; "),Uv,t(": "),Kv,t(" ; "),Qv,t(": "),Wv,t(" ; "),$v,t(": "),Xv,t(" ; "),Yv,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#queryparameter"},{default:s(()=>[Jv]),_:1}),t("<"),eb,t(">[] ; "),tb,t(": "),nb,t(" ; "),ob,t(": "),sb,t("[] } ; "),lb,t(": "),ab,t(" } } }")]),db,e("p",null,[t("Ƭ "),ib,t(": "),rb,t("<typeof "),n(o,{to:"/api/modules/purista_httpserver.internal.html#httpserverservicev1configschema"},{default:s(()=>[cb]),_:1}),t(">")]),ub,e("p",null,[e("a",hb,[t("packages/httpserver/src/service/httpServer/v1/httpServerServiceConfig.ts:90"),n(a)])]),pb,_b,e("p",null,[t("Ƭ "),fb,t(": { "),mb,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoinvoketimeout"},{default:s(()=>[yb]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicebase"},{default:s(()=>[gb]),_:1})]),xb,vb,bb,Tb,e("p",null,[t("Ƭ "),Sb,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicedrain-1"},{default:s(()=>[kb]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicefunctionadded-1"},{default:s(()=>[Cb]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoserviceinit-1"},{default:s(()=>[Pb]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicenotready-1"},{default:s(()=>[Ib]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoserviceready-1"},{default:s(()=>[Rb]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoserviceshutdown-1"},{default:s(()=>[Fb]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoinvoketimeout-1"},{default:s(()=>[wb]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infosubscriptionerror-1"},{default:s(()=>[Mb]),_:1})]),Db,Eb,Ob,Nb,e("p",null,[t("Ƭ "),Bb,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicedrain"},{default:s(()=>[qb]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicefunctionadded"},{default:s(()=>[Zb]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoserviceinit"},{default:s(()=>[Hb]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicenotready"},{default:s(()=>[Ab]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoserviceready"},{default:s(()=>[jb]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoserviceshutdown"},{default:s(()=>[Gb]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoinvoketimeout"},{default:s(()=>[Lb]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infosubscriptionerror"},{default:s(()=>[Vb]),_:1})]),zb,Ub,Kb,Qb,e("p",null,[t("Ƭ "),Wb,t(": { "),$b,t(": "),Xb,t(" ; "),Yb,t(": "),Jb,t(" ; "),eT,t(": "),tT,t(" ; "),nT,t(": { "),oT,t(": "),sT,t(" ; "),lT,t(": "),aT,t(" ; "),dT,t(": "),iT,t(" } } & "),n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessagebase"},{default:s(()=>[rT]),_:1})]),cT,uT,hT,pT,e("p",null,[t("Ƭ "),_T,t(": { "),fT,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicedrain"},{default:s(()=>[mT]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicebase"},{default:s(()=>[yT]),_:1})]),gT,xT,vT,bT,e("p",null,[t("Ƭ "),TT,t(": { "),ST,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicefunctionadded"},{default:s(()=>[kT]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicebase"},{default:s(()=>[CT]),_:1})]),PT,IT,RT,FT,e("p",null,[t("Ƭ "),wT,t(": { "),MT,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoserviceinit"},{default:s(()=>[DT]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicebase"},{default:s(()=>[ET]),_:1})]),OT,NT,BT,qT,e("p",null,[t("Ƭ "),ZT,t(": { "),HT,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicenotready"},{default:s(()=>[AT]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicebase"},{default:s(()=>[jT]),_:1})]),GT,LT,VT,zT,e("p",null,[t("Ƭ "),UT,t(": { "),KT,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoserviceready"},{default:s(()=>[QT]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicebase"},{default:s(()=>[WT]),_:1})]),$T,XT,YT,JT,e("p",null,[t("Ƭ "),e4,t(": { "),t4,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoserviceshutdown"},{default:s(()=>[n4]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicebase"},{default:s(()=>[o4]),_:1})]),s4,l4,a4,d4,e("p",null,[t("Ƭ "),i4,t(": { "),r4,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infosubscriptionerror"},{default:s(()=>[c4]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_httpserver.internal.html#infoservicebase"},{default:s(()=>[u4]),_:1})]),h4,e("p",null,[t("Ƭ "),p4,t(": <InvokeResponseType, PayloadType, ParameterType>("),_4,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessageaddress"},{default:s(()=>[f4]),_:1}),t(", "),m4,t(": "),y4,t(", "),g4,t(": "),x4,t(") => "),v4,t("<"),b4,t(">")]),T4,e("table",null,[S4,e("tbody",null,[e("tr",null,[k4,e("td",C4,[n(o,{to:"/api/modules/purista_httpserver.internal.html#ebmessageaddress"},{default:s(()=>[P4]),_:1})])]),I4,R4])]),F4,e("table",null,[w4,e("tbody",null,[M4,e("tr",null,[D4,e("td",E4,[n(o,{to:"/api/modules/purista_httpserver.internal.html#instanceid"},{default:s(()=>[O4]),_:1})])]),N4,e("tr",null,[B4,e("td",q4,[n(o,{to:"/api/modules/purista_httpserver.internal.html#principalid"},{default:s(()=>[Z4]),_:1})])]),H4,A4,j4,G4,e("tr",null,[L4,e("td",V4,[n(o,{to:"/api/modules/purista_httpserver.internal.html#traceid"},{default:s(()=>[z4]),_:1})])])])]),U4,K4,Q4,W4,e("p",null,[t("Ƭ "),$4,t("<"),X4,t(", "),Y4,t(">: ("),J4,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#serviceconstructorinput"},{default:s(()=>[e3]),_:1}),t("<"),t3,t(">) => "),n3]),o3,e("table",null,[s3,e("tbody",null,[e("tr",null,[l3,e("td",a3,[n(o,{to:"/api/modules/purista_httpserver.internal.html#serviceconstructorinput"},{default:s(()=>[d3]),_:1}),t("<"),i3,t(">")])])])]),r3,e("p",null,[t("Ƭ "),c3,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#serviceeventsinternal"},{default:s(()=>[u3]),_:1}),t(" & "),n(o,{to:"/api/modules/purista_httpserver.internal.html#addprefixtoobject"},{default:s(()=>[h3]),_:1}),t("<"),n(o,{to:"/api/modules/purista_httpserver.internal.html#customevents"},{default:s(()=>[p3]),_:1}),t(", "),_3,t("> & "),n(o,{to:"/api/modules/purista_httpserver.internal.html#addprefixtoobject"},{default:s(()=>[f3]),_:1}),t("<"),n(o,{to:"/api/modules/purista_httpserver.internal.html#customevents"},{default:s(()=>[m3]),_:1}),t(", "),y3,t(">")]),g3,e("p",null,[t("Ƭ "),x3,t("<"),v3,t(">: "),n(o,{to:"/api/modules/purista_httpserver.internal.html#subscriptiondefinition"},{default:s(()=>[b3]),_:1}),t("<"),T3,t(", "),S3,t(", "),k3,t(", "),C3,t(", "),P3,t(">[]")]),I3,e("table",null,[R3,e("tbody",null,[e("tr",null,[F3,e("td",w3,[t("extends "),n(o,{to:"/api/interfaces/purista_httpserver.internal.ServiceClass.html"},{default:s(()=>[M3]),_:1})])])])]),D3,e("table",null,[E3,e("tbody",null,[e("tr",null,[O3,e("td",N3,[t("{ "),B3,t(": "),q3,t(" ; "),Z3,t(": "),H3,t(" ; "),A3,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#contenttype"},{default:s(()=>[j3]),_:1}),t(" ; "),G3,t(": "),n(o,{to:"/api/modules/purista_httpserver.internal.html#contenttype"},{default:s(()=>[L3]),_:1}),t(" ; "),V3,t(": "),z3,t(" ; "),U3,t(": "),K3,t(" ; "),Q3,t(": "),W3,t(" }")])]),$3,X3,e("tr",null,[Y3,e("td",J3,[n(o,{to:"/api/modules/purista_httpserver.internal.html#contenttype"},{default:s(()=>[e2]),_:1})])]),e("tr",null,[t2,e("td",n2,[n(o,{to:"/api/modules/purista_httpserver.internal.html#contenttype"},{default:s(()=>[o2]),_:1})])]),s2,l2,a2])]),d2])}const h2=i(u,[["render",i2],["__file","purista_httpserver.internal.html.vue"]]);export{h2 as default};
