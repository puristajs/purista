import{_ as t}from"./single_instance-8958c318.js";import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as c,c as r,b as e,d as n,e as a,a as p}from"./app-9aedf0b4.js";const l={},d=p('<h2 id="general" tabindex="-1"><a class="header-anchor" href="#general" aria-hidden="true">#</a> General</h2><p>The core package comes with <code>DefaultEventBridge</code>, which will work on local without any further installation.<br> The <code>DefaultEventBridge</code> acts as event bridge and simple message broker.</p><p>It should work out of the box for single instances.<br> You can also use it, for simple horizontal scaling, but the messages and states are not shared or load balanced between instances.</p><p>This means a subscription is always running on the same instance. Also, any command invocation is done within the same instance.<br> Sharing of states and data must be done over third party software, like usage of redis or other databases.</p><p>Because of this, the <code>DefaultEventBridge</code> will only work for scenarios, where you deploy your services as single instance monolith (edge) and you don&#39;t have the requirement to share messages and states across instances.</p><p>A simplified schema of how the <code>DefaultEventBridge</code> works:</p><p><img src="'+t+`" alt="single instance"></p><div class="hint-container tip"><p class="hint-container-title">Pros</p><ul><li>no extra message broker needed</li><li>full subscription support</li><li>ideal for local development and debug purpose</li></ul></div><div class="hint-container danger"><p class="hint-container-title">Cons</p><ul><li>does not scale</li><li>no persistance of messages</li><li>no retry mechanism for messages</li></ul></div><h2 id="config" tabindex="-1"><a class="header-anchor" href="#config" aria-hidden="true">#</a> Config</h2><p>The <code>DefaultEventBridge</code> can be configured to emit every message, which has set the <code>eventName</code> property as javascript event.<br> This must be enabled in the configuration by setting the <code>emitMessagesAsEventBridgeEvents</code> property to true.<br> Than, you can subscribe to specific events in regular JavaScript fashion.<br> The event names will be prefixed with <code>custom-</code> to avoid name collisions.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> DefaultEventBridge <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@purista/core&#39;</span>

<span class="token keyword">const</span> eventBridge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultEventBridge</span><span class="token punctuation">(</span><span class="token punctuation">{</span> emitMessagesAsEventBridgeEvents<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> eventBridge<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

eventBridge<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;custom-example-event&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// ... register and start your services</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),u={href:"https://twitter.com/purista_js",target:"_blank",rel:"noopener noreferrer"},h={href:"https://discord.gg/9feaUm3H2v",target:"_blank",rel:"noopener noreferrer"};function m(v,k){const s=i("ExternalLinkIcon");return c(),r("div",null,[d,e("p",null,[e("strong",null,[n("You can follow updated on Twitter "),e("a",u,[n("@purista_js"),a(s)]),n(" or join the "),e("a",h,[n("Discord server"),a(s)]),n(" to get in touch with PURISTA maintainers and other developers.")])])])}const w=o(l,[["render",m],["__file","2_default-event-bridge.html.vue"]]);export{w as default};
