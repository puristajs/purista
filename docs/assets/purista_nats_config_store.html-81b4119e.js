import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c as r,b as n,e as a,w as t,d as s,a as i}from"./app-ccf1f840.js";const u={},d=i(`<h1 id="module-purista-nats-config-store" tabindex="-1"><a class="header-anchor" href="#module-purista-nats-config-store" aria-hidden="true">#</a> Module: @purista/nats-config-store</h1><p>A config store for using NATS (with JetStream) as storage. JetStream must be enabled at the NATS broker.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
  port<span class="token operator">:</span> <span class="token number">8222</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NatsConfigStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span> config <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">setConfig</span><span class="token punctuation">(</span><span class="token string">&#39;configKey&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span> myConfig<span class="token operator">:</span> <span class="token string">&#39;value&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token string">&#39;configKey&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment">// outputs: { configKey: { myConfig: &#39;value&#39; } }</span>

<span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">removeConfig</span><span class="token punctuation">(</span><span class="token string">&#39;configKey&#39;</span><span class="token punctuation">)</span>

value <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token string">&#39;configKey&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment">// outputs: undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="classes" tabindex="-1"><a class="header-anchor" href="#classes" aria-hidden="true">#</a> Classes</h3>`,6),f=n("h3",{id:"type-aliases",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),s(" Type Aliases")],-1),k=i('<h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="natsconfigstoreconfig" tabindex="-1"><a class="header-anchor" href="#natsconfigstoreconfig" aria-hidden="true">#</a> NatsConfigStoreConfig</h3><p>Æ¬ <strong>NatsConfigStoreConfig</strong>: <code>Prettify</code>&lt;{ <code>keyValueStoreName</code>: <code>string</code> } &amp; <code>ConnectionOptions</code> &amp; <code>Partial</code>&lt;<code>KvOptions</code>&gt;&gt;</p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',4),g={href:"https://github.com/sebastianwessel/purista/blob/master/packages/nats-config-store/src/types/NatsConfigStoreConfig.ts#L4",target:"_blank",rel:"noopener noreferrer"};function h(m,v){const e=o("RouterLink"),c=o("ExternalLinkIcon");return l(),r("div",null,[n("p",null,[a(e,{to:"/api/"},{default:t(()=>[s("PURISTA API")]),_:1}),s(" / "),a(e,{to:"/api/modules.html"},{default:t(()=>[s("Modules")]),_:1}),s(" / @purista/nats-config-store")]),d,n("ul",null,[n("li",null,[a(e,{to:"/api/classes/purista_nats_config_store.NatsConfigStore.html"},{default:t(()=>[s("NatsConfigStore")]),_:1})])]),f,n("ul",null,[n("li",null,[a(e,{to:"/api/modules/purista_nats_config_store.html#natsconfigstoreconfig"},{default:t(()=>[s("NatsConfigStoreConfig")]),_:1})])]),k,n("p",null,[n("a",g,[s("nats-config-store/src/types/NatsConfigStoreConfig.ts:4"),a(c)])])])}const y=p(u,[["render",h],["__file","purista_nats_config_store.html.vue"]]);export{y as default};
