import{_ as o,c as t,o as a,ag as r}from"./chunks/framework.U_AETC1W.js";const h=JSON.parse('{"title":"Type Alias: SubscriptionDefinition<S, TransformInputPayload, TransformInputParams, FunctionPayloadType, FunctionParamsType, FunctionOutputType, FinalFunctionOutputType, TransformOutputHookOutput, Resources, Invokes, EmitList, MetadataType>","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/core/type-aliases/SubscriptionDefinition.md","filePath":"api/@purista/core/type-aliases/SubscriptionDefinition.md","lastUpdated":1739900666000}'),n={name:"api/@purista/core/type-aliases/SubscriptionDefinition.md"};function c(s,e,i,d,u,p){return a(),t("div",null,e[0]||(e[0]=[r('<p><a href="./../README.html"><strong>@purista/core v1.11.0</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/core</a> / SubscriptionDefinition</p><h1 id="type-alias-subscriptiondefinition-s-transforminputpayload-transforminputparams-functionpayloadtype-functionparamstype-functionoutputtype-finalfunctionoutputtype-transformoutputhookoutput-resources-invokes-emitlist-metadatatype" tabindex="-1">Type Alias: SubscriptionDefinition&lt;S, TransformInputPayload, TransformInputParams, FunctionPayloadType, FunctionParamsType, FunctionOutputType, FinalFunctionOutputType, TransformOutputHookOutput, Resources, Invokes, EmitList, MetadataType&gt; <a class="header-anchor" href="#type-alias-subscriptiondefinition-s-transforminputpayload-transforminputparams-functionpayloadtype-functionparamstype-functionoutputtype-finalfunctionoutputtype-transformoutputhookoutput-resources-invokes-emitlist-metadatatype" aria-label="Permalink to &quot;Type Alias: SubscriptionDefinition\\&lt;S, TransformInputPayload, TransformInputParams, FunctionPayloadType, FunctionParamsType, FunctionOutputType, FinalFunctionOutputType, TransformOutputHookOutput, Resources, Invokes, EmitList, MetadataType\\&gt;&quot;">​</a></h1><blockquote><p><strong>SubscriptionDefinition</strong>&lt;<code>S</code>, <code>TransformInputPayload</code>, <code>TransformInputParams</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionOutputType</code>, <code>FinalFunctionOutputType</code>, <code>TransformOutputHookOutput</code>, <code>Resources</code>, <code>Invokes</code>, <code>EmitList</code>, <code>MetadataType</code>&gt;: <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionDefinition.ts#L25" target="_blank" rel="noreferrer">packages/core/src/core/types/subscription/SubscriptionDefinition.ts:25</a></p><p>The definition for a subscription provided by some service.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>S</strong> <em>extends</em> <a href="./../classes/Service.html"><code>Service</code></a></p><p>• <strong>TransformInputPayload</strong></p><p>• <strong>TransformInputParams</strong></p><p>• <strong>FunctionPayloadType</strong></p><p>• <strong>FunctionParamsType</strong></p><p>• <strong>FunctionOutputType</strong></p><p>• <strong>FinalFunctionOutputType</strong></p><p>• <strong>TransformOutputHookOutput</strong></p><p>• <strong>Resources</strong> <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p><p>• <strong>Invokes</strong> <em>extends</em> <a href="./InvokeList.html"><code>InvokeList</code></a></p><p>• <strong>EmitList</strong> <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>Schema</code>&gt;</p><p>• <strong>MetadataType</strong> <em>extends</em> <a href="./SubscriptionDefinitionMetadataBase.html"><code>SubscriptionDefinitionMetadataBase</code></a> = <a href="./SubscriptionDefinitionMetadataBase.html"><code>SubscriptionDefinitionMetadataBase</code></a></p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="call" tabindex="-1">call <a class="header-anchor" href="#call" aria-label="Permalink to &quot;call&quot;">​</a></h3><blockquote><p><strong>call</strong>: <a href="./SubscriptionFunction.html"><code>SubscriptionFunction</code></a>&lt;<code>S</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionOutputType</code>, <code>Resources</code>, <code>Invokes</code>, <code>EmitList</code>&gt;</p></blockquote><p>the subscription function</p><h3 id="deprecated" tabindex="-1">deprecated <a class="header-anchor" href="#deprecated" aria-label="Permalink to &quot;deprecated&quot;">​</a></h3><blockquote><p><strong>deprecated</strong>: <code>boolean</code></p></blockquote><h3 id="emiteventname" tabindex="-1">emitEventName? <a class="header-anchor" href="#emiteventname" aria-label="Permalink to &quot;emitEventName?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>emitEventName</strong>: <code>string</code></p></blockquote><p>event name to be used for custom message if the subscription functions returns value</p><h3 id="emitlist" tabindex="-1">emitList <a class="header-anchor" href="#emitlist" aria-label="Permalink to &quot;emitList&quot;">​</a></h3><blockquote><p><strong>emitList</strong>: <a href="./FromEmitToOtherType.html"><code>FromEmitToOtherType</code></a>&lt;<code>EmitList</code>, <code>SchemaObject</code>&gt;</p></blockquote><h3 id="eventbridgeconfig" tabindex="-1">eventBridgeConfig <a class="header-anchor" href="#eventbridgeconfig" aria-label="Permalink to &quot;eventBridgeConfig&quot;">​</a></h3><blockquote><p><strong>eventBridgeConfig</strong>: <a href="./DefinitionEventBridgeConfig.html"><code>DefinitionEventBridgeConfig</code></a></p></blockquote><p>config information for event bridge</p><h3 id="eventname" tabindex="-1">eventName? <a class="header-anchor" href="#eventname" aria-label="Permalink to &quot;eventName?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>eventName</strong>: <code>string</code></p></blockquote><p>filter forevent name</p><h3 id="hooks" tabindex="-1">hooks <a class="header-anchor" href="#hooks" aria-label="Permalink to &quot;hooks&quot;">​</a></h3><blockquote><p><strong>hooks</strong>: <code>object</code></p></blockquote><p>hooks of subscription</p><h4 id="hooks-afterguard" tabindex="-1">hooks.afterGuard? <a class="header-anchor" href="#hooks-afterguard" aria-label="Permalink to &quot;hooks.afterGuard?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>hooks.afterGuard</strong>: <code>Record</code>&lt;<code>string</code>, <a href="./SubscriptionAfterGuardHook.html"><code>SubscriptionAfterGuardHook</code></a>&lt;<code>S</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionOutputType</code>, <code>Resources</code>, <code>Invokes</code>, <code>EmitList</code>&gt;&gt;</p></blockquote><h4 id="hooks-beforeguard" tabindex="-1">hooks.beforeGuard? <a class="header-anchor" href="#hooks-beforeguard" aria-label="Permalink to &quot;hooks.beforeGuard?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>hooks.beforeGuard</strong>: <code>Record</code>&lt;<code>string</code>, <a href="./SubscriptionBeforeGuardHook.html"><code>SubscriptionBeforeGuardHook</code></a>&lt;<code>S</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>Resources</code>, <code>Invokes</code>, <code>EmitList</code>&gt;&gt;</p></blockquote><h4 id="hooks-transforminput" tabindex="-1">hooks.transformInput? <a class="header-anchor" href="#hooks-transforminput" aria-label="Permalink to &quot;hooks.transformInput?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>hooks.transformInput</strong>: <code>object</code></p></blockquote><h4 id="hooks-transforminput-transformfunction" tabindex="-1">hooks.transformInput.transformFunction <a class="header-anchor" href="#hooks-transforminput-transformfunction" aria-label="Permalink to &quot;hooks.transformInput.transformFunction&quot;">​</a></h4><blockquote><p><strong>hooks.transformInput.transformFunction</strong>: <a href="./SubscriptionTransformInputHook.html"><code>SubscriptionTransformInputHook</code></a>&lt;<code>S</code>, <code>TransformInputPayload</code>, <code>TransformInputParams</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>&gt;</p></blockquote><h4 id="hooks-transforminput-transforminputschema" tabindex="-1">hooks.transformInput.transformInputSchema <a class="header-anchor" href="#hooks-transforminput-transforminputschema" aria-label="Permalink to &quot;hooks.transformInput.transformInputSchema&quot;">​</a></h4><blockquote><p><strong>hooks.transformInput.transformInputSchema</strong>: <code>Schema</code></p></blockquote><h4 id="hooks-transforminput-transformparameterschema" tabindex="-1">hooks.transformInput.transformParameterSchema <a class="header-anchor" href="#hooks-transforminput-transformparameterschema" aria-label="Permalink to &quot;hooks.transformInput.transformParameterSchema&quot;">​</a></h4><blockquote><p><strong>hooks.transformInput.transformParameterSchema</strong>: <code>Schema</code></p></blockquote><h4 id="hooks-transformoutput" tabindex="-1">hooks.transformOutput? <a class="header-anchor" href="#hooks-transformoutput" aria-label="Permalink to &quot;hooks.transformOutput?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>hooks.transformOutput</strong>: <code>object</code></p></blockquote><h4 id="hooks-transformoutput-transformfunction" tabindex="-1">hooks.transformOutput.transformFunction <a class="header-anchor" href="#hooks-transformoutput-transformfunction" aria-label="Permalink to &quot;hooks.transformOutput.transformFunction&quot;">​</a></h4><blockquote><p><strong>hooks.transformOutput.transformFunction</strong>: <a href="./SubscriptionTransformOutputHook.html"><code>SubscriptionTransformOutputHook</code></a>&lt;<code>S</code>, <code>FinalFunctionOutputType</code>, <code>FunctionParamsType</code>, <code>TransformOutputHookOutput</code>&gt;</p></blockquote><h4 id="hooks-transformoutput-transformoutputschema" tabindex="-1">hooks.transformOutput.transformOutputSchema <a class="header-anchor" href="#hooks-transformoutput-transformoutputschema" aria-label="Permalink to &quot;hooks.transformOutput.transformOutputSchema&quot;">​</a></h4><blockquote><p><strong>hooks.transformOutput.transformOutputSchema</strong>: <code>Schema</code></p></blockquote><h3 id="invokes" tabindex="-1">invokes <a class="header-anchor" href="#invokes" aria-label="Permalink to &quot;invokes&quot;">​</a></h3><blockquote><p><strong>invokes</strong>: <a href="./FromInvokeToOtherType.html"><code>FromInvokeToOtherType</code></a>&lt;<code>Invokes</code>, { <code>outputSchema</code>: <code>SchemaObject</code>; <code>parameterSchema</code>: <code>SchemaObject</code>; <code>payloadSchema</code>: <code>SchemaObject</code>; }&gt;</p></blockquote><h3 id="messagetype" tabindex="-1">messageType? <a class="header-anchor" href="#messagetype" aria-label="Permalink to &quot;messageType?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>messageType</strong>: <a href="./../enumerations/EBMessageType.html"><code>EBMessageType</code></a></p></blockquote><p>filter for message type</p><h3 id="metadata" tabindex="-1">metadata <a class="header-anchor" href="#metadata" aria-label="Permalink to &quot;metadata&quot;">​</a></h3><blockquote><p><strong>metadata</strong>: <code>MetadataType</code></p></blockquote><p>the metadata of the subscription</p><h3 id="principalid" tabindex="-1">principalId? <a class="header-anchor" href="#principalid" aria-label="Permalink to &quot;principalId?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>principalId</strong>: <a href="./PrincipalId.html"><code>PrincipalId</code></a></p></blockquote><p>filter for principal id</p><h3 id="receiver" tabindex="-1">receiver? <a class="header-anchor" href="#receiver" aria-label="Permalink to &quot;receiver?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>receiver</strong>: <code>object</code></p></blockquote><p>filter for messages consumed by given receiver</p><h4 id="receiver-instanceid" tabindex="-1">receiver.instanceId? <a class="header-anchor" href="#receiver-instanceid" aria-label="Permalink to &quot;receiver.instanceId?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>receiver.instanceId</strong>: <a href="./InstanceId.html"><code>InstanceId</code></a></p></blockquote><h4 id="receiver-servicename" tabindex="-1">receiver.serviceName? <a class="header-anchor" href="#receiver-servicename" aria-label="Permalink to &quot;receiver.serviceName?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>receiver.serviceName</strong>: <code>string</code></p></blockquote><h4 id="receiver-servicetarget" tabindex="-1">receiver.serviceTarget? <a class="header-anchor" href="#receiver-servicetarget" aria-label="Permalink to &quot;receiver.serviceTarget?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>receiver.serviceTarget</strong>: <code>string</code></p></blockquote><h4 id="receiver-serviceversion" tabindex="-1">receiver.serviceVersion? <a class="header-anchor" href="#receiver-serviceversion" aria-label="Permalink to &quot;receiver.serviceVersion?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>receiver.serviceVersion</strong>: <code>string</code></p></blockquote><h3 id="sender" tabindex="-1">sender? <a class="header-anchor" href="#sender" aria-label="Permalink to &quot;sender?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>sender</strong>: <code>object</code></p></blockquote><p>filter for messages produced by given sender</p><h4 id="sender-instanceid" tabindex="-1">sender.instanceId? <a class="header-anchor" href="#sender-instanceid" aria-label="Permalink to &quot;sender.instanceId?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>sender.instanceId</strong>: <a href="./InstanceId.html"><code>InstanceId</code></a></p></blockquote><h4 id="sender-servicename" tabindex="-1">sender.serviceName? <a class="header-anchor" href="#sender-servicename" aria-label="Permalink to &quot;sender.serviceName?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>sender.serviceName</strong>: <code>string</code></p></blockquote><h4 id="sender-servicetarget" tabindex="-1">sender.serviceTarget? <a class="header-anchor" href="#sender-servicetarget" aria-label="Permalink to &quot;sender.serviceTarget?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>sender.serviceTarget</strong>: <code>string</code></p></blockquote><h4 id="sender-serviceversion" tabindex="-1">sender.serviceVersion? <a class="header-anchor" href="#sender-serviceversion" aria-label="Permalink to &quot;sender.serviceVersion?&quot;">​</a></h4><blockquote><p><code>optional</code> <strong>sender.serviceVersion</strong>: <code>string</code></p></blockquote><h3 id="subscriptiondescription" tabindex="-1">subscriptionDescription <a class="header-anchor" href="#subscriptiondescription" aria-label="Permalink to &quot;subscriptionDescription&quot;">​</a></h3><blockquote><p><strong>subscriptionDescription</strong>: <code>string</code></p></blockquote><p>the description of the subscription</p><h3 id="subscriptionname" tabindex="-1">subscriptionName <a class="header-anchor" href="#subscriptionname" aria-label="Permalink to &quot;subscriptionName&quot;">​</a></h3><blockquote><p><strong>subscriptionName</strong>: <code>string</code></p></blockquote><p>the name of the subscription</p><h3 id="tenantid" tabindex="-1">tenantId? <a class="header-anchor" href="#tenantid" aria-label="Permalink to &quot;tenantId?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>tenantId</strong>: <a href="./TenantId.html"><code>TenantId</code></a></p></blockquote><p>filter for tenant id</p>',100)]))}const m=o(n,[["render",c]]);export{h as __pageData,m as default};
