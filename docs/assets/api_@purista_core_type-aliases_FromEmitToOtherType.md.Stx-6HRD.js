import{_ as t,c as r,o as a,ag as o}from"./chunks/framework.U_AETC1W.js";const h=JSON.parse('{"title":"Type Alias: FromEmitToOtherType<Entry, NewType>","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/core/type-aliases/FromEmitToOtherType.md","filePath":"api/@purista/core/type-aliases/FromEmitToOtherType.md","lastUpdated":1739900666000}'),p={name:"api/@purista/core/type-aliases/FromEmitToOtherType.md"};function s(i,e,n,m,y,c){return a(),r("div",null,e[0]||(e[0]=[o('<p><a href="./../README.html"><strong>@purista/core v2.0.0</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/core</a> / FromEmitToOtherType</p><h1 id="type-alias-fromemittoothertype-entry-newtype" tabindex="-1">Type Alias: FromEmitToOtherType&lt;Entry, NewType&gt; <a class="header-anchor" href="#type-alias-fromemittoothertype-entry-newtype" aria-label="Permalink to &quot;Type Alias: FromEmitToOtherType\\&lt;Entry, NewType\\&gt;&quot;">​</a></h1><blockquote><p><strong>FromEmitToOtherType</strong>&lt;<code>Entry</code>, <code>NewType</code>&gt;: <code>{ [TKey in keyof Entry]: NewType }</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/FromEmitToOtherType.ts#L6" target="_blank" rel="noreferrer">packages/core/src/core/types/FromEmitToOtherType.ts:6</a></p><p>Changes the canEmit proxy type to given type</p><p>serviceName.ServiceVersion.FunctionName becomes type of SinonStub</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Entry</strong></p><p>• <strong>NewType</strong></p>',11)]))}const l=t(p,[["render",s]]);export{h as __pageData,l as default};
