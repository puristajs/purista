import{_ as e,c as o,o as a,ag as s}from"./chunks/framework.U_AETC1W.js";const y=JSON.parse('{"title":"Type Alias: ContentType","description":"","frontmatter":{},"headers":[],"relativePath":"api/@purista/core/type-aliases/ContentType.md","filePath":"api/@purista/core/type-aliases/ContentType.md","lastUpdated":1739900666000}'),n={name:"api/@purista/core/type-aliases/ContentType.md"};function p(r,t,c,i,d,l){return a(),o("div",null,t[0]||(t[0]=[s('<p><a href="./../README.html"><strong>@purista/core v2.0.0</strong></a></p><hr><p><a href="./../../../packages.html">PURISTA API</a> / <a href="./../README.html">@purista/core</a> / ContentType</p><h1 id="type-alias-contenttype" tabindex="-1">Type Alias: ContentType <a class="header-anchor" href="#type-alias-contenttype" aria-label="Permalink to &quot;Type Alias: ContentType&quot;">â€‹</a></h1><blockquote><p><strong>ContentType</strong>: <code>&quot;application/json&quot;</code> | <code>&quot;application/javascript&quot;</code> | <code>&quot;text/csv&quot;</code> | <code>&quot;text/css&quot;</code> | <code>&quot;text/html&quot;</code> | <code>&quot;text/javascript&quot;</code> | <code>&quot;text/markdown&quot;</code> | <code>&quot;text/plain&quot;</code> | <code>&quot;text/xml&quot;</code> | <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/puristajs/purista/blob/master/packages/core/src/core/types/ContentType.ts#L6" target="_blank" rel="noreferrer">packages/core/src/core/types/ContentType.ts:6</a></p><p>List of content types for message payloads. If the content type is other than <code>application/json</code>, the message payload must be a string. It is up to the implementation to extract the content type from the original message and to convert or transform data.</p>',7)]))}const m=e(n,[["render",p]]);export{y as __pageData,m as default};
