apiVersion: 1

datasources:
- name: Prometheus
  type: prometheus
  uid: prometheus
  access: proxy
  orgId: 1
  url: http://prometheus:9090
  basicAuth: false
  isDefault: false
  version: 1
  editable: false
  jsonData:
    httpMethod: GET
- name: Tempo
  type: tempo
  access: proxy
  orgId: 1
  url: http://tempo:3200
  basicAuth: false
  isDefault: true
  version: 1
  editable: false
  apiVersion: 1
  uid: tempo
  jsonData:
    httpMethod: GET
    tracesToLogs:
      datasourceUid: loki
      tags: ['job', 'instance', 'pod', 'namespace','traceId']
      mappedTags: [{ key: 'service.name', value: 'service' }]
      mapTagNamesEnabled: false
      spanStartTimeShift: '1h'
      spanEndTimeShift: '1h'
      filterByTraceID: true
      filterBySpanID: true
    tracesToMetrics:
      datasourceUid: 'prometheus'
      tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
      queries:
        - name: 'Sample query'
          query: 'sum(rate(tempo_spanmetrics_latency_bucket{$__tags}[5m]))'
    serviceMap:
      datasourceUid: prometheus
    search:
      hide: false
    nodeGraph:
      enabled: true
    lokiSearch:
      datasourceUid: loki
- name: Loki
  type: loki
  uid: loki
  access: proxy
  url: http://loki:3100
  basicAuth: false
  jsonData:
    maxLines: 1000
    derivedFields:
      # Field with internal link pointing to data source in Grafana.
      # Right now, Grafana supports only Jaeger and Zipkin data sources as link targets.
      # datasourceUid value can be anything, but it should be unique across all defined data source uids.
      - datasourceUid: tempo
        matcherRegex: "\"traceId\":\"(\\w+)\""
        name: traceId
        # url will be interpreted as query for the datasource
        url: '$${__value.raw}'
  